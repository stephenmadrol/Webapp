/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	__webpack_require__.ilib_cache_id = "1563597351639";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/config/corejs-proxy.js":
/*!*********************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/config/corejs-proxy.js ***!
  \*********************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/modules/es.symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.js");
/* harmony import */ var core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! core-js/modules/es.symbol.description */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.description.js");
/* harmony import */ var core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_description__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! core-js/modules/es.symbol.async-iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.async-iterator.js");
/* harmony import */ var core_js_modules_es_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es_symbol_has_instance__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! core-js/modules/es.symbol.has-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.has-instance.js");
/* harmony import */ var core_js_modules_es_symbol_has_instance__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_has_instance__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es_symbol_is_concat_spreadable__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! core-js/modules/es.symbol.is-concat-spreadable */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js");
/* harmony import */ var core_js_modules_es_symbol_is_concat_spreadable__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_is_concat_spreadable__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! core-js/modules/es.symbol.iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.iterator.js");
/* harmony import */ var core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_iterator__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es_symbol_match__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! core-js/modules/es.symbol.match */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.match.js");
/* harmony import */ var core_js_modules_es_symbol_match__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_match__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es_symbol_replace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! core-js/modules/es.symbol.replace */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.replace.js");
/* harmony import */ var core_js_modules_es_symbol_replace__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_replace__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es_symbol_search__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! core-js/modules/es.symbol.search */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.search.js");
/* harmony import */ var core_js_modules_es_symbol_search__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_search__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es_symbol_species__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! core-js/modules/es.symbol.species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.species.js");
/* harmony import */ var core_js_modules_es_symbol_species__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_species__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var core_js_modules_es_symbol_split__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! core-js/modules/es.symbol.split */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.split.js");
/* harmony import */ var core_js_modules_es_symbol_split__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_split__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var core_js_modules_es_symbol_to_primitive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! core-js/modules/es.symbol.to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.to-primitive.js");
/* harmony import */ var core_js_modules_es_symbol_to_primitive__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_primitive__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var core_js_modules_es_symbol_to_string_tag__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! core-js/modules/es.symbol.to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.to-string-tag.js");
/* harmony import */ var core_js_modules_es_symbol_to_string_tag__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_to_string_tag__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var core_js_modules_es_symbol_unscopables__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! core-js/modules/es.symbol.unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.unscopables.js");
/* harmony import */ var core_js_modules_es_symbol_unscopables__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_symbol_unscopables__WEBPACK_IMPORTED_MODULE_13__);
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! core-js/modules/es.array.concat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.concat.js");
/* harmony import */ var core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_concat__WEBPACK_IMPORTED_MODULE_14__);
/* harmony import */ var core_js_modules_es_array_copy_within__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! core-js/modules/es.array.copy-within */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.copy-within.js");
/* harmony import */ var core_js_modules_es_array_copy_within__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_copy_within__WEBPACK_IMPORTED_MODULE_15__);
/* harmony import */ var core_js_modules_es_array_fill__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! core-js/modules/es.array.fill */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.fill.js");
/* harmony import */ var core_js_modules_es_array_fill__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_fill__WEBPACK_IMPORTED_MODULE_16__);
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! core-js/modules/es.array.filter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.filter.js");
/* harmony import */ var core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_filter__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var core_js_modules_es_array_find__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! core-js/modules/es.array.find */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.find.js");
/* harmony import */ var core_js_modules_es_array_find__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_find__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var core_js_modules_es_array_find_index__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! core-js/modules/es.array.find-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.find-index.js");
/* harmony import */ var core_js_modules_es_array_find_index__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_find_index__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var core_js_modules_es_array_flat__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! core-js/modules/es.array.flat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.flat.js");
/* harmony import */ var core_js_modules_es_array_flat__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_flat__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var core_js_modules_es_array_flat_map__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! core-js/modules/es.array.flat-map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.flat-map.js");
/* harmony import */ var core_js_modules_es_array_flat_map__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_flat_map__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var core_js_modules_es_array_from__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! core-js/modules/es.array.from */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.from.js");
/* harmony import */ var core_js_modules_es_array_from__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_from__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! core-js/modules/es.array.includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.includes.js");
/* harmony import */ var core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_includes__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! core-js/modules/es.array.index-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.index-of.js");
/* harmony import */ var core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_index_of__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! core-js/modules/es.array.iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.iterator.js");
/* harmony import */ var core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_iterator__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var core_js_modules_es_array_last_index_of__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! core-js/modules/es.array.last-index-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.last-index-of.js");
/* harmony import */ var core_js_modules_es_array_last_index_of__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_last_index_of__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! core-js/modules/es.array.map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.map.js");
/* harmony import */ var core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_map__WEBPACK_IMPORTED_MODULE_27__);
/* harmony import */ var core_js_modules_es_array_of__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! core-js/modules/es.array.of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.of.js");
/* harmony import */ var core_js_modules_es_array_of__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_of__WEBPACK_IMPORTED_MODULE_28__);
/* harmony import */ var core_js_modules_es_array_reverse__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! core-js/modules/es.array.reverse */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.reverse.js");
/* harmony import */ var core_js_modules_es_array_reverse__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_reverse__WEBPACK_IMPORTED_MODULE_29__);
/* harmony import */ var core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! core-js/modules/es.array.slice */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.slice.js");
/* harmony import */ var core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_slice__WEBPACK_IMPORTED_MODULE_30__);
/* harmony import */ var core_js_modules_es_array_sort__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! core-js/modules/es.array.sort */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.sort.js");
/* harmony import */ var core_js_modules_es_array_sort__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_sort__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var core_js_modules_es_array_species__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! core-js/modules/es.array.species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.species.js");
/* harmony import */ var core_js_modules_es_array_species__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_species__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! core-js/modules/es.array.splice */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.splice.js");
/* harmony import */ var core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_splice__WEBPACK_IMPORTED_MODULE_33__);
/* harmony import */ var core_js_modules_es_array_unscopables_flat__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! core-js/modules/es.array.unscopables.flat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.unscopables.flat.js");
/* harmony import */ var core_js_modules_es_array_unscopables_flat__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_unscopables_flat__WEBPACK_IMPORTED_MODULE_34__);
/* harmony import */ var core_js_modules_es_array_unscopables_flat_map__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! core-js/modules/es.array.unscopables.flat-map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.unscopables.flat-map.js");
/* harmony import */ var core_js_modules_es_array_unscopables_flat_map__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_unscopables_flat_map__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var core_js_modules_es_array_buffer_slice__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! core-js/modules/es.array-buffer.slice */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array-buffer.slice.js");
/* harmony import */ var core_js_modules_es_array_buffer_slice__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_array_buffer_slice__WEBPACK_IMPORTED_MODULE_36__);
/* harmony import */ var core_js_modules_es_date_to_primitive__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! core-js/modules/es.date.to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.date.to-primitive.js");
/* harmony import */ var core_js_modules_es_date_to_primitive__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_date_to_primitive__WEBPACK_IMPORTED_MODULE_37__);
/* harmony import */ var core_js_modules_es_function_has_instance__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! core-js/modules/es.function.has-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.function.has-instance.js");
/* harmony import */ var core_js_modules_es_function_has_instance__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_function_has_instance__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var core_js_modules_es_json_to_string_tag__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! core-js/modules/es.json.to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.json.to-string-tag.js");
/* harmony import */ var core_js_modules_es_json_to_string_tag__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_json_to_string_tag__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var core_js_modules_es_map__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! core-js/modules/es.map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.map.js");
/* harmony import */ var core_js_modules_es_map__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_map__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var core_js_modules_es_math_acosh__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! core-js/modules/es.math.acosh */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.acosh.js");
/* harmony import */ var core_js_modules_es_math_acosh__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_acosh__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var core_js_modules_es_math_asinh__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! core-js/modules/es.math.asinh */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.asinh.js");
/* harmony import */ var core_js_modules_es_math_asinh__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_asinh__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var core_js_modules_es_math_atanh__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! core-js/modules/es.math.atanh */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.atanh.js");
/* harmony import */ var core_js_modules_es_math_atanh__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_atanh__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var core_js_modules_es_math_cbrt__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! core-js/modules/es.math.cbrt */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.cbrt.js");
/* harmony import */ var core_js_modules_es_math_cbrt__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_cbrt__WEBPACK_IMPORTED_MODULE_44__);
/* harmony import */ var core_js_modules_es_math_clz32__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! core-js/modules/es.math.clz32 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.clz32.js");
/* harmony import */ var core_js_modules_es_math_clz32__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_clz32__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var core_js_modules_es_math_cosh__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! core-js/modules/es.math.cosh */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.cosh.js");
/* harmony import */ var core_js_modules_es_math_cosh__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_cosh__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var core_js_modules_es_math_expm1__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! core-js/modules/es.math.expm1 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.expm1.js");
/* harmony import */ var core_js_modules_es_math_expm1__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_expm1__WEBPACK_IMPORTED_MODULE_47__);
/* harmony import */ var core_js_modules_es_math_fround__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! core-js/modules/es.math.fround */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.fround.js");
/* harmony import */ var core_js_modules_es_math_fround__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_fround__WEBPACK_IMPORTED_MODULE_48__);
/* harmony import */ var core_js_modules_es_math_hypot__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! core-js/modules/es.math.hypot */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.hypot.js");
/* harmony import */ var core_js_modules_es_math_hypot__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_hypot__WEBPACK_IMPORTED_MODULE_49__);
/* harmony import */ var core_js_modules_es_math_log10__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! core-js/modules/es.math.log10 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log10.js");
/* harmony import */ var core_js_modules_es_math_log10__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_log10__WEBPACK_IMPORTED_MODULE_50__);
/* harmony import */ var core_js_modules_es_math_log1p__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! core-js/modules/es.math.log1p */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log1p.js");
/* harmony import */ var core_js_modules_es_math_log1p__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_log1p__WEBPACK_IMPORTED_MODULE_51__);
/* harmony import */ var core_js_modules_es_math_log2__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! core-js/modules/es.math.log2 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log2.js");
/* harmony import */ var core_js_modules_es_math_log2__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_log2__WEBPACK_IMPORTED_MODULE_52__);
/* harmony import */ var core_js_modules_es_math_sign__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! core-js/modules/es.math.sign */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.sign.js");
/* harmony import */ var core_js_modules_es_math_sign__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_sign__WEBPACK_IMPORTED_MODULE_53__);
/* harmony import */ var core_js_modules_es_math_sinh__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! core-js/modules/es.math.sinh */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.sinh.js");
/* harmony import */ var core_js_modules_es_math_sinh__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_sinh__WEBPACK_IMPORTED_MODULE_54__);
/* harmony import */ var core_js_modules_es_math_tanh__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! core-js/modules/es.math.tanh */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.tanh.js");
/* harmony import */ var core_js_modules_es_math_tanh__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_tanh__WEBPACK_IMPORTED_MODULE_55__);
/* harmony import */ var core_js_modules_es_math_to_string_tag__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! core-js/modules/es.math.to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.to-string-tag.js");
/* harmony import */ var core_js_modules_es_math_to_string_tag__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_to_string_tag__WEBPACK_IMPORTED_MODULE_56__);
/* harmony import */ var core_js_modules_es_math_trunc__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! core-js/modules/es.math.trunc */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.trunc.js");
/* harmony import */ var core_js_modules_es_math_trunc__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_math_trunc__WEBPACK_IMPORTED_MODULE_57__);
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! core-js/modules/es.number.constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.constructor.js");
/* harmony import */ var core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_constructor__WEBPACK_IMPORTED_MODULE_58__);
/* harmony import */ var core_js_modules_es_number_epsilon__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! core-js/modules/es.number.epsilon */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.epsilon.js");
/* harmony import */ var core_js_modules_es_number_epsilon__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_epsilon__WEBPACK_IMPORTED_MODULE_59__);
/* harmony import */ var core_js_modules_es_number_is_integer__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! core-js/modules/es.number.is-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.is-integer.js");
/* harmony import */ var core_js_modules_es_number_is_integer__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_is_integer__WEBPACK_IMPORTED_MODULE_60__);
/* harmony import */ var core_js_modules_es_number_is_safe_integer__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! core-js/modules/es.number.is-safe-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.is-safe-integer.js");
/* harmony import */ var core_js_modules_es_number_is_safe_integer__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_is_safe_integer__WEBPACK_IMPORTED_MODULE_61__);
/* harmony import */ var core_js_modules_es_number_max_safe_integer__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! core-js/modules/es.number.max-safe-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.max-safe-integer.js");
/* harmony import */ var core_js_modules_es_number_max_safe_integer__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_max_safe_integer__WEBPACK_IMPORTED_MODULE_62__);
/* harmony import */ var core_js_modules_es_number_min_safe_integer__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! core-js/modules/es.number.min-safe-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.min-safe-integer.js");
/* harmony import */ var core_js_modules_es_number_min_safe_integer__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_min_safe_integer__WEBPACK_IMPORTED_MODULE_63__);
/* harmony import */ var core_js_modules_es_number_parse_float__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! core-js/modules/es.number.parse-float */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.parse-float.js");
/* harmony import */ var core_js_modules_es_number_parse_float__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_parse_float__WEBPACK_IMPORTED_MODULE_64__);
/* harmony import */ var core_js_modules_es_number_parse_int__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! core-js/modules/es.number.parse-int */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.parse-int.js");
/* harmony import */ var core_js_modules_es_number_parse_int__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_parse_int__WEBPACK_IMPORTED_MODULE_65__);
/* harmony import */ var core_js_modules_es_number_to_fixed__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! core-js/modules/es.number.to-fixed */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.to-fixed.js");
/* harmony import */ var core_js_modules_es_number_to_fixed__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_number_to_fixed__WEBPACK_IMPORTED_MODULE_66__);
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! core-js/modules/es.object.assign */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.assign.js");
/* harmony import */ var core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_assign__WEBPACK_IMPORTED_MODULE_67__);
/* harmony import */ var core_js_modules_es_object_define_getter__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! core-js/modules/es.object.define-getter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.define-getter.js");
/* harmony import */ var core_js_modules_es_object_define_getter__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_getter__WEBPACK_IMPORTED_MODULE_68__);
/* harmony import */ var core_js_modules_es_object_define_setter__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! core-js/modules/es.object.define-setter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.define-setter.js");
/* harmony import */ var core_js_modules_es_object_define_setter__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_define_setter__WEBPACK_IMPORTED_MODULE_69__);
/* harmony import */ var core_js_modules_es_object_entries__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! core-js/modules/es.object.entries */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.entries.js");
/* harmony import */ var core_js_modules_es_object_entries__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_entries__WEBPACK_IMPORTED_MODULE_70__);
/* harmony import */ var core_js_modules_es_object_freeze__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! core-js/modules/es.object.freeze */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.freeze.js");
/* harmony import */ var core_js_modules_es_object_freeze__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_freeze__WEBPACK_IMPORTED_MODULE_71__);
/* harmony import */ var core_js_modules_es_object_from_entries__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! core-js/modules/es.object.from-entries */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.from-entries.js");
/* harmony import */ var core_js_modules_es_object_from_entries__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_from_entries__WEBPACK_IMPORTED_MODULE_72__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_73__);
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
/* harmony import */ var core_js_modules_es_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_74__);
/* harmony import */ var core_js_modules_es_object_get_own_property_names__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! core-js/modules/es.object.get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-names.js");
/* harmony import */ var core_js_modules_es_object_get_own_property_names__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_own_property_names__WEBPACK_IMPORTED_MODULE_75__);
/* harmony import */ var core_js_modules_es_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! core-js/modules/es.object.get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_76__);
/* harmony import */ var core_js_modules_es_object_is_extensible__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! core-js/modules/es.object.is-extensible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-extensible.js");
/* harmony import */ var core_js_modules_es_object_is_extensible__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_is_extensible__WEBPACK_IMPORTED_MODULE_77__);
/* harmony import */ var core_js_modules_es_object_is_frozen__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! core-js/modules/es.object.is-frozen */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-frozen.js");
/* harmony import */ var core_js_modules_es_object_is_frozen__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_is_frozen__WEBPACK_IMPORTED_MODULE_78__);
/* harmony import */ var core_js_modules_es_object_is_sealed__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! core-js/modules/es.object.is-sealed */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-sealed.js");
/* harmony import */ var core_js_modules_es_object_is_sealed__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_is_sealed__WEBPACK_IMPORTED_MODULE_79__);
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! core-js/modules/es.object.keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.keys.js");
/* harmony import */ var core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_keys__WEBPACK_IMPORTED_MODULE_80__);
/* harmony import */ var core_js_modules_es_object_lookup_getter__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! core-js/modules/es.object.lookup-getter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.lookup-getter.js");
/* harmony import */ var core_js_modules_es_object_lookup_getter__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_lookup_getter__WEBPACK_IMPORTED_MODULE_81__);
/* harmony import */ var core_js_modules_es_object_lookup_setter__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! core-js/modules/es.object.lookup-setter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.lookup-setter.js");
/* harmony import */ var core_js_modules_es_object_lookup_setter__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_lookup_setter__WEBPACK_IMPORTED_MODULE_82__);
/* harmony import */ var core_js_modules_es_object_prevent_extensions__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! core-js/modules/es.object.prevent-extensions */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.prevent-extensions.js");
/* harmony import */ var core_js_modules_es_object_prevent_extensions__WEBPACK_IMPORTED_MODULE_83___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_prevent_extensions__WEBPACK_IMPORTED_MODULE_83__);
/* harmony import */ var core_js_modules_es_object_seal__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! core-js/modules/es.object.seal */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.seal.js");
/* harmony import */ var core_js_modules_es_object_seal__WEBPACK_IMPORTED_MODULE_84___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_seal__WEBPACK_IMPORTED_MODULE_84__);
/* harmony import */ var core_js_modules_es_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! core-js/modules/es.object.set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.set-prototype-of.js");
/* harmony import */ var core_js_modules_es_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_85___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_85__);
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! core-js/modules/es.object.to-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.to-string.js");
/* harmony import */ var core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_86___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_to_string__WEBPACK_IMPORTED_MODULE_86__);
/* harmony import */ var core_js_modules_es_object_values__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! core-js/modules/es.object.values */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.values.js");
/* harmony import */ var core_js_modules_es_object_values__WEBPACK_IMPORTED_MODULE_87___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_object_values__WEBPACK_IMPORTED_MODULE_87__);
/* harmony import */ var core_js_modules_es_parse_float__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! core-js/modules/es.parse-float */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.parse-float.js");
/* harmony import */ var core_js_modules_es_parse_float__WEBPACK_IMPORTED_MODULE_88___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_parse_float__WEBPACK_IMPORTED_MODULE_88__);
/* harmony import */ var core_js_modules_es_parse_int__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! core-js/modules/es.parse-int */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.parse-int.js");
/* harmony import */ var core_js_modules_es_parse_int__WEBPACK_IMPORTED_MODULE_89___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_parse_int__WEBPACK_IMPORTED_MODULE_89__);
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! core-js/modules/es.promise */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.promise.js");
/* harmony import */ var core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_90___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise__WEBPACK_IMPORTED_MODULE_90__);
/* harmony import */ var core_js_modules_es_promise_finally__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! core-js/modules/es.promise.finally */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.promise.finally.js");
/* harmony import */ var core_js_modules_es_promise_finally__WEBPACK_IMPORTED_MODULE_91___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_promise_finally__WEBPACK_IMPORTED_MODULE_91__);
/* harmony import */ var core_js_modules_es_reflect_apply__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! core-js/modules/es.reflect.apply */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.apply.js");
/* harmony import */ var core_js_modules_es_reflect_apply__WEBPACK_IMPORTED_MODULE_92___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_apply__WEBPACK_IMPORTED_MODULE_92__);
/* harmony import */ var core_js_modules_es_reflect_construct__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! core-js/modules/es.reflect.construct */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.construct.js");
/* harmony import */ var core_js_modules_es_reflect_construct__WEBPACK_IMPORTED_MODULE_93___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_construct__WEBPACK_IMPORTED_MODULE_93__);
/* harmony import */ var core_js_modules_es_reflect_define_property__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! core-js/modules/es.reflect.define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.define-property.js");
/* harmony import */ var core_js_modules_es_reflect_define_property__WEBPACK_IMPORTED_MODULE_94___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_define_property__WEBPACK_IMPORTED_MODULE_94__);
/* harmony import */ var core_js_modules_es_reflect_delete_property__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(/*! core-js/modules/es.reflect.delete-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.delete-property.js");
/* harmony import */ var core_js_modules_es_reflect_delete_property__WEBPACK_IMPORTED_MODULE_95___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_delete_property__WEBPACK_IMPORTED_MODULE_95__);
/* harmony import */ var core_js_modules_es_reflect_get__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(/*! core-js/modules/es.reflect.get */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get.js");
/* harmony import */ var core_js_modules_es_reflect_get__WEBPACK_IMPORTED_MODULE_96___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_get__WEBPACK_IMPORTED_MODULE_96__);
/* harmony import */ var core_js_modules_es_reflect_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(/*! core-js/modules/es.reflect.get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js");
/* harmony import */ var core_js_modules_es_reflect_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_97___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_97__);
/* harmony import */ var core_js_modules_es_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(/*! core-js/modules/es.reflect.get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get-prototype-of.js");
/* harmony import */ var core_js_modules_es_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_98___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_98__);
/* harmony import */ var core_js_modules_es_reflect_has__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(/*! core-js/modules/es.reflect.has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.has.js");
/* harmony import */ var core_js_modules_es_reflect_has__WEBPACK_IMPORTED_MODULE_99___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_has__WEBPACK_IMPORTED_MODULE_99__);
/* harmony import */ var core_js_modules_es_reflect_is_extensible__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(/*! core-js/modules/es.reflect.is-extensible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.is-extensible.js");
/* harmony import */ var core_js_modules_es_reflect_is_extensible__WEBPACK_IMPORTED_MODULE_100___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_is_extensible__WEBPACK_IMPORTED_MODULE_100__);
/* harmony import */ var core_js_modules_es_reflect_own_keys__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(/*! core-js/modules/es.reflect.own-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.own-keys.js");
/* harmony import */ var core_js_modules_es_reflect_own_keys__WEBPACK_IMPORTED_MODULE_101___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_own_keys__WEBPACK_IMPORTED_MODULE_101__);
/* harmony import */ var core_js_modules_es_reflect_prevent_extensions__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(/*! core-js/modules/es.reflect.prevent-extensions */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.prevent-extensions.js");
/* harmony import */ var core_js_modules_es_reflect_prevent_extensions__WEBPACK_IMPORTED_MODULE_102___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_prevent_extensions__WEBPACK_IMPORTED_MODULE_102__);
/* harmony import */ var core_js_modules_es_reflect_set__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(/*! core-js/modules/es.reflect.set */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.set.js");
/* harmony import */ var core_js_modules_es_reflect_set__WEBPACK_IMPORTED_MODULE_103___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_set__WEBPACK_IMPORTED_MODULE_103__);
/* harmony import */ var core_js_modules_es_reflect_set_prototype_of__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(/*! core-js/modules/es.reflect.set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.set-prototype-of.js");
/* harmony import */ var core_js_modules_es_reflect_set_prototype_of__WEBPACK_IMPORTED_MODULE_104___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_reflect_set_prototype_of__WEBPACK_IMPORTED_MODULE_104__);
/* harmony import */ var core_js_modules_es_regexp_constructor__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(/*! core-js/modules/es.regexp.constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.constructor.js");
/* harmony import */ var core_js_modules_es_regexp_constructor__WEBPACK_IMPORTED_MODULE_105___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_constructor__WEBPACK_IMPORTED_MODULE_105__);
/* harmony import */ var core_js_modules_es_regexp_flags__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(/*! core-js/modules/es.regexp.flags */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.flags.js");
/* harmony import */ var core_js_modules_es_regexp_flags__WEBPACK_IMPORTED_MODULE_106___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_flags__WEBPACK_IMPORTED_MODULE_106__);
/* harmony import */ var core_js_modules_es_regexp_to_string__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(/*! core-js/modules/es.regexp.to-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.to-string.js");
/* harmony import */ var core_js_modules_es_regexp_to_string__WEBPACK_IMPORTED_MODULE_107___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_regexp_to_string__WEBPACK_IMPORTED_MODULE_107__);
/* harmony import */ var core_js_modules_es_set__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(/*! core-js/modules/es.set */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.set.js");
/* harmony import */ var core_js_modules_es_set__WEBPACK_IMPORTED_MODULE_108___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_set__WEBPACK_IMPORTED_MODULE_108__);
/* harmony import */ var core_js_modules_es_string_code_point_at__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(/*! core-js/modules/es.string.code-point-at */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.code-point-at.js");
/* harmony import */ var core_js_modules_es_string_code_point_at__WEBPACK_IMPORTED_MODULE_109___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_code_point_at__WEBPACK_IMPORTED_MODULE_109__);
/* harmony import */ var core_js_modules_es_string_ends_with__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(/*! core-js/modules/es.string.ends-with */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.ends-with.js");
/* harmony import */ var core_js_modules_es_string_ends_with__WEBPACK_IMPORTED_MODULE_110___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_ends_with__WEBPACK_IMPORTED_MODULE_110__);
/* harmony import */ var core_js_modules_es_string_from_code_point__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(/*! core-js/modules/es.string.from-code-point */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.from-code-point.js");
/* harmony import */ var core_js_modules_es_string_from_code_point__WEBPACK_IMPORTED_MODULE_111___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_from_code_point__WEBPACK_IMPORTED_MODULE_111__);
/* harmony import */ var core_js_modules_es_string_includes__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(/*! core-js/modules/es.string.includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.includes.js");
/* harmony import */ var core_js_modules_es_string_includes__WEBPACK_IMPORTED_MODULE_112___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_includes__WEBPACK_IMPORTED_MODULE_112__);
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(/*! core-js/modules/es.string.iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.iterator.js");
/* harmony import */ var core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_113___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_iterator__WEBPACK_IMPORTED_MODULE_113__);
/* harmony import */ var core_js_modules_es_string_match__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(/*! core-js/modules/es.string.match */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.match.js");
/* harmony import */ var core_js_modules_es_string_match__WEBPACK_IMPORTED_MODULE_114___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_match__WEBPACK_IMPORTED_MODULE_114__);
/* harmony import */ var core_js_modules_es_string_pad_end__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(/*! core-js/modules/es.string.pad-end */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.pad-end.js");
/* harmony import */ var core_js_modules_es_string_pad_end__WEBPACK_IMPORTED_MODULE_115___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_pad_end__WEBPACK_IMPORTED_MODULE_115__);
/* harmony import */ var core_js_modules_es_string_pad_start__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(/*! core-js/modules/es.string.pad-start */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.pad-start.js");
/* harmony import */ var core_js_modules_es_string_pad_start__WEBPACK_IMPORTED_MODULE_116___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_pad_start__WEBPACK_IMPORTED_MODULE_116__);
/* harmony import */ var core_js_modules_es_string_raw__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(/*! core-js/modules/es.string.raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.raw.js");
/* harmony import */ var core_js_modules_es_string_raw__WEBPACK_IMPORTED_MODULE_117___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_raw__WEBPACK_IMPORTED_MODULE_117__);
/* harmony import */ var core_js_modules_es_string_repeat__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(/*! core-js/modules/es.string.repeat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.repeat.js");
/* harmony import */ var core_js_modules_es_string_repeat__WEBPACK_IMPORTED_MODULE_118___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_repeat__WEBPACK_IMPORTED_MODULE_118__);
/* harmony import */ var core_js_modules_es_string_replace__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(/*! core-js/modules/es.string.replace */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.replace.js");
/* harmony import */ var core_js_modules_es_string_replace__WEBPACK_IMPORTED_MODULE_119___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_replace__WEBPACK_IMPORTED_MODULE_119__);
/* harmony import */ var core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(/*! core-js/modules/es.string.search */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.search.js");
/* harmony import */ var core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_120___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_search__WEBPACK_IMPORTED_MODULE_120__);
/* harmony import */ var core_js_modules_es_string_split__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(/*! core-js/modules/es.string.split */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.split.js");
/* harmony import */ var core_js_modules_es_string_split__WEBPACK_IMPORTED_MODULE_121___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_split__WEBPACK_IMPORTED_MODULE_121__);
/* harmony import */ var core_js_modules_es_string_starts_with__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(/*! core-js/modules/es.string.starts-with */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.starts-with.js");
/* harmony import */ var core_js_modules_es_string_starts_with__WEBPACK_IMPORTED_MODULE_122___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_starts_with__WEBPACK_IMPORTED_MODULE_122__);
/* harmony import */ var core_js_modules_es_string_trim__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(/*! core-js/modules/es.string.trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim.js");
/* harmony import */ var core_js_modules_es_string_trim__WEBPACK_IMPORTED_MODULE_123___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim__WEBPACK_IMPORTED_MODULE_123__);
/* harmony import */ var core_js_modules_es_string_trim_end__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(/*! core-js/modules/es.string.trim-end */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim-end.js");
/* harmony import */ var core_js_modules_es_string_trim_end__WEBPACK_IMPORTED_MODULE_124___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_end__WEBPACK_IMPORTED_MODULE_124__);
/* harmony import */ var core_js_modules_es_string_trim_start__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(/*! core-js/modules/es.string.trim-start */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim-start.js");
/* harmony import */ var core_js_modules_es_string_trim_start__WEBPACK_IMPORTED_MODULE_125___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_string_trim_start__WEBPACK_IMPORTED_MODULE_125__);
/* harmony import */ var core_js_modules_es_typed_array_float32_array__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(/*! core-js/modules/es.typed-array.float32-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.float32-array.js");
/* harmony import */ var core_js_modules_es_typed_array_float32_array__WEBPACK_IMPORTED_MODULE_126___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_float32_array__WEBPACK_IMPORTED_MODULE_126__);
/* harmony import */ var core_js_modules_es_typed_array_float64_array__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(/*! core-js/modules/es.typed-array.float64-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.float64-array.js");
/* harmony import */ var core_js_modules_es_typed_array_float64_array__WEBPACK_IMPORTED_MODULE_127___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_float64_array__WEBPACK_IMPORTED_MODULE_127__);
/* harmony import */ var core_js_modules_es_typed_array_int8_array__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(/*! core-js/modules/es.typed-array.int8-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int8-array.js");
/* harmony import */ var core_js_modules_es_typed_array_int8_array__WEBPACK_IMPORTED_MODULE_128___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_int8_array__WEBPACK_IMPORTED_MODULE_128__);
/* harmony import */ var core_js_modules_es_typed_array_int16_array__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(/*! core-js/modules/es.typed-array.int16-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int16-array.js");
/* harmony import */ var core_js_modules_es_typed_array_int16_array__WEBPACK_IMPORTED_MODULE_129___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_int16_array__WEBPACK_IMPORTED_MODULE_129__);
/* harmony import */ var core_js_modules_es_typed_array_int32_array__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(/*! core-js/modules/es.typed-array.int32-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int32-array.js");
/* harmony import */ var core_js_modules_es_typed_array_int32_array__WEBPACK_IMPORTED_MODULE_130___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_int32_array__WEBPACK_IMPORTED_MODULE_130__);
/* harmony import */ var core_js_modules_es_typed_array_uint8_array__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint8-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint8-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint8_array__WEBPACK_IMPORTED_MODULE_131___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint8_array__WEBPACK_IMPORTED_MODULE_131__);
/* harmony import */ var core_js_modules_es_typed_array_uint8_clamped_array__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint8-clamped-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint8_clamped_array__WEBPACK_IMPORTED_MODULE_132___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint8_clamped_array__WEBPACK_IMPORTED_MODULE_132__);
/* harmony import */ var core_js_modules_es_typed_array_uint16_array__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint16-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint16-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint16_array__WEBPACK_IMPORTED_MODULE_133___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint16_array__WEBPACK_IMPORTED_MODULE_133__);
/* harmony import */ var core_js_modules_es_typed_array_uint32_array__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(/*! core-js/modules/es.typed-array.uint32-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint32-array.js");
/* harmony import */ var core_js_modules_es_typed_array_uint32_array__WEBPACK_IMPORTED_MODULE_134___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_uint32_array__WEBPACK_IMPORTED_MODULE_134__);
/* harmony import */ var core_js_modules_es_typed_array_copy_within__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(/*! core-js/modules/es.typed-array.copy-within */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.copy-within.js");
/* harmony import */ var core_js_modules_es_typed_array_copy_within__WEBPACK_IMPORTED_MODULE_135___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_copy_within__WEBPACK_IMPORTED_MODULE_135__);
/* harmony import */ var core_js_modules_es_typed_array_every__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(/*! core-js/modules/es.typed-array.every */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.every.js");
/* harmony import */ var core_js_modules_es_typed_array_every__WEBPACK_IMPORTED_MODULE_136___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_every__WEBPACK_IMPORTED_MODULE_136__);
/* harmony import */ var core_js_modules_es_typed_array_fill__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(/*! core-js/modules/es.typed-array.fill */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.fill.js");
/* harmony import */ var core_js_modules_es_typed_array_fill__WEBPACK_IMPORTED_MODULE_137___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_fill__WEBPACK_IMPORTED_MODULE_137__);
/* harmony import */ var core_js_modules_es_typed_array_filter__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(/*! core-js/modules/es.typed-array.filter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.filter.js");
/* harmony import */ var core_js_modules_es_typed_array_filter__WEBPACK_IMPORTED_MODULE_138___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_filter__WEBPACK_IMPORTED_MODULE_138__);
/* harmony import */ var core_js_modules_es_typed_array_find__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(/*! core-js/modules/es.typed-array.find */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.find.js");
/* harmony import */ var core_js_modules_es_typed_array_find__WEBPACK_IMPORTED_MODULE_139___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_find__WEBPACK_IMPORTED_MODULE_139__);
/* harmony import */ var core_js_modules_es_typed_array_find_index__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(/*! core-js/modules/es.typed-array.find-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.find-index.js");
/* harmony import */ var core_js_modules_es_typed_array_find_index__WEBPACK_IMPORTED_MODULE_140___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_find_index__WEBPACK_IMPORTED_MODULE_140__);
/* harmony import */ var core_js_modules_es_typed_array_for_each__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(/*! core-js/modules/es.typed-array.for-each */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.for-each.js");
/* harmony import */ var core_js_modules_es_typed_array_for_each__WEBPACK_IMPORTED_MODULE_141___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_for_each__WEBPACK_IMPORTED_MODULE_141__);
/* harmony import */ var core_js_modules_es_typed_array_from__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(/*! core-js/modules/es.typed-array.from */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.from.js");
/* harmony import */ var core_js_modules_es_typed_array_from__WEBPACK_IMPORTED_MODULE_142___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_from__WEBPACK_IMPORTED_MODULE_142__);
/* harmony import */ var core_js_modules_es_typed_array_includes__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(/*! core-js/modules/es.typed-array.includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.includes.js");
/* harmony import */ var core_js_modules_es_typed_array_includes__WEBPACK_IMPORTED_MODULE_143___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_includes__WEBPACK_IMPORTED_MODULE_143__);
/* harmony import */ var core_js_modules_es_typed_array_index_of__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(/*! core-js/modules/es.typed-array.index-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.index-of.js");
/* harmony import */ var core_js_modules_es_typed_array_index_of__WEBPACK_IMPORTED_MODULE_144___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_index_of__WEBPACK_IMPORTED_MODULE_144__);
/* harmony import */ var core_js_modules_es_typed_array_iterator__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(/*! core-js/modules/es.typed-array.iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.iterator.js");
/* harmony import */ var core_js_modules_es_typed_array_iterator__WEBPACK_IMPORTED_MODULE_145___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_iterator__WEBPACK_IMPORTED_MODULE_145__);
/* harmony import */ var core_js_modules_es_typed_array_join__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(/*! core-js/modules/es.typed-array.join */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.join.js");
/* harmony import */ var core_js_modules_es_typed_array_join__WEBPACK_IMPORTED_MODULE_146___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_join__WEBPACK_IMPORTED_MODULE_146__);
/* harmony import */ var core_js_modules_es_typed_array_last_index_of__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(/*! core-js/modules/es.typed-array.last-index-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.last-index-of.js");
/* harmony import */ var core_js_modules_es_typed_array_last_index_of__WEBPACK_IMPORTED_MODULE_147___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_last_index_of__WEBPACK_IMPORTED_MODULE_147__);
/* harmony import */ var core_js_modules_es_typed_array_map__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(/*! core-js/modules/es.typed-array.map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.map.js");
/* harmony import */ var core_js_modules_es_typed_array_map__WEBPACK_IMPORTED_MODULE_148___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_map__WEBPACK_IMPORTED_MODULE_148__);
/* harmony import */ var core_js_modules_es_typed_array_of__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(/*! core-js/modules/es.typed-array.of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.of.js");
/* harmony import */ var core_js_modules_es_typed_array_of__WEBPACK_IMPORTED_MODULE_149___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_of__WEBPACK_IMPORTED_MODULE_149__);
/* harmony import */ var core_js_modules_es_typed_array_reduce__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(/*! core-js/modules/es.typed-array.reduce */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reduce.js");
/* harmony import */ var core_js_modules_es_typed_array_reduce__WEBPACK_IMPORTED_MODULE_150___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_reduce__WEBPACK_IMPORTED_MODULE_150__);
/* harmony import */ var core_js_modules_es_typed_array_reduce_right__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(/*! core-js/modules/es.typed-array.reduce-right */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reduce-right.js");
/* harmony import */ var core_js_modules_es_typed_array_reduce_right__WEBPACK_IMPORTED_MODULE_151___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_reduce_right__WEBPACK_IMPORTED_MODULE_151__);
/* harmony import */ var core_js_modules_es_typed_array_reverse__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(/*! core-js/modules/es.typed-array.reverse */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reverse.js");
/* harmony import */ var core_js_modules_es_typed_array_reverse__WEBPACK_IMPORTED_MODULE_152___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_reverse__WEBPACK_IMPORTED_MODULE_152__);
/* harmony import */ var core_js_modules_es_typed_array_slice__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(/*! core-js/modules/es.typed-array.slice */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.slice.js");
/* harmony import */ var core_js_modules_es_typed_array_slice__WEBPACK_IMPORTED_MODULE_153___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_slice__WEBPACK_IMPORTED_MODULE_153__);
/* harmony import */ var core_js_modules_es_typed_array_some__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(/*! core-js/modules/es.typed-array.some */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.some.js");
/* harmony import */ var core_js_modules_es_typed_array_some__WEBPACK_IMPORTED_MODULE_154___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_some__WEBPACK_IMPORTED_MODULE_154__);
/* harmony import */ var core_js_modules_es_typed_array_sort__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(/*! core-js/modules/es.typed-array.sort */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.sort.js");
/* harmony import */ var core_js_modules_es_typed_array_sort__WEBPACK_IMPORTED_MODULE_155___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_sort__WEBPACK_IMPORTED_MODULE_155__);
/* harmony import */ var core_js_modules_es_typed_array_to_locale_string__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(/*! core-js/modules/es.typed-array.to-locale-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.to-locale-string.js");
/* harmony import */ var core_js_modules_es_typed_array_to_locale_string__WEBPACK_IMPORTED_MODULE_156___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_to_locale_string__WEBPACK_IMPORTED_MODULE_156__);
/* harmony import */ var core_js_modules_es_typed_array_to_string__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(/*! core-js/modules/es.typed-array.to-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.to-string.js");
/* harmony import */ var core_js_modules_es_typed_array_to_string__WEBPACK_IMPORTED_MODULE_157___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_typed_array_to_string__WEBPACK_IMPORTED_MODULE_157__);
/* harmony import */ var core_js_modules_es_weak_map__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(/*! core-js/modules/es.weak-map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.weak-map.js");
/* harmony import */ var core_js_modules_es_weak_map__WEBPACK_IMPORTED_MODULE_158___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_weak_map__WEBPACK_IMPORTED_MODULE_158__);
/* harmony import */ var core_js_modules_es_weak_set__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(/*! core-js/modules/es.weak-set */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.weak-set.js");
/* harmony import */ var core_js_modules_es_weak_set__WEBPACK_IMPORTED_MODULE_159___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es_weak_set__WEBPACK_IMPORTED_MODULE_159__);

































































































































































/*
 *  corejs-proxy.js
 *
 *  For babel-preset-env with "useBuiltin":"entry", it requires that the
 *  require('core-js') expression be at the module level for it to
 *  be transpiled into the individual core-js polyfills. This proxy module
 *  allows for dynamic core-js usage while still using the individual feature
 *  transforms.
 */
// Apply stable core-js polyfills
// Manually set global._babelPolyfill as a flag to avoid multiple loading.
// Uses 'babelPolyfill' name for historical meaning and external/backward
// compatibility.
global._babelPolyfill = true;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/config/polyfills.js":
/*!******************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/config/polyfills.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {/* eslint no-var: off, no-extend-native: off */

/*
 *  polyfills.js
 *
 *  Any polyfills or code required prior to loading the app.
 */
if (!global.skipPolyfills && !global._babelPolyfill) {
  // Temporarily remap [Array].toLocaleString to [Array].toString.
  // Fixes an issue with loading the polyfills within the v8 snapshot environment
  // where toLocaleString() within the TypedArray polyfills causes snapshot failure.
  var origToLocaleString = Array.prototype.toLocaleString;
  Array.prototype.toLocaleString = Array.prototype.toString; // Apply core-js polyfills

  __webpack_require__(/*! ./corejs-proxy */ "../../../../usr/local/lib/node_modules/@enact/cli/config/corejs-proxy.js"); // Restore real [Array].toLocaleString for runtime usage.


  Array.prototype.toLocaleString = origToLocaleString;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/global.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  } return it;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var UNSCOPABLES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('unscopables');
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  hide(ArrayPrototype, UNSCOPABLES, create(null));
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/advance-string-index.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/advance-string-index.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var codePointAt = __webpack_require__(/*! ../internals/string-at */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-at.js");

// `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? codePointAt(S, index, true).length : 1);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  } return it;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  } return it;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js");
var TO_STRING_TAG = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('toStringTag');
var TYPED_ARRAY_TAG = __webpack_require__(/*! ../internals/uid */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js")('TYPED_ARRAY_TAG');

var DataView = global.DataView;
var DataViewPrototype = DataView && DataView.prototype;
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var isPrototypeOf = ObjectPrototype.isPrototypeOf;

var NATIVE_ARRAY_BUFFER = !!(global.ArrayBuffer && global.DataView);
var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf;
var TYPED_ARRAY_TAG_REQIRED = false;
var NAME;

var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};

var isView = function isView(it) {
  var klass = classof(it);
  return klass === 'DataView' || has(TypedArrayConstructorsList, klass);
};

var isTypedArray = function (it) {
  return isObject(it) && has(TypedArrayConstructorsList, classof(it));
};

var aTypedArray = function (it) {
  if (isTypedArray(it)) return it;
  throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor = function (C) {
  if (setPrototypeOf) {
    if (isPrototypeOf.call(TypedArray, C)) return C;
  } else for (var ARRAY in TypedArrayConstructorsList) if (has(TypedArrayConstructorsList, NAME)) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (C === TypedArrayConstructor || isPrototypeOf.call(TypedArrayConstructor, C))) {
      return C;
    }
  } throw TypeError('Target is not a typed array constructor');
};

var exportProto = function (KEY, property, forced) {
  if (!DESCRIPTORS) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && has(TypedArrayConstructor.prototype, KEY)) {
      delete TypedArrayConstructor.prototype[KEY];
    }
  }
  if (!TypedArrayPrototype[KEY] || forced) {
    redefine(TypedArrayPrototype, KEY, forced ? property
      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property);
  }
};

var exportStatic = function (KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS) return;
  if (setPrototypeOf) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global[ARRAY];
      if (TypedArrayConstructor && has(TypedArrayConstructor, KEY)) {
        delete TypedArrayConstructor[KEY];
      }
    }
    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && Int8Array[KEY] || property);
      } catch (error) { /* empty */ }
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      redefine(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  if (!global[NAME]) NATIVE_ARRAY_BUFFER_VIEWS = false;
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS || typeof TypedArray != 'function' || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow
  TypedArray = function TypedArray() {
    throw TypeError('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (DESCRIPTORS && !has(TypedArrayPrototype, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQIRED = true;
  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {
    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
  } });
  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
    hide(global[NAME], TYPED_ARRAY_TAG, NAME);
  }
}

// WebKit bug - the same parent prototype for typed arrays and data view
if (NATIVE_ARRAY_BUFFER && setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
  setPrototypeOf(DataViewPrototype, ObjectPrototype);
}

module.exports = {
  NATIVE_ARRAY_BUFFER: NATIVE_ARRAY_BUFFER,
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportProto: exportProto,
  exportStatic: exportStatic,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER;
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-index.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js").f;
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var arrayFill = __webpack_require__(/*! ../internals/array-fill */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-fill.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = 1 / 0;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

// IEEE754 conversions based on https://github.com/feross/ieee754
var packIEEE754 = function (number, mantissaLength, bytes) {
  var buffer = new Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number);
  // eslint-disable-next-line no-self-compare
  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    if (number * (c = pow(2, -exponent)) < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }
  for (; mantissaLength >= 8; buffer[index++] = mantissa & 255, mantissa /= 256, mantissaLength -= 8);
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  for (; exponentLength > 0; buffer[index++] = exponent & 255, exponent /= 256, exponentLength -= 8);
  buffer[--index] |= sign * 128;
  return buffer;
};

var unpackIEEE754 = function (buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  for (; nBits > 0; exponent = exponent * 256 + buffer[index], index--, nBits -= 8);
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  for (; nBits > 0; mantissa = mantissa * 256 + buffer[index], index--, nBits -= 8);
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

var unpackInt32 = function (buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packInt8 = function (number) {
  return [number & 0xFF];
};

var packInt16 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var packFloat32 = function (number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function (number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function (Constructor, key) {
  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });
};

var get = function (view, count, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = bytes.slice(start, start + count);
  return isLittleEndian ? pack : pack.reverse();
};

var set = function (view, count, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);
  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    setInternalState(this, {
      bytes: arrayFill.call(new Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) this.byteLength = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = getInternalState(buffer).byteLength;
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset
    });
    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength');
    addGetter($DataView, 'buffer');
    addGetter($DataView, 'byteLength');
    addGetter($DataView, 'byteOffset');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packFloat32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packFloat64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new NativeArrayBuffer(); // eslint-disable-line no-new
    new NativeArrayBuffer(1.5); // eslint-disable-line no-new
    new NativeArrayBuffer(NaN); // eslint-disable-line no-new
    return NativeArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new NativeArrayBuffer(toIndex(length));
    };
    var ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE] = NativeArrayBuffer[PROTOTYPE];
    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, NativeArrayBuffer[key]);
    }
    ArrayBufferPrototype.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer(2));
  var nativeSetInt8 = $DataView[PROTOTYPE].setInt8;
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      nativeSetInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, { unsafe: true });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-copy-within.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-copy-within.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");

// `Array.prototype.copyWithin` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-fill.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-fill.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");

// `Array.prototype.fill` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-from.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-from.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-iterator-method.js");

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var index = 0;
  var iteratorMethod = getIteratorMethod(O);
  var length, result, step, iterator;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2);
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    result = new C();
    for (;!(step = iterator.next()).done; index++) {
      createProperty(result, index, mapping
        ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true)
        : step.value
      );
    }
  } else {
    length = toLength(O.length);
    result = new C(length);
    for (;length > index; index++) {
      createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
// false -> Array#indexOf
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
// true  -> Array#includes
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-last-index-of.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-last-index-of.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var nativeLastIndexOf = [].lastIndexOf;

var NEGATIVE_ZERO = !!nativeLastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var SLOPPY_METHOD = __webpack_require__(/*! ../internals/sloppy-array-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/sloppy-array-method.js")('lastIndexOf');

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
module.exports = (NEGATIVE_ZERO || SLOPPY_METHOD) ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return nativeLastIndexOf.apply(this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = toLength(O.length);
  var index = length - 1;
  if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
  if (index < 0) index = length + index;
  for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
  return -1;
} : nativeLastIndexOf;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js":
/*!*****************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var SPECIES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('species');

module.exports = function (METHOD_NAME) {
  return !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex }` methods implementation
// 0 -> Array#forEach
// https://tc39.github.io/ecma262/#sec-array.prototype.foreach
// 1 -> Array#map
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// 2 -> Array#filter
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// 3 -> Array#some
// https://tc39.github.io/ecma262/#sec-array.prototype.some
// 4 -> Array#every
// https://tc39.github.io/ecma262/#sec-array.prototype.every
// 5 -> Array#find
// https://tc39.github.io/ecma262/#sec-array.prototype.find
// 6 -> Array#findIndex
// https://tc39.github.io/ecma262/#sec-array.prototype.findIndex
module.exports = function (TYPE, specificCreate) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = specificCreate || arraySpeciesCreate;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var target = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: target.push(value);       // filter
        } else if (IS_EVERY) return false;  // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js");
var SPECIES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('species');

// `ArraySpeciesCreate` abstract operation
// https://tc39.github.io/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");

// optional / simple context binding
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 0: return function () {
      return fn.call(that);
    };
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!*****************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    var returnMethod = iterator['return'];
    if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
    throw error;
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!***************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ITERATOR = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line no-throw-literal
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof.js":
/*!****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var TO_STRING_TAG = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('toStringTag');
// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-strong.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-strong.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-iterator.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var fastKey = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js").fastKey;
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.1.3.6 Map.prototype.get(key)
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // 23.1.3.9 Map.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // 23.2.3.1 Set.prototype.add(value)
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-weak.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-weak.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js");
var getWeakData = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js").getWeakData;
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js");
var createArrayMethod = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js");
var $has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) this.entries.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
    });

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && $has(data, state.id) && delete data[state.id];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && $has(data, state.id);
      }
    });

    redefineAll(C.prototype, IS_MAP ? {
      // 23.3.3.3 WeakMap.prototype.get(key)
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // 23.3.3.5 WeakMap.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // 23.4.3.1 WeakSet.prototype.add(value)
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return C;
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js");
var $export = __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common, IS_MAP, IS_WEAK) {
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var ADDER = IS_MAP ? 'set' : 'add';
  var exported = {};

  var fixMethod = function (KEY) {
    var nativeMethod = NativePrototype[KEY];
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(a) {
        nativeMethod.call(this, a === 0 ? 0 : a);
        return this;
      } : KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : nativeMethod.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : nativeMethod.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : nativeMethod.call(this, a === 0 ? 0 : a);
      } : function set(a, b) {
        nativeMethod.call(this, a === 0 ? 0 : a, b);
        return this;
      }
    );
  };

  // eslint-disable-next-line max-len
  if (isForced(CONSTRUCTOR_NAME, typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
    new NativeConstructor().entries().next();
  })))) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (target, iterable) {
        anInstance(target, Constructor, CONSTRUCTOR_NAME);
        var that = inheritIfRequired(new NativeConstructor(), target, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], that, IS_MAP);
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $export({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/copy-constructor-properties.js":
/*!************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/copy-constructor-properties.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-is-regexp-logic.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MATCH = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (e) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (f) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-prototype-getter.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-prototype-getter.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-iterator-constructor.js":
/*!************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-iterator-constructor.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var IteratorPrototype = __webpack_require__(/*! ../internals/iterators-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators-core.js").IteratorPrototype;
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js":
/*!***********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/date-to-primitive.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/date-to-primitive.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");

module.exports = function (hint) {
  if (hint !== 'string' && hint !== 'number' && hint !== 'default') {
    throw TypeError('Incorrect hint');
  } return toPrimitive(anObject(this), hint !== 'number');
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-iterator.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-iterator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js");
var ITERATOR = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('iterator');
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators-core.js");
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          hide(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;
    defaultIterator = function values() { return nativeIterator.call(this); };
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    hide(IterablePrototype, ITERATOR, defaultIterator);
  }
  Iterators[NAME] = defaultIterator;

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $export({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  return methods;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/path.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/wrapped-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/wrapped-well-known-symbol.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/document-create-element.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/document-create-element.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var document = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").document;
// typeof document.createElement is 'object' in old IE
var exist = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return exist ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-bug-keys.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-bug-keys.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-keys.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-keys.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js");

// all enumerable object keys, includes symbols
module.exports = function (it) {
  var result = objectKeys(it);
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  if (getOwnPropertySymbols) {
    var symbols = getOwnPropertySymbols(it);
    var propertyIsEnumerable = propertyIsEnumerableModule.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (propertyIsEnumerable.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js":
/*!***************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty === typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      hide(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js":
/*!**************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
/*!*******************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec.js");

var SPECIES = wellKnownSymbol('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

module.exports = function (KEY, length, exec, sham) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };

    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      if (regexp.exec === regexpExec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
        }
        return { done: true, value: nativeMethod.call(str, regexp, arg2) };
      }
      return { done: false };
    });
    var stringMethod = methods[0];
    var regexMethod = methods[1];

    redefine(String.prototype, KEY, stringMethod);
    redefine(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return regexMethod.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return regexMethod.call(string, this); }
    );
    if (sham) hide(RegExp.prototype[SYMBOL], 'sham', true);
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/flatten-into-array.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/flatten-into-array.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;
  var element;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

module.exports = flattenIntoArray;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js":
/*!**************************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js ***!
  \**************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// Forced replacement object prototype accessors methods
module.exports = __webpack_require__(/*! ../internals/is-pure */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js") || !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  var key = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call
  __defineSetter__.call(null, key, function () { /* empty */ });
  delete __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js")[key];
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-string-trim-method.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-string-trim-method.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/whitespaces.js");
var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js":
/*!*****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-bind.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-bind.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var arraySlice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.github.io/ecma262/#sec-function.prototype.bind
module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };
  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-to-string.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-to-string.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ../internals/shared */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js")('native-function-to-string', Function.toString);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-built-in.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-built-in.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/path.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-iterator-method.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-iterator-method.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof.js");
var ITERATOR = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('iterator');
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js");

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js":
/*!***************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports = typeof window == 'object' && window && window.Math == Math ? window
  : typeof self == 'object' && self && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js":
/*!************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js":
/*!*************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js") ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/host-report-errors.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/host-report-errors.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/html.js":
/*!*************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/html.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").document;

module.exports = document && document.documentElement;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/ie8-dom-define.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/ie8-dom-define.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js") && !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ../internals/document-create-element */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/document-create-element.js")('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/indexed-object.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/indexed-object.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var split = ''.split;

module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/inherit-if-required.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/inherit-if-required.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js");

module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var METADATA = __webpack_require__(/*! ../internals/uid */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js")('meta');
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var id = 0;

var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + ++id, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

__webpack_require__(/*! ../internals/hidden-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js")[METADATA] = true;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-weak-map.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var objectHas = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js");
var WeakMap = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP) {
  var store = new WeakMap();
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;
  set = function (it, metadata) {
    wmset.call(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget.call(store, it) || {};
  };
  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    hide(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array-iterator-method.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array-iterator-method.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js");
var ITERATOR = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('iterator');
var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js":
/*!*****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.github.io/ecma262/#sec-isarray
module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : typeof detection == 'function' ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-integer.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-integer.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var floor = Math.floor;

// `Number.isInteger` method implementation
// https://tc39.github.io/ecma262/#sec-number.isinteger
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js":
/*!****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-regexp.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-regexp.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var MATCH = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('match');

// `IsRegExp` abstract operation
// https://tc39.github.io/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js":
/*!****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array-iterator-method.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-iterator-method.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var BREAK = {};

var exports = module.exports = function (iterable, fn, that, ENTRIES, ITERATOR) {
  var boundFunction = bind(fn, that, ENTRIES ? 2 : 1);
  var iterator, iterFn, index, length, result, step;

  if (ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = ENTRIES ? boundFunction(anObject(step = iterable[index])[0], step[1]) : boundFunction(iterable[index]);
        if (result === BREAK) return BREAK;
      } return;
    }
    iterator = iterFn.call(iterable);
  }

  while (!(step = iterator.next()).done) {
    if (callWithSafeIterationClosing(iterator, boundFunction, step.value, ENTRIES) === BREAK) return BREAK;
  }
};

exports.BREAK = BREAK;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators-core.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators-core.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js");
var ITERATOR = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-expm1.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-expm1.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var nativeExpm1 = Math.expm1;

// `Math.expm1` method implementation
// https://tc39.github.io/ecma262/#sec-math.expm1
module.exports = (!nativeExpm1
  // Old FF bug
  || nativeExpm1(10) > 22025.465794806719 || nativeExpm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || nativeExpm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : nativeExpm1;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-fround.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-fround.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-sign.js");
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

// `Math.fround` method implementation
// https://tc39.github.io/ecma262/#sec-math.fround
module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-log1p.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-log1p.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `Math.log1p` method implementation
// https://tc39.github.io/ecma262/#sec-math.log1p
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-sign.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-sign.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `Math.sign` method implementation
// https://tc39.github.io/ecma262/#sec-math.sign
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/microtask.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/microtask.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var macrotask = __webpack_require__(/*! ../internals/task */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/task.js").set;
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/user-agent.js");
var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var IS_NODE = classof(process) == 'process';
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  } else if (MutationObserver && !/(iPhone|iPod|iPad).*AppleWebKit/i.test(userAgent)) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-symbol.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-symbol.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Chrome 38 Symbol has incorrect toString conversion
module.exports = !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  // eslint-disable-next-line no-undef
  return !String(Symbol());
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-weak-map.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-weak-map.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeFunctionToString = __webpack_require__(/*! ../internals/function-to-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-to-string.js");
var WeakMap = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").WeakMap;

module.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/new-promise-capability.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/new-promise-capability.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
};

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-assign.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-assign.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/indexed-object.js");
var nativeAssign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !nativeAssign || __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return nativeAssign({}, A)[symbol] != 7 || objectKeys(nativeAssign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? objectKeys(S).concat(getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) if (propertyIsEnumerable.call(S, key = keys[j++])) T[key] = S[key];
  } return T;
} : nativeAssign;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var defineProperties = __webpack_require__(/*! ../internals/object-define-properties */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-bug-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/document-create-element.js");
var IE_PROTO = __webpack_require__(/*! ../internals/shared-key */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared-key.js")('IE_PROTO');
var PROTOTYPE = 'prototype';
var Empty = function () { /* empty */ };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var length = enumBugKeys.length;
  var lt = '<';
  var script = 'script';
  var gt = '>';
  var js = 'java' + script + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  iframe.src = String(js);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : defineProperties(result, Properties);
};

__webpack_require__(/*! ../internals/hidden-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js")[IE_PROTO] = true;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-properties.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-properties.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js");

module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var key;
  while (length > i) definePropertyModule.f(O, key = keys[i++], Properties[key]);
  return O;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/ie8-dom-define.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var nativeDefineProperty = Object.defineProperty;

exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return nativeDefineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!*******************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/ie8-dom-define.js");
var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return nativeGetOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!***********************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \***********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var nativeGetOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return nativeGetOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]'
    ? getWindowNames(it)
    : nativeGetOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js":
/*!**************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!****************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var IE_PROTO = __webpack_require__(/*! ../internals/shared-key */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared-key.js")('IE_PROTO');
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-prototype-getter.js");
var ObjectPrototype = Object.prototype;

module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys-internal.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys-internal.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var arrayIndexOf = __webpack_require__(/*! ../internals/array-includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js")(false);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js");

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js":
/*!**************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = nativeGetOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = nativeGetOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : nativePropertyIsEnumerable;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var validateSetPrototypeOfArguments = __webpack_require__(/*! ../internals/validate-set-prototype-of-arguments */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-set-prototype-of-arguments.js");

module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var correctSetter = false;
  var test = {};
  var setter;
  try {
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    correctSetter = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    validateSetPrototypeOfArguments(O, proto);
    if (correctSetter) setter.call(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-array.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-array.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var propertyIsEnumerable = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js").f;

// TO_ENTRIES: true  -> Object.entries
// TO_ENTRIES: false -> Object.values
module.exports = function (it, TO_ENTRIES) {
  var O = toIndexedObject(it);
  var keys = objectKeys(O);
  var length = keys.length;
  var i = 0;
  var result = [];
  var key;
  while (length > i) if (propertyIsEnumerable.call(O, key = keys[i++])) {
    result.push(TO_ENTRIES ? [key, O[key]] : O[key]);
  } return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-string.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-string.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var classof = __webpack_require__(/*! ../internals/classof */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof.js");
var TO_STRING_TAG = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
module.exports = String(test) !== '[object z]' ? function toString() {
  return '[object ' + classof(this) + ']';
} : test.toString;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/own-keys.js":
/*!*****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/own-keys.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var Reflect = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Reflect;

// all object keys, includes non-enumerable and symbols
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-float.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-float.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeParseFloat = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").parseFloat;
var internalStringTrim = __webpack_require__(/*! ../internals/string-trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/whitespaces.js");
var FORCED = 1 / nativeParseFloat(whitespaces + '-0') !== -Infinity;

module.exports = FORCED ? function parseFloat(str) {
  var string = internalStringTrim(String(str), 3);
  var result = nativeParseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : nativeParseFloat;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-int.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-int.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeParseInt = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").parseInt;
var internalStringTrim = __webpack_require__(/*! ../internals/string-trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/whitespaces.js");
var hex = /^[-+]?0[xX]/;
var FORCED = nativeParseInt(whitespaces + '08') !== 8 || nativeParseInt(whitespaces + '0x16') !== 22;

module.exports = FORCED ? function parseInt(str, radix) {
  var string = internalStringTrim(String(str), 3);
  return nativeParseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : nativeParseInt;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/path.js":
/*!*************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/path.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/perform.js":
/*!****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/perform.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/promise-resolve.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/promise-resolve.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js":
/*!*****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-global.js");
var nativeFunctionToString = __webpack_require__(/*! ../internals/function-to-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(nativeFunctionToString).split('toString');

__webpack_require__(/*! ../internals/shared */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js")('inspectSource', function (it) {
  return nativeFunctionToString.call(it);
});

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  if (typeof value == 'function') {
    if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);
    enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else hide(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec-abstract.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ./classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var regexpExec = __webpack_require__(/*! ./regexp-exec */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec.js");

// `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }

  if (classof(R) !== 'RegExp') {
    throw TypeError('RegExp#exec called on incompatible receiver');
  }

  return regexpExec.call(R, S);
};



/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__(/*! ./regexp-flags */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-flags.js");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-flags.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-flags.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/same-value.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/same-value.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// `SameValue` abstract operation
// https://tc39.github.io/ecma262/#sec-samevalue
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-global.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-global.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");

module.exports = function (key, value) {
  try {
    hide(global, key, value);
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var SPECIES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var C = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;
  if (DESCRIPTORS && C && !C[SPECIES]) defineProperty(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var TO_STRING_TAG = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('toStringTag');

module.exports = function (it, TAG, STATIC) {
  if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
    defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared-key.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared-key.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js")('keys');
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js");

module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js":
/*!***************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.0.1',
  mode: __webpack_require__(/*! ../internals/is-pure */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js") ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/sloppy-array-method.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/sloppy-array-method.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !method || !fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal
    method.call(null, argument || function () { throw 1; }, 1);
  });
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var SPECIES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-at.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-at.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");
// CONVERT_TO_STRING: true  -> String#at
// CONVERT_TO_STRING: false -> String#codePointAt
module.exports = function (that, pos, CONVERT_TO_STRING) {
  var S = String(requireObjectCoercible(that));
  var position = toInteger(pos);
  var size = S.length;
  var first, second;
  if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
  first = S.charCodeAt(position);
  return first < 0xD800 || first > 0xDBFF || position + 1 === size
    || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
      ? CONVERT_TO_STRING ? S.charAt(position) : first
      : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-pad.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-pad.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-repeat.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (that, maxLength, fillString, left) {
  var S = String(requireObjectCoercible(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  var fillLen, stringFiller;
  if (intMaxLength <= stringLength || fillStr == '') return S;
  fillLen = intMaxLength - stringLength;
  stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-repeat.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-repeat.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");

// `String.prototype.repeat` method implementation
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
module.exports = ''.repeat || function repeat(count) {
  var str = String(requireObjectCoercible(this));
  var result = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");
var whitespace = '[' + __webpack_require__(/*! ../internals/whitespaces */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/whitespaces.js") + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// 1 -> String#trimStart
// 2 -> String#trimEnd
// 3 -> String#trim
module.exports = function (string, TYPE) {
  string = String(requireObjectCoercible(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/task.js":
/*!*************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/task.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");
var html = __webpack_require__(/*! ../internals/html */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/html.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/document-create-element.js");
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var listener = function (event) {
  run.call(event.data);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (classof(process) == 'process') {
    defer = function (id) {
      process.nextTick(bind(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(bind(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(bind(run, id, 1), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/this-number-value.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/this-number-value.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");

// `thisNumberValue` abstract operation
// https://tc39.github.io/ecma262/#sec-thisnumbervalue
module.exports = function (value) {
  if (typeof value != 'number' && classof(value) != 'Number') {
    throw TypeError('Incorrect invocation');
  }
  return +value;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).
module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-index.js":
/*!*****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-index.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");

// `ToIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-toindex
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length or index');
  return length;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-offset.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-offset.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");

module.exports = function (it, BYTES) {
  var offset = toInteger(it);
  if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset');
  return offset;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

if (__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js")) {
  var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
  var $export = __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js");
  var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-arrays-constructors-requires-wrappers */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js");
  var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
  var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer.js");
  var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js");
  var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");
  var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
  var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
  var toIndex = __webpack_require__(/*! ../internals/to-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-index.js");
  var toOffset = __webpack_require__(/*! ../internals/to-offset */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-offset.js");
  var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
  var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
  var classof = __webpack_require__(/*! ../internals/classof */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof.js");
  var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
  var create = __webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js");
  var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js");
  var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js").f;
  var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-from.js");
  var arrayForEach = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(0);
  var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js");
  var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
  var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
  var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
  var getInternalState = InternalStateModule.get;
  var setInternalState = InternalStateModule.set;
  var nativeDefineProperty = definePropertyModule.f;
  var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  var RangeError = global.RangeError;
  var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
  var DataView = ArrayBufferModule.DataView;
  var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
  var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
  var TypedArray = ArrayBufferViewCore.TypedArray;
  var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
  var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
  var isTypedArray = ArrayBufferViewCore.isTypedArray;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var WRONG_LENGTH = 'Wrong length';

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = new (aTypedArrayConstructor(C))(length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key) {
    nativeDefineProperty(it, key, { get: function () {
      return getInternalState(this)[key];
    } });
  };

  var isArrayBuffer = function (it) {
    var klass;
    return it instanceof ArrayBuffer || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
  };

  var isTypedArrayIndex = function (target, key) {
    return isTypedArray(target)
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };

  var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
    return isTypedArrayIndex(target, key = toPrimitive(key, true))
      ? createPropertyDescriptor(2, target[key])
      : nativeGetOwnPropertyDescriptor(target, key);
  };

  var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
    if (isTypedArrayIndex(target, key = toPrimitive(key, true))
      && isObject(descriptor)
      && has(descriptor, 'value')
      && !has(descriptor, 'get')
      && !has(descriptor, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !descriptor.configurable
      && (!has(descriptor, 'writable') || descriptor.writable)
      && (!has(descriptor, 'enumerable') || descriptor.enumerable)
    ) {
      target[key] = descriptor.value;
      return target;
    } return nativeDefineProperty(target, key, descriptor);
  };

  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype, 'buffer');
    addGetter(TypedArrayPrototype, 'byteOffset');
    addGetter(TypedArrayPrototype, 'byteLength');
    addGetter(TypedArrayPrototype, 'length');
  }

  $export({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });

  // eslint-disable-next-line max-statements
  module.exports = function (TYPE, BYTES, wrapper, CLAMPED) {
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};

    var getter = function (that, index) {
      var data = getInternalState(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };

    var setter = function (that, index, value) {
      var data = getInternalState(that);
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
      data.view[SETTER](index * BYTES + data.byteOffset, value, true);
    };

    var addElement = function (that, index) {
      nativeDefineProperty(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset(offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return fromList(TypedArrayConstructor, data);
        } else {
          return typedArrayFrom.call(TypedArrayConstructor, data);
        }
        setInternalState(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
      TypedArrayConstructor = wrapper(function (that, data, typedArrayOffset, $length) {
        anInstance(that, TypedArrayConstructor, CONSTRUCTOR_NAME);
        if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
        if (isArrayBuffer(data)) return $length !== undefined
          ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)
          : typedArrayOffset !== undefined
            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))
            : new NativeTypedArrayConstructor(data);
        if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
        return typedArrayFrom.call(TypedArrayConstructor, data);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      arrayForEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) hide(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }

    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      hide(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }

    if (TYPED_ARRAY_TAG) hide(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);

    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

    $export({
      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS
    }, exported);

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      hide(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      hide(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }

    setSpecies(CONSTRUCTOR_NAME);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-from.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-from.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-iterator-method.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array-iterator-method.js");
var bind = __webpack_require__(/*! ../internals/bind-context */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/bind-context.js");
var aTypedArrayConstructor = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js").aTypedArrayConstructor;

module.exports = function from(source /* , mapfn, thisArg */) {
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var i, length, result, step, iterator;
  if (iteratorMethod != undefined && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = iteratorMethod.call(O);
    O = [];
    while (!(step = iterator.next()).done) {
      O.push(step.value);
    }
  }
  if (mapping && argumentsLength > 2) {
    mapfn = bind(mapfn, arguments[2], 2);
  }
  length = toLength(O.length);
  result = new (aTypedArrayConstructor(this))(length);
  for (i = 0; length > i; i++) {
    result[i] = mapping ? mapfn(O[i], i) : O[i];
  }
  return result;
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js":
/*!****************************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js ***!
  \****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable no-new */
var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/check-correctness-of-iteration.js");
var NATIVE_ARRAY_BUFFER_VIEWS = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER_VIEWS;
var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;

module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
  Int8Array(1);
}) || !fails(function () {
  new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array();
  new Int8Array(null);
  new Int8Array(1.5);
  new Int8Array(iterable);
}, true) || fails(function () {
  // Safari 11 bug
  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js":
/*!************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + postfix).toString(36));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/user-agent.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/user-agent.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-set-prototype-of-arguments.js":
/*!********************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-set-prototype-of-arguments.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");

module.exports = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) {
    throw TypeError("Can't set " + String(proto) + ' as a prototype');
  }
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-string-method-arguments.js":
/*!*****************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-string-method-arguments.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) {
    throw TypeError('String.prototype.' + NAME + " doesn't accept regex");
  } return String(requireObjectCoercible(that));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/webkit-string-pad-bug.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/webkit-string-pad-bug.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// https://github.com/zloirock/core-js/issues/280
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/user-agent.js");

// eslint-disable-next-line unicorn/no-unsafe-regex
module.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(/*! ../internals/shared */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js")('wks');
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js");
var Symbol = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Symbol;
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-symbol.js");

module.exports = function (name) {
  return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]
    || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/whitespaces.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/whitespaces.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// a string of all valid unicode whitespaces
// eslint-disable-next-line max-len
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/wrapped-well-known-symbol.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/wrapped-well-known-symbol.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js");


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array-buffer.slice.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array-buffer.slice.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var nativeArrayBufferSlice = ArrayBuffer.prototype.slice;

var INCORRECT_SLICE = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  return !new ArrayBuffer(2).slice(1, undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-arraybuffer.prototype.slice
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {
  slice: function slice(start, end) {
    if (nativeArrayBufferSlice !== undefined && end === undefined) {
      return nativeArrayBufferSlice.call(anObject(this), start); // FF fix
    }
    var length = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
    var viewSource = new DataView(this);
    var viewTarget = new DataView(result);
    var index = 0;
    while (first < fin) {
      viewTarget.setUint8(index++, viewSource.getUint8(first++));
    } return result;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.concat.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.concat.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js");
var IS_CONCAT_SPREADABLE = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';

var IS_CONCAT_SPREADABLE_SUPPORT = !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js")('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.github.io/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: FORCED }, {
  concat: function concat(arg) { // eslint-disable-line no-unused-vars
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.copy-within.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.copy-within.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Array.prototype.copyWithin` method
// https://tc39.github.io/ecma262/#sec-array.prototype.copywithin
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true }, {
  copyWithin: __webpack_require__(/*! ../internals/array-copy-within */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-copy-within.js")
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")('copyWithin');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.fill.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.fill.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Array.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-array.prototype.fill
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true }, { fill: __webpack_require__(/*! ../internals/array-fill */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-fill.js") });

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")('fill');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.filter.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.filter.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalFilter = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(2);

var SPECIES_SUPPORT = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js")('filter');

// `Array.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-array.prototype.filter
// with adding support of @@species
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return internalFilter(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.find-index.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.find-index.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalFindIndex = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(6);
var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-array.prototype.findindex
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return internalFindIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")(FIND_INDEX);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.find.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.find.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalFind = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(5);
var FIND = 'find';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.github.io/ecma262/#sec-array.prototype.find
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  find: function find(callbackfn /* , that = undefined */) {
    return internalFind(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")(FIND);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.flat-map.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.flat-map.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flatMap` method
// https://github.com/tc39/proposal-flatMap
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true }, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A;
    aFunction(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.flat.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.flat.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flat` method
// https://github.com/tc39/proposal-flatMap
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true }, {
  flat: function flat(/* depthArg = 1 */) {
    var depthArg = arguments[0];
    var O = toObject(this);
    var sourceLen = toLength(O.length);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toInteger(depthArg));
    return A;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.from.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.from.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var INCORRECT_ITERATION = !__webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/check-correctness-of-iteration.js")(function (iterable) {
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.github.io/ecma262/#sec-array.from
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: __webpack_require__(/*! ../internals/array-from */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-from.js")
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.includes.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.includes.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalIncludes = __webpack_require__(/*! ../internals/array-includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js")(true);

// `Array.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-array.prototype.includes
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return internalIncludes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")('includes');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.index-of.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.index-of.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalIndexOf = __webpack_require__(/*! ../internals/array-includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js")(false);
var nativeIndexOf = [].indexOf;

var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var SLOPPY_METHOD = __webpack_require__(/*! ../internals/sloppy-array-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/sloppy-array-method.js")('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.indexof
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || SLOPPY_METHOD }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? nativeIndexOf.apply(this, arguments) || 0
      : internalIndexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.iterator.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.iterator.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-iterator.js");
var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.last-index-of.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.last-index-of.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-last-index-of.js");

// `Array.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-array.prototype.lastindexof
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: arrayLastIndexOf !== [].lastIndexOf }, {
  lastIndexOf: arrayLastIndexOf
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.map.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.map.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalMap = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(1);

var SPECIES_SUPPORT = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js")('map');

// `Array.prototype.map` method
// https://tc39.github.io/ecma262/#sec-array.prototype.map
// with adding support of @@species
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return internalMap(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.of.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.of.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");

var ISNT_GENERIC = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
});

// `Array.of` method
// https://tc39.github.io/ecma262/#sec-array.of
// WebKit Array.of isn't generic
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {
  of: function of(/* ...args */) {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(argumentsLength);
    while (argumentsLength > index) createProperty(result, index, arguments[index++]);
    result.length = argumentsLength;
    return result;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.reverse.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.reverse.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js");
var nativeReverse = [].reverse;
var test = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {
  reverse: function reverse() {
    if (isArray(this)) this.length = this.length;
    return nativeReverse.call(this);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.slice.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.slice.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");
var SPECIES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('species');
var nativeSlice = [].slice;
var max = Math.max;

var SPECIES_SUPPORT = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js")('slice');

// `Array.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.sort.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.sort.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var nativeSort = [].sort;
var test = [1, 2, 3];

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var SLOPPY_METHOD = __webpack_require__(/*! ../internals/sloppy-array-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/sloppy-array-method.js")('sort');

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || SLOPPY_METHOD;

// `Array.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-array.prototype.sort
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? nativeSort.call(toObject(this))
      : nativeSort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.species.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.species.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Array[@@species]` getter
// https://tc39.github.io/ecma262/#sec-get-array-@@species
__webpack_require__(/*! ../internals/set-species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js")('Array');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.splice.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.splice.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-species-create.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");
var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

var SPECIES_SUPPORT = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-method-has-species-support.js")('splice');

// `Array.prototype.splice` method
// https://tc39.github.io/ecma262/#sec-array.prototype.splice
// with adding support of @@species
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Array', proto: true, forced: !SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = toLength(O.length);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toInteger(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.unscopables.flat-map.js":
/*!************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.unscopables.flat-map.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")('flatMap');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.unscopables.flat.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.unscopables.flat.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
__webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/add-to-unscopables.js")('flat');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.date.to-primitive.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.date.to-primitive.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var TO_PRIMITIVE = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('toPrimitive');
var dateToPrimitive = __webpack_require__(/*! ../internals/date-to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/date-to-primitive.js");
var DatePrototype = Date.prototype;

// `Date.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-date.prototype-@@toprimitive
if (!(TO_PRIMITIVE in DatePrototype)) hide(DatePrototype, TO_PRIMITIVE, dateToPrimitive);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.function.has-instance.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.function.has-instance.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var HAS_INSTANCE = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('hasInstance');
var FunctionPrototype = Function.prototype;

// `Function.prototype[@@hasInstance]` method
// https://tc39.github.io/ecma262/#sec-function.prototype-@@hasinstance
if (!(HAS_INSTANCE in FunctionPrototype)) {
  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, { value: function (O) {
    if (typeof this != 'function' || !isObject(O)) return false;
    if (!isObject(this.prototype)) return O instanceof this;
    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
    while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
    return false;
  } });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.json.to-string-tag.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.json.to-string-tag.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// JSON[@@toStringTag] property
// https://tc39.github.io/ecma262/#sec-json-@@tostringtag
__webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js")(__webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").JSON, 'JSON', true);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.map.js":
/*!*************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.map.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// `Map` constructor
// https://tc39.github.io/ecma262/#sec-map-objects
module.exports = __webpack_require__(/*! ../internals/collection */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection.js")('Map', function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, __webpack_require__(/*! ../internals/collection-strong */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-strong.js"), true);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.acosh.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.acosh.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var log1p = __webpack_require__(/*! ../internals/math-log1p */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-log1p.js");
var nativeAcosh = Math.acosh;
var log = Math.log;
var sqrt = Math.sqrt;
var LN2 = Math.LN2;

var FORCED = !nativeAcosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  || Math.floor(nativeAcosh(Number.MAX_VALUE)) != 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  || nativeAcosh(Infinity) != Infinity;

// `Math.acosh` method
// https://tc39.github.io/ecma262/#sec-math.acosh
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true, forced: FORCED }, {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? log(x) + LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.asinh.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.asinh.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeAsinh = Math.asinh;
var log = Math.log;
var sqrt = Math.sqrt;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));
}

// `Math.asinh` method
// https://tc39.github.io/ecma262/#sec-math.asinh
// Tor Browser bug: Math.asinh(0) -> -0
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true, forced: !(nativeAsinh && 1 / nativeAsinh(0) > 0) }, {
  asinh: asinh
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.atanh.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.atanh.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeAtanh = Math.atanh;
var log = Math.log;

// `Math.atanh` method
// https://tc39.github.io/ecma262/#sec-math.atanh
// Tor Browser bug: Math.atanh(-0) -> 0
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true, forced: !(nativeAtanh && 1 / nativeAtanh(-0) < 0) }, {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.cbrt.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.cbrt.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-sign.js");
var abs = Math.abs;
var pow = Math.pow;

// `Math.cbrt` method
// https://tc39.github.io/ecma262/#sec-math.cbrt
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  cbrt: function cbrt(x) {
    return sign(x = +x) * pow(abs(x), 1 / 3);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.clz32.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.clz32.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var floor = Math.floor;
var log = Math.log;
var LOG2E = Math.LOG2E;

// `Math.clz32` method
// https://tc39.github.io/ecma262/#sec-math.clz32
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - floor(log(x + 0.5) * LOG2E) : 32;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.cosh.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.cosh.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-expm1.js");
var nativeCosh = Math.cosh;
var abs = Math.abs;
var E = Math.E;

// `Math.cosh` method
// https://tc39.github.io/ecma262/#sec-math.cosh
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true, forced: !nativeCosh || nativeCosh(710) === Infinity }, {
  cosh: function cosh(x) {
    var t = expm1(abs(x) - 1) + 1;
    return (t + 1 / (t * E * E)) * (E / 2);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.expm1.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.expm1.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var expm1Implementation = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-expm1.js");

// `Math.expm1` method
// https://tc39.github.io/ecma262/#sec-math.expm1
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true, forced: expm1Implementation != Math.expm1 }, {
  expm1: expm1Implementation
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.fround.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.fround.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Math.fround` method
// https://tc39.github.io/ecma262/#sec-math.fround
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, { fround: __webpack_require__(/*! ../internals/math-fround */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-fround.js") });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.hypot.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.hypot.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var abs = Math.abs;
var sqrt = Math.sqrt;

// `Math.hypot` method
// https://tc39.github.io/ecma262/#sec-math.hypot
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * sqrt(sum);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log10.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log10.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var log = Math.log;
var LOG10E = Math.LOG10E;

// `Math.log10` method
// https://tc39.github.io/ecma262/#sec-math.log10
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  log10: function log10(x) {
    return log(x) * LOG10E;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log1p.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log1p.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Math.log1p` method
// https://tc39.github.io/ecma262/#sec-math.log1p
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, { log1p: __webpack_require__(/*! ../internals/math-log1p */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-log1p.js") });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log2.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.log2.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var log = Math.log;
var LN2 = Math.LN2;

// `Math.log2` method
// https://tc39.github.io/ecma262/#sec-math.log2
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  log2: function log2(x) {
    return log(x) / LN2;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.sign.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.sign.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Math.sign` method
// https://tc39.github.io/ecma262/#sec-math.sign
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, { sign: __webpack_require__(/*! ../internals/math-sign */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-sign.js") });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.sinh.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.sinh.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-expm1.js");
var abs = Math.abs;
var exp = Math.exp;
var E = Math.E;

var FORCED = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  return Math.sinh(-2e-17) != -2e-17;
});

// `Math.sinh` method
// https://tc39.github.io/ecma262/#sec-math.sinh
// V8 near Chromium 38 has a problem with very small numbers
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true, forced: FORCED }, {
  sinh: function sinh(x) {
    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.tanh.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.tanh.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/math-expm1.js");
var exp = Math.exp;

// `Math.tanh` method
// https://tc39.github.io/ecma262/#sec-math.tanh
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.to-string-tag.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.to-string-tag.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Math[@@toStringTag] property
// https://tc39.github.io/ecma262/#sec-math-@@tostringtag
__webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js")(Math, 'Math', true);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.trunc.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.math.trunc.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.github.io/ecma262/#sec-math.trunc
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Math', stat: true }, {
  trunc: function trunc(it) {
    return (it > 0 ? floor : ceil)(it);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.constructor.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.constructor.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/inherit-if-required.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js").f;
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var internalStringTrim = __webpack_require__(/*! ../internals/string-trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js");
var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;

// Opera ~12 has broken Object#toString
var BROKEN_CLASSOF = classof(__webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js")(NumberPrototype)) == NUMBER;
var NATIVE_TRIM = 'trim' in String.prototype;

// `ToNumber` abstract operation
// https://tc39.github.io/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  var first, third, radix, maxCode, digits, length, i, code;
  if (typeof it == 'string' && it.length > 2) {
    it = NATIVE_TRIM ? it.trim() : internalStringTrim(it, 3);
    first = it.charCodeAt(0);
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = it.slice(2);
      length = digits.length;
      for (i = 0; i < length; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.github.io/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof NumberWrapper
      // check on 1..constructor(foo) case
      && (BROKEN_CLASSOF ? fails(function () { NumberPrototype.valueOf.call(that); }) : classof(that) != NUMBER)
        ? inheritIfRequired(new NativeNumber(toNumber(it)), that, NumberWrapper) : toNumber(it);
  };
  for (var keys = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js") ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(NativeNumber, key = keys[j]) && !has(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js")(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.epsilon.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.epsilon.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Number.EPSILON` constant
// https://tc39.github.io/ecma262/#sec-number.epsilon
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true }, { EPSILON: Math.pow(2, -52) });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.is-integer.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.is-integer.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Number.isInteger` method
// https://tc39.github.io/ecma262/#sec-number.isinteger
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true }, {
  isInteger: __webpack_require__(/*! ../internals/is-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-integer.js")
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.is-safe-integer.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.is-safe-integer.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isInteger = __webpack_require__(/*! ../internals/is-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-integer.js");
var abs = Math.abs;

// `Number.isSafeInteger` method
// https://tc39.github.io/ecma262/#sec-number.issafeinteger
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true }, {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1FFFFFFFFFFFFF;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.max-safe-integer.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.max-safe-integer.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Number.MAX_SAFE_INTEGER` constant
// https://tc39.github.io/ecma262/#sec-number.max_safe_integer
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true }, { MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.min-safe-integer.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.min-safe-integer.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Number.MIN_SAFE_INTEGER` constant
// https://tc39.github.io/ecma262/#sec-number.min_safe_integer
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true }, { MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.parse-float.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.parse-float.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parseFloat = __webpack_require__(/*! ../internals/parse-float */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-float.js");

// `Number.parseFloat` method
// https://tc39.github.io/ecma262/#sec-number.parseFloat
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true, forced: Number.parseFloat != parseFloat }, {
  parseFloat: parseFloat
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.parse-int.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.parse-int.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parseInt = __webpack_require__(/*! ../internals/parse-int */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-int.js");

// `Number.parseInt` method
// https://tc39.github.io/ecma262/#sec-number.parseint
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', stat: true, forced: Number.parseInt != parseInt }, {
  parseInt: parseInt
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.to-fixed.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.number.to-fixed.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/this-number-value.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-repeat.js");
var nativeToFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};

var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};

var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call('0', 7 - t.length) + t;
    }
  } return s;
};

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

// `Number.prototype.toFixed` method
// https://tc39.github.io/ecma262/#sec-number.prototype.tofixed
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Number', proto: true, forced: nativeToFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  // V8 ~ Android 4.3-
  nativeToFixed.call({});
}) }, {
  toFixed: function toFixed(fractionDigits) {
    var x = thisNumberValue(this);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = '0';
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call('0', f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call('0', f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.assign.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.assign.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var assign = __webpack_require__(/*! ../internals/object-assign */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.github.io/ecma262/#sec-object.assign
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: Object.assign !== assign }, { assign: assign });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.define-getter.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.define-getter.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");

// `Object.prototype.__defineGetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__defineGetter__
if (__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js")) {
  __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', proto: true, forced: FORCED }, {
    __defineGetter__: function __defineGetter__(P, getter) {
      definePropertyModule.f(toObject(this), P, { get: aFunction(getter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.define-setter.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.define-setter.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");

// `Object.prototype.__defineSetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__defineSetter__
if (__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js")) {
  __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', proto: true, forced: FORCED }, {
    __defineSetter__: function __defineSetter__(P, setter) {
      definePropertyModule.f(toObject(this), P, { set: aFunction(setter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.entries.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.entries.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectToArray = __webpack_require__(/*! ../internals/object-to-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-array.js");

// `Object.entries` method
// https://tc39.github.io/ecma262/#sec-object.entries
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return objectToArray(O, true);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.freeze.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.freeze.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var onFreeze = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js").onFreeze;
var nativeFreeze = Object.freeze;
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js");
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeFreeze(1); });

// `Object.freeze` method
// https://tc39.github.io/ecma262/#sec-object.freeze
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  freeze: function freeze(it) {
    return nativeFreeze && isObject(it) ? nativeFreeze(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.from-entries.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.from-entries.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");

// `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true }, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function (k, v) {
      createProperty(obj, k, v);
    }, undefined, true);
    return obj;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-descriptor.js":
/*!********************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-descriptor.js ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var nativeGetOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-descriptors.js":
/*!*********************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-descriptors.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/own-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property.js");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, descriptor;
    while (keys.length > i) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[i++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-names.js":
/*!***************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-own-property-names.js ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nativeGetOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names-external.js").f;
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { Object.getOwnPropertyNames(1); });

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  getOwnPropertyNames: nativeGetOwnPropertyNames
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-prototype-of.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.get-prototype-of.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var nativeGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-prototype-getter.js");
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({
  target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-extensible.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-extensible.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var nativeIsExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeIsExtensible(1); });

// `Object.isExtensible` method
// https://tc39.github.io/ecma262/#sec-object.isextensible
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  isExtensible: function isExtensible(it) {
    return isObject(it) ? nativeIsExtensible ? nativeIsExtensible(it) : true : false;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-frozen.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-frozen.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var nativeIsFrozen = Object.isFrozen;
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeIsFrozen(1); });

// `Object.isFrozen` method
// https://tc39.github.io/ecma262/#sec-object.isfrozen
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  isFrozen: function isFrozen(it) {
    return isObject(it) ? nativeIsFrozen ? nativeIsFrozen(it) : false : true;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-sealed.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.is-sealed.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var nativeIsSealed = Object.isSealed;
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeIsSealed(1); });

// `Object.isSealed` method
// https://tc39.github.io/ecma262/#sec-object.issealed
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  isSealed: function isSealed(it) {
    return isObject(it) ? nativeIsSealed ? nativeIsSealed(it) : false : true;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.keys.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.keys.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var nativeKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js");
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.lookup-getter.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.lookup-getter.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");

// `Object.prototype.__lookupGetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__lookupGetter__
if (__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js")) {
  __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject(this);
      var key = toPrimitive(P, true);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.get;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.lookup-setter.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.lookup-setter.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var FORCED = __webpack_require__(/*! ../internals/forced-object-prototype-accessors-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-object-prototype-accessors-methods.js");

// `Object.prototype.__lookupSetter__` method
// https://tc39.github.io/ecma262/#sec-object.prototype.__lookupSetter__
if (__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js")) {
  __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject(this);
      var key = toPrimitive(P, true);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.set;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.prevent-extensions.js":
/*!***********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.prevent-extensions.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var onFreeze = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js").onFreeze;
var nativePreventExtensions = Object.preventExtensions;
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js");
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativePreventExtensions(1); });

// `Object.preventExtensions` method
// https://tc39.github.io/ecma262/#sec-object.preventextensions
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  preventExtensions: function preventExtensions(it) {
    return nativePreventExtensions && isObject(it) ? nativePreventExtensions(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.seal.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.seal.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var onFreeze = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js").onFreeze;
var nativeSeal = Object.seal;
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js");
var FAILS_ON_PRIMITIVES = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { nativeSeal(1); });

// `Object.seal` method
// https://tc39.github.io/ecma262/#sec-object.seal
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  seal: function seal(it) {
    return nativeSeal && isObject(it) ? nativeSeal(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.set-prototype-of.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.set-prototype-of.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true }, {
  setPrototypeOf: __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js")
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.to-string.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.to-string.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toString = __webpack_require__(/*! ../internals/object-to-string */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-string.js");
var ObjectPrototype = Object.prototype;

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
if (toString !== ObjectPrototype.toString) {
  __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js")(ObjectPrototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.values.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.object.values.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectToArray = __webpack_require__(/*! ../internals/object-to-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-to-array.js");

// `Object.values` method
// https://tc39.github.io/ecma262/#sec-object.values
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Object', stat: true }, {
  values: function values(O) {
    return objectToArray(O);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.parse-float.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.parse-float.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parseFloatImplementation = __webpack_require__(/*! ../internals/parse-float */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-float.js");

// `parseFloat` method
// https://tc39.github.io/ecma262/#sec-parsefloat-string
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ global: true, forced: parseFloat != parseFloatImplementation }, {
  parseFloat: parseFloatImplementation
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.parse-int.js":
/*!*******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.parse-int.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var parseIntImplementation = __webpack_require__(/*! ../internals/parse-int */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/parse-int.js");

// `parseInt` method
// https://tc39.github.io/ecma262/#sec-parseint-string-radix
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ global: true, forced: parseInt != parseIntImplementation }, {
  parseInt: parseIntImplementation
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.promise.finally.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.promise.finally.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-built-in.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/promise-resolve.js");

// `Promise.prototype.finally` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.finally
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Promise', proto: true, real: true }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.promise.js":
/*!*****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.promise.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var PROMISE = 'Promise';
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var $export = __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-instance.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/classof-raw.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/iterate.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/check-correctness-of-iteration.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var task = __webpack_require__(/*! ../internals/task */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/task.js").set;
var microtask = __webpack_require__(/*! ../internals/microtask */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/microtask.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/promise-resolve.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/host-report-errors.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/perform.js");
var userAgent = __webpack_require__(/*! ../internals/user-agent */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/user-agent.js");
var SPECIES = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('species');
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js");
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var PromiseConstructor = global[PROMISE];
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var $fetch = global.fetch;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var IS_NODE = classof(process) == 'process';
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var Internal, OwnPromiseCapability, PromiseWrapper;

var FORCED = isForced(PROMISE, function () {
  // correct subclassing with @@species support
  var promise = PromiseConstructor.resolve(1);
  var empty = function () { /* empty */ };
  var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {
    exec(empty, empty);
  };
  // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  return !((IS_NODE || typeof PromiseRejectionEvent == 'function')
    && (!IS_PURE || promise['finally'])
    && promise.then(empty) instanceof FakePromise
    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
    // we can't detect it synchronously, so just check versions
    && v8.indexOf('6.6') !== 0
    && userAgent.indexOf('Chrome/66') === -1);
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (promise, state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
            state.rejection = HANDLED;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(promise, state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (handler = global['on' + name]) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (promise, state) {
  task.call(global, function () {
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (promise, state) {
  task.call(global, function () {
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, promise, state, unwrap) {
  return function (value) {
    fn(promise, state, value, unwrap);
  };
};

var internalReject = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(promise, state, true);
};

var internalResolve = function (promise, state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          then.call(value,
            bind(internalResolve, promise, wrapper, state),
            bind(internalReject, promise, wrapper, state)
          );
        } catch (error) {
          internalReject(promise, wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(promise, state, false);
    }
  } catch (error) {
    internalReject(promise, { done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, this, state), bind(internalReject, this, state));
    } catch (error) {
      internalReject(this, state, error);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = __webpack_require__(/*! ../internals/redefine-all */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js")(PromiseConstructor.prototype, {
    // `Promise.prototype.then` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(this, state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, promise, state);
    this.reject = bind(internalReject, promise, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  // wrap fetch result
  if (!IS_PURE && typeof $fetch == 'function') $export({ global: true, enumerable: true, forced: true }, {
    // eslint-disable-next-line no-unused-vars
    fetch: function fetch(input) {
      return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
    }
  });
}

$export({ global: true, wrap: true, forced: FORCED }, { Promise: PromiseConstructor });

__webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js")(PromiseConstructor, PROMISE, false, true);
__webpack_require__(/*! ../internals/set-species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js")(PROMISE);

PromiseWrapper = __webpack_require__(/*! ../internals/path */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/path.js")[PROMISE];

// statics
$export({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.github.io/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});

$export({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.github.io/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$export({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.github.io/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.github.io/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      iterate(iterable, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.apply.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.apply.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var nativeApply = (__webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Reflect || {}).apply;
var functionApply = Function.apply;

// MS Edge argumentsList argument is optional
var OPTIONAL_ARGUMENTS_LIST = !__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  nativeApply(function () { /* empty */ });
});

// `Reflect.apply` method
// https://tc39.github.io/ecma262/#sec-reflect.apply
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true, forced: OPTIONAL_ARGUMENTS_LIST }, {
  apply: function apply(target, thisArgument, argumentsList) {
    aFunction(target);
    anObject(argumentsList);
    return nativeApply
      ? nativeApply(target, thisArgument, argumentsList)
      : functionApply.call(target, thisArgument, argumentsList);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.construct.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.construct.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var create = __webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js");
var aFunction = __webpack_require__(/*! ../internals/a-function */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/a-function.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/function-bind.js");
var nativeConstruct = (__webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Reflect || {}).construct;

// `Reflect.construct` method
// https://tc39.github.io/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;

__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.define-property.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.define-property.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
var ERROR_INSTEAD_OF_FALSE = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(definePropertyModule.f({}, 1, { value: 1 }), 1, { value: 2 });
});

// `Reflect.defineProperty` method
// https://tc39.github.io/ecma262/#sec-reflect.defineproperty
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true, forced: ERROR_INSTEAD_OF_FALSE, sham: !DESCRIPTORS }, {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      definePropertyModule.f(target, propertyKey, attributes);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.delete-property.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.delete-property.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getOwnPropertyDescriptor = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js").f;
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");

// `Reflect.deleteProperty` method
// https://tc39.github.io/ecma262/#sec-reflect.deleteproperty
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);
    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js":
/*!*********************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js ***!
  \*********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");

// `Reflect.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-reflect.getownpropertydescriptor
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get-prototype-of.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get-prototype-of.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-prototype-getter.js");

// `Reflect.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-reflect.getprototypeof
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(target) {
    return objectGetPrototypeOf(anObject(target));
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.get.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");

// `Reflect.get` method
// https://tc39.github.io/ecma262/#sec-reflect.get
function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject(target) === receiver) return target[propertyKey];
  if (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey)) return has(descriptor, 'value')
    ? descriptor.value
    : descriptor.get === undefined
      ? undefined
      : descriptor.get.call(receiver);
  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);
}

__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, { get: get });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.has.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.has.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Reflect.has` method
// https://tc39.github.io/ecma262/#sec-reflect.has
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.is-extensible.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.is-extensible.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var objectIsExtensible = Object.isExtensible;

// `Reflect.isExtensible` method
// https://tc39.github.io/ecma262/#sec-reflect.isextensible
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return objectIsExtensible ? objectIsExtensible(target) : true;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.own-keys.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.own-keys.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Reflect.ownKeys` method
// https://tc39.github.io/ecma262/#sec-reflect.ownkeys
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, { ownKeys: __webpack_require__(/*! ../internals/own-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/own-keys.js") });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.prevent-extensions.js":
/*!************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.prevent-extensions.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/freezing.js");

// `Reflect.preventExtensions` method
// https://tc39.github.io/ecma262/#sec-reflect.preventextensions
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true, sham: !FREEZING }, {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      var objectPreventExtensions = getBuiltIn('Object', 'preventExtensions');
      if (objectPreventExtensions) objectPreventExtensions(target);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.set-prototype-of.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.set-prototype-of.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var objectSetPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-set-prototype-of.js");
var validateSetPrototypeOfArguments = __webpack_require__(/*! ../internals/validate-set-prototype-of-arguments */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-set-prototype-of-arguments.js");

// `Reflect.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-reflect.setprototypeof
if (objectSetPrototypeOf) __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    validateSetPrototypeOfArguments(target, proto);
    try {
      objectSetPrototypeOf(target, proto);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.set.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.reflect.set.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-prototype-of.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");

// `Reflect.set` method
// https://tc39.github.io/ecma262/#sec-reflect.set
function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDescriptor = getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  var existingDescriptor, prototype;
  if (!ownDescriptor) {
    if (isObject(prototype = getPrototypeOf(target))) {
      return set(prototype, propertyKey, V, receiver);
    }
    ownDescriptor = createPropertyDescriptor(0);
  }
  if (has(ownDescriptor, 'value')) {
    if (ownDescriptor.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      definePropertyModule.f(receiver, propertyKey, existingDescriptor);
    } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));
    return true;
  }
  return ownDescriptor.set === undefined ? false : (ownDescriptor.set.call(receiver, V), true);
}

__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'Reflect', stat: true }, { set: set });


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.constructor.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.constructor.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var MATCH = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('match');
var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-forced.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/inherit-if-required.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var getOwnPropertyNames = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js").f;
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-regexp.js");
var getFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-flags.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var FORCED = isForced('RegExp', DESCRIPTORS && (!CORRECT_NEW || fails(function () {
  re2[MATCH] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
})));

// `RegExp` constructor
// https://tc39.github.io/ecma262/#sec-regexp-constructor
if (FORCED) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = this instanceof RegExpWrapper;
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    return !thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined ? pattern
      : inheritIfRequired(CORRECT_NEW
        ? new NativeRegExp(patternIsRegExp && !flagsAreUndefined ? pattern.source : pattern, flags)
        : NativeRegExp((patternIsRegExp = pattern instanceof RegExpWrapper)
          ? pattern.source
          : pattern, patternIsRegExp && flagsAreUndefined ? getFlags.call(pattern) : flags)
      , thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);
  };
  var proxy = function (key) {
    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
      configurable: true,
      get: function () { return NativeRegExp[key]; },
      set: function (it) { NativeRegExp[key] = it; }
    });
  };
  var keys = getOwnPropertyNames(NativeRegExp);
  var i = 0;
  while (i < keys.length) proxy(keys[i++]);
  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  redefine(global, 'RegExp', RegExpWrapper);
}

// https://tc39.github.io/ecma262/#sec-get-regexp-@@species
__webpack_require__(/*! ../internals/set-species */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-species.js")('RegExp');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.flags.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.flags.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `RegExp.prototype.flags` getter
// https://tc39.github.io/ecma262/#sec-get-regexp.prototype.flags
if (__webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js") && /./g.flags != 'g') {
  __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f(RegExp.prototype, 'flags', {
    configurable: true,
    get: __webpack_require__(/*! ../internals/regexp-flags */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-flags.js")
  });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.to-string.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.regexp.to-string.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var flags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-flags.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var TO_STRING = 'toString';
var nativeToString = /./[TO_STRING];

var NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = nativeToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js")(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? flags.call(R) : undefined);
  }, { unsafe: true });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.set.js":
/*!*************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.set.js ***!
  \*************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// `Set` constructor
// https://tc39.github.io/ecma262/#sec-set-objects
module.exports = __webpack_require__(/*! ../internals/collection */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection.js")('Set', function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, __webpack_require__(/*! ../internals/collection-strong */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-strong.js"));


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.code-point-at.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.code-point-at.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalCodePointAt = __webpack_require__(/*! ../internals/string-at */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-at.js");

// `String.prototype.codePointAt` method
// https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true }, {
  codePointAt: function codePointAt(pos) {
    return internalCodePointAt(this, pos);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.ends-with.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.ends-with.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var validateArguments = __webpack_require__(/*! ../internals/validate-string-method-arguments */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-string-method-arguments.js");
var ENDS_WITH = 'endsWith';
var nativeEndsWith = ''[ENDS_WITH];
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-is-regexp-logic.js")(ENDS_WITH);

// `String.prototype.endsWith` method
// https://tc39.github.io/ecma262/#sec-string.prototype.endswith
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = validateArguments(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = String(searchString);
    return nativeEndsWith
      ? nativeEndsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.from-code-point.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.from-code-point.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-absolute-index.js");
var fromCharCode = String.fromCharCode;
var nativeFromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
var INCORRECT_LENGTH = !!nativeFromCodePoint && nativeFromCodePoint.length != 1;

// `String.fromCodePoint` method
// https://tc39.github.io/ecma262/#sec-string.fromcodepoint
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var elements = [];
    var length = arguments.length;
    var i = 0;
    var code;
    while (length > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');
      elements.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00)
      );
    } return elements.join('');
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.includes.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.includes.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var validateArguments = __webpack_require__(/*! ../internals/validate-string-method-arguments */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-string-method-arguments.js");
var INCLUDES = 'includes';

var CORRECT_IS_REGEXP_LOGIC = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-is-regexp-logic.js")(INCLUDES);

// `String.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-string.prototype.includes
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: !CORRECT_IS_REGEXP_LOGIC }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~validateArguments(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.iterator.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.iterator.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var codePointAt = __webpack_require__(/*! ../internals/string-at */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-at.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-iterator.js");
var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = codePointAt(string, index, true);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.match.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.match.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec-abstract.js");

// @@match logic
__webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js")(
  'match',
  1,
  function (MATCH, nativeMatch, maybeCallNative) {
    return [
      // `String.prototype.match` method
      // https://tc39.github.io/ecma262/#sec-string.prototype.match
      function match(regexp) {
        var O = requireObjectCoercible(this);
        var matcher = regexp == undefined ? undefined : regexp[MATCH];
        return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
      },
      // `RegExp.prototype[@@match]` method
      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
      function (regexp) {
        var res = maybeCallNative(nativeMatch, regexp, this);
        if (res.done) return res.value;

        var rx = anObject(regexp);
        var S = String(this);

        if (!rx.global) return regExpExec(rx, S);

        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
        var A = [];
        var n = 0;
        var result;
        while ((result = regExpExec(rx, S)) !== null) {
          var matchStr = String(result[0]);
          A[n] = matchStr;
          if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
          n++;
        }
        return n === 0 ? null : A;
      }
    ];
  }
);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.pad-end.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.pad-end.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalStringPad = __webpack_require__(/*! ../internals/string-pad */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-pad.js");
var WEBKIT_BUG = __webpack_require__(/*! ../internals/webkit-string-pad-bug */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/webkit-string-pad-bug.js");

// `String.prototype.padEnd` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padend
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return internalStringPad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.pad-start.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.pad-start.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalStringPad = __webpack_require__(/*! ../internals/string-pad */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-pad.js");
var WEBKIT_BUG = __webpack_require__(/*! ../internals/webkit-string-pad-bug */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/webkit-string-pad-bug.js");

// `String.prototype.padStart` method
// https://tc39.github.io/ecma262/#sec-string.prototype.padstart
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return internalStringPad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.raw.js":
/*!********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.raw.js ***!
  \********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");

// `String.raw` method
// https://tc39.github.io/ecma262/#sec-string.raw
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', stat: true }, {
  raw: function raw(template) {
    var rawTemplate = toIndexedObject(template.raw);
    var literalSegments = toLength(rawTemplate.length);
    var argumentsLength = arguments.length;
    var elements = [];
    var i = 0;
    while (literalSegments > i) {
      elements.push(String(rawTemplate[i++]));
      if (i < argumentsLength) elements.push(String(arguments[i]));
    } return elements.join('');
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.repeat.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.repeat.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `String.prototype.repeat` method
// https://tc39.github.io/ecma262/#sec-string.prototype.repeat
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true }, {
  repeat: __webpack_require__(/*! ../internals/string-repeat */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-repeat.js")
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.replace.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.replace.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var toInteger = __webpack_require__(/*! ../internals/to-integer */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-integer.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec-abstract.js");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js")(
  'replace',
  2,
  function (REPLACE, nativeReplace, maybeCallNative) {
    return [
      // `String.prototype.replace` method
      // https://tc39.github.io/ecma262/#sec-string.prototype.replace
      function replace(searchValue, replaceValue) {
        var O = requireObjectCoercible(this);
        var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];
        return replacer !== undefined
          ? replacer.call(searchValue, O, replaceValue)
          : nativeReplace.call(String(O), searchValue, replaceValue);
      },
      // `RegExp.prototype[@@replace]` method
      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
      function (regexp, replaceValue) {
        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);
        if (res.done) return res.value;

        var rx = anObject(regexp);
        var S = String(this);

        var functionalReplace = typeof replaceValue === 'function';
        if (!functionalReplace) replaceValue = String(replaceValue);

        var global = rx.global;
        if (global) {
          var fullUnicode = rx.unicode;
          rx.lastIndex = 0;
        }
        var results = [];
        while (true) {
          var result = regExpExec(rx, S);
          if (result === null) break;

          results.push(result);
          if (!global) break;

          var matchStr = String(result[0]);
          if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        }

        var accumulatedResult = '';
        var nextSourcePosition = 0;
        for (var i = 0; i < results.length; i++) {
          result = results[i];

          var matched = String(result[0]);
          var position = max(min(toInteger(result.index), S.length), 0);
          var captures = [];
          // NOTE: This is equivalent to
          //   captures = result.slice(1).map(maybeToString)
          // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
          // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
          // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
          for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
          var namedCaptures = result.groups;
          if (functionalReplace) {
            var replacerArgs = [matched].concat(captures, position, S);
            if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
            var replacement = String(replaceValue.apply(undefined, replacerArgs));
          } else {
            replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
          }
          if (position >= nextSourcePosition) {
            accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
            nextSourcePosition = position + matched.length;
          }
        }
        return accumulatedResult + S.slice(nextSourcePosition);
      }
    ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
    function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
      var tailPos = position + matched.length;
      var m = captures.length;
      var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
      if (namedCaptures !== undefined) {
        namedCaptures = toObject(namedCaptures);
        symbols = SUBSTITUTION_SYMBOLS;
      }
      return nativeReplace.call(replacement, symbols, function (match, ch) {
        var capture;
        switch (ch.charAt(0)) {
          case '$': return '$';
          case '&': return matched;
          case '`': return str.slice(0, position);
          case "'": return str.slice(tailPos);
          case '<':
            capture = namedCaptures[ch.slice(1, -1)];
            break;
          default: // \d\d?
            var n = +ch;
            if (n === 0) return match;
            if (n > m) {
              var f = floor(n / 10);
              if (f === 0) return match;
              if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
              return match;
            }
            capture = captures[n - 1];
        }
        return capture === undefined ? '' : capture;
      });
    }
  }
);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.search.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.search.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");
var sameValue = __webpack_require__(/*! ../internals/same-value */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/same-value.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec-abstract.js");

// @@search logic
__webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js")(
  'search',
  1,
  function (SEARCH, nativeSearch, maybeCallNative) {
    return [
      // `String.prototype.search` method
      // https://tc39.github.io/ecma262/#sec-string.prototype.search
      function search(regexp) {
        var O = requireObjectCoercible(this);
        var searcher = regexp == undefined ? undefined : regexp[SEARCH];
        return searcher !== undefined ? searcher.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
      },
      // `RegExp.prototype[@@search]` method
      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
      function (regexp) {
        var res = maybeCallNative(nativeSearch, regexp, this);
        if (res.done) return res.value;

        var rx = anObject(regexp);
        var S = String(this);

        var previousLastIndex = rx.lastIndex;
        if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
        var result = regExpExec(rx, S);
        if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
        return result === null ? -1 : result.index;
      }
    ];
  }
);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.split.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.split.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-regexp.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/require-object-coercible.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/advance-string-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var callRegExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/regexp-exec.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var arrayPush = [].push;
var min = Math.min;
var MAX_UINT32 = 0xFFFFFFFF;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js")(
  'split',
  2,
  function (SPLIT, nativeSplit, maybeCallNative) {
    var internalSplit;
    if (
      'abbc'.split(/(b)*/)[1] == 'c' ||
      'test'.split(/(?:)/, -1).length != 4 ||
      'ab'.split(/(?:ab)*/).length != 2 ||
      '.'.split(/(.?)(.?)/).length != 4 ||
      '.'.split(/()()/).length > 1 ||
      ''.split(/.?/).length
    ) {
      // based on es5-shim implementation, need to rework it
      internalSplit = function (separator, limit) {
        var string = String(requireObjectCoercible(this));
        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
        if (lim === 0) return [];
        if (separator === undefined) return [string];
        // If `separator` is not a regex, use native split
        if (!isRegExp(separator)) {
          return nativeSplit.call(string, separator, lim);
        }
        var output = [];
        var flags = (separator.ignoreCase ? 'i' : '') +
                    (separator.multiline ? 'm' : '') +
                    (separator.unicode ? 'u' : '') +
                    (separator.sticky ? 'y' : '');
        var lastLastIndex = 0;
        // Make `global` and avoid `lastIndex` issues by working with a copy
        var separatorCopy = new RegExp(separator.source, flags + 'g');
        var match, lastIndex, lastLength;
        while (match = regexpExec.call(separatorCopy, string)) {
          lastIndex = separatorCopy.lastIndex;
          if (lastIndex > lastLastIndex) {
            output.push(string.slice(lastLastIndex, match.index));
            if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));
            lastLength = match[0].length;
            lastLastIndex = lastIndex;
            if (output.length >= lim) break;
          }
          if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
        }
        if (lastLastIndex === string.length) {
          if (lastLength || !separatorCopy.test('')) output.push('');
        } else output.push(string.slice(lastLastIndex));
        return output.length > lim ? output.slice(0, lim) : output;
      };
    // Chakra, V8
    } else if ('0'.split(undefined, 0).length) {
      internalSplit = function (separator, limit) {
        return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);
      };
    } else internalSplit = nativeSplit;

    return [
      // `String.prototype.split` method
      // https://tc39.github.io/ecma262/#sec-string.prototype.split
      function split(separator, limit) {
        var O = requireObjectCoercible(this);
        var splitter = separator == undefined ? undefined : separator[SPLIT];
        return splitter !== undefined
          ? splitter.call(separator, O, limit)
          : internalSplit.call(String(O), separator, limit);
      },
      // `RegExp.prototype[@@split]` method
      // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
      //
      // NOTE: This cannot be properly polyfilled in engines that don't support
      // the 'y' flag.
      function (regexp, limit) {
        var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);
        if (res.done) return res.value;

        var rx = anObject(regexp);
        var S = String(this);
        var C = speciesConstructor(rx, RegExp);

        var unicodeMatching = rx.unicode;
        var flags = (rx.ignoreCase ? 'i' : '') +
                    (rx.multiline ? 'm' : '') +
                    (rx.unicode ? 'u' : '') +
                    (SUPPORTS_Y ? 'y' : 'g');

        // ^(? + rx + ) is needed, in combination with some S slicing, to
        // simulate the 'y' flag.
        var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
        var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
        if (lim === 0) return [];
        if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
        var p = 0;
        var q = 0;
        var A = [];
        while (q < S.length) {
          splitter.lastIndex = SUPPORTS_Y ? q : 0;
          var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
          var e;
          if (
            z === null ||
            (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
          ) {
            q = advanceStringIndex(S, q, unicodeMatching);
          } else {
            A.push(S.slice(p, q));
            if (A.length === lim) return A;
            for (var i = 1; i <= z.length - 1; i++) {
              A.push(z[i]);
              if (A.length === lim) return A;
            }
            q = p = e;
          }
        }
        A.push(S.slice(p));
        return A;
      }
    ];
  },
  !SUPPORTS_Y
);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.starts-with.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.starts-with.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-length.js");
var validateArguments = __webpack_require__(/*! ../internals/validate-string-method-arguments */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/validate-string-method-arguments.js");
var STARTS_WITH = 'startsWith';
var CORRECT_IS_REGEXP_LOGIC = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/correct-is-regexp-logic.js")(STARTS_WITH);
var nativeStartsWith = ''[STARTS_WITH];

// `String.prototype.startsWith` method
// https://tc39.github.io/ecma262/#sec-string.prototype.startswith
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = validateArguments(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return nativeStartsWith
      ? nativeStartsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim-end.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim-end.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalStringTrim = __webpack_require__(/*! ../internals/string-trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js");
var FORCED = __webpack_require__(/*! ../internals/forced-string-trim-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-string-trim-method.js")('trimEnd');

var trimEnd = FORCED ? function trimEnd() {
  return internalStringTrim(this, 2);
} : ''.trimEnd;

// `String.prototype.{ trimEnd, trimRight }` methods
// https://github.com/tc39/ecmascript-string-left-right-trim
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: FORCED }, {
  trimEnd: trimEnd,
  trimRight: trimEnd
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim-start.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim-start.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalStringTrim = __webpack_require__(/*! ../internals/string-trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js");
var FORCED = __webpack_require__(/*! ../internals/forced-string-trim-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-string-trim-method.js")('trimStart');

var trimStart = FORCED ? function trimStart() {
  return internalStringTrim(this, 1);
} : ''.trimStart;

// `String.prototype.{ trimStart, trimLeft }` methods
// https://github.com/tc39/ecmascript-string-left-right-trim
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: FORCED }, {
  trimStart: trimStart,
  trimLeft: trimStart
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim.js":
/*!*********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.string.trim.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var internalStringTrim = __webpack_require__(/*! ../internals/string-trim */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/string-trim.js");
var FORCED = __webpack_require__(/*! ../internals/forced-string-trim-method */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/forced-string-trim-method.js")('trim');

// `String.prototype.trim` method
// https://tc39.github.io/ecma262/#sec-string.prototype.trim
__webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ target: 'String', proto: true, forced: FORCED }, {
  trim: function trim() {
    return internalStringTrim(this, 3);
  }
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.async-iterator.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.async-iterator.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.asyncIterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.asynciterator
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('asyncIterator');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.description.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.description.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.github.io/ecma262/#sec-symbol.prototype.description

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var defineProperty = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js").f;
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/copy-constructor-properties.js");
var NativeSymbol = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Symbol;

if (DESCRIPTORS && typeof NativeSymbol == 'function' && (!('description' in NativeSymbol.prototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : String(arguments[0]);
    var result = this instanceof SymbolWrapper
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };
  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  var symbolPrototype = SymbolWrapper.prototype = NativeSymbol.prototype;
  symbolPrototype.constructor = SymbolWrapper;

  var symbolToString = symbolPrototype.toString;
  var native = String(NativeSymbol('test')) == 'Symbol(test)';
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  defineProperty(symbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = isObject(this) ? this.valueOf() : this;
      var string = symbolToString.call(symbol);
      if (has(EmptyStringDescriptionStore, symbol)) return '';
      var desc = native ? string.slice(7, -1) : string.replace(regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js")({ global: true, forced: true }, { Symbol: SymbolWrapper });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.has-instance.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.has-instance.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.hasInstance` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.hasinstance
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('hasInstance');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js":
/*!*************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.isconcatspreadable
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('isConcatSpreadable');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.iterator.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.iterator.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.iterator` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.iterator
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('iterator');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.js":
/*!****************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var has = __webpack_require__(/*! ../internals/has */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/has.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/descriptors.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-pure.js");
var $export = __webpack_require__(/*! ../internals/export */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/export.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hidden-keys.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/set-to-string-tag.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/uid.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/wrapped-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/wrapped-well-known-symbol.js");
var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js");
var enumKeys = __webpack_require__(/*! ../internals/enum-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/enum-keys.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-array.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-indexed-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/to-primitive.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/create-property-descriptor.js");
var nativeObjectCreate = __webpack_require__(/*! ../internals/object-create */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-create.js");
var getOwnPropertyNamesExternal = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names-external.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-define-property.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-property-is-enumerable.js");
var hide = __webpack_require__(/*! ../internals/hide */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/hide.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-keys.js");
var HIDDEN = __webpack_require__(/*! ../internals/shared-key */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/shared-key.js")('hidden');
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js");
var SYMBOL = 'Symbol';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var $Symbol = global.Symbol;
var JSON = global.JSON;
var nativeJSONStringify = JSON && JSON.stringify;
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var WellKnownSymbolsStore = shared('wks');
var ObjectPrototype = Object[PROTOTYPE];
var QObject = global.QObject;
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-symbol.js");
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, key);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[key];
  nativeDefineProperty(it, key, D);
  if (ObjectPrototypeDescriptor && it !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, key, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = NATIVE_SYMBOL && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) nativeDefineProperty(it, HIDDEN, createPropertyDescriptor(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = nativeObjectCreate(D, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(it, key, D);
  } return nativeDefineProperty(it, key, D);
};

var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIndexedObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};

var $create = function create(it, P) {
  return P === undefined ? nativeObjectCreate(it) : $defineProperties(nativeObjectCreate(it), P);
};

var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = nativePropertyIsEnumerable.call(this, key = toPrimitive(key, true));
  if (this === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIndexedObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var D = nativeGetOwnPropertyDescriptor(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};

var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && !has(hiddenKeys, key)) result.push(key);
  } return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OP ? ObjectPrototypeSymbols : toIndexedObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectPrototype, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// `Symbol` constructor
// https://tc39.github.io/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-names.js").f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/object-get-own-property-symbols.js").f = $getOwnPropertySymbols;

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };
}

$export({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, { Symbol: $Symbol });

for (var wellKnownSymbols = objectKeys(WellKnownSymbolsStore), k = 0; wellKnownSymbols.length > k;) {
  defineWellKnownSymbol(wellKnownSymbols[k++]);
}

$export({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.github.io/ecma262/#sec-symbol.for
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // `Symbol.keyFor` method
  // https://tc39.github.io/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$export({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.github.io/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.github.io/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$export({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.github.io/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// `JSON.stringify` method behavior with symbols
// https://tc39.github.io/ecma262/#sec-json.stringify
JSON && $export({ target: 'JSON', stat: true, forced: !NATIVE_SYMBOL || fails(function () {
  var symbol = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  return nativeJSONStringify([symbol]) != '[null]'
    // WebKit converts symbol values to JSON as null
    || nativeJSONStringify({ a: symbol }) != '{}'
    // V8 throws on boxed symbols
    || nativeJSONStringify(Object(symbol)) != '{}';
}) }, {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return nativeJSONStringify.apply(JSON, args);
  }
});

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@toprimitive
if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) hide($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.github.io/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.match.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.match.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.match` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.match
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('match');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.replace.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.replace.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.replace` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.replace
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('replace');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.search.js":
/*!***********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.search.js ***!
  \***********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.search` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.search
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('search');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.species.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.species.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.species` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.species
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('species');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.split.js":
/*!**********************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.split.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.split` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.split
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('split');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.to-primitive.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.to-primitive.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.toPrimitive` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.toprimitive
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('toPrimitive');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.to-string-tag.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.to-string-tag.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.toStringTag` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.tostringtag
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('toStringTag');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.unscopables.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.symbol.unscopables.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Symbol.unscopables` well-known symbol
// https://tc39.github.io/ecma262/#sec-symbol.unscopables
__webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/define-well-known-symbol.js")('unscopables');


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.copy-within.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.copy-within.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayCopyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-copy-within.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.copywithin
ArrayBufferViewCore.exportProto('copyWithin', function copyWithin(target, start /* , end */) {
  return arrayCopyWithin.call(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.every.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.every.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayEvery = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(4);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.every` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.every
ArrayBufferViewCore.exportProto('every', function every(callbackfn /* , thisArg */) {
  return arrayEvery(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.fill.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.fill.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayFill = __webpack_require__(/*! ../internals/array-fill */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-fill.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.fill` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.fill
// eslint-disable-next-line no-unused-vars
ArrayBufferViewCore.exportProto('fill', function fill(value /* , start, end */) {
  return arrayFill.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.filter.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.filter.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var arrayFilter = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(2);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;

// `%TypedArray%.prototype.filter` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.filter
ArrayBufferViewCore.exportProto('filter', function filter(callbackfn /* , thisArg */) {
  var list = arrayFilter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  var C = speciesConstructor(this, this.constructor);
  var index = 0;
  var length = list.length;
  var result = new (aTypedArrayConstructor(C))(length);
  while (length > index) result[index] = list[index++];
  return result;
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.find-index.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.find-index.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayFindIndex = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(6);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.findindex
ArrayBufferViewCore.exportProto('findIndex', function findIndex(predicate /* , thisArg */) {
  return arrayFindIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.find.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.find.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayFind = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(5);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.find` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.find
ArrayBufferViewCore.exportProto('find', function find(predicate /* , thisArg */) {
  return arrayFind(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.float32-array.js":
/*!***********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.float32-array.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Float32Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.float64-array.js":
/*!***********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.float64-array.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Float64Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.for-each.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.for-each.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayForEach = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(0);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.forEach` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.foreach
ArrayBufferViewCore.exportProto('forEach', function forEach(callbackfn /* , thisArg */) {
  arrayForEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.from.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.from.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-arrays-constructors-requires-wrappers */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-from.js");

// `%TypedArray%.from` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.from
ArrayBufferViewCore.exportStatic('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.includes.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.includes.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayIncludes = __webpack_require__(/*! ../internals/array-includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js")(true);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.includes` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.includes
ArrayBufferViewCore.exportProto('includes', function includes(searchElement /* , fromIndex */) {
  return arrayIncludes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.index-of.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.index-of.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayIndexOf = __webpack_require__(/*! ../internals/array-includes */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-includes.js")(false);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.indexof
ArrayBufferViewCore.exportProto('indexOf', function indexOf(searchElement /* , fromIndex */) {
  return arrayIndexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int16-array.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int16-array.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Int16Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int32-array.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int32-array.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Int32Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int8-array.js":
/*!********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.int8-array.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Int8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.iterator.js":
/*!******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.iterator.js ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayIterators = __webpack_require__(/*! ../modules/es.array.iterator */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.array.iterator.js");
var Uint8Array = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Uint8Array;
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var ITERATOR = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/well-known-symbol.js")('iterator');
var arrayValues = ArrayIterators.values;
var arrayKeys = ArrayIterators.keys;
var arrayEntries = ArrayIterators.entries;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportProto = ArrayBufferViewCore.exportProto;
var nativeTypedArrayIterator = Uint8Array && Uint8Array.prototype[ITERATOR];

var CORRECT_ITER_NAME = !!nativeTypedArrayIterator
  && (nativeTypedArrayIterator.name == 'values' || nativeTypedArrayIterator.name == undefined);

var typedArrayValues = function values() {
  return arrayValues.call(aTypedArray(this));
};

// `%TypedArray%.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.entries
exportProto('entries', function entries() {
  return arrayEntries.call(aTypedArray(this));
});
// `%TypedArray%.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.keys
exportProto('keys', function keys() {
  return arrayKeys.call(aTypedArray(this));
});
// `%TypedArray%.prototype.values` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.values
exportProto('values', typedArrayValues, !CORRECT_ITER_NAME);
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype-@@iterator
exportProto(ITERATOR, typedArrayValues, !CORRECT_ITER_NAME);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.join.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.join.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var arrayJoin = [].join;

// `%TypedArray%.prototype.join` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.join
// eslint-disable-next-line no-unused-vars
ArrayBufferViewCore.exportProto('join', function join(separator) {
  return arrayJoin.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.last-index-of.js":
/*!***********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.last-index-of.js ***!
  \***********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arrayLastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-last-index-of.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.lastindexof
// eslint-disable-next-line no-unused-vars
ArrayBufferViewCore.exportProto('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
  return arrayLastIndexOf.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.map.js":
/*!*************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.map.js ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;

var internalTypedArrayMap = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(1, function (O, length) {
  return new (aTypedArrayConstructor(speciesConstructor(O, O.constructor)))(length);
});

// `%TypedArray%.prototype.map` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.map
ArrayBufferViewCore.exportProto('map', function map(mapfn /* , thisArg */) {
  return internalTypedArrayMap(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.of.js":
/*!************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.of.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-arrays-constructors-requires-wrappers */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-arrays-constructors-requires-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;

// `%TypedArray%.of` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.of
ArrayBufferViewCore.exportStatic('of', function of(/* ...items */) {
  var index = 0;
  var length = arguments.length;
  var result = new (aTypedArrayConstructor(this))(length);
  while (length > index) result[index] = arguments[index++];
  return result;
}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reduce-right.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reduce-right.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var arrayReduceRight = [].reduceRight;

// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduceright
// eslint-disable-next-line no-unused-vars
ArrayBufferViewCore.exportProto('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
  return arrayReduceRight.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reduce.js":
/*!****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reduce.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var arrayReduce = [].reduce;

// `%TypedArray%.prototype.reduce` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reduce
// eslint-disable-next-line no-unused-vars
ArrayBufferViewCore.exportProto('reduce', function reduce(callbackfn /* , initialValue */) {
  return arrayReduce.apply(aTypedArray(this), arguments);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reverse.js":
/*!*****************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.reverse.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.reverse` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.reverse
ArrayBufferViewCore.exportProto('reverse', function reverse() {
  var that = this;
  var length = aTypedArray(that).length;
  var middle = Math.floor(length / 2);
  var index = 0;
  var value;
  while (index < middle) {
    value = that[index];
    that[index++] = that[--length];
    that[length] = value;
  } return that;
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.slice.js":
/*!***************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.slice.js ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/species-constructor.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var arraySlice = [].slice;

var FORCED = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () {
  // eslint-disable-next-line no-undef
  new Int8Array(1).slice();
});

// `%TypedArray%.prototype.slice` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.slice
ArrayBufferViewCore.exportProto('slice', function slice(start, end) {
  var list = arraySlice.call(aTypedArray(this), start, end);
  var C = speciesConstructor(this, this.constructor);
  var index = 0;
  var length = list.length;
  var result = new (aTypedArrayConstructor(C))(length);
  while (length > index) result[index] = list[index++];
  return result;
}, FORCED);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.some.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.some.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var arraySome = __webpack_require__(/*! ../internals/array-methods */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-methods.js")(3);
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;

// `%TypedArray%.prototype.some` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.some
ArrayBufferViewCore.exportProto('some', function some(callbackfn /* , thisArg */) {
  return arraySome(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.sort.js":
/*!**************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.sort.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var arraySort = [].sort;

// `%TypedArray%.prototype.sort` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.sort
ArrayBufferViewCore.exportProto('sort', function sort(comparefn) {
  return arraySort.call(aTypedArray(this), comparefn);
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.to-locale-string.js":
/*!**************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.to-locale-string.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Int8Array = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Int8Array;
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var arrayToLocaleString = [].toLocaleString;
var arraySlice = [].slice;

// iOS Safari 6.x fails here
var TO_LOCALE_BUG = !!Int8Array && fails(function () {
  arrayToLocaleString.call(new Int8Array(1));
});
var FORCED = fails(function () {
  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
}) || !fails(function () {
  Int8Array.prototype.toLocaleString.call([1, 2]);
});

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tolocalestring
ArrayBufferViewCore.exportProto('toLocaleString', function toLocaleString() {
  return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(aTypedArray(this)) : aTypedArray(this), arguments);
}, FORCED);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.to-string.js":
/*!*******************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.to-string.js ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Uint8Array = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js").Uint8Array;
var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype;
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/array-buffer-view-core.js");
var arrayToString = [].toString;
var arrayJoin = [].join;

if (__webpack_require__(/*! ../internals/fails */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/fails.js")(function () { arrayToString.call({}); })) {
  arrayToString = function toString() {
    return arrayJoin.call(this);
  };
}

// `%TypedArray%.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-%typedarray%.prototype.tostring
ArrayBufferViewCore.exportProto('toString', arrayToString, (Uint8ArrayPrototype || {}).toString != arrayToString);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint16-array.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint16-array.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Uint16Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint32-array.js":
/*!**********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint32-array.js ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Uint32Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint8-array.js":
/*!*********************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint8-array.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Uint8Array` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js":
/*!*****************************************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// `Uint8ClampedArray` constructor
// https://tc39.github.io/ecma262/#sec-typedarray-objects
__webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/typed-array-constructor.js")('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.weak-map.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.weak-map.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/global.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/redefine-all.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-metadata.js");
var weak = __webpack_require__(/*! ../internals/collection-weak */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-weak.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/is-object.js");
var enforceIternalState = __webpack_require__(/*! ../internals/internal-state */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/internal-state.js").enforce;
var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/native-weak-map.js");
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var isExtensible = Object.isExtensible;
var InternalWeakMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.github.io/ecma262/#sec-weakmap-constructor
var $WeakMap = module.exports = __webpack_require__(/*! ../internals/collection */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection.js")('WeakMap', wrapper, weak, true, true);

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalWeakMap = weak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.REQUIRED = true;
  var WeakMapPrototype = $WeakMap.prototype;
  var nativeDelete = WeakMapPrototype['delete'];
  var nativeHas = WeakMapPrototype.has;
  var nativeGet = WeakMapPrototype.get;
  var nativeSet = WeakMapPrototype.set;
  redefineAll(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete.call(this, key) || state.frozen['delete'](key);
      } return nativeDelete.call(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas.call(this, key) || state.frozen.has(key);
      } return nativeHas.call(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas.call(this, key) ? nativeGet.call(this, key) : state.frozen.get(key);
      } return nativeGet.call(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceIternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas.call(this, key) ? nativeSet.call(this, key, value) : state.frozen.set(key, value);
      } else nativeSet.call(this, key, value);
      return this;
    }
  });
}


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.weak-set.js":
/*!******************************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/core-js/modules/es.weak-set.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// `WeakSet` constructor
// https://tc39.github.io/ecma262/#sec-weakset-constructor
__webpack_require__(/*! ../internals/collection */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection.js")('WeakSet', function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, __webpack_require__(/*! ../internals/collection-weak */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/core-js/internals/collection-weak.js"), false, true);


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/process/browser.js":
/*!******************************************************************************!*\
  !*** /usr/local/lib/node_modules/@enact/cli/node_modules/process/browser.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/@enact/core/dispatcher/dispatcher.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/core/dispatcher/dispatcher.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.once = exports.on = exports.off = void 0;

var _curry = _interopRequireDefault(__webpack_require__(/*! ramda/src/curry */ "./node_modules/ramda/src/curry.js"));

var _listeners = __webpack_require__(/*! ./listeners */ "./node_modules/@enact/core/dispatcher/listeners.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Provides methods to add and remove global event listeners
 *
 * @module core/dispatcher
 * @exports off
 * @exports on
 * @exports once
 */

/*
 * Checks if the default target of `document` exists before returning it, otherwise returns `false`.
 *
 * @function
 *
 * @returns {Node|Boolean}
 * @memberof core/dispatcher
 * @private
 */


var getDefaultTarget = function getDefaultTarget() {
  return typeof document !== 'undefined' && document;
};
/*
 * Wraps event callbacks with a try-catch block to prevent unrelated code from blocking.
 *
 * @function
 * @param	{Event}		ev	Event payload
 * @param	{Function}	fn	Event callback
 *
 * @returns	{undefined}
 * @memberof core/dispatcher
 * @private
 */


var invoker = (0, _curry["default"])(function (ev, fn) {
  try {
    fn(ev);
  } catch (e) {
    // eslint-disable-next-line no-console
    console.error("A ".concat(e.name, " occurred during event handling with the message '").concat(e.message, "'"));
  }
});
/*
 * Dispatches an event to the registered handlers.
 *
 * @function
 * @param	{Event}		ev	Event payload
 *
 * @returns {undefined}
 * @memberof core/dispatcher
 * @private
 */

var dispatcher = function dispatcher(ev) {
  var name = ev.type;
  var listeners = (0, _listeners.getListeners)(ev.currentTarget, name);

  if (listeners) {
    var inv = invoker(ev);
    listeners.forEach(inv);
  }
};
/**
 * Adds a new global event listener. Duplicate event handlers will be discarded.
 *
 * @function
 * @param	{String}	name				Event name
 * @param	{Function}	fn					Event handler
 * @param	{Node}		[target=`document`]	Event listener target
 *
 * @returns {undefined}
 * @memberof core/dispatcher
 * @public
 */


var on = function on(name, fn) {
  var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultTarget();

  if (target) {
    var added = (0, _listeners.addListener)(target, name, fn);

    if (added && (0, _listeners.getListeners)(target, name).length === 1) {
      target.addEventListener(name, dispatcher);
    }
  }
};
/**
 * Removes a global event listener.
 *
 * @function
 * @param	{String}	name				Event name
 * @param	{Function}	fn					Event handler
 * @param	{Node}		[target=`document`]	Event listener target
 *
 * @returns {undefined}
 * @memberof core/dispatcher
 * @public
 */


exports.on = on;

var off = function off(name, fn) {
  var target = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getDefaultTarget();

  if (target) {
    var listeners = (0, _listeners.getListeners)(target, name);
    var index = listeners.indexOf(fn);

    if (index >= 0) {
      listeners.splice(index, 1);

      if (listeners.length === 0) {
        target.removeEventListener(name, dispatcher);
      }
    }
  }
};
/**
 * Adds a new global event listener that removes itself after handling one event.
 *
 * @function
 * @param	{String}	name		Event name
 * @param	{Function}	fn			Event handler
 * @param	{Node}		[target]	Event listener target
 *
 * @returns {Function}				The single-use handler which can be passed to `off` to
 *									remove it.
 * @memberof core/dispatcher
 * @public
 */


exports.off = off;

var once = function once(name, fn, target) {
  var onceFn = function onceFn(ev) {
    fn(ev);
    off(name, onceFn, target);
  };

  on(name, onceFn, target);
  return onceFn;
};

exports.once = once;

/***/ }),

/***/ "./node_modules/@enact/core/dispatcher/listeners.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/core/dispatcher/listeners.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addListener = exports.getListeners = exports["default"] = void 0; // Simple Map polyfill mapping targets to a hash of names->handler[]

var targets = [];
var events = [];

var getListeners = function getListeners(target, name) {
  var targetIndex = targets.indexOf(target);

  if (targetIndex === -1) {
    targetIndex = targets.push(target) - 1;
  }

  var listeners = events[targetIndex] = events[targetIndex] || {};
  return listeners[name] = listeners[name] || [];
};

exports.getListeners = getListeners;

var addListener = function addListener(target, name, fn) {
  var listeners = getListeners(target, name);

  if (listeners.indexOf(fn) === -1) {
    listeners.push(fn);
    return true;
  }

  return false;
};

exports.addListener = addListener;
var _default = getListeners;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/handle/handle.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/core/handle/handle.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stopImmediate = exports.stop = exports.returnsTrue = exports.preventDefault = exports.oneOf = exports.log = exports.handle = exports.forProp = exports.forKeyCode = exports.forKey = exports.forEventProp = exports.forwardWithPrevent = exports.forward = exports.callOnEvent = exports.call = exports.adaptEvent = exports["default"] = void 0;

var _cond = _interopRequireDefault(__webpack_require__(/*! ramda/src/cond */ "./node_modules/ramda/src/cond.js"));

var _curry = _interopRequireDefault(__webpack_require__(/*! ramda/src/curry */ "./node_modules/ramda/src/curry.js"));

var _keymap = __webpack_require__(/*! ../keymap */ "./node_modules/@enact/core/keymap/index.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * `core/handle` provides a set of utilities to support handling events for `kind()`s and
 * `React.Component`s. The default export, `handle()`, generates an event handler function from a
 * set of input functions. The input functions either process or filter the event. If an input
 * function returns `true`, `handle()` will continue processing the event by calling the next input
 * function in the chain. If it returns `false` (or any falsy value like `null` or `undefined`),
 * the event handling chain stops at that input function.
 *
 * Example:
 * ```
 * import {forKey, forward, handle, preventDefault} from '@enact/core/handle';
 *
 * // logEnter will contain a function that accepts an event, a props object, and a context object
 * const logEnter = handle(
 *   forward('onKeyDown'),  // forwards the event to the function passed in the onKeyDown prop
 *   forKey('enter'),       // if the event.keyCode maps to the enter key, allows event processing to continue
 *   preventDefault,        // calls event.preventDefault() to prevent the `keypress` event
 *   (ev, props) => {       // custom event handler -- in this case, logging some text
 *     // since it doesn't return `true`, no further input functions would be called after this one
 *     console.log('The Enter key was pressed down');
 *   }
 * ).finally(() => {
 * 	 console.log('This will log at the end no matter what happens within the handler above')
 * });
 * ```
 *
 * `handle()` can also be bound to a component instance which allows it to access the instance
 * `props` and `context`. This allows you to write consistent event handlers for components created
 * either with `kind()` or ES6 classes without worrying about from where the props are sourced.
 *
 * Handlers can either be bound directly using the native `bind()` method or using the `bindAs()`
 * utility method that is appended to the handler.
 *
 * Example:
 * ```
 * import {forKey, forward, handle, preventDefault} from '@enact/core/handle';
 * import React from 'react';
 *
 * class MyComponent extends React.Component {
 *   // bind handle() to the instance
 *   constructor () {
 *     super();
 *
 *     // logEnter will be bound to `this` and set as this.handleKeyDown
 *     //
 *     // Equivalent to the following with the advantage of set the function name to be displayed in
 *     // development tool call stacks
 *     //
 *     //   this.handleKeyDown = logEnter.bind(this)
 *     logEnter.bindAs(this, 'handleKeyDown');
 *   }
 *
 *   render () {
 *     return (
 *       <div onKeyDown={this.handleKeyDown} />
 *     );
 *   }
 * }
 * ```
 *
 * @module core/handle
 * @exports adaptEvent
 * @exports call
 * @exports callOnEvent
 * @exports forward
 * @exports forwardWithPrevent
 * @exports forEventProp
 * @exports forKey
 * @exports forKeyCode
 * @exports forProp
 * @exports handle
 * @exports log
 * @exports oneOf
 * @exports preventDefault
 * @exports returnsTrue
 * @exports stop
 * @exports stopImmediate
 */
// Accepts an array of handlers, sanitizes them, and returns a handler function
// compose(allPass, map(makeSafeHandler));


var makeHandler = function makeHandler(handlers) {
  // allowing shadowing here to provide a meaningful function name in dev tools
  // eslint-disable-next-line no-shadow
  return function handle() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    for (var i = 0; i < handlers.length; i++) {
      var fn = handlers[i];

      if (typeof fn !== 'function' || fn.apply(this, args)) {
        continue;
      }

      return false;
    }

    return true;
  };
}; // Loose check to determine if obj is component-ish if it has both props and context members


var hasPropsAndContext = function hasPropsAndContext(obj) {
  return obj && obj.hasOwnProperty && obj.hasOwnProperty('props') && obj.hasOwnProperty('context');
};

var named = function named(fn, name) {
  if (true) {
    try {
      Object.defineProperty(fn, 'name', {
        value: name,
        writeable: false,
        enumerable: false
      });
    } catch (err) {// unable to set name of function
    }
  }

  return fn;
};

var bindAs = function bindAs(fn, obj, name) {
  var namedFunction = name ? named(fn, name) : fn;
  var bound = namedFunction.bind(obj);

  if (name) {
    obj[name] = bound;
  }

  return bound;
};

var decorateHandleFunction = function decorateHandleFunction(fn) {
  fn.named = function (name) {
    return named(fn, name);
  };

  fn.bindAs = function (obj, name) {
    return bindAs(fn, obj, name);
  };

  return fn;
};
/**
 * Allows generating event handlers by chaining input functions to filter or short-circuit the
 * handling flow. Any input function that returns a falsy value will stop the chain.
 *
 * The returned handler function has a `finally()` member that accepts a function and returns a new
 * handler function. The accepted function is called once the original handler completes regardless
 * of the returned value.
 *
 * @method   handle
 * @param    {...Function}  handlers List of handlers to process the event.
 *
 * @returns  {Function}	    A function that accepts an event which is dispatched to each of the
 *                          provided handlers.
 * @memberof core/handle
 * @public
 */


var handle = function handle() {
  for (var _len2 = arguments.length, handlers = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    handlers[_key2] = arguments[_key2];
  }

  var h = makeHandler(handlers); // In order to support binding either handle (handle.bind(this)) or a handler
  // (a = handle(), a.bind(this)), we cache `this` here and use it as the fallback for props and
  // context if fn() doesn't have its own `this`.

  var _outer = this;

  var fn = function prepareHandleArgs(ev, props, context) {
    var caller = null; // if handle() was bound to a class, use its props and context. otherwise, we accept
    // incoming props/context as would be provided by computed/handlers from kind()

    if (hasPropsAndContext(this)) {
      caller = this;
      props = this.props;
      context = this.context;
    } else if (hasPropsAndContext(_outer)) {
      caller = _outer;
      props = _outer.props;
      context = _outer.context;
    }

    return h.call(caller, ev, props, context);
  };

  fn["finally"] = function (cleanup) {
    return decorateHandleFunction(function handleWithFinally(ev, props, context) {
      var result = false;

      if (hasPropsAndContext(this)) {
        props = this.props;
        context = this.context;
      }

      try {
        result = fn.call(this, ev, props, context);
      } finally {
        cleanup.call(this, ev, props, context);
      }

      return result;
    });
  };

  return decorateHandleFunction(fn);
};
/**
 * Calls the first handler whose condition passes. Each branch must be passed as an array with the
 * first element being the condition function and the second being the handler function. The same
 * arguments are passed to both the condition function and the handler function. The value returned
 * from the handler is returned.
 *
 * Example:
 * ```
 * const handler = oneOf(
 * 	[forKey('enter'), handleEnter],
 * 	[forKey('left'), handleLeft],
 * 	[forKey('right'), handleRight]
 * );
 * ```
 *
 * @method   oneOf
 * @param    {...Function[]}  handlers List of conditions and handlers to process the event
 *
 * @returns  {Function}	    A function that accepts an event which is dispatched to each of the
 *                          conditions and, if it passes, onto the provided handler.
 * @memberof core/handle
 * @public
 */


exports.handle = handle;

var oneOf = handle.oneOf = function () {
  for (var _len3 = arguments.length, handlers = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    handlers[_key3] = arguments[_key3];
  }

  return handle.call(this, (0, _cond["default"])(handlers));
};
/**
 * A function that always returns `true`. Optionally accepts a `handler` function which is called
 * before returning `true`.
 *
 * Example:
 * ```
 * // Used to coerce an existing function into a handler change
 * const coercedHandler = handle(
 *   returnsTrue(doesSomething),
 *   willAlwaysBeCalled
 * );
 *
 * // Used to emulate if/else blocks with `oneOf`
 * const ifElseHandler = oneOf(
 * 	[forKey('enter'), handleEnter],
 * 	[returnsTrue, handleOtherwise]
 * );
 * ```
 *
 * @method   returnsTrue
 * @param    {Function}  [handler]  Handler function called before returning `true`.
 *
 * @returns  {Function}	   A function that returns true
 * @memberof core/handle
 * @public
 */


exports.oneOf = oneOf;

var returnsTrue = handle.returnsTrue = function (handler) {
  if (handler) {
    return named(function () {
      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
        args[_key4] = arguments[_key4];
      }

      handler.apply(this, args);
      return true;
    }, 'returnsTrue');
  }

  return true;
};
/**
 * Calls a named function on the event and returns `true`.
 *
 * Example:
 * ```
 * import {callOnEvent, handle} from '@enact/core/handle';
 *
 * const callsCustomMethod = handle(
 *	callOnEvent('customMethod'),
 *	(ev) => console.log('ev.customMethod() was called')
 * );
 * ```
 *
 * @method   callOnEvent
 * @param    {String}     methodName  Name of the method to call on the event
 * @param    {Object}     ev          Event payload
 *
 * @returns  {Boolean}                Always returns `true`
 * @memberof core/handle
 * @private
 */


exports.returnsTrue = returnsTrue;
var callOnEvent = handle.callOnEvent = (0, _curry["default"])(function (methodName, ev) {
  if (ev[methodName]) {
    ev[methodName]();
  } else if (ev.nativeEvent && ev.nativeEvent[methodName]) {
    // In some cases (notably stopImmediatePropagation), React doesn't include a desired method
    // on its proxy so we check the native event as well.
    ev.nativeEvent[methodName]();
  }

  return true;
});
/**
 * Allows handling to continue if the value of `prop` on the event strictly equals `value`
 *
 * Example:
 * ```
 * import {forEventProp, handle} from '@enact/core/handle';
 *
 * const logWhenXEqualsZero = handle(
 *   forEventProp('x', 0),
 *   (ev) => console.log('ev.x was equal to zero')
 * );
 * ```
 *
 * @method   forEventProp
 * @param    {String}	   prop   Name of property on event
 * @param    {*}           value  Value of property
 * @param    {Object}      ev     Event payload
 *
 * @returns  {Boolean}            Returns `true` if `prop` on `event` strictly equals `value`
 * @memberof core/handle
 * @public
 */

exports.callOnEvent = callOnEvent;
var forEventProp = handle.forEventProp = (0, _curry["default"])(function (prop, value, ev) {
  return ev[prop] === value;
});
/**
 * Forwards the event to a function at `name` on `props`. If the specified prop is `undefined` or
 * is not a function, it is ignored. The return value of the forwarded function is ignored and
 * `true` is always returned instead.
 *
 * Example:
 * ```
 * import {forward, handle} from '@enact/core/handle';
 *
 * const forwardAndLog = handle(
 *   forward('onClick'),
 *   (ev) => console.log('event forwarded to onClick from props')
 * );
 * ```
 *
 * @method   forward
 * @param    {String}    name   Name of method on the `props`
 * @param    {Object}    ev     Event payload
 * @param    {Object}    props  Props object
 *
 * @returns  {Boolean}          Always returns `true`
 * @memberof core/handle
 * @public
 */

exports.forEventProp = forEventProp;
var forward = handle.forward = (0, _curry["default"])(named(function (name, ev, props) {
  var fn = props && props[name];

  if (typeof fn === 'function') {
    fn(ev);
  }

  return true;
}, 'forward'));
/**
 * Calls `event.preventDefault()` and returns `true`.
 *
 * Example:
 * ```
 * import {handle, preventDefault} from '@enact/core/handle';
 *
 * const preventAndLog = handle(
 *   preventDefault,
 *   (ev) => console.log('preventDefault called')
 * );
 * ```
 *
 * @method   preventDefault
 * @param    {Object}        ev  Event payload
 *
 * @returns  {Boolean}           Always returns `true`
 * @memberof core/handle
 * @public
 */

exports.forward = forward;

var _preventDefault = handle.preventDefault = callOnEvent('preventDefault');
/**
 * Forwards the event to a function at `name` on `props` with capability to prevent default
 * behavior. If the specified prop is `undefined` or is not a function, it is ignored. Returns
 * `false` when `event.preventDefault()` has been called in a handler.
 *
 * Example:
 * ```
 * import {forwardWithPrevent, handle} from '@enact/core/handle';
 *
 * const forwardPreventDefault = handle(
 *   forwardWithPrevent('onClick'),
 *   (ev) => console.log('default action')
 * );
 * ```
 *
 * @method   forwardWithPrevent
 * @param    {String}    name   Name of method on the `props`
 * @param    {Object}    ev     Event payload
 * @param    {Object}    props  Props object
 *
 * @returns  {Boolean}          Returns `true` if default action is prevented
 * @memberof core/handle
 * @private
 */


exports.preventDefault = _preventDefault;
var forwardWithPrevent = handle.forwardWithPrevent = (0, _curry["default"])(named(function (name, ev, props) {
  var prevented = false;
  var wrappedEvent = Object.assign({}, ev, {
    preventDefault: function preventDefault() {
      prevented = true;

      _preventDefault(ev);
    }
  });
  forward(name, wrappedEvent, props);
  return !prevented;
}, 'forwardWithPrevent'));
/**
 * Calls `event.stopPropagation()` and returns `true`
 *
 * Example:
 * ```
 * import {handle, stop} from '@enact/core/handle';
 *
 * const stopAndLog = handle(
 *   stop,
 *   (ev) => console.log('stopPropagation called')
 * );
 * ```
 *
 * @method   stop
 * @param    {Object}   ev  Event payload
 *
 * @returns  {Boolean}      Always returns `true`
 * @memberof core/handle
 * @public
 */

exports.forwardWithPrevent = forwardWithPrevent;
var stop = handle.stop = named(callOnEvent('stopPropagation'), 'stop');
/**
 * Calls `event.stopImmediatePropagation()` and returns `true`
 *
 * Example:
 * ```
 * import {handle, stopImmediate} from '@enact/core/handle';
 *
 * const stopImmediateAndLog = handle(
 *   stopImmediate,
 *   (ev) => console.log('stopImmediatePropagation called')
 * );
 * ```
 *
 * @method   stopImmediate
 * @param    {Object}       ev  Event payload
 *
 * @returns  {Boolean}          Always returns `true`
 * @memberof core/handle
 * @public
 */

exports.stop = stop;
var stopImmediate = handle.stopImmediate = callOnEvent('stopImmediatePropagation');
/**
 * Allows event handling to continue if `event.keyCode === value`.
 *
 * Example:
 * ```
 * import {forKeyCode, handle} from '@enact/core/handle';
 *
 * const logForEscapeKey = handle(
 *   forKeyCode(27),
 *   (ev) => console.log('Escape key pressed down')
 * );
 * ```
 *
 * @method   forKeyCode
 * @param    {Number}    value  `keyCode` to test
 * @param    {Object}    ev     Event payload
 *
 * @returns  {Boolean}          Returns `true` if `event.keyCode` strictly equals `value`
 * @memberof core/handle
 * @public
 */

exports.stopImmediate = stopImmediate;
var forKeyCode = handle.forKeyCode = forEventProp('keyCode');
/**
 * Allows handling to continue if the event's keyCode is mapped to `name` within
 * {@link core/keymap}.
 *
 * Example:
 * ```
 * import {forKey, handle} from '@enact/core/handle';
 *
 * const logForEnterKey = handle(
 *   forKey('enter'),
 *   (ev) => console.log('Enter key pressed down')
 * );
 * ```
 *
 * @see      core/keymap
 * @method   forKey
 * @param    {String}    name   Name from {@link core/keymap}
 * @param    {Object}    ev     Event payload
 *
 * @returns  {Boolean}          Returns `true` if `event.keyCode` is mapped to `name`
 * @memberof core/handle
 * @public
 */

exports.forKeyCode = forKeyCode;
var forKey = handle.forKey = (0, _curry["default"])(function (name, ev) {
  return (0, _keymap.is)(name, ev.keyCode);
});
/**
 * Allows handling to continue if the value of `prop` on the props strictly equals `value`.
 *
 * Example:
 * ```
 * import {forProp, handle} from '@enact/core/handle';
 *
 * const logWhenChecked = handle(
 *   forProp('checked', true),
 *   (ev) => console.log('checked prop is true')
 * );
 * ```
 *
 * @method   forProp
 * @param    {String}    prop   Name of property on props object
 * @param    {*}         value  Value of property
 * @param    {Object}    ev     Event payload
 * @param    {Object}    props  Props object
 *
 * @returns  {Boolean}          `true` if the value of `props[prop]` strictly equals `value`
 * @memberof core/handle
 * @public
 */

exports.forKey = forKey;
var forProp = handle.forProp = (0, _curry["default"])(function (prop, value, ev, props) {
  return props[prop] === value;
});
/**
 * Logs the event, props, and context optionally preceded by a custom message. Will only log in
 * development mode.
 *
 * Example:
 * ```
 * import {forProp, handle, log} from '@enact/core/handle';
 *
 * const logWhenChecked = handle(
 *   forProp('checked', true),
 *   log('checked props is true')
 * );
 * ```
 *
 * @method   log
 * @param    {String}     message  Custom message
 * @param    {Object}     ev       Event payload
 * @param    {...*}       [args]   Any args passed are logged
 *
 * @returns  {Boolean}             Always returns `true`
 * @memberof core/handle
 * @public
 */

exports.forProp = forProp;
var log = handle.log = (0, _curry["default"])(function (message, ev) {
  if (true) {
    var _console;

    for (var _len5 = arguments.length, args = new Array(_len5 > 2 ? _len5 - 2 : 0), _key5 = 2; _key5 < _len5; _key5++) {
      args[_key5 - 2] = arguments[_key5];
    } // eslint-disable-next-line no-console


    (_console = console).log.apply(_console, [message, ev].concat(args));
  }

  return true;
});
/**
 * Invokes a method by name on the component to which {@link core/handle.handle} is bound.
 *
 * If the methods exists on the object, it is called with the event, props, and context and its
 * return value is returned.
 *
 * If the method does not exist or handle isn't bound to an instance, it returns `false`.
 *
 * Example:
 * ```
 * import {call, handle, forProp} from '@enact/core/handle';
 *
 * const incrementIfEnabled = handle(
 *   forProp('disabled', false),
 *   call('increment')
 * );
 *
 * class Counter extends React.Component {
 *   constructor () {
 *     super();
 *
 *     this.handleIncrement = incrementIfEnabled.bind(this);
 *   }
 *
 *   render () {
 *     // ...
 *   }
 * }
 * ```
 *
 * @method   call
 * @param    {String}     method  Name of method
 *
 * @returns  {Boolean}            Returns the value returned by `method`, or `false` if the method
 *                                does not exist
 * @memberof core/handle
 * @public
 */

exports.log = log;

var call = function call(method) {
  return named(function () {
    if (this && this[method]) {
      return this[method].apply(this, arguments);
    }

    return false;
  }, 'call');
};
/**
 * Adapts an event with `adapter` before calling `handler`.
 *
 * The `adapter` function receives the same arguments as any handler. The value returned from
 * `adapter` is passed as the first argument to `handler` with the remaining arguments kept the
 * same. This is often useful to generate a custom event payload before forwarding on to a callback.
 *
 * Example:
 * ```
 * import {adaptEvent, forward} from '@enact/core/handle';
 *
 * // calls the onChange callback with an event payload containing a type and value member
 * const incrementAndChange = adaptEvent(
 * 	(ev, props) => ({
 * 	  type: 'onChange',
 * 	  value: props.value + 1
 * 	}),
 * 	forward('onChange')
 * )
 * ```
 *
 * @method   adaptEvent
 * @param    {Function}  adapter  Function to adapt the event payload
 * @param    {Function}  handler  Handler to call with the new event payload
 * @param    {...*}      [args]   Additional args passed to both `adapter` and `handler`
 *
 * @returns  {Object}             New event payload
 * @memberof core/handle
 * @public
 */


exports.call = call;
var adaptEvent = handle.adaptEvent = (0, _curry["default"])(function (adapter, handler) {
  return named(function (ev) {
    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
      args[_key6 - 1] = arguments[_key6];
    }

    return handler.call.apply(handler, [this, adapter.call.apply(adapter, [this, ev].concat(args))].concat(args));
  }, 'adaptEvent');
});
exports.adaptEvent = adaptEvent;
var _default = handle;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/hoc/hoc.js":
/*!*********************************************!*\
  !*** ./node_modules/@enact/core/hoc/hoc.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hoc = exports["default"] = void 0;

var _util = __webpack_require__(/*! ../util */ "./node_modules/@enact/core/util/util.js");

var _mergeDeepWithKey = _interopRequireDefault(__webpack_require__(/*! ramda/src/mergeDeepWithKey */ "./node_modules/ramda/src/mergeDeepWithKey.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Provides the {@link core/hoc.hoc} method to create higher-order components (HOCs).
 *
 * @module core/hoc
 * @exports hoc
 */


var mergeFn = function mergeFn(key, defaultValue, userValue) {
  // eslint-disable-next-line no-undefined
  if (userValue === undefined) {
    return defaultValue;
  }

  return userValue;
};
/**
 * Constructs a higher-order component (HOC) using an optional set of default configuration parameters and
 * a factory method that accepts instance configuration parameters and a component to wrap. The
 * returned function can accept:
 *	* an instance config and a component constructor to wrap and return a renderable component, or
 *	* an instance config only and return a decorator function expecting a component constructor
 *	(like the next bullet), or
 *	* a component constructor and return a renderable component
 *
 * Example:
 * ```
 *	const Countable = hoc({prop: 'data-count'}, (config, Wrapped) => {
 *		return class extends React.Component {
 *			constructor (props) {
 *				super(props);
 *				this.state = {
 *					count: 0
 *				};
 *			},
 *			inc = () => this.setState({count: this.state.count + 1}),
 *			render () {
 *				const props = Object.assign({}, this.props, {
 *					[config.prop]: this.state.count,
 *					onClick: this.inc
 *				});
 *				return <Wrapped {...props} />
 *			}
 *		}
 *	});
 *
 *	const CountableAsDataNumber({prop: 'data-number'});
 *	const CountableDiv('div');
 *	const CountableDivAsDataNumber = CountableAsDataNumber('div');
 * ```
 *
 * @function
 * @param  {Object} defaultConfig Set of default configuration parameters
 * @param  {Function} hawk        Higher-order component
 *
 * @returns {Function}             HOC Decorator
 * @memberof core/hoc
 * @public
 */


var hoc = function hoc(defaultConfig, hawk) {
  // normalize arguments to allow defaultConfig to be omitted
  var factory = hawk;
  var defaults = defaultConfig;

  if (!factory && typeof defaultConfig === 'function') {
    factory = defaultConfig;
    defaults = null;
  }

  return function (config, maybeWrapped) {
    if ((0, _util.isRenderable)(config)) {
      return factory(defaults, config);
    } else {
      var cfg = (0, _mergeDeepWithKey["default"])(mergeFn, defaults, config);

      if ((0, _util.isRenderable)(maybeWrapped)) {
        return factory(cfg, maybeWrapped);
      } else {
        return function (Wrapped) {
          return factory(cfg, Wrapped);
        };
      }
    }
  };
};

exports.hoc = hoc;
var _default = hoc;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/internal/Registry/Registry.js":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/core/internal/Registry/Registry.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Registry = exports["default"] = void 0;
/**
 * Allows components to register parents to cascade context changes and trigger functions
 *
 * @type Object
 * @memberof core/Registry
 * @private
 */

var Registry = {
  create: function create(handler) {
    var instances = [];
    var currentParent;
    var registry = Object.freeze({
      set parent(register) {
        if (currentParent && currentParent.unregister) {
          currentParent.unregister();
        }

        if (register && typeof register === 'function') {
          currentParent = register(registry.notify);
        }
      },

      notify: function notify(ev) {
        var exclude = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {
          return true;
        };
        instances.filter(exclude).forEach(function (f) {
          return f(ev);
        });
      },
      register: function register(instance) {
        if (instances.indexOf(instance) === -1) {
          instances.push(instance);

          if (handler) {
            handler({
              action: 'register'
            }, instance);
          }
        }

        return {
          notify: function notify(ev) {
            if (handler) {
              handler(ev, instance);
            }
          },
          unregister: function unregister() {
            var i = instances.indexOf(instance);

            if (i >= 0) {
              instances.splice(i, 1);

              if (handler) {
                handler({
                  action: 'register'
                }, instance);
              }
            }
          }
        };
      }
    });
    return registry;
  }
};
exports.Registry = Registry;
var _default = Registry;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/internal/prop-types/prop-types.js":
/*!********************************************************************!*\
  !*** ./node_modules/@enact/core/internal/prop-types/prop-types.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _util = __webpack_require__(/*! ../../util */ "./node_modules/@enact/core/util/util.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var isRequired = function isRequired(fn) {
  fn.isRequired = function (props, key, componentName, location, propFullName) {
    var propValue = props[key];

    if (typeof propValue === 'undefined') {
      return new Error("'".concat(propFullName, "' is required for '").concat(componentName, "' but was undefined."));
    }

    for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
      rest[_key - 5] = arguments[_key];
    }

    return fn.apply(void 0, [propValue, key, componentName, location, propFullName].concat(rest));
  };

  return fn;
};

var renderable = isRequired(function (props, key, componentName) {
  var propValue = props[key];

  if (propValue && !(0, _util.isRenderable)(propValue)) {
    return new Error("Invalid prop '".concat(key, "' supplied to '").concat(componentName, "'. ") + "Expected a renderable value but received '".concat(_typeof(propValue), "' instead."));
  }
});
var component = isRequired(function (props, key, componentName) {
  var propValue = props[key];

  if (propValue && (typeof propValue === 'string' || !(0, _util.isRenderable)(propValue))) {
    return new Error("Invalid prop '".concat(key, "' supplied to '").concat(componentName, "'. ") + "Expected a function but received '".concat(_typeof(propValue), "' instead."));
  }
});

var renderableOverride = _propTypes["default"].oneOfType([_propTypes["default"].element, renderable]);

var componentOverride = _propTypes["default"].oneOfType([_propTypes["default"].element, component]);

var EnactPropTypes = {
  component: component,
  componentOverride: componentOverride,
  renderable: renderable,
  renderableOverride: renderableOverride
};
var _default = EnactPropTypes;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/keymap/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@enact/core/keymap/index.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _keymap = __webpack_require__(/*! ./keymap */ "./node_modules/@enact/core/keymap/keymap.js");

Object.keys(_keymap).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _keymap[key];
    }
  });
});
/**
 * Manages a map of names to key codes to simplify event handlers
 *
 * Example:
 * ```
 * import {add, is} from '@enact/core/keymap';
 *
 * add('enter', 13);
 * const isEnter = is('enter');
 *
 * // within event handler
 * if (isEnter(ev.keyCode)) {
 *   // handle enter
 * }
 * ```
 *
 * @module core/keymap
 * @exports add
 * @exports addAll
 * @exports is
 * @exports remove
 * @exports removeAll
 */
// keymap uses a singleton object, map, to manage the keymap. since webpack may make multiple copies
// of the module available if the import path is different, we ensure a consistent import path for
// the singleton instance by facading it with this module.
// Add the default 5-way navigation key codes

(0, _keymap.addAll)({
  enter: [13, 16777221],
  left: 37,
  up: 38,
  right: 39,
  down: 40,
  pageUp: 33,
  pageDown: 34
});

/***/ }),

/***/ "./node_modules/@enact/core/keymap/keymap.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/core/keymap/keymap.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeAll = exports.remove = exports.is = exports.addAll = exports.add = void 0;

var _curry = _interopRequireDefault(__webpack_require__(/*! ramda/src/curry */ "./node_modules/ramda/src/curry.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/*
 * The singleton map of names to keyCodes. If a name doesn't have any keyCodes mapped to it, it will
 * not exist in this map. If it does, its value will be an array of its keyCodes.
 *
 * @type {Object}
 * @private
 */


var map = {};
/*
 * Safely converts keymap name to lowercase.
 *
 * @function
 * @param   {String} name  Name for keyCode
 *
 * @returns {String}       Name for keyCode in lowercase
 * @memberof core/keymap
 * @private
 */

var toLowerCase = function toLowerCase(name) {
  return name ? name.toLowerCase() : '';
};
/*
 * Iterates over `set` and invokes `fn` with the key and value of each item.
 *
 * @function
 * @param   {Function}  fn   Function to invoke
 * @param   {Object}    set  A map of names to keyCodes
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @private
 */


var forEachObj = (0, _curry["default"])(function (fn, set) {
  Object.keys(set).forEach(function (name) {
    return fn(name, set[name]);
  });
});
/*
 * Invokes `fn` with `name` and `keyCode` for each key code provided.
 *
 * @function
 * @param   {Function}        fn       Function to invoke
 * @param   {String}          name     Name for the key codes
 * @param   {Number|Number[]} keyCode  A key code or array of key codes
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @private
 */

var oneOrArray = (0, _curry["default"])(function (fn, name, keyCode) {
  if (Array.isArray(keyCode)) {
    keyCode.forEach(fn(name));
  } else {
    fn(name, keyCode);
  }
});
/*
 * Adds `keyCode` to `name`.
 *
 * @function
 * @param   {String}    name     Name for the key code
 * @param   {Number}    keyCode  A key code
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @private
 */

var addOne = (0, _curry["default"])(function (name, keyCode) {
  name = toLowerCase(name);

  if (name in map) {
    var index = map[name].indexOf(keyCode);

    if (index === -1) {
      map[name].push(keyCode);
    }
  } else if (name) {
    map[name] = [keyCode];
  }
});
/*
 * Removes `keyCode` from `name`.
 *
 * @function
 * @param   {String}    name     Name for the key code
 * @param   {Number}    keyCode  A key code
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @private
 */

var removeOne = (0, _curry["default"])(function (name, keyCode) {
  name = toLowerCase(name);

  if (name in map) {
    var keys = map[name];
    var index = keys.indexOf(keyCode);

    if (index === -1) {
      delete map[name];
    } else {
      keys.splice(index, 1);
    }
  }
});
/**
 * Registers `keyCode` for `name`.
 *
 * @function add
 * @param   {String}          name     Name for the key code
 * @param   {Number|Number[]} keyCode  A key code or array of key codes
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @public
 */

var add = oneOrArray(addOne);
/**
 * Registers a set of key codes.
 *
 * @function addAll
 * @param   {Object<String,Number|Number[]>}    set  A map of names to keyCodes
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @public
 */

exports.add = add;
var addAll = forEachObj(add);
/**
 * Unregisters `keyCode` from `name`.
 *
 * @function remove
 * @param   {String}          name     Name for the key code
 * @param   {Number|Number[]} keyCode  A key code or array of key codes
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @public
 */

exports.addAll = addAll;
var remove = oneOrArray(removeOne);
/**
 * Unregisters a set of key codes.
 *
 * @function removeAll
 * @param   {Object}    set  A map of names to keyCodes
 *
 * @returns {undefined}
 * @memberof core/keymap
 * @public
 */

exports.remove = remove;
var removeAll = forEachObj(remove);
/**
 * Determines if `keyCode` is mapped to `name`.
 *
 * @function is
 * @param   {String}    name     Name for the key code
 * @param   {Number}    keyCode  A key code
 *
 * @returns {Boolean}            `true` if `keyCode` is mapped to `name`
 * @memberof core/keymap
 * @public
 */

exports.removeAll = removeAll;
var is = (0, _curry["default"])(function (name, keyCode) {
  name = toLowerCase(name);
  return name in map && map[name].indexOf(keyCode) >= 0;
});
exports.is = is;

/***/ }),

/***/ "./node_modules/@enact/core/kind/computed.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/core/kind/computed.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.computed = exports["default"] = void 0;
/**
 * Accepts an object of computed property configurations and a property object, passes the property
 * object through each computed property handler, and merges the resulting computed properties with
 * the original properties.
 *
 * ```
 * const cfg = {
 *   sum: ({x,y,z}) => x+y+z,
 *   product: ({x,y,z}) => x*y*z
 * }
 * const props = {
 *   x: 2,
 *   y: 3,
 *   z: 4
 * }
 * computed(cfg)(props) // => {x: 2, y: 3, z: 4, sum: 9, product: 24}
 * ```
 *
 * @method computed
 * @param   {Object}    cfg  Configuration object mapping transformation functions to property names
 *
 * @returns {Function}       Function that accepts a props object and mutates it to include the
 *                           computed props
 * @private
 */

var computed = function computed(cfg, optProps) {
  var keys = Object.keys(cfg);

  var renderComputed = function renderComputed(props) {
    var updated = {};

    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    for (var i = keys.length - 1; i >= 0; i--) {
      updated[keys[i]] = cfg[keys[i]].apply(cfg, [props].concat(args));
    }

    return Object.assign(props, updated);
  }; // maintain compatibility with 1.x


  if (optProps) {
    return renderComputed(optProps);
  }

  return renderComputed;
};

exports.computed = computed;
var _default = computed;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/kind/kind.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/core/kind/kind.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.kind = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _computed = _interopRequireDefault(__webpack_require__(/*! ./computed */ "./node_modules/@enact/core/kind/computed.js"));

var _styles = _interopRequireDefault(__webpack_require__(/*! ./styles */ "./node_modules/@enact/core/kind/styles.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "./node_modules/warning/browser.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * @callback RenderFunction
 * @memberof core/kind
 * @param {Object<string, any>} props
 * @param {Object<string, any>} context
 * @returns React.Element|null
 */

/**
 * @callback ComputedPropFunction
 * @memberof core/kind
 * @param {Object<string, any>} props
 * @param {Object<string, any>} context
 * @returns any
 */

/**
 * @callback HandlerFunction
 * @memberof core/kind
 * @param {any} event
 * @param {Object<string, any>} props
 * @param {Object<string, any>} context
 */

/**
 * Configuration for CSS class name mapping
 *
 * @typedef {Object} StylesBlock
 * @memberof core/kind
 * @property {Object.<string, string>} css
 * @property {String} [className]
 * @property {Boolean|String|String[]} [publicClassNames]
 */

/**
 * @typedef {Object} KindConfig
 * @memberof core/kind
 * @property {String} name
 * @property {Object.<string, Function>} [propTypes]
 * @property {Object.<string, any>} [defaultProps]
 * @property {Object} [contextType]
 * @property {StylesBlock} [styles]
 * @property {Object.<string, HandlerFunction>} [handlers]
 * @property {Object.<string, ComputedPropFunction>} [computed]
 * @property {RenderFunction} render
 */

/**
 * Creates a new component with some helpful declarative syntactic sugar.
 *
 * Example:
 * ```
 *	import css from './Button.module.less';
 *	const Button = kind({
 *		// expect color and onClick properties but neither required
 *		propTypes: {
 *			color: PropTypes.string
 *		},
 *		// if no color is provided, it'll be green
 *		defaultProps: {
 *			color: 'green'
 *		},
 *		// expect backgroundColor via context
 *		contextType: React.createContext({ backgroundColor }),
 *		// configure styles with the static className to merge with user className
 *		styles: {
 *			// include the CSS modules map so 'button' can be resolved to the local name
 *			css,
 *			className: 'button'
 *		},
 *		// add some computed properties
 *		computed: {
 *			// border color will be the color prepended by 'light'
 *			borderColor: ({color}) => 'light' + color,
 *			// background color will be the contextual background color if specified
 *			color: ({color}, context) => context.backgroundColor || color
 *		},
 *		// Render the thing, already!
 *		render: ({color, borderColor, children, ...rest}) => (
 *			<button
 *				{...rest}
 *				style={{backgroundColor: color, borderColor}}
 *			>
 *				{children}
 *			</button>
 *		)
 *	});
 * ```
 *
 * @function
 * @template Props
 * @param  {KindConfig}    config    Component configuration
 *
 * @returns {Component<Props>}           Component
 * @memberof core/kind
 * @public
 */


var kind = function kind(config) {
  var _class, _temp;

  var cfgComputed = config.computed,
      contextType = config.contextType,
      contextTypes = config.contextTypes,
      defaultProps = config.defaultProps,
      handlers = config.handlers,
      name = config.name,
      propTypes = config.propTypes,
      render = config.render,
      cfgStyles = config.styles;
   true ? (0, _warning["default"])(!contextTypes, "\"contextTypes\" used by ".concat(name || 'a component', " but is deprecated. Please replace with \"contextType\" instead.")) : undefined;
  var renderStyles = cfgStyles ? (0, _styles["default"])(cfgStyles) : false;
  var renderComputed = cfgComputed ? (0, _computed["default"])(cfgComputed) : false;

  var renderKind = function renderKind(props, context) {
    if (renderStyles) props = renderStyles(props, context);
    if (renderComputed) props = renderComputed(props, context);
    return render(props, context);
  }; // addition prop decorations would be chained here (after config.render)


  var Component = (_temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(Component, _React$Component);

    function Component() {
      var _this;

      _classCallCheck(this, Component);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Component).call(this));
      _this.handlers = {}; // cache bound function for each handler

      if (handlers) {
        Object.keys(handlers).forEach(function (handler) {
          return _this.prepareHandler(handler, handlers[handler]);
        });
      }

      return _this;
    }
    /*
     * Caches an event handler on the local `handlers` member
     *
     * @param   {String}    name     Event name
     * @param   {Function}  handler  Event handler
     *
     * @returns {undefined}
     */


    _createClass(Component, [{
      key: "prepareHandler",
      value: function prepareHandler(prop, handler) {
        var _this2 = this;

        this.handlers[prop] = function (ev) {
          return handler(ev, _this2.props, _this2.context);
        };
      }
    }, {
      key: "render",
      value: function render() {
        return renderKind(_objectSpread({}, this.props, this.handlers), this.context);
      }
    }]);

    return Component;
  }(_react["default"].Component), _class.displayName = name || 'Component', _temp);
  if (propTypes) Component.propTypes = propTypes;
  if (contextTypes) Component.contextTypes = contextTypes;
  if (contextType) Component.contextType = contextType;
  if (defaultProps) Component.defaultProps = defaultProps; // Decorate the Component with the computed property object in DEV for easier testability

  if ( true && cfgComputed) Component.computed = cfgComputed;
  var defaultPropKeys = defaultProps ? Object.keys(defaultProps) : null;
  var handlerKeys = handlers ? Object.keys(handlers) : null;

  Component.inline = function (props, context) {
    var updated = _objectSpread({}, props);

    if (defaultPropKeys && defaultPropKeys.length > 0) {
      defaultPropKeys.forEach(function (key) {
        // eslint-disable-next-line no-undefined
        if (props == null || props[key] === undefined) {
          updated[key] = defaultProps[key];
        }
      });
    }

    if (handlerKeys && handlerKeys.length > 0) {
      // generate a handler with a clone of updated to ensure each handler receives the same
      // props without the kind.handlers injected.
      updated = handlerKeys.reduce(function (_props, key) {
        _props[key] = function (ev) {
          return handlers[key](ev, updated, context);
        };

        return _props;
      }, _objectSpread({}, updated));
    }

    return renderKind(updated, context);
  };

  return Component;
};

exports.kind = kind;
var _default = kind;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/kind/styles.js":
/*!*************************************************!*\
  !*** ./node_modules/@enact/core/kind/styles.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.styles = exports["default"] = void 0;

var _bind = _interopRequireDefault(__webpack_require__(/*! classnames/bind */ "./node_modules/classnames/bind.js"));

var _util = __webpack_require__(/*! ../util */ "./node_modules/@enact/core/util/util.js");

var _util2 = __webpack_require__(/*! ./util */ "./node_modules/@enact/core/kind/util.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Merges external and internal CSS classes and style objects. Internal CSS classes can be
 * optionally mapped to alternate names (e.g. those generated by CSS modules) by including a
 * `css` parameter.
 *
 * Example:
 * ```
 *	const stylesConfig = {
 *		css: {
 *			button: 'unambiguous-button-class-name',
 *			client: 'unambiguous-button-class-name-client'
 *		},
 *		className: 'button global-class',
 *		style: {
 *			color: 'red'
 *		}
 *	};
 *
 *	const props = {
 *		className: 'my-button',
 *		style: {
 *			display: 'none'
 *		}
 *	};
 *
 *	const renderStyles = styles(stylesConfig);
 *	const renderStyles(props); // {className: 'unambiguous-button-class-name global-class', styles: {color: 'red', display: 'none'}}
 * ```
 *
 * @method styles
 * @param   {Object}    cfg  Configuration object containing one of `css`, `className`,
 *                           `publicClassNames`, and/or `style`
 *
 * @returns {Function}       Function that accepts a props object and mutates it to merge class
 *                           names and style objects and provide the `styler` utility function and
 *                           `css` merged class name map
 * @private
 */


var styles = function styles(cfg, optProps) {
  var className = cfg.className,
      configCss = cfg.css,
      _cfg$prop = cfg.prop,
      prop = _cfg$prop === void 0 ? 'className' : _cfg$prop,
      style = cfg.style;
  var allowedClassNames = cfg.publicClassNames;

  if (configCss && allowedClassNames === true) {
    allowedClassNames = Object.keys(configCss);
  } else if (typeof allowedClassNames === 'string') {
    allowedClassNames = allowedClassNames.split(/\s+/);
  }

  var renderStyles = function renderStyles(props) {
    var css = configCss;

    if (style) {
      props.style = Object.assign({}, style, props.style);
    } // if the props includes a css map, merge them together now


    if (css && allowedClassNames && props.css) {
      css = (0, _util.mergeClassNameMaps)(css, props.css, allowedClassNames);
    }

    var cn = css ? _bind["default"].bind(css) : _bind["default"];
    var joinedClassName = props[prop] = (0, _bind["default"])(className ? cn(className.split(' ')) : null, props.className);
    (0, _util2.addInternalProp)(props, 'css', css);
    (0, _util2.addInternalProp)(props, 'styler', {
      join: cn,
      append: function append() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        return cn.apply(void 0, [joinedClassName].concat(args));
      }
    });
    return props;
  };

  if (optProps) {
    return renderStyles(optProps);
  }

  return renderStyles;
};

exports.styles = styles;
var _default = styles;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/kind/util.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/core/kind/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addInternalProp = void 0;

var addInternalProp = function addInternalProp(props, name, value) {
  Object.defineProperty(props, name, {
    value: value,
    enumerable: false,
    writable: true
  });
  return props;
};

exports.addInternalProp = addInternalProp;

/***/ }),

/***/ "./node_modules/@enact/core/platform/platform.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/core/platform/platform.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.platform = exports.detect = exports["default"] = void 0;

var _uniq = _interopRequireDefault(__webpack_require__(/*! ramda/src/uniq */ "./node_modules/ramda/src/uniq.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var hasGesture = function hasGesture() {
  return Boolean('ongesturestart' in window || 'onmsgesturestart' in window && (window.navigator.msMaxTouchPoints > 1 || window.navigator.maxTouchPoints > 1));
};

var hasTouch = function hasTouch() {
  return Boolean('ontouchstart' in window || window.navigator.msMaxTouchPoints || window.navigator.msManipulationViewsEnabled && window.navigator.maxTouchPoints);
};

var platforms = [// Windows Phone 7 - 10
{
  platform: 'windowsPhone',
  regex: /Windows Phone (?:OS )?(\d+)[.\d]+/
}, // Android 4+ using Chrome
{
  platform: 'androidChrome',
  regex: /Android .* Chrome\/(\d+)[.\d]+/
}, // Android 2 - 4
{
  platform: 'android',
  regex: /Android(?:\s|\/)(\d+)/
}, // Kindle Fire
// Force version to 2, (desktop mode does not list android version)
{
  platform: 'android',
  regex: /Silk\/1./,
  forceVersion: 2,
  extra: {
    silk: 1
  }
}, // Kindle Fire HD (Silk versions 2 or 3)
// Force version to 4
{
  platform: 'android',
  regex: /Silk\/2./,
  forceVersion: 4,
  extra: {
    silk: 2
  }
}, {
  platform: 'android',
  regex: /Silk\/3./,
  forceVersion: 4,
  extra: {
    silk: 3
  }
}, // IE 8 - 10
{
  platform: 'ie',
  regex: /MSIE (\d+)/
}, // IE 11
{
  platform: 'ie',
  regex: /Trident\/.*; rv:(\d+)/
}, // Edge
{
  platform: 'edge',
  regex: /Edge\/(\d+)/
}, // iOS 3 - 5
// Apple likes to make this complicated
{
  platform: 'ios',
  regex: /iP(?:hone|ad;(?: U;)? CPU) OS (\d+)/
}, // webOS 1 - 3
{
  platform: 'webos',
  regex: /(?:web|hpw)OS\/(\d+)/
}, // webOS 4 / OpenWebOS
{
  platform: 'webos',
  regex: /WebAppManager|Isis|webOS\./,
  forceVersion: 4
}, // Open webOS release LuneOS
{
  platform: 'webos',
  regex: /LuneOS/,
  forceVersion: 4,
  extra: {
    luneos: 1
  }
}, // desktop Safari
{
  platform: 'safari',
  regex: /Version\/(\d+)[.\d]+\s+Safari/
}, // desktop Chrome
{
  platform: 'chrome',
  regex: /Chrome\/(\d+)[.\d]+/
}, // Firefox on Android
{
  platform: 'androidFirefox',
  regex: /Android;.*Firefox\/(\d+)/
}, // FirefoxOS
{
  platform: 'firefoxOS',
  regex: /Mobile;.*Firefox\/(\d+)/
}, // desktop Firefox
{
  platform: 'firefox',
  regex: /Firefox\/(\d+)/
}, // Blackberry Playbook
{
  platform: 'blackberry',
  regex: /PlayBook/i,
  forceVersion: 2
}, // Blackberry 10+
{
  platform: 'blackberry',
  regex: /BB1\d;.*Version\/(\d+\.\d+)/
}, // Tizen
{
  platform: 'tizen',
  regex: /Tizen (\d+)/
}];

var ua = function ua() {
  return window.navigator ? window.navigator.userAgent : '';
};

var _platform;
/**
 * @typedef {Object} PlatformDescription
 * @property {Boolean} gesture - `true` if the platform has native double-finger events
 * @property {Boolean} node - `true` only if `window` is `undefined`
 * @property {String} platformName - The name of the platform
 * @property {Boolean} touch - `true` if the platform has native single-finger events
 * @property {Boolean} unknown - `true` for any unknown system
 *
 * @memberof core/platform
 * @public
 */

/**
 * Returns the {@link core/platform.platform} object.
 *
 * @function detect
 * @returns {PlatformDescription}     The {@link core/platform.platform} object
 * @memberof core/platform
 * @public
 */


var detect = function detect() {
  if (_platform) {
    // if we've already determined the platform, we'll use that determination
    return _platform;
  } else if (typeof window === 'undefined') {
    return {
      gesture: false,
      node: true,
      touch: false,
      unknown: true
    };
  }

  var userAgent = ua();
  _platform = {
    gesture: hasGesture(),
    node: false,
    touch: hasTouch(),
    unknown: true
  };

  for (var i = 0, p, m, v; p = platforms[i]; i++) {
    m = p.regex.exec(userAgent);

    if (m) {
      _platform.unknown = false;

      if (p.forceVersion) {
        v = p.forceVersion;
      } else {
        v = Number(m[1]);
      }

      _platform[p.platform] = v;

      if (p.extra) {
        _platform = _objectSpread({}, _platform, p.extra);
      }

      _platform.platformName = p.platform;
      break;
    }
  }

  return _platform;
};
/**
 * Provides basic information about the running platform.
 *
 * @type {PlatformDescription}
 * @memberof core/platform
 * @public
 */


exports.detect = detect;
var platform = {};
exports.platform = platform;
['gesture', 'node', 'platformName', 'touch', 'unknown'].concat(_toConsumableArray((0, _uniq["default"])(platforms.map(function (p) {
  return p.platform;
})))).forEach(function (name) {
  Object.defineProperty(platform, name, {
    enumerable: true,
    get: function get() {
      var p = detect();
      return p[name];
    }
  });
});
var _default = platform;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/snapshot/snapshot.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/core/snapshot/snapshot.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isWindowReady = isWindowReady;
exports.onWindowReady = onWindowReady;
exports.windowReady = windowReady;
exports["default"] = void 0;

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Utilities to facilitate integration with v8 snapshot builds
 *
 * @module core/snapshot
 * @exports isWindowReady
 * @exports onWindowReady
 * @exports windowReady
 * @public
 */


var windowCallbacks = [];
/**
 * Determines if the `window` is available
 *
 * @function
 *
 * @returns {Boolean} `true` when `window` is ready
 * @memberof core/snapshot
 * @public
 */

function isWindowReady() {
  return typeof window !== 'undefined';
}
/**
 * Executes a callback, such as registering event handlers, when a valid `window` is available.
 *
 * During normal operation, the callback will be executed immediately. During a pre-rendering pass,
 * the callback is not be executed at all. When using snapshot, the callback is added to a queue
 * and is executed in order once the window is available.
 *
 * *Important Notes*
 * * The callback should not alter the initial HTML state. If it does, it will invalidate the
 * pre-render state and interfere with React rehydration.
 * * The callback should be limited to module-scoped actions and not component instance actions. If
 * the action is tied to a component, it should be invoked from within the component's lifecycle
 * methods.
 *
 * @function
 * @param   {Function}    callback    Function to run when the window is ready
 *
 * @returns {undefined}
 * @memberof core/snapshot
 * @public
 */


function onWindowReady(callback) {
  if (isWindowReady()) {
    callback();
  } else {
    windowCallbacks.push(callback);
  }
}
/**
 * Executes all queued window callbacks.
 *
 * Requires that the window be, in fact, available and will throw an `Error` if not.
 *
 * @function
 *
 * @returns {undefined}
 * @memberof core/snapshot
 * @public
 */


function windowReady() {
  !isWindowReady() ?  true ? (0, _invariant["default"])(false, 'windowReady cannot be run until the window is available') : undefined : void 0;
  windowCallbacks.forEach(function (f) {
    return f();
  });
}

var _default = onWindowReady;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/util/Job.js":
/*!**********************************************!*\
  !*** ./node_modules/@enact/core/util/Job.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Job = exports["default"] = void 0;

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
/**
 * Provides a convenient way to manage timed execution of functions.
 *
 * @class Job
 * @memberof core/util
 * @public
 */


var Job =
/*#__PURE__*/
function () {
  /**
   * @constructor
   * @param {Function}    fn       Function to execute as the requested job.
   * @param {Number}      timeout  The number of milliseconds to wait before starting the job.
   *
   * @memberof core/util.Job.prototype
   */
  function Job(fn, _timeout) {
    var _this = this;

    _classCallCheck(this, Job);

    this.id = null;
    this.fn = null;
    this.timeout = null;
    this.type = null;

    this.start = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this.startAfter.apply(_this, [_this.timeout].concat(args));
    };

    this.startAfter = function (timeout) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      _this.stop();

      _this.type = 'timeout';
      _this.id = setTimeout(function () {
        return _this.run(args);
      }, timeout);
    };

    this.stop = function () {
      if (_this.id) {
        if (_this.type === 'idle') {
          window.cancelIdleCallback(_this.id);
        } else if (_this.type === 'raf') {
          window.cancelAnimationFrame(_this.id);
        } else if (_this.type === 'timeout') {
          clearTimeout(_this.id);
        }

        _this.id = _this.type = null;
      }
    };

    this.throttle = function () {
      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
        args[_key3] = arguments[_key3];
      }

      _this.throttleUntil.apply(_this, [_this.timeout].concat(args));
    };

    this.throttleUntil = function (timeout) {
      if (!_this.id) {
        _this.type = 'timeout';

        for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
          args[_key4 - 1] = arguments[_key4];
        }

        _this.run(args);

        _this.id = setTimeout(_this.stop, timeout);
      }
    };

    this.idle = function () {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }

      _this.idleUntil.apply(_this, [null].concat(args));
    };

    this.idleUntil = function (timeout) {
      for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {
        args[_key6 - 1] = arguments[_key6];
      }

      if (typeof window !== 'undefined' && window.requestIdleCallback) {
        _this.stop();

        _this.type = 'idle';
        _this.id = window.requestIdleCallback(function () {
          return _this.run(args);
        }, {
          timeout: timeout
        });
      } else {
        // since we can't request an idle callback, just pass to startAfter()
        _this.startAfter.apply(_this, [timeout].concat(args));
      }
    };

    this.startRaf = function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }

      _this.startRafAfter.apply(_this, [_this.timeout].concat(args));
    };

    this.startRafAfter = function (timeout) {
      for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {
        args[_key8 - 1] = arguments[_key8];
      }

      _this.type = 'raf';

      if (typeof window !== 'undefined') {
        var time = null;

        var callback = function callback(timestamp) {
          if (time === null) {
            time = timestamp;
          }

          if (timeout && timestamp - time < timeout) {
            _this.id = window.requestAnimationFrame(callback);
          } else {
            time = null;

            _this.run(args);

            window.cancelAnimationFrame(_this.id);
            _this.id = null;
          }
        };

        _this.id = window.requestAnimationFrame(callback);
      } else {
        // If requestAnimationFrame is not supported just run the function immediately
        _this.run(args);
      }
    };

    this.promise = function (promise) {
      !(promise && typeof promise.then === 'function') ?  true ? (0, _invariant["default"])(false, 'promise expects a thenable') : undefined : void 0;
      _this.type = 'promise';
      _this.id = promise;
      return promise.then(function (result) {
        if (_this.id === promise) {
          _this.stop();

          return _this.run([result]);
        }
      });
    };

    this.fn = fn;
    this.timeout = _timeout;
  }

  _createClass(Job, [{
    key: "run",
    value: function run(args) {
      // don't want to inadvertently apply Job's context on `fn`
      return this.fn.apply(null, args);
    }
    /**
     * Starts the job.
     *
     * @method
     * @param   {...*}       [args]  Any args passed are forwarded to the callback
     *
     * @returns {undefined}
     * @memberof core/util.Job.prototype
     * @public
     */

  }]);

  return Job;
}();

exports.Job = Job;
var _default = Job;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/core/util/util.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/core/util/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Job", {
  enumerable: true,
  get: function get() {
    return _Job["default"];
  }
});
exports.perfNow = exports.mergeClassNameMaps = exports.memoize = exports.isRenderable = exports.extractAriaProps = exports.coerceFunction = exports.coerceArray = exports.cap = void 0;

var _always = _interopRequireDefault(__webpack_require__(/*! ramda/src/always */ "./node_modules/ramda/src/always.js"));

var _is = _interopRequireDefault(__webpack_require__(/*! ramda/src/is */ "./node_modules/ramda/src/is.js"));

var _unless = _interopRequireDefault(__webpack_require__(/*! ramda/src/unless */ "./node_modules/ramda/src/unless.js"));

var ReactIs = _interopRequireWildcard(__webpack_require__(/*! react-is */ "./node_modules/react-is/index.js"));

var _Job = _interopRequireDefault(__webpack_require__(/*! ./Job */ "./node_modules/@enact/core/util/Job.js"));

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/**
 * Capitalizes a given string (not locale-aware).
 *
 * @function
 * @param   {String}    str   The string to capitalize.
 *
 * @returns {String}          The capitalized string.
 * @memberof core/util
 * @public
 */


var cap = function cap(str) {
  return str.slice(0, 1).toUpperCase() + str.slice(1);
};
/**
 * If `arg` is a function, return it. Otherwise returns a function that returns `arg`.
 *
 * Example:
 * ```
 *	const returnsZero = coerceFunction(0);
 *	const returnsArg = coerceFunction(() => 0);
 * ```
 * @function
 * @param {*}    arg    Function or value
 *
 * @returns {Function}  Either `arg` if `arg` is a function, or a function that returns `arg`
 * @memberof core/util
 * @public
 */


exports.cap = cap;
var coerceFunction = (0, _unless["default"])((0, _is["default"])(Function), _always["default"]);
/**
 * If `arg` is array-like, return it. Otherwise returns a single element array containing `arg`.
 *
 * Example:
 * ```
 *	const returnsArray = coerceArray(0); // [0]
 *	const returnsArg = coerceArray([0]); // [0]
 *	const returnsObjArg = coerceArray({0: 'zeroth', length: 1});
 * ```
 * @see http://ramdajs.com/docs/#isArrayLike
 * @function
 * @param {*}    array    Array or value
 *
 * @returns {Array}       Either `array` or `[array]`
 * @memberof core/util
 * @public
 */

exports.coerceFunction = coerceFunction;

var coerceArray = function coerceArray(array) {
  return Array.isArray(array) ? array : [array];
};
/**
 * Loosely determines if `tag` is a renderable component (either a string or a function).
 *
 * @function
 * @param {*}    tag    Component to test
 *
 * @returns {Boolean}   `true` if `tag` is either a string or a function
 * @memberof core/util
 * @public
 */


exports.coerceArray = coerceArray;

var isRenderable = function isRenderable(tag) {
  return ReactIs.isValidElementType(tag);
};
/**
 * Removes ARIA-related props from `props` and returns them in a new object.
 *
 * Specifically, it removes the `role` prop and any prop prefixed with `aria-`. This is useful when
 * redirecting ARIA-related props from a non-focusable root element to a focusable child element.
 *
 * @function
 * @param   {Object}    props    Props object
 *
 * @returns {Object}             ARIA-related props
 * @memberof core/util
 * @public
 */


exports.isRenderable = isRenderable;

var extractAriaProps = function extractAriaProps(props) {
  var aria = {};
  Object.keys(props).forEach(function (key) {
    if (key === 'role' || key.indexOf('aria-') === 0) {
      aria[key] = props[key];
      delete props[key];
    }
  });
  return aria;
};
/**
 * Gets the current timestamp of either `window.performance.now` or `Date.now`
 *
 * @function
 *
 * @returns {Number}                    The timestamp from `window.performance.now` or `Date.now`
 * @memberof core/util
 * @public
 */


exports.extractAriaProps = extractAriaProps;

var perfNow = function perfNow() {
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
    return window.performance.now();
  } else {
    return Date.now();
  }
};
/**
 * Merges two class name maps into one.
 *
 * The resulting map will only contain the class names defined in the `baseMap` and will be appended
 * with the value from `additiveMap` if it exists. Further, `allowedClassNames` may optionally limit
 * which keys will be merged from `additiveMap` into `baseMap`.
 *
 * Example:
 * ```
 * // merges all matching class names from additiveMap1 with baseMap1
 * const newMap1 = mergeClassNameMaps(baseMap1, additiveMap1);
 *
 * // merge only 'a' and 'b' class names from additiveMap2 with baseMap2
 * const newMap2 = mergeClassNameMaps(baseMap2, additiveMap2, ['a', 'b']);
 * ```
 *
 * @function
 * @param {Object}     baseMap             The source mapping of logical class name to physical
 *                                         class name
 * @param {Object}     additiveMap         Mapping of logical to physical class names which are
 *                                         concatenated with `baseMap` where the logical names match
 * @param {String[]}  [allowedClassNames]  Array of logical class names that can be augmented. When
 *                                         set, the logical class name must exist in `baseMap`,
 *                                         `additiveMap`, and this array to be concatenated.
 *
 * @returns {Object}                       The merged class name map.
 * @memberof core/util
 * @public
 */


exports.perfNow = perfNow;

var mergeClassNameMaps = function mergeClassNameMaps(baseMap, additiveMap, allowedClassNames) {
  var css = baseMap;

  if (baseMap && additiveMap) {
    allowedClassNames = allowedClassNames || Object.keys(additiveMap); // if the props includes a css map, merge them together now

    css = Object.assign({}, baseMap);
    allowedClassNames.forEach(function (key) {
      if (baseMap[key] && additiveMap[key]) {
        css[key] = baseMap[key] + ' ' + additiveMap[key];
      }
    });
  }

  return css;
};
/**
 * Creates a function that memoizes the result of `fn`.
 *
 * Note that this function is a naive implementation and only checks the first argument for
 * memoization.
 *
 * @function
 * @param {Function}    fn    The function to have its output memoized.
 *
 * @returns {Function}        The new memoized function.
 * @memberof core/util
 * @public
 */


exports.mergeClassNameMaps = mergeClassNameMaps;

var memoize = function memoize(fn) {
  var cache = {};
  return function () {
    var n = arguments.length <= 0 ? undefined : arguments[0];

    if (n in cache) {
      return cache[n];
    } else {
      var result = fn.apply(void 0, arguments);
      cache[n] = result;
      return result;
    }
  };
};

exports.memoize = memoize;

/***/ }),

/***/ "./node_modules/@enact/i18n/I18nDecorator/I18nDecorator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@enact/i18n/I18nDecorator/I18nDecorator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.I18nDecorator = exports.I18nContextDecorator = exports.I18nContext = exports.contextTypes = exports["default"] = void 0;

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _locale = __webpack_require__(/*! ../locale */ "./node_modules/@enact/i18n/locale/locale.js");

var _index = _interopRequireDefault(__webpack_require__(/*! ../src/index.js */ "./node_modules/@enact/i18n/src/index.js"));

var _resBundle = __webpack_require__(/*! ../src/resBundle */ "./node_modules/@enact/i18n/src/resBundle.js");

var _wrapIlibCallback = _interopRequireDefault(__webpack_require__(/*! ../src/wrapIlibCallback */ "./node_modules/@enact/i18n/src/wrapIlibCallback.js"));

var _getI18nClasses = _interopRequireDefault(__webpack_require__(/*! ./getI18nClasses */ "./node_modules/@enact/i18n/I18nDecorator/getI18nClasses.js"));

var _windowFocus = __webpack_require__(/*! ./windowFocus */ "./node_modules/@enact/i18n/I18nDecorator/windowFocus.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var join = function join(a, b) {
  return a && b ? a + ' ' + b : a || b || '';
};

var contextTypes = {
  rtl: _propTypes["default"].bool,
  updateLocale: _propTypes["default"].func
};
exports.contextTypes = contextTypes;

var I18nContext = _react["default"].createContext(null);
/**
 * Default config for `I18nDecorator`.
 *
 * @memberof i18n/I18nDecorator.I18nDecorator
 * @hocconfig
 */


exports.I18nContext = I18nContext;
var defaultConfig = {
  /**
   * Array of locales that should be treated as latin regardless of their script.
   *
   * @type {String[]}
   * @default	null
   * @public
   * @memberof i18n/I18nDecorator.I18nDecorator.defaultConfig
   */
  latinLanguageOverrides: null,

  /**
   * Array of locales that should be treated as non-latin regardless of their script.
   *
   * @type {String[]}
   * @default null
   * @public
   * @memberof i18n/I18nDecorator.I18nDecorator.defaultConfig
   */
  nonLatinLanguageOverrides: null,

  /**
   * Array of resource loaders to be invoked after a locale change.
   *
   * Each loader must be a function which accepts an object and returns either the resource when
   * `options.sync` is `true` or a `Promise` for the resource when `options.sync` is `false`.
   *
   * ```
   * resources: [
   *   (options) => new Promise((resolve, reject) => {
   *     fetchResource({onLoad: resolve, onError: reject});
   *   })
   * ]
   * ```
   *
   * If you need to handle the resource in some way on load, you can pass an object with an
   * `onLoad` member that will be called once all resources have been loaded. This should be used
   * if loading a resource has side effects that should only be applied once all loading has
   * completed.
   *
   * ```
   * resources: [
   *   {resource: (options) => { ... fetch ... }, onLoad: (res) => { ... apply side effect ... }}
   * ]
   * ```
   *
   * @type {Array<Function|Object>}
   * @default null
   * @public
   * @memberof i18n/I18nDecorator.I18nDecorator.defaultConfig
   */
  resources: null,

  /**
   * Retrieve i18n resource files synchronously
   *
   * @type {Boolean}
   * @default false
   * @public
   * @memberof i18n/I18nDecorator.I18nDecorator.defaultConfig
   */
  sync: false
};
/**
 * A higher-order component that is used to wrap the root element in an app. It provides an `rtl` member on the
 * context of the wrapped component, allowing the children to check the current text directionality as well as
 * an `updateLocale` method that can be used to update the current locale.
 *
 * There are no configurable options on this HOC.
 *
 * @class I18nDecorator
 * @memberof i18n/I18nDecorator
 * @hoc
 * @public
 */

var I18nDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var latinLanguageOverrides = config.latinLanguageOverrides,
      nonLatinLanguageOverrides = config.nonLatinLanguageOverrides,
      sync = config.sync; // Normalize the structure of the external resources to be an array of resource/onLoad pairs

  var extResources = Array.isArray(config.resources) ? config.resources.map(function (res) {
    if (!res) return;
    var fn = res.resource || res;
    var onLoad = res.onLoad;
    if (typeof fn !== 'function') return;
    return {
      resource: fn,
      onLoad: onLoad
    };
  }).filter(Boolean) : [];
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));

      _this.handleLocaleChange = function () {
        (0, _windowFocus.onWindowFocus)(_this.updateLocale);
      };

      _this.updateLocale = function (newLocale) {
        var state = _this.getDerivedStateForLocale(newLocale);

        if (sync) {
          _this.setState(state);
        } else {
          _this.loadResources(newLocale);

          _this.setState({
            resourcesLoaded: false
          });
        }
      };

      var ilibLocale = _index["default"].getLocale();

      var locale = props.locale && props.locale !== ilibLocale ? props.locale : ilibLocale;
      _this.loadResourceJob = new _util.Job(_this.setState.bind(_assertThisInitialized(_this)));
      _this.state = _this.getDerivedStateForLocale(locale);
      return _this;
    }

    _createClass(_class, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          rtl: this.state.rtl,
          updateLocale: this.updateLocale
        };
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
          (0, _dispatcher.on)('languagechange', this.handleLocaleChange, window);
        }

        if (!sync) {
          this.loadResources(this.state.locale);
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.props.locale !== prevProps.locale) {
          var state = this.getDerivedStateForLocale(this.props.locale);

          if (sync) {
            // eslint-disable-next-line react/no-did-update-set-state
            this.setState(state);
          } else {
            this.loadResources(this.props.locale);
          }
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.loadResourceJob.stop();

        if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
          (0, _dispatcher.off)('languagechange', this.handleLocaleChange, window);
        }
      }
    }, {
      key: "getDerivedStateForLocale",
      value: function getDerivedStateForLocale(spec) {
        var locale = (0, _locale.updateLocale)(spec);
        var state = {
          locale: locale,
          resourcesLoaded: sync
        };

        if (sync) {
          var options = {
            locale: locale,
            sync: sync
          };
          state.rtl = (0, _wrapIlibCallback["default"])(_locale.isRtlLocale, options);
          state.classes = (0, _wrapIlibCallback["default"])(_getI18nClasses["default"], _objectSpread({}, options, {
            latinLanguageOverrides: latinLanguageOverrides,
            nonLatinLanguageOverrides: nonLatinLanguageOverrides
          }));
          var bundle = (0, _wrapIlibCallback["default"])(_resBundle.createResBundle, options);
          (0, _resBundle.setResBundle)(bundle);
          extResources.forEach(function (_ref) {
            var resource = _ref.resource,
                onLoad = _ref.onLoad;
            var result = resource(options);
            if (onLoad) onLoad(result);
          });
        }

        return state;
      }
    }, {
      key: "loadResources",
      value: function loadResources(locale) {
        var options = {
          sync: sync,
          locale: locale
        };
        var resources = Promise.all([(0, _wrapIlibCallback["default"])(_locale.isRtlLocale, options), (0, _wrapIlibCallback["default"])(_getI18nClasses["default"], _objectSpread({}, options, {
          latinLanguageOverrides: latinLanguageOverrides,
          nonLatinLanguageOverrides: nonLatinLanguageOverrides
        })), // move updating into a new method with call to setState
        (0, _wrapIlibCallback["default"])(_resBundle.createResBundle, options)].concat(_toConsumableArray(extResources.map(function (res) {
          return (0, _wrapIlibCallback["default"])(res.resource, options);
        })))).then(function (_ref2) {
          var _ref3 = _toArray(_ref2),
              rtl = _ref3[0],
              classes = _ref3[1],
              bundle = _ref3[2],
              userResources = _ref3.slice(3);

          (0, _resBundle.setResBundle)(bundle);
          extResources.forEach(function (_ref4, i) {
            var onLoad = _ref4.onLoad;
            return onLoad && onLoad(userResources[i]);
          });
          return {
            locale: locale,
            classes: classes,
            rtl: rtl,
            resourcesLoaded: true
          };
        }); // TODO: Resolve how to handle failed resource resquests
        // .catch(...);

        this.loadResourceJob.promise(resources);
      }
    }, {
      key: "render",
      value: function render() {
        var props = Object.assign({}, this.props);
        delete props.locale;
        props.className = join(this.state.classes, this.props.className);
        var value = {
          locale: this.state.locale,
          rtl: this.state.rtl,
          loaded: this.state.resourcesLoaded,
          updateLocale: this.updateLocale
        };
        return _react["default"].createElement(I18nContext.Provider, {
          value: value
        }, _react["default"].createElement(Wrapped, props));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'I18nDecorator', _class.propTypes =
  /** @lends i18n/I18nDecorator.I18nDecorator.prototype */
  {
    /**
     * Classname for a root app element.
     *
     * @type {String}
     * @public
     */
    className: _propTypes["default"].string,

    /**
     * A string with a {@link https://tools.ietf.org/html/rfc5646|BCP 47 language tag}.
     *
     * The system locale will be used by default.
     *
     * @type {String}
     * @public
     */
    locale: _propTypes["default"].string
  }, _class.childContextTypes = contextTypes, _temp;
});
exports.I18nDecorator = I18nDecorator;
var contextDefaultConfig = {
  localeProp: null,
  rtlProp: null,
  updateLocaleProp: null
};
var I18nContextDecorator = (0, _hoc["default"])(contextDefaultConfig, function (config, Wrapped) {
  var loadedProp = config.loadedProp,
      localeProp = config.localeProp,
      rtlProp = config.rtlProp,
      updateLocaleProp = config.updateLocaleProp; // eslint-disable-next-line no-shadow

  return function I18nContextDecorator(props) {
    return _react["default"].createElement(I18nContext.Consumer, null, function (i18nContext) {
      if (i18nContext) {
        var loaded = i18nContext.loaded,
            locale = i18nContext.locale,
            rtl = i18nContext.rtl,
            update = i18nContext.updateLocale;
        props = Object.assign({}, props);

        if (loadedProp) {
          props[loadedProp] = loaded;
        }

        if (localeProp) {
          props[localeProp] = locale;
        }

        if (rtlProp) {
          props[rtlProp] = rtl;
        }

        if (updateLocaleProp) {
          props[updateLocaleProp] = update;
        }
      }

      return _react["default"].createElement(Wrapped, props);
    });
  };
});
exports.I18nContextDecorator = I18nContextDecorator;
var _default = I18nDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/i18n/I18nDecorator/getI18nClasses.js":
/*!******************************************************************!*\
  !*** ./node_modules/@enact/i18n/I18nDecorator/getI18nClasses.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _locale = __webpack_require__(/*! ../locale */ "./node_modules/@enact/i18n/locale/locale.js");

var _LocaleInfo = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/LocaleInfo */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var base = 'enact-locale-'; // Callback-friendly version of Promise.all()

function all(fns, callback) {
  var result = [];
  var complete = 0;

  var done = function done(index) {
    return function (value) {
      result[index] = value;
      complete++;

      if (complete === fns.length) {
        callback(result);
      }
    };
  };

  fns.forEach(function (fn, index) {
    return fn(done(index));
  });
}

function getClassesForLocale(li, options) {
  var locale = li.getLocale();

  var latinLanguageOverrides = options.latinLanguageOverrides,
      nonLatinLanguageOverrides = options.nonLatinLanguageOverrides,
      rest = _objectWithoutProperties(options, ["latinLanguageOverrides", "nonLatinLanguageOverrides"]);

  all([// allow enact to define other fonts for non-Latin languages, or for certain
  // Latin-based languages where the characters with some accents don't appear in the
  // regular fonts, creating a strange 'ransom note' look with a mix of fonts in the
  // same word. So, treat it like a non-Latin language in order to get all the characters
  // to display with the same font.
  function (done) {
    return (0, _locale.isNonLatinLocale)(locale, _objectSpread({}, rest, {
      latinLanguageOverrides: latinLanguageOverrides,
      nonLatinLanguageOverrides: nonLatinLanguageOverrides,
      onLoad: function onLoad(isNonLatin) {
        return done(isNonLatin ? base + 'non-latin' : '');
      }
    }));
  }, // allow enact to apply right-to-left styles to the app and widgets if necessary
  function (done) {
    return (0, _locale.isRtlLocale)(_objectSpread({}, rest, {
      onLoad: function onLoad(isRtl) {
        return done(isRtl ? base + 'right-to-left' : '');
      }
    }));
  }], function (classes) {
    var scriptName = li.getScript();

    if (scriptName !== 'Latn' && scriptName !== 'Cyrl' && scriptName !== 'Grek') {
      // GF-45884: allow enact to avoid setting italic fonts for those scripts that do not
      // commonly use italics
      classes.push(base + 'non-italic');
    } // allow enact or the apps to give CSS classes that are specific to the language, country, or script


    if (locale.getLanguage()) {
      classes.push(base + locale.getLanguage());

      if (locale.getScript()) {
        classes.push(base + locale.getLanguage() + '-' + locale.getScript());

        if (locale.getRegion()) {
          classes.push(base + locale.getLanguage() + '-' + locale.getScript() + '-' + locale.getRegion());
        }
      } else if (locale.getRegion()) {
        classes.push(base + locale.getLanguage() + '-' + locale.getRegion());
      }
    }

    if (locale.getScript()) {
      classes.push(base + locale.getScript());
    }

    if (locale.getRegion()) {
      classes.push(base + locale.getRegion());
    }

    options.onLoad(classes.filter(Boolean).join(' '));
  });
}
/*
 * A function that returns locale in class name.
 *
 * @memberof i18n/I18nDecorator
 * @param {options.sync} Perform a synchronous request for the classes
 * @param {options.onLoad} Called with a string of i18n classes
 * @param {options.latinLanguageOverrides} Array of locales to treat as latin
 * @param {options.nonLatinLanguageOverrides} Array of locales to treat as non-latin
 * @private
 */


function getI18nClasses() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var sync = options.sync,
      _onLoad = options.onLoad;
  if (!_onLoad) return; // eslint-disable-next-line no-new,no-undefined

  new _LocaleInfo["default"](undefined, {
    sync: sync,
    onLoad: function onLoad(li) {
      return getClassesForLocale(li, _objectSpread({}, options, {
        onLoad: _onLoad
      }));
    }
  }); // for the current locale
}

var _default = getI18nClasses;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/i18n/I18nDecorator/windowFocus.js":
/*!***************************************************************!*\
  !*** ./node_modules/@enact/i18n/I18nDecorator/windowFocus.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onWindowFocus = void 0;

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js");

var _snapshot = __webpack_require__(/*! @enact/core/snapshot */ "./node_modules/@enact/core/snapshot/snapshot.js");

var focused = false;
var queue = new Set();

var invoke = function invoke(fn) {
  try {
    fn();
  } catch (e) {// failing silently
  }
};

var flush = function flush() {
  return queue.forEach(invoke);
};

var onWindowFocus = function onWindowFocus(handler) {
  if (focused) {
    handler();
  } else {
    queue.add(handler);
  }
};

exports.onWindowFocus = onWindowFocus;
(0, _snapshot.onWindowReady)(function () {
  focused = true; // Treat window as initially focused once ready

  flush();
  (0, _dispatcher.on)('focus', function () {
    focused = true;
    flush();
  }, window);
  (0, _dispatcher.on)('blur', function () {
    focused = false;
  }, window);
});

/***/ }),

/***/ "./node_modules/@enact/i18n/Uppercase/Uppercase.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/Uppercase/Uppercase.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Uppercase = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _util = __webpack_require__(/*! ../util */ "./node_modules/@enact/i18n/util/util.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Provides higher-order component interface for handling locale-aware uppercasing.
 *
 * @module i18n/Uppercase
 * @exports Uppercase
 */


var isString = function isString(content) {
  return typeof content === 'string';
};

var formatContent = function formatContent(casing, content) {
  switch (casing) {
    case 'word':
      return (0, _util.toWordCase)(content);

    case 'sentence':
      return (0, _util.toCapitalized)(content);

    case 'upper':
      return (0, _util.toUpperCase)(content);
  }
};
/**
 * A higher-order component that is used to wrap an element to provide locale-aware uppercasing of
 * `children`, provided that `children` is a single string. Other values for `children` are
 * unchanged. It supports a `casing` property which can be used to override the uppercase as-needed.
 *
 * There are no configurable options on this HOC.
 *
 * @class Uppercase
 * @memberof i18n/Uppercase
 * @hoc
 * @public
 */


var Uppercase = (0, _hoc["default"])(function (config, Wrapped) {
  return (0, _kind["default"])({
    // eslint-disable-line no-unused-vars
    name: 'Uppercase',
    propTypes:
    /** @lends i18n/Uppercase.Uppercase.prototype */
    {
      /**
       * Configures the mode of uppercasing that should be performed.
       *
       * Options are:
       *   `'upper'` to capitalize all characters.
       *   `'preserve'` to maintain the original casing.
       *   `'word'` to capitalize the first letter of each word.
       *   `'sentence'` to capitalize the first letter of the string.
       *
       * @type {String}
       * @default 'upper'
       * @public
       */
      casing: _propTypes["default"].oneOf(['upper', 'preserve', 'word', 'sentence'])
    },
    defaultProps: {
      casing: 'upper'
    },
    computed: {
      children: function children(_ref) {
        var casing = _ref.casing,
            _children = _ref.children;

        if (casing !== 'preserve' && _react["default"].Children.count(_children)) {
          return isString(_children) ? formatContent(casing, _children) : _react["default"].Children.map(_children, function (child) {
            return isString(child) ? formatContent(casing, child) : child;
          });
        }

        return _children;
      }
    },
    render: function render(props) {
      delete props.casing;
      return _react["default"].createElement(Wrapped, props);
    }
  });
});
exports.Uppercase = Uppercase;
var _default = Uppercase;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib sync recursive ^\\.\\/.*Cal\\.js$":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib sync ^\.\/.*Cal\.js$ ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./CopticCal.js": "./node_modules/@enact/i18n/ilib/lib/CopticCal.js",
	"./EthiopicCal.js": "./node_modules/@enact/i18n/ilib/lib/EthiopicCal.js",
	"./GregorianCal.js": "./node_modules/@enact/i18n/ilib/lib/GregorianCal.js",
	"./HanCal.js": "./node_modules/@enact/i18n/ilib/lib/HanCal.js",
	"./HebrewCal.js": "./node_modules/@enact/i18n/ilib/lib/HebrewCal.js",
	"./IslamicCal.js": "./node_modules/@enact/i18n/ilib/lib/IslamicCal.js",
	"./JulianCal.js": "./node_modules/@enact/i18n/ilib/lib/JulianCal.js",
	"./PersianAlgoCal.js": "./node_modules/@enact/i18n/ilib/lib/PersianAlgoCal.js",
	"./PersianCal.js": "./node_modules/@enact/i18n/ilib/lib/PersianCal.js",
	"./ThaiSolarCal.js": "./node_modules/@enact/i18n/ilib/lib/ThaiSolarCal.js"
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = "./node_modules/@enact/i18n/ilib/lib sync recursive ^\\.\\/.*Cal\\.js$";

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/Astro.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/Astro.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * astro.js - Static functions to support astronomical calculations
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
IDate.js
Utils.js
MathUtils.js
SearchUtils.js
GregorianDate.js
GregRataDie.js
*/
// !data astro

/*
 * These routines were derived from a public domain set of JavaScript 
 * functions for positional astronomy by John Walker of Fourmilab, 
 * September 1999.
 */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var SearchUtils = __webpack_require__(/*! ./SearchUtils.js */ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js");

var GregorianDate = __webpack_require__(/*! ./GregorianDate.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");

var GregRataDie = __webpack_require__(/*! ./GregRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/GregRataDie.js");

var Astro = {};
/**
 * Load in all the data needed for astrological calculations.
 * 
 * @private
 * @param {boolean} sync
 * @param {*} loadParams
 * @param {function(*)|undefined} callback
 */

Astro.initAstro = function (sync, loadParams, callback) {
  if (!ilib.data.astro) {
    Utils.loadData({
      object: "Astro",
      name: "astro.json",
      // countries in their own language 
      locale: "-",
      // only need to load the root file 
      nonLocale: true,
      sync: sync,
      loadParams: loadParams,
      callback: ilib.bind(this, function (astroData) {
        /** 
         * @type {{
         *  	_EquinoxpTerms:Array.<number>, 
         *  	_JDE0tab1000:Array.<number>, 
         *  	_JDE0tab2000:Array.<number>, 
         *  	_deltaTtab:Array.<number>,
         *  	_oterms:Array.<number>,
         *  	_nutArgMult:Array.<number>, 
         *  	_nutArgCoeff:Array.<number>, 
         *  	_nutCoeffA:Array.<number>,
         *  	_nutCoeffB:Array.<number>,
         *  	_coeff19th:Array.<number>,
         *  	_coeff18th:Array.<number>,
         *  	_solarLongCoeff:Array.<number>, 
         *  	_solarLongMultipliers:Array.<number>, 
         *  	_solarLongAddends:Array.<number>, 
         *  	_meanMoonCoeff:Array.<number>,
         *  	_elongationCoeff:Array.<number>,
         *  	_solarAnomalyCoeff:Array.<number>,
         *  	_lunarAnomalyCoeff:Array.<number>,
         *  	_moonFromNodeCoeff:Array.<number>,
         *  	_eCoeff:Array.<number>,
         *  	_lunarElongationLongCoeff:Array.<number>,
         *  	_solarAnomalyLongCoeff:Array.<number>,
         *  	_lunarAnomalyLongCoeff:Array.<number>,
         *  	_moonFromNodeLongCoeff:Array.<number>,
         *  	_sineCoeff:Array.<number>,
         *  	_nmApproxCoeff:Array.<number>,
         *  	_nmCapECoeff:Array.<number>,
         *  	_nmSolarAnomalyCoeff:Array.<number>,
         *  	_nmLunarAnomalyCoeff:Array.<number>,
         *  	_nmMoonArgumentCoeff:Array.<number>,
         *  	_nmCapOmegaCoeff:Array.<number>,
         *  	_nmEFactor:Array.<number>,
         *  	_nmSolarCoeff:Array.<number>,
         *  	_nmLunarCoeff:Array.<number>,
         *  	_nmMoonCoeff:Array.<number>,
         *  	_nmSineCoeff:Array.<number>,
         *  	_nmAddConst:Array.<number>,
         *  	_nmAddCoeff:Array.<number>,
         *  	_nmAddFactor:Array.<number>,
         *  	_nmExtra:Array.<number>
         *  }}
         */
        ilib.data.astro = astroData;

        if (callback && typeof callback === 'function') {
          callback(astroData);
        }
      })
    });
  } else {
    if (callback && typeof callback === 'function') {
      callback(ilib.data.astro);
    }
  }
};
/**
 * Convert degrees to radians.
 * 
 * @static
 * @protected
 * @param {number} d angle in degrees
 * @return {number} angle in radians 
 */


Astro._dtr = function (d) {
  return d * Math.PI / 180.0;
};
/**
 * Convert radians to degrees.
 * 
 * @static
 * @protected
 * @param {number} r angle in radians
 * @return {number} angle in degrees 
 */


Astro._rtd = function (r) {
  return r * 180.0 / Math.PI;
};
/**
 * Return the cosine of an angle given in degrees.
 * @static
 * @protected
 * @param {number} d angle in degrees
 * @return {number} cosine of the angle.
 */


Astro._dcos = function (d) {
  return Math.cos(Astro._dtr(d));
};
/**
 * Return the sine of an angle given in degrees.
 * @static
 * @protected
 * @param {number} d angle in degrees
 * @return {number} sine of the angle.
 */


Astro._dsin = function (d) {
  return Math.sin(Astro._dtr(d));
};
/**
 * Return the tan of an angle given in degrees.
 * @static
 * @protected
 * @param {number} d angle in degrees
 * @return {number} tan of the angle.
 */


Astro._dtan = function (d) {
  return Math.tan(Astro._dtr(d));
};
/**
 * Range reduce angle in degrees.
 * 
 * @static
 * @param {number} a angle to reduce
 * @return {number} the reduced angle  
 */


Astro._fixangle = function (a) {
  return a - 360.0 * Math.floor(a / 360.0);
};
/**
 * Range reduce angle in radians.
 * 
 * @static
 * @protected
 * @param {number} a angle to reduce
 * @return {number} the reduced angle  
 */


Astro._fixangr = function (a) {
  return a - 2 * Math.PI * Math.floor(a / (2 * Math.PI));
};
/**
 * Determine the Julian Ephemeris Day of an equinox or solstice.  The "which" 
 * argument selects the item to be computed:
 * 
 * <ul>
 * <li>0   March equinox
 * <li>1   June solstice
 * <li>2   September equinox
 * <li>3   December solstice
 * </ul>
 * 
 * @static
 * @protected
 * @param {number} year Gregorian year to calculate for
 * @param {number} which Which equinox or solstice to calculate
 */


Astro._equinox = function (year, which) {
  var deltaL, i, j, JDE0, JDE, JDE0tab, S, T, W, Y;
  /*  Initialize terms for mean equinox and solstices.  We
      have two sets: one for years prior to 1000 and a second
      for subsequent years.  */

  if (year < 1000) {
    JDE0tab = ilib.data.astro._JDE0tab1000;
    Y = year / 1000;
  } else {
    JDE0tab = ilib.data.astro._JDE0tab2000;
    Y = (year - 2000) / 1000;
  }

  JDE0 = JDE0tab[which][0] + JDE0tab[which][1] * Y + JDE0tab[which][2] * Y * Y + JDE0tab[which][3] * Y * Y * Y + JDE0tab[which][4] * Y * Y * Y * Y; //document.debug.log.value += "JDE0 = " + JDE0 + "\n";

  T = (JDE0 - 2451545.0) / 36525; //document.debug.log.value += "T = " + T + "\n";

  W = 35999.373 * T - 2.47; //document.debug.log.value += "W = " + W + "\n";

  deltaL = 1 + 0.0334 * Astro._dcos(W) + 0.0007 * Astro._dcos(2 * W); //document.debug.log.value += "deltaL = " + deltaL + "\n";
  //  Sum the periodic terms for time T

  S = 0;
  j = 0;

  for (i = 0; i < 24; i++) {
    S += ilib.data.astro._EquinoxpTerms[j] * Astro._dcos(ilib.data.astro._EquinoxpTerms[j + 1] + ilib.data.astro._EquinoxpTerms[j + 2] * T);
    j += 3;
  } //document.debug.log.value += "S = " + S + "\n";
  //document.debug.log.value += "Corr = " + ((S * 0.00001) / deltaL) + "\n";


  JDE = JDE0 + S * 0.00001 / deltaL;
  return JDE;
};
/* 
 * The table of observed Delta T values at the beginning of
 * years from 1620 through 2014 as found in astro.json is taken from
 * http://www.staff.science.uu.nl/~gent0113/deltat/deltat.htm
 * and
 * ftp://maia.usno.navy.mil/ser7/deltat.data
 */

/**  
 * Determine the difference, in seconds, between dynamical time and universal time.
 * 
 * @static
 * @protected
 * @param {number} year to calculate the difference for
 * @return {number} difference in seconds between dynamical time and universal time  
 */


Astro._deltat = function (year) {
  var dt, f, i, t;

  if (year >= 1620 && year <= 2014) {
    i = Math.floor(year - 1620);
    f = year - 1620 - i;
    /* Fractional part of year */

    dt = ilib.data.astro._deltaTtab[i] + (ilib.data.astro._deltaTtab[i + 1] - ilib.data.astro._deltaTtab[i]) * f;
  } else {
    t = (year - 2000) / 100;

    if (year < 948) {
      dt = 2177 + 497 * t + 44.1 * t * t;
    } else {
      dt = 102 + 102 * t + 25.3 * t * t;

      if (year > 2000 && year < 2100) {
        dt += 0.37 * (year - 2100);
      }
    }
  }

  return dt;
};
/**
 * Calculate the obliquity of the ecliptic for a given
 * Julian date.  This uses Laskar's tenth-degree
 * polynomial fit (J. Laskar, Astronomy and
 * Astrophysics, Vol. 157, page 68 [1986]) which is
 * accurate to within 0.01 arc second between AD 1000
 * and AD 3000, and within a few seconds of arc for
 * +/-10000 years around AD 2000.  If we're outside the
 * range in which this fit is valid (deep time) we
 * simply return the J2000 value of the obliquity, which
 * happens to be almost precisely the mean.
 * 
 * @static
 * @protected
 * @param {number} jd Julian Day to calculate the obliquity for
 * @return {number} the obliquity
 */


Astro._obliqeq = function (jd) {
  var eps, u, v, i;
  v = u = (jd - 2451545.0) / 3652500.0;
  eps = 23 + 26 / 60.0 + 21.448 / 3600.0;

  if (Math.abs(u) < 1.0) {
    for (i = 0; i < 10; i++) {
      eps += ilib.data.astro._oterms[i] / 3600.0 * v;
      v *= u;
    }
  }

  return eps;
};
/**
 * Return the position of the sun.  We return
 * intermediate values because they are useful in a
 * variety of other contexts.
 * @static
 * @protected
 * @param {number} jd find the position of sun on this Julian Day
 * @return {Object} the position of the sun and many intermediate
 * values
 */


Astro._sunpos = function (jd) {
  var ret = {},
      T,
      T2,
      T3,
      Omega,
      epsilon,
      epsilon0;
  T = (jd - 2451545.0) / 36525.0; //document.debug.log.value += "Sunpos.  T = " + T + "\n";

  T2 = T * T;
  T3 = T * T2;
  ret.meanLongitude = Astro._fixangle(280.46646 + 36000.76983 * T + 0.0003032 * T2); //document.debug.log.value += "ret.meanLongitude = " + ret.meanLongitude + "\n";

  ret.meanAnomaly = Astro._fixangle(357.52911 + 35999.05029 * T - 0.0001537 * T2 - 0.00000048 * T3); //document.debug.log.value += "ret.meanAnomaly = " + ret.meanAnomaly + "\n";

  ret.eccentricity = 0.016708634 - 0.000042037 * T - 0.0000001267 * T2; //document.debug.log.value += "e = " + e + "\n";

  ret.equationOfCenter = (1.914602 - 0.004817 * T - 0.000014 * T2) * Astro._dsin(ret.meanAnomaly) + (0.019993 - 0.000101 * T) * Astro._dsin(2 * ret.meanAnomaly) + 0.000289 * Astro._dsin(3 * ret.meanAnomaly); //document.debug.log.value += "ret.equationOfCenter = " + ret.equationOfCenter + "\n";

  ret.sunLongitude = ret.meanLongitude + ret.equationOfCenter; //document.debug.log.value += "ret.sunLongitude = " + ret.sunLongitude + "\n";
  //ret.sunAnomaly = ret.meanAnomaly + ret.equationOfCenter;
  //document.debug.log.value += "ret.sunAnomaly = " + ret.sunAnomaly + "\n";
  // ret.sunRadius = (1.000001018 * (1 - (ret.eccentricity * ret.eccentricity))) / (1 + (ret.eccentricity * Astro._dcos(ret.sunAnomaly)));
  //document.debug.log.value += "ret.sunRadius = " + ret.sunRadius + "\n";

  Omega = 125.04 - 1934.136 * T; //document.debug.log.value += "Omega = " + Omega + "\n";

  ret.apparentLong = ret.sunLongitude + -0.00569 + -0.00478 * Astro._dsin(Omega); //document.debug.log.value += "ret.apparentLong = " + ret.apparentLong + "\n";

  epsilon0 = Astro._obliqeq(jd); //document.debug.log.value += "epsilon0 = " + epsilon0 + "\n";

  epsilon = epsilon0 + 0.00256 * Astro._dcos(Omega); //document.debug.log.value += "epsilon = " + epsilon + "\n";
  //ret.rightAscension = Astro._fixangle(Astro._rtd(Math.atan2(Astro._dcos(epsilon0) * Astro._dsin(ret.sunLongitude), Astro._dcos(ret.sunLongitude))));
  //document.debug.log.value += "ret.rightAscension = " + ret.rightAscension + "\n";
  // ret.declination = Astro._rtd(Math.asin(Astro._dsin(epsilon0) * Astro._dsin(ret.sunLongitude)));
  ////document.debug.log.value += "ret.declination = " + ret.declination + "\n";

  ret.inclination = Astro._fixangle(23.4392911 - 0.013004167 * T - 0.00000016389 * T2 + 0.0000005036 * T3);
  ret.apparentRightAscension = Astro._fixangle(Astro._rtd(Math.atan2(Astro._dcos(epsilon) * Astro._dsin(ret.apparentLong), Astro._dcos(ret.apparentLong)))); //document.debug.log.value += "ret.apparentRightAscension = " + ret.apparentRightAscension + "\n";
  //ret.apparentDeclination = Astro._rtd(Math.asin(Astro._dsin(epsilon) * Astro._dsin(ret.apparentLong)));
  //document.debug.log.value += "ret.apparentDecliation = " + ret.apparentDecliation + "\n";
  // Angular quantities are expressed in decimal degrees

  return ret;
};
/**
 * Calculate the nutation in longitude, deltaPsi, and obliquity, 
 * deltaEpsilon for a given Julian date jd. Results are returned as an object
 * giving deltaPsi and deltaEpsilon in degrees.
 * 
 * @static
 * @protected
 * @param {number} jd calculate the nutation of this Julian Day
 * @return {Object} the deltaPsi and deltaEpsilon of the nutation
 */


Astro._nutation = function (jd) {
  var i,
      j,
      t = (jd - 2451545.0) / 36525.0,
      t2,
      t3,
      to10,
      ta = [],
      dp = 0,
      de = 0,
      ang,
      ret = {};
  t3 = t * (t2 = t * t);
  /*
   * Calculate angles. The correspondence between the elements of our array
   * and the terms cited in Meeus are:
   * 
   * ta[0] = D ta[0] = M ta[2] = M' ta[3] = F ta[4] = \Omega
   * 
   */

  ta[0] = Astro._dtr(297.850363 + 445267.11148 * t - 0.0019142 * t2 + t3 / 189474.0);
  ta[1] = Astro._dtr(357.52772 + 35999.05034 * t - 0.0001603 * t2 - t3 / 300000.0);
  ta[2] = Astro._dtr(134.96298 + 477198.867398 * t + 0.0086972 * t2 + t3 / 56250.0);
  ta[3] = Astro._dtr(93.27191 + 483202.017538 * t - 0.0036825 * t2 + t3 / 327270);
  ta[4] = Astro._dtr(125.04452 - 1934.136261 * t + 0.0020708 * t2 + t3 / 450000.0);
  /*
   * Range reduce the angles in case the sine and cosine functions don't do it
   * as accurately or quickly.
   */

  for (i = 0; i < 5; i++) {
    ta[i] = Astro._fixangr(ta[i]);
  }

  to10 = t / 10.0;

  for (i = 0; i < 63; i++) {
    ang = 0;

    for (j = 0; j < 5; j++) {
      if (ilib.data.astro._nutArgMult[i * 5 + j] != 0) {
        ang += ilib.data.astro._nutArgMult[i * 5 + j] * ta[j];
      }
    }

    dp += (ilib.data.astro._nutArgCoeff[i * 4 + 0] + ilib.data.astro._nutArgCoeff[i * 4 + 1] * to10) * Math.sin(ang);
    de += (ilib.data.astro._nutArgCoeff[i * 4 + 2] + ilib.data.astro._nutArgCoeff[i * 4 + 3] * to10) * Math.cos(ang);
  }
  /*
   * Return the result, converting from ten thousandths of arc seconds to
   * radians in the process.
   */


  ret.deltaPsi = dp / (3600.0 * 10000.0);
  ret.deltaEpsilon = de / (3600.0 * 10000.0);
  return ret;
};
/**
 * Returns the equation of time as a fraction of a day.
 * 
 * @static
 * @protected
 * @param {number} jd the Julian Day of the day to calculate for
 * @return {number} the equation of time for the given day  
 */


Astro._equationOfTime = function (jd) {
  var alpha, deltaPsi, E, epsilon, L0, tau, pos; // 2451545.0 is the Julian day of J2000 epoch
  // 365250.0 is the number of days in a Julian millenium

  tau = (jd - 2451545.0) / 365250.0; //console.log("equationOfTime.  tau = " + tau);

  L0 = 280.4664567 + 360007.6982779 * tau + 0.03032028 * tau * tau + tau * tau * tau / 49931 + -(tau * tau * tau * tau / 15300) + -(tau * tau * tau * tau * tau / 2000000); //console.log("L0 = " + L0);

  L0 = Astro._fixangle(L0); //console.log("L0 = " + L0);

  pos = Astro._sunpos(jd);
  alpha = pos.apparentRightAscension; //console.log("alpha = " + alpha);

  var nut = Astro._nutation(jd);

  deltaPsi = nut.deltaPsi; //console.log("deltaPsi = " + deltaPsi);

  epsilon = Astro._obliqeq(jd) + nut.deltaEpsilon; //console.log("epsilon = " + epsilon);
  //console.log("L0 - 0.0057183 = " + (L0 - 0.0057183));
  //console.log("L0 - 0.0057183 - alpha = " + (L0 - 0.0057183 - alpha));
  //console.log("deltaPsi * cos(epsilon) = " + deltaPsi * Astro._dcos(epsilon));

  E = L0 - 0.0057183 - alpha + deltaPsi * Astro._dcos(epsilon); // if alpha and L0 are in different quadrants, then renormalize
  // so that the difference between them is in the right range

  if (E > 180) {
    E -= 360;
  } //console.log("E = " + E);
  // E = E - 20.0 * (Math.floor(E / 20.0));


  E = E * 4; //console.log("Efixed = " + E);

  E = E / (24 * 60); //console.log("Eday = " + E);

  return E;
};
/**
 * @private
 * @static
 */


Astro._poly = function (x, coefficients) {
  var result = coefficients[0];
  var xpow = x;

  for (var i = 1; i < coefficients.length; i++) {
    result += coefficients[i] * xpow;
    xpow *= x;
  }

  return result;
};
/**
 * Calculate the UTC RD from the local RD given "zone" number of minutes
 * worth of offset.
 * 
 * @static
 * @protected
 * @param {number} local RD of the locale time, given in any calendar
 * @param {number} zone number of minutes of offset from UTC for the time zone 
 * @return {number} the UTC equivalent of the local RD
 */


Astro._universalFromLocal = function (local, zone) {
  return local - zone / 1440;
};
/**
 * Calculate the local RD from the UTC RD given "zone" number of minutes
 * worth of offset.
 * 
 * @static
 * @protected
 * @param {number} local RD of the locale time, given in any calendar
 * @param {number} zone number of minutes of offset from UTC for the time zone 
 * @return {number} the UTC equivalent of the local RD
 */


Astro._localFromUniversal = function (local, zone) {
  return local + zone / 1440;
};
/**
 * @private
 * @static
 * @param {number} c julian centuries of the date to calculate
 * @return {number} the aberration
 */


Astro._aberration = function (c) {
  return 9.74e-05 * Astro._dcos(177.63 + 35999.01847999999 * c) - 0.005575;
};
/**
 * @private
 *
ilib.data.astro._nutCoeffA = [124.90, -1934.134, 0.002063];
ilib.data.astro._nutCoeffB q= [201.11, 72001.5377, 0.00057];
*/

/**
 * @private
 * @static
 * @param {number} c julian centuries of the date to calculate
 * @return {number} the nutation for the given julian century in radians
 */


Astro._nutation2 = function (c) {
  var a = Astro._poly(c, ilib.data.astro._nutCoeffA);

  var b = Astro._poly(c, ilib.data.astro._nutCoeffB); // return -0.0000834 * Astro._dsin(a) - 0.0000064 * Astro._dsin(b);


  return -0.004778 * Astro._dsin(a) - 0.0003667 * Astro._dsin(b);
};
/**
 * @static
 * @private
 */


Astro._ephemerisCorrection = function (jd) {
  var year = GregorianDate._calcYear(jd - 1721424.5);

  if (1988 <= year && year <= 2019) {
    return (year - 1933) / 86400;
  }

  if (1800 <= year && year <= 1987) {
    var jul1 = new GregRataDie({
      year: year,
      month: 7,
      day: 1,
      hour: 0,
      minute: 0,
      second: 0
    }); // 693596 is the rd of Jan 1, 1900

    var theta = (jul1.getRataDie() - 693596) / 36525;
    return Astro._poly(theta, 1900 <= year ? ilib.data.astro._coeff19th : ilib.data.astro._coeff18th);
  }

  if (1620 <= year && year <= 1799) {
    year -= 1600;
    return (196.58333 - 4.0675 * year + 0.0219167 * year * year) / 86400;
  } // 660724 is the rd of Jan 1, 1810


  var jan1 = new GregRataDie({
    year: year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0
  }); // var x = 0.5 + (jan1.getRataDie() - 660724);

  var x = 0.5 + (jan1.getRataDie() - 660724);
  return (x * x / 41048480 - 15) / 86400;
};
/**
 * @static
 * @private
 */


Astro._ephemerisFromUniversal = function (jd) {
  return jd + Astro._ephemerisCorrection(jd);
};
/**
 * @static
 * @private
 */


Astro._universalFromEphemeris = function (jd) {
  return jd - Astro._ephemerisCorrection(jd);
};
/**
 * @static
 * @private
 */


Astro._julianCenturies = function (jd) {
  // 2451545.0 is the Julian day of J2000 epoch
  // 730119.5 is the Gregorian RD of J2000 epoch
  // 36525.0 is the number of days in a Julian century
  return (Astro._ephemerisFromUniversal(jd) - 2451545.0) / 36525.0;
};
/**
 * Calculate the solar longitude
 * 
 * @static
 * @protected
 * @param {number} jd julian day of the date to calculate the longitude for 
 * @return {number} the solar longitude in degrees
 */


Astro._solarLongitude = function (jd) {
  var c = Astro._julianCenturies(jd),
      longitude = 0,
      len = ilib.data.astro._solarLongCoeff.length,
      row;

  for (var i = 0; i < len; i++) {
    longitude += ilib.data.astro._solarLongCoeff[i] * Astro._dsin(ilib.data.astro._solarLongAddends[i] + ilib.data.astro._solarLongMultipliers[i] * c);
  }

  longitude *= 5.729577951308232e-06;
  longitude += 282.77718340000001 + 36000.769537439999 * c;
  longitude += Astro._aberration(c) + Astro._nutation2(c);
  return Astro._fixangle(longitude);
};
/**
 * @static
 * @protected
 * @param {number} jd
 * @return {number}
 */


Astro._lunarLongitude = function (jd) {
  var c = Astro._julianCenturies(jd),
      meanMoon = Astro._fixangle(Astro._poly(c, ilib.data.astro._meanMoonCoeff)),
      elongation = Astro._fixangle(Astro._poly(c, ilib.data.astro._elongationCoeff)),
      solarAnomaly = Astro._fixangle(Astro._poly(c, ilib.data.astro._solarAnomalyCoeff)),
      lunarAnomaly = Astro._fixangle(Astro._poly(c, ilib.data.astro._lunarAnomalyCoeff)),
      moonNode = Astro._fixangle(Astro._poly(c, ilib.data.astro._moonFromNodeCoeff)),
      e = Astro._poly(c, ilib.data.astro._eCoeff);

  var sum = 0;

  for (var i = 0; i < ilib.data.astro._lunarElongationLongCoeff.length; i++) {
    var x = ilib.data.astro._solarAnomalyLongCoeff[i];
    sum += ilib.data.astro._sineCoeff[i] * Math.pow(e, Math.abs(x)) * Astro._dsin(ilib.data.astro._lunarElongationLongCoeff[i] * elongation + x * solarAnomaly + ilib.data.astro._lunarAnomalyLongCoeff[i] * lunarAnomaly + ilib.data.astro._moonFromNodeLongCoeff[i] * moonNode);
  }

  var longitude = sum / 1000000;

  var venus = 3958.0 / 1000000 * Astro._dsin(119.75 + c * 131.84899999999999);

  var jupiter = 318.0 / 1000000 * Astro._dsin(53.090000000000003 + c * 479264.28999999998);

  var flatEarth = 1962.0 / 1000000 * Astro._dsin(meanMoon - moonNode);

  return Astro._fixangle(meanMoon + longitude + venus + jupiter + flatEarth + Astro._nutation2(c));
};
/**
 * @static
 * @protected
 * @param {number} n
 * @return {number} julian day of the n'th new moon
 */


Astro._newMoonTime = function (n) {
  var k = n - 24724;
  var c = k / 1236.8499999999999;

  var approx = Astro._poly(c, ilib.data.astro._nmApproxCoeff);

  var capE = Astro._poly(c, ilib.data.astro._nmCapECoeff);

  var solarAnomaly = Astro._poly(c, ilib.data.astro._nmSolarAnomalyCoeff);

  var lunarAnomaly = Astro._poly(c, ilib.data.astro._nmLunarAnomalyCoeff);

  var moonArgument = Astro._poly(c, ilib.data.astro._nmMoonArgumentCoeff);

  var capOmega = Astro._poly(c, ilib.data.astro._nmCapOmegaCoeff);

  var correction = -0.00017 * Astro._dsin(capOmega);

  for (var i = 0; i < ilib.data.astro._nmSineCoeff.length; i++) {
    correction = correction + ilib.data.astro._nmSineCoeff[i] * Math.pow(capE, ilib.data.astro._nmEFactor[i]) * Astro._dsin(ilib.data.astro._nmSolarCoeff[i] * solarAnomaly + ilib.data.astro._nmLunarCoeff[i] * lunarAnomaly + ilib.data.astro._nmMoonCoeff[i] * moonArgument);
  }

  var additional = 0;

  for (var i = 0; i < ilib.data.astro._nmAddConst.length; i++) {
    additional = additional + ilib.data.astro._nmAddFactor[i] * Astro._dsin(ilib.data.astro._nmAddConst[i] + ilib.data.astro._nmAddCoeff[i] * k);
  }

  var extra = 0.000325 * Astro._dsin(Astro._poly(c, ilib.data.astro._nmExtra));

  return Astro._universalFromEphemeris(approx + correction + extra + additional + RataDie.gregorianEpoch);
};
/**
 * @static
 * @protected
 * @param {number} jd
 * @return {number}
 */


Astro._lunarSolarAngle = function (jd) {
  var lunar = Astro._lunarLongitude(jd);

  var solar = Astro._solarLongitude(jd);

  return Astro._fixangle(lunar - solar);
};
/**
 * @static
 * @protected
 * @param {number} jd
 * @return {number}
 */


Astro._newMoonBefore = function (jd) {
  var phase = Astro._lunarSolarAngle(jd); // 11.450086114414322 is the julian day of the 0th full moon
  // 29.530588853000001 is the average length of a month


  var guess = Math.round((jd - 11.450086114414322 - RataDie.gregorianEpoch) / 29.530588853000001 - phase / 360) - 1;
  var current, last;
  current = last = Astro._newMoonTime(guess);

  while (current < jd) {
    guess++;
    last = current;
    current = Astro._newMoonTime(guess);
  }

  return last;
};
/**
 * @static
 * @protected
 * @param {number} jd
 * @return {number}
 */


Astro._newMoonAtOrAfter = function (jd) {
  var phase = Astro._lunarSolarAngle(jd); // 11.450086114414322 is the julian day of the 0th full moon
  // 29.530588853000001 is the average length of a month


  var guess = Math.round((jd - 11.450086114414322 - RataDie.gregorianEpoch) / 29.530588853000001 - phase / 360);
  var current;

  while ((current = Astro._newMoonTime(guess)) < jd) {
    guess++;
  }

  return current;
};
/**
 * @static
 * @protected
 * @param {number} jd JD to calculate from
 * @param {number} longitude longitude to seek 
 * @returns {number} the JD of the next time that the solar longitude 
 * is a multiple of the given longitude
 */


Astro._nextSolarLongitude = function (jd, longitude) {
  var rate = 365.242189 / 360.0;

  var tau = jd + rate * Astro._fixangle(longitude - Astro._solarLongitude(jd));

  var start = Math.max(jd, tau - 5.0);
  var end = tau + 5.0;
  return SearchUtils.bisectionSearch(0, start, end, 1e-6, function (l) {
    return 180 - Astro._fixangle(Astro._solarLongitude(l) - longitude);
  });
};
/**
 * Floor the julian day to midnight of the current julian day.
 * 
 * @static
 * @protected
 * @param {number} jd the julian to round
 * @return {number} the jd floored to the midnight of the julian day
 */


Astro._floorToJD = function (jd) {
  return Math.floor(jd - 0.5) + 0.5;
};
/**
 * Floor the julian day to midnight of the current julian day.
 * 
 * @static
 * @protected
 * @param {number} jd the julian to round
 * @return {number} the jd floored to the midnight of the julian day
 */


Astro._ceilToJD = function (jd) {
  return Math.ceil(jd + 0.5) - 0.5;
};

module.exports = Astro;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/Calendar.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/Calendar.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Calendar.js - Represent a calendar object.
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @class
 * Superclass for all calendar subclasses that contains shared 
 * functionality. This class is never instantiated on its own. Instead,
 * you should use the {@link CalendarFactory} function to manufacture a new
 * instance of a subclass of Calendar. 
 * 
 * @private
 * @constructor
 */

var Calendar = function Calendar() {};
/* place for the subclasses to put their constructors so that the factory method
 * can find them. Do this to add your calendar after it's defined: 
 * Calendar._constructors["mytype"] = Calendar.MyTypeConstructor;
 */


Calendar._constructors = {};
Calendar.prototype = {
  /**
   * Return the type of this calendar.
   * 
   * @return {string} the name of the type of this calendar 
   */
  getType: function getType() {
    throw "Cannot call methods of abstract class Calendar";
  },

  /**
   * Return the number of months in the given year. The number of months in a year varies
   * for some luni-solar calendars because in some years, an extra month is needed to extend the 
   * days in a year to an entire solar year. The month is represented as a 1-based number
   * where 1=first month, 2=second month, etc.
   * 
   * @param {number} year a year for which the number of months is sought
   * @return {number} The number of months in the given year
   */
  getNumMonths: function getNumMonths(year) {
    throw "Cannot call methods of abstract class Calendar";
  },

  /**
   * Return the number of days in a particular month in a particular year. This function
   * can return a different number for a month depending on the year because of things
   * like leap years.
   * 
   * @param {number} month the month for which the length is sought
   * @param {number} year the year within which that month can be found
   * @return {number} the number of days within the given month in the given year
   */
  getMonLength: function getMonLength(month, year) {
    throw "Cannot call methods of abstract class Calendar";
  },

  /**
   * Return true if the given year is a leap year in this calendar.
   * The year parameter may be given as a number.
   * 
   * @param {number} year the year for which the leap year information is being sought
   * @return {boolean} true if the given year is a leap year
   */
  isLeapYear: function isLeapYear(year) {
    throw "Cannot call methods of abstract class Calendar";
  }
};
module.exports = Calendar;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/CalendarFactory.js":
/*!**************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/CalendarFactory.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * CalendarFactory.js - Constructs new instances of the right subclass of Calendar
 * 
 * Copyright © 2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
Locale.js
LocaleInfo.js
Calendar.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * Factory method to create a new instance of a calendar subclass.<p>
 * 
 * The options parameter can be an object that contains the following
 * properties:
 * 
 * <ul>
 * <li><i>type</i> - specify the type of the calendar desired. The
 * list of valid values changes depending on which calendars are 
 * defined. When assembling your iliball.js, include those calendars 
 * you wish to use in your program or web page, and they will register 
 * themselves with this factory method. The "official", "gregorian",
 * and "julian" calendars are all included by default, as they are the
 * standard calendars for much of the world.
 * <li><i>locale</i> - some calendars vary depending on the locale.
 * For example, the "official" calendar transitions from a Julian-style
 * calendar to a Gregorian-style calendar on a different date for
 * each country, as the governments of those countries decided to
 * adopt the Gregorian calendar at different times.
 *  
 * <li><i>onLoad</i> - a callback function to call when the calendar object is fully 
 * loaded. When the onLoad option is given, the calendar factory will attempt to
 * load any missing locale data using the ilib loader callback.
 * When the constructor is done (even if the data is already preassembled), the 
 * onLoad function is called with the current instance as a parameter, so this
 * callback can be used with preassembled or dynamic loading or a mix of the two.
 * 
 * <li><i>sync</i> - tell whether to load any missing locale data synchronously or 
 * asynchronously. If this option is given as "false", then the "onLoad"
 * callback must be given, as the instance returned from this constructor will
 * not be usable for a while.
 *  
 * <li><i>loadParams</i> - an object containing parameters to pass to the 
 * loader callback function when locale data is missing. The parameters are not
 * interpretted or modified in any way. They are simply passed along. The object 
 * may contain any property/value pairs as long as the calling code is in
 * agreement with the loader callback function as to what those parameters mean.
 * </ul>
 * 
 * If a locale is specified, but no type, then the calendar that is default for
 * the locale will be instantiated and returned. If neither the type nor
 * the locale are specified, then the calendar for the default locale will
 * be used. 
 * 
 * @static
 * @param {Object=} options options controlling the construction of this instance, or
 * undefined to use the default options
 * @return {Calendar} an instance of a calendar object of the appropriate type
 */


var CalendarFactory = function CalendarFactory(options) {
  var locale,
      type,
      sync = true,
      instance;

  if (options) {
    if (options.locale) {
      locale = typeof options.locale === 'string' ? new Locale(options.locale) : options.locale;
    }

    type = options.type || options.calendar;

    if (typeof options.sync === 'boolean') {
      sync = options.sync;
    }
  }

  if (!locale) {
    locale = new Locale(); // default locale
  }

  if (!type) {
    new LocaleInfo(locale, {
      sync: sync,
      loadParams: options && options.loadParams,
      onLoad: function onLoad(info) {
        type = info.getCalendar();
        instance = CalendarFactory._init(type, options);
      }
    });
  } else {
    instance = CalendarFactory._init(type, options);
  }

  return instance;
};
/**
 * Map calendar names to classes to initialize in the dynamic code model.
 * TODO: Need to figure out some way that this doesn't have to be updated by hand.
 * @private
 */


CalendarFactory._dynMap = {
  "coptic": "Coptic",
  "ethiopic": "Ethiopic",
  "gregorian": "Gregorian",
  "han": "Han",
  "hebrew": "Hebrew",
  "islamic": "Islamic",
  "julian": "Julian",
  "persian": "Persian",
  "persian-algo": "PersianAlgo",
  "thaisolar": "ThaiSolar"
};
/**
 * Dynamically load the code for a calendar and calendar class if necessary.
 * @protected
 */

CalendarFactory._dynLoadCalendar = function (name) {
  if (!Calendar._constructors[name]) {
    var entry = CalendarFactory._dynMap[name];

    if (entry) {
      Calendar._constructors[name] = __webpack_require__("./node_modules/@enact/i18n/ilib/lib sync recursive ^\\.\\/.*Cal\\.js$")("./" + entry + "Cal.js");
    }
  }

  return Calendar._constructors[name];
};
/** @private */


CalendarFactory._init = function (type, options) {
  var cons;

  if (ilib.isDynCode()) {
    CalendarFactory._dynLoadCalendar(type);
  }

  cons = Calendar._constructors[type]; // pass the same options through to the constructor so the subclass
  // has the ability to do something with if it needs to

  if (!cons && typeof options.onLoad === "function") {
    options.onLoad(undefined);
  }

  return cons && new cons(options);
};
/**
 * Return an array of known calendar types that the factory method can instantiate.
 * 
 * @return {Array.<string>} an array of calendar types
 */


CalendarFactory.getCalendars = function () {
  var arr = [],
      c;

  if (ilib.isDynCode()) {
    for (c in CalendarFactory._dynMap) {
      CalendarFactory._dynLoadCalendar(c);
    }
  }

  for (c in Calendar._constructors) {
    if (c && Calendar._constructors[c]) {
      arr.push(c); // code like a pirate
    }
  }

  return arr;
};

module.exports = CalendarFactory;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/CaseMapper.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/CaseMapper.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * caseMapper.js - define upper- and lower-case mapper
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends Locale.js IString.js

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var IString = __webpack_require__(/*! ./IString.js */ "./node_modules/@enact/i18n/ilib/lib/IString.js");
/**
 * @class
 * Create a new string mapper instance that maps strings to upper or
 * lower case. This mapping will work for any string as characters 
 * that have no case will be returned unchanged.<p>
 * 
 * The options may contain any of the following properties:
 * 
 * <ul>
 * <li><i>locale</i> - locale to use when loading the mapper. Some maps are 
 * locale-dependent, and this locale selects the right one. Default if this is
 * not specified is the current locale.
 * 
 * <li><i>direction</i> - "toupper" for upper-casing, or "tolower" for lower-casing.
 * Default if not specified is "toupper".
 * </ul>
 * 
 * 
 * @constructor
 * @param {Object=} options options to initialize this mapper 
 */


var CaseMapper = function CaseMapper(options) {
  this.up = true;
  this.locale = new Locale();

  if (options) {
    if (typeof options.locale !== 'undefined') {
      this.locale = typeof options.locale === 'string' ? new Locale(options.locale) : options.locale;
    }

    this.up = !options.direction || options.direction === "toupper";
  }

  this.mapData = this.up ? {
    "ß": "SS",
    // German
    'ΐ': 'Ι',
    // Greek
    'ά': 'Α',
    'έ': 'Ε',
    'ή': 'Η',
    'ί': 'Ι',
    'ΰ': 'Υ',
    'ϊ': 'Ι',
    'ϋ': 'Υ',
    'ό': 'Ο',
    'ύ': 'Υ',
    'ώ': 'Ω',
    'Ӏ': 'Ӏ',
    // Russian and slavic languages
    'ӏ': 'Ӏ'
  } : {
    'Ӏ': 'Ӏ' // Russian and slavic languages

  };

  switch (this.locale.getLanguage()) {
    case "az":
    case "tr":
    case "crh":
    case "kk":
    case "krc":
    case "tt":
      var lower = "iı";
      var upper = "İI";

      this._setUpMap(lower, upper);

      break;
  }

  if (ilib._getBrowser() === "ie" || ilib._getBrowser() === "Edge") {
    // IE is missing these mappings for some reason
    if (this.up) {
      this.mapData['ς'] = 'Σ';
    }

    this._setUpMap("ⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⳁⳉⳋ", "ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⳀⳈⳊ"); // Coptic
    // Georgian Nuskhuri <-> Asomtavruli


    this._setUpMap("ⴀⴁⴂⴃⴄⴅⴆⴇⴈⴉⴊⴋⴌⴍⴎⴏⴐⴑⴒⴓⴔⴕⴖⴗⴘⴙⴚⴛⴜⴝⴞⴟⴠⴡⴢⴣⴤⴥ", "ႠႡႢႣႤႥႦႧႨႩႪႫႬႭႮႯႰႱႲႳႴႵႶႷႸႹႺႻႼႽႾႿჀჁჂჃჄჅ");
  }
};

CaseMapper.prototype = {
  /** 
   * @private 
   */
  _charMapper: function _charMapper(string) {
    if (!string) {
      return string;
    }

    var input = typeof string === 'string' ? new IString(string) : string.toString();
    var ret = "";
    var it = input.charIterator();
    var c;

    while (it.hasNext()) {
      c = it.next();

      if (!this.up && c === 'Σ') {
        if (it.hasNext()) {
          c = it.next();
          var code = c.charCodeAt(0); // if the next char is not a greek letter, this is the end of the word so use the
          // final form of sigma. Otherwise, use the mid-word form.

          ret += code < 0x0388 && code !== 0x0386 || code > 0x03CE ? 'ς' : 'σ';
          ret += c.toLowerCase();
        } else {
          // no next char means this is the end of the word, so use the final form of sigma
          ret += 'ς';
        }
      } else {
        if (this.mapData[c]) {
          ret += this.mapData[c];
        } else {
          ret += this.up ? c.toUpperCase() : c.toLowerCase();
        }
      }
    }

    return ret;
  },

  /** @private */
  _setUpMap: function _setUpMap(lower, upper) {
    var from, to;

    if (this.up) {
      from = lower;
      to = upper;
    } else {
      from = upper;
      to = lower;
    }

    for (var i = 0; i < upper.length; i++) {
      this.mapData[from[i]] = to[i];
    }
  },

  /**
   * Return the locale that this mapper was constructed with. 
   * @returns {Locale} the locale that this mapper was constructed with
   */
  getLocale: function getLocale() {
    return this.locale;
  },

  /**
   * Map a string to lower case in a locale-sensitive manner.
   * 
   * @param {string|undefined} string
   * @return {string|undefined}
   */
  map: function map(string) {
    return this._charMapper(string);
  }
};
module.exports = CaseMapper;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/CopticCal.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/CopticCal.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * coptic.js - Represent a Coptic calendar object.
 * 
 * Copyright © 2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js Locale.js Utils.js EthiopicCal.js */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var EthiopicCal = __webpack_require__(/*! ./EthiopicCal.js */ "./node_modules/@enact/i18n/ilib/lib/EthiopicCal.js");
/**
 * @class
 * Construct a new Coptic calendar object. This class encodes information about
 * a Coptic calendar.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends EthiopicCal
 */


var CopticCal = function CopticCal(options) {
  this.type = "coptic";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};

CopticCal.prototype = new EthiopicCal();
CopticCal.prototype.parent = EthiopicCal;
CopticCal.prototype.constructor = CopticCal;
/* register this calendar for the factory method */

Calendar._constructors["coptic"] = CopticCal;
module.exports = CopticCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/CopticDate.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/CopticDate.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * CopticDate.js - Represent a date in the Coptic calendar
 * 
 * Copyright © 2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
IDate.js 
CopticCal.js 
MathUtils.js
JSUtils.js
Locale.js
LocaleInfo.js 
TimeZone.js
EthiopicDate.js
CopticRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var EthiopicDate = __webpack_require__(/*! ./EthiopicDate.js */ "./node_modules/@enact/i18n/ilib/lib/EthiopicDate.js");

var CopticCal = __webpack_require__(/*! ./CopticCal.js */ "./node_modules/@enact/i18n/ilib/lib/CopticCal.js");

var CopticRataDie = __webpack_require__(/*! ./CopticRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/CopticRataDie.js");
/**
 * @class
 * Construct a new date object for the Coptic Calendar. The constructor can be called
 * with a parameter object that contains any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970 (Gregorian).
 * <li><i>julianday</i> - the Julian Day to set into this date
 * <li><i>year</i> - any integer
 * <li><i>month</i> - 1 to 13, where 1 means Thoout, 2 means Paope, etc., and 13 means Epagomene
 * <li><i>day</i> - 1 to 30
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * <li><i>minute</i> - 0 to 59
 * <li><i>second</i> - 0 to 59
 * <li><i>millisecond<i> - 0 to 999
 * <li><i>locale</i> - the TimeZone instance or time zone name as a string 
 * of this coptic date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * <li><i>timezone</i> - the time zone of this instance. If the time zone is not 
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that 
 * represents the locale. 
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *  
 * If called with another Coptic date argument, the date components of the given
 * date are copied into the current one.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above 
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date 
 * components are 
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the 
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich 
 * Mean Time").<p>
 * 
 * 
 * @constructor
 * @extends EthiopicDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Coptic date
 */


var CopticDate = function CopticDate(params) {
  this.rd = NaN; // clear these out so that the EthiopicDate constructor can set it

  var newparams = ilib.extend({}, params);

  newparams.onLoad = function (ed) {
    ed.cal = new CopticCal();

    if (typeof params.onLoad === "function") {
      params.onLoad(ed);
    }
  };

  EthiopicDate.call(this, params);
};

CopticDate.prototype = new EthiopicDate({
  noinstance: true
});
CopticDate.prototype.parent = EthiopicDate.prototype;
CopticDate.prototype.constructor = CopticDate;
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */

CopticDate.prototype.newRd = function (params) {
  return new CopticRataDie(params);
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 * 
 * @return {number} the day of the week
 */


CopticDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd - 3, 7);
};
/**
 * Return the name of the calendar that governs this date.
 * 
 * @return {string} a string giving the name of the calendar
 */


CopticDate.prototype.getCalendar = function () {
  return "coptic";
}; //register with the factory method


IDate._constructors["coptic"] = CopticDate;
module.exports = CopticDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/CopticRataDie.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/CopticRataDie.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * CopticRataDie.js - Represent an RD date in the Coptic calendar
 * 
 * Copyright © 2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
CopticCal.js 
JSUtils.js
EthiopicRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var CopticCal = __webpack_require__(/*! ./CopticCal.js */ "./node_modules/@enact/i18n/ilib/lib/CopticCal.js");

var EthiopicRataDie = __webpack_require__(/*! ./EthiopicRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/EthiopicRataDie.js");
/**
 * @class
 * Construct a new Coptic RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 13, where 1 means Thoout, 2 means Paope, etc., and 13 means Epagomene
 * 
 * <li><i>day</i> - 1 to 30
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Coptic date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends EthiopicRataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Coptic RD date
 */


var CopticRataDie = function CopticRataDie(params) {
  this.cal = params && params.cal || new CopticCal();
  this.rd = NaN;
  /**
   * The difference between the zero Julian day and the first Coptic date
   * of Friday, August 29, 284 CE Julian at 7:00am UTC. 
   * @private
   * @type number
   */

  this.epoch = 1825028.5;
  var tmp = {};

  if (params) {
    JSUtils.shallowCopy(params, tmp);
  }

  tmp.cal = this.cal; // override the cal parameter that may be passed in

  EthiopicRataDie.call(this, tmp);
};

CopticRataDie.prototype = new EthiopicRataDie();
CopticRataDie.prototype.parent = EthiopicRataDie;
CopticRataDie.prototype.constructor = CopticRataDie;
module.exports = CopticRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/EthiopicCal.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/EthiopicCal.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * ethiopic.js - Represent a Ethiopic calendar object.
 * 
 * Copyright © 2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js Utils.js MathUtils.js */


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * @class
 * Construct a new Ethiopic calendar object. This class encodes information about
 * a Ethiopic calendar.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var EthiopicCal = function EthiopicCal(options) {
  this.type = "ethiopic";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for lunar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=Maskaram, 2=Teqemt, etc. until 13=Paguemen.
 * 
 * @param {number} year a year for which the number of months is sought
 */


EthiopicCal.prototype.getNumMonths = function (year) {
  return 13;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 * 
 * @param {number|string} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


EthiopicCal.prototype.getMonLength = function (month, year) {
  var m = month;

  switch (_typeof(m)) {
    case "string":
      m = parseInt(m, 10);
      break;

    case "function":
    case "object":
    case "undefined":
      return 30;
      break;
  }

  if (m < 13) {
    return 30;
  } else {
    return this.isLeapYear(year) ? 6 : 5;
  }
};
/**
 * Return true if the given year is a leap year in the Ethiopic calendar.
 * The year parameter may be given as a number, or as a JulDate object.
 * @param {number|EthiopicDate|string} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */


EthiopicCal.prototype.isLeapYear = function (year) {
  var y = year;

  switch (_typeof(y)) {
    case "string":
      y = parseInt(y, 10);
      break;

    case "object":
      if (typeof y.year !== "number") {
        // in case it is an ilib.Date object
        return false;
      }

      y = y.year;
      break;

    case "function":
    case "undefined":
      return false;
      break;
  }

  return MathUtils.mod(y, 4) === 3;
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


EthiopicCal.prototype.getType = function () {
  return this.type;
};
/* register this calendar for the factory method */


Calendar._constructors["ethiopic"] = EthiopicCal;
module.exports = EthiopicCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/EthiopicDate.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/EthiopicDate.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * EthiopicDate.js - Represent a date in the Ethiopic calendar
 *
 * Copyright © 2015, 2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
IDate.js 
EthiopicCal.js 
MathUtils.js
Locale.js
LocaleInfo.js 
TimeZone.js
EthiopicRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var EthiopicRataDie = __webpack_require__(/*! ./EthiopicRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/EthiopicRataDie.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var EthiopicCal = __webpack_require__(/*! ./EthiopicCal.js */ "./node_modules/@enact/i18n/ilib/lib/EthiopicCal.js");
/**
 * @class
 * Construct a new date object for the Ethiopic Calendar. The constructor can be called
 * with a parameter object that contains any of the following properties:
 *
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970 (Gregorian).
 * <li><i>julianday</i> - the Julian Day to set into this date
 * <li><i>year</i> - any integer
 * <li><i>month</i> - 1 to 13, where 1 means Maskaram, 2 means Teqemt, etc., and 13 means Paguemen
 * <li><i>day</i> - 1 to 30
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation
 * is always done with an unambiguous 24 hour representation
 * <li><i>minute</i> - 0 to 59
 * <li><i>second</i> - 0 to 59
 * <li><i>millisecond<i> - 0 to 999
 * <li><i>locale</i> - the TimeZone instance or time zone name as a string
 * of this ethiopic date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * <li><i>timezone</i> - the time zone of this instance. If the time zone is not
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that
 * represents the locale.
 *
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If called with another Ethiopic date argument, the date components of the given
 * date are copied into the current one.<p>
 *
 * If the constructor is called with no arguments at all or if none of the
 * properties listed above
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date
 * components are
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich
 * Mean Time").<p>
 *
 *
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Ethiopic date
 */


var EthiopicDate = function EthiopicDate(params) {
  this.cal = new EthiopicCal();
  params = params || {};

  if (typeof params.noinstance === 'boolean' && params.noinstance) {
    // for doing inheritance, so don't need to fill in the data. The inheriting class only wants the methods.
    return;
  }

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

EthiopicDate.prototype = new IDate({
  noinstance: true
});
EthiopicDate.prototype.parent = IDate;
EthiopicDate.prototype.constructor = EthiopicDate;
/**
 * Initialize this instance
 * @private
 */

EthiopicDate.prototype._init = function (params) {
  new TimeZone({
    id: this.timezone,
    sync: params.sync,
    loadParams: params.loadParams,
    onLoad: ilib.bind(this, function (tz) {
      this.tz = tz;

      if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond) {
        /**
         * Year in the Ethiopic calendar.
         * @type number
         */
        this.year = parseInt(params.year, 10) || 0;
        /**
         * The month number, ranging from 1 (Maskaram) to 13 (Paguemen).
         * @type number
         */

        this.month = parseInt(params.month, 10) || 1;
        /**
         * The day of the month. This ranges from 1 to 30.
         * @type number
         */

        this.day = parseInt(params.day, 10) || 1;
        /**
         * The hour of the day. This can be a number from 0 to 23, as times are
         * stored unambiguously in the 24-hour clock.
         * @type number
         */

        this.hour = parseInt(params.hour, 10) || 0;
        /**
         * The minute of the hours. Ranges from 0 to 59.
         * @type number
         */

        this.minute = parseInt(params.minute, 10) || 0;
        /**
         * The second of the minute. Ranges from 0 to 59.
         * @type number
         */

        this.second = parseInt(params.second, 10) || 0;
        /**
         * The millisecond of the second. Ranges from 0 to 999.
         * @type number
         */

        this.millisecond = parseInt(params.millisecond, 10) || 0;
        /**
         * The day of the year. Ranges from 1 to 366.
         * @type number
         */

        this.dayOfYear = parseInt(params.dayOfYear, 10);

        if (typeof params.dst === 'boolean') {
          this.dst = params.dst;
        }

        this.rd = this.newRd(this); // add the time zone offset to the rd to convert to UTC
        // getOffsetMillis requires that this.year, this.rd, and this.dst
        // are set in order to figure out which time zone rules apply and
        // what the offset is at that point in the year

        this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

        if (this.offset !== 0) {
          this.rd = this.newRd({
            rd: this.rd.getRataDie() - this.offset
          });
        }
      }

      if (!this.rd) {
        this.rd = this.newRd(params);

        this._calcDateComponents();
      }

      if (typeof params.onLoad === "function") {
        params.onLoad(this);
      }
    })
  });
};
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */


EthiopicDate.prototype.newRd = function (params) {
  return new EthiopicRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from
 * @returns {number} the year for the RD
 */


EthiopicDate.prototype._calcYear = function (rd) {
  var year = Math.floor((4 * (Math.floor(rd) - 1) + 1463) / 1461);
  return year;
};
/**
 * Calculate date components for the given RD date.
 * @protected
 */


EthiopicDate.prototype._calcDateComponents = function () {
  var remainder,
      cumulative,
      rd = this.rd.getRataDie();
  this.year = this._calcYear(rd);

  if (typeof this.offset === "undefined") {
    this.year = this._calcYear(rd); // now offset the RD by the time zone, then recalculate in case we were
    // near the year boundary

    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    rd += this.offset;
    this.year = this._calcYear(rd);
  }

  var jan1 = this.newRd({
    year: this.year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  remainder = rd + 1 - jan1.getRataDie();
  this.month = Math.floor((remainder - 1) / 30) + 1;
  remainder = remainder - (this.month - 1) * 30;
  this.day = Math.floor(remainder);
  remainder -= this.day; // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000;
  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = remainder;
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 *
 * @return {number} the day of the week
 */


EthiopicDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd - 4, 7);
};
/**
 * Return the name of the calendar that governs this date.
 *
 * @return {string} a string giving the name of the calendar
 */


EthiopicDate.prototype.getCalendar = function () {
  return "ethiopic";
}; //register with the factory method


IDate._constructors["ethiopic"] = EthiopicDate;
module.exports = EthiopicDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/EthiopicRataDie.js":
/*!**************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/EthiopicRataDie.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * EthiopicRataDie.js - Represent an RD date in the Ethiopic calendar
 * 
 * Copyright © 2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
EthiopicCal.js
RataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var EthiopicCal = __webpack_require__(/*! ./EthiopicCal.js */ "./node_modules/@enact/i18n/ilib/lib/EthiopicCal.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");
/**
 * @class
 * Construct a new Ethiopic RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means Maskaram, 2 means Teqemt, etc., and 13 means Paguemen
 * 
 * <li><i>day</i> - 1 to 30
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Ethiopic date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Ethiopic RD date
 */


var EthiopicRataDie = function EthiopicRataDie(params) {
  this.cal = params && params.cal || new EthiopicCal();
  this.rd = NaN;
  RataDie.call(this, params);
};

EthiopicRataDie.prototype = new RataDie();
EthiopicRataDie.prototype.parent = RataDie;
EthiopicRataDie.prototype.constructor = EthiopicRataDie;
/**
 * The difference between the zero Julian day and the first Ethiopic date
 * of Friday, August 29, 8 CE Julian at 6:00am UTC.<p> 
 * 
 * See <a href="http://us.wow.com/wiki/Time_in_Ethiopia?s_chn=90&s_pt=aolsem&v_t=aolsem"
 * Time in Ethiopia</a> for information about how time is handled in Ethiopia.
 * 
 * @protected
 * @type number
 */

EthiopicRataDie.prototype.epoch = 1724219.75;
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 * 
 * @protected
 * @param {Object} date the date components to calculate the RD from
 */

EthiopicRataDie.prototype._setDateComponents = function (date) {
  var year = date.year;
  var years = 365 * (year - 1) + Math.floor(year / 4);
  var dayInYear = (date.month - 1) * 30 + date.day;
  var rdtime = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000;
  /*
  console.log("calcRataDie: converting " +  JSON.stringify(parts));
  console.log("getRataDie: year is " +  years);
  console.log("getRataDie: day in year is " +  dayInYear);
  console.log("getRataDie: rdtime is " +  rdtime);
  console.log("getRataDie: rd is " +  (years + dayInYear + rdtime));
  */

  this.rd = years + dayInYear + rdtime;
};

module.exports = EthiopicRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/GregRataDie.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/GregRataDie.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * gregratadie.js - Represent the RD date number in the Gregorian calendar
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
GregorianCal.js
RataDie.js
MathUtils.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var GregorianCal = __webpack_require__(/*! ./GregorianCal.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianCal.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");
/**
 * @class
 * Construct a new Gregorian RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Gregorian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Gregorian RD date
 */


var GregRataDie = function GregRataDie(params) {
  this.cal = params && params.cal || new GregorianCal();
  /** @type {number|undefined} */

  this.rd = NaN;
  RataDie.call(this, params);
};

GregRataDie.prototype = new RataDie();
GregRataDie.prototype.parent = RataDie;
GregRataDie.prototype.constructor = GregRataDie;
/**
 * the cumulative lengths of each month, for a non-leap year 
 * @private
 * @const
 * @type Array.<number>
 */

GregRataDie.cumMonthLengths = [0,
/* Jan */
31,
/* Feb */
59,
/* Mar */
90,
/* Apr */
120,
/* May */
151,
/* Jun */
181,
/* Jul */
212,
/* Aug */
243,
/* Sep */
273,
/* Oct */
304,
/* Nov */
334,
/* Dec */
365];
/**
 * the cumulative lengths of each month, for a leap year 
 * @private
 * @const
 * @type Array.<number>
 */

GregRataDie.cumMonthLengthsLeap = [0,
/* Jan */
31,
/* Feb */
60,
/* Mar */
91,
/* Apr */
121,
/* May */
152,
/* Jun */
182,
/* Jul */
213,
/* Aug */
244,
/* Sep */
274,
/* Oct */
305,
/* Nov */
335,
/* Dec */
366];
/**
 * Calculate the Rata Die (fixed day) number of the given date.
 * 
 * @private
 * @param {Object} date the date components to calculate the RD from
 */

GregRataDie.prototype._setDateComponents = function (date) {
  var year = parseInt(date.year, 10) || 0;
  var month = parseInt(date.month, 10) || 1;
  var day = parseInt(date.day, 10) || 1;
  var hour = parseInt(date.hour, 10) || 0;
  var minute = parseInt(date.minute, 10) || 0;
  var second = parseInt(date.second, 10) || 0;
  var millisecond = parseInt(date.millisecond, 10) || 0;
  var years = 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) + Math.floor((year - 1) / 400);
  var dayInYear = (month > 1 ? GregRataDie.cumMonthLengths[month - 1] : 0) + day + (GregorianCal.prototype.isLeapYear.call(this.cal, year) && month > 2 ? 1 : 0);
  var rdtime = (hour * 3600000 + minute * 60000 + second * 1000 + millisecond) / 86400000;
  /*
  debug("getRataDie: converting " +  JSON.stringify(this));
  debug("getRataDie: year is " +  years);
  debug("getRataDie: day in year is " +  dayInYear);
  debug("getRataDie: rdtime is " +  rdtime);
  debug("getRataDie: rd is " +  (years + dayInYear + rdtime));
  */

  /**
   * @type {number|undefined} the RD number of this Gregorian date
   */

  this.rd = years + dayInYear + rdtime;
};
/**
 * Return the rd number of the particular day of the week on or before the 
 * given rd. eg. The Sunday on or before the given rd.
 * @private
 * @param {number} rd the rata die date of the reference date
 * @param {number} dayOfWeek the day of the week that is being sought relative 
 * to the current date
 * @return {number} the rd of the day of the week
 */


GregRataDie.prototype._onOrBefore = function (rd, dayOfWeek) {
  return rd - MathUtils.mod(Math.floor(rd) - dayOfWeek, 7);
};

module.exports = GregRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/GregorianCal.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/GregorianCal.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * gregorian.js - Represent a Gregorian calendar object.
 * 
 * Copyright © 2012-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js Utils.js MathUtils.js */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * @class
 * Construct a new Gregorian calendar object. This class encodes information about
 * a Gregorian calendar.<p>
 * 
 * 
 * @constructor
 * @param {{noinstance:boolean}=} options
 * @extends Calendar
 */


var GregorianCal = function GregorianCal(options) {
  if (!options || !options.noinstance) {
    this.type = "gregorian";
  }

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/**
 * the lengths of each month 
 * @private
 * @const
 * @type Array.<number> 
 */


GregorianCal.monthLengths = [31,
/* Jan */
28,
/* Feb */
31,
/* Mar */
30,
/* Apr */
31,
/* May */
30,
/* Jun */
31,
/* Jul */
31,
/* Aug */
30,
/* Sep */
31,
/* Oct */
30,
/* Nov */
31
/* Dec */
];
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for some luni-solar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=first month, 2=second month, etc.
 * 
 * @param {number} year a year for which the number of months is sought
 * @return {number} The number of months in the given year
 */

GregorianCal.prototype.getNumMonths = function (year) {
  return 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 * 
 * @param {number} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


GregorianCal.prototype.getMonLength = function (month, year) {
  if (month !== 2 || !this.isLeapYear(year)) {
    return GregorianCal.monthLengths[month - 1];
  } else {
    return 29;
  }
};
/**
 * Return true if the given year is a leap year in the Gregorian calendar.
 * The year parameter may be given as a number, or as a GregDate object.
 * @param {number|GregorianDate} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */


GregorianCal.prototype.isLeapYear = function (year) {
  var y = typeof year === 'number' ? year : year.getYears();
  var centuries = MathUtils.mod(y, 400);
  return MathUtils.mod(y, 4) === 0 && centuries !== 100 && centuries !== 200 && centuries !== 300;
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


GregorianCal.prototype.getType = function () {
  return this.type;
};
/* register this calendar for the factory method */


Calendar._constructors["gregorian"] = GregorianCal;
module.exports = GregorianCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/GregorianDate.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * GregorianDate.js - Represent a date in the Gregorian calendar
 *
 * Copyright © 2012-2015, 2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
IDate.js 
GregorianCal.js 
SearchUtils.js
MathUtils.js
Locale.js
LocaleInfo.js 
JulianDay.js
GregRataDie.js
TimeZone.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var SearchUtils = __webpack_require__(/*! ./SearchUtils.js */ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var JulianDay = __webpack_require__(/*! ./JulianDay.js */ "./node_modules/@enact/i18n/ilib/lib/JulianDay.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var GregorianCal = __webpack_require__(/*! ./GregorianCal.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianCal.js");

var GregRataDie = __webpack_require__(/*! ./GregRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/GregRataDie.js");
/**
 * @class
 * Construct a new Gregorian date object. The constructor parameters can
 * contain any of the following properties:
 *
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 *
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 *
 * <li><i>year</i> - any integer, including 0
 *
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 *
 * <li><i>day</i> - 1 to 31
 *
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation
 * is always done with an unambiguous 24 hour representation
 *
 * <li><i>minute</i> - 0 to 59
 *
 * <li><i>second</i> - 0 to 59
 *
 * <li><i>millisecond</i> - 0 to 999
 *
 * <li><i>dst</i> - boolean used to specify whether the given time components are
 * intended to be in daylight time or not. This is only used in the overlap
 * time when transitioning from DST to standard time, and the time components are
 * ambiguous. Otherwise at all other times of the year, this flag is ignored.
 * If you specify the date using unix time (UTC) or a julian day, then the time is
 * already unambiguous and this flag does not need to be specified.
 * <p>
 * For example, in the US, the transition out of daylight savings time
 * in 2014 happens at Nov 2, 2014 2:00am Daylight Time, when the time falls
 * back to Nov 2, 2014 1:00am Standard Time. If you give a date/time components as
 * "Nov 2, 2014 1:30am", then there are two 1:30am times in that day, and you would
 * have to give the standard flag to indicate which of those two you mean.
 * (dst=true means daylight time, dst=false means standard time).
 *
 * <li><i>timezone</i> - the TimeZone instance or time zone name as a string
 * of this gregorian date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 *
 * <li><i>locale</i> - locale for this gregorian date. If the time zone is not
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that
 * represents the locale.
 *
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 *
 * <li><i>onLoad</i> - a callback function to call when this date object is fully
 * loaded. When the onLoad option is given, this date object will attempt to
 * load any missing locale data using the ilib loader callback.
 * When the constructor is done (even if the data is already preassembled), the
 * onLoad function is called with the current instance as a parameter, so this
 * callback can be used with preassembled or dynamic loading or a mix of the two.
 *
 * <li><i>sync</i> - tell whether to load any missing locale data synchronously or
 * asynchronously. If this option is given as "false", then the "onLoad"
 * callback must be given, as the instance returned from this constructor will
 * not be usable for a while.
 *
 * <li><i>loadParams</i> - an object containing parameters to pass to the
 * loader callback function when locale data is missing. The parameters are not
 * interpretted or modified in any way. They are simply passed along. The object
 * may contain any property/value pairs as long as the calling code is in
 * agreement with the loader callback function as to what those parameters mean.
 * </ul>
 *
 * If the constructor is called with another Gregorian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 *
 * If the constructor is called with no arguments at all or if none of the
 * properties listed above
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date
 * components are
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich
 * Mean Time").<p>
 *
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 *
 *
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Gregorian date
 */


var GregorianDate = function GregorianDate(params) {
  this.cal = new GregorianCal();
  params = params || {};

  if (typeof params.noinstance === 'boolean' && params.noinstance) {
    // for doing inheritance, so don't need to fill in the data. The
    // inheriting class only wants the methods.
    return;
  }

  if (params.timezone) {
    this.timezone = params.timezone.toString();
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

GregorianDate.prototype = new IDate({
  noinstance: true
});
GregorianDate.prototype.parent = IDate;
GregorianDate.prototype.constructor = GregorianDate;
/**
 * @private
 * Initialize this date object
 */

GregorianDate.prototype._init = function (params) {
  if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond) {
    this.year = parseInt(params.year, 10) || 0;
    this.month = parseInt(params.month, 10) || 1;
    this.day = parseInt(params.day, 10) || 1;
    this.hour = parseInt(params.hour, 10) || 0;
    this.minute = parseInt(params.minute, 10) || 0;
    this.second = parseInt(params.second, 10) || 0;
    this.millisecond = parseInt(params.millisecond, 10) || 0;

    if (typeof params.dst === 'boolean') {
      this.dst = params.dst;
    }

    this.rd = this.newRd(params); // add the time zone offset to the rd to convert to UTC

    this.offset = 0;

    if (this.timezone === "local" && typeof params.dst === 'undefined') {
      // if dst is defined, the intrinsic Date object has no way of specifying which version of a time you mean
      // in the overlap time at the end of DST. Do you mean the daylight 1:30am or the standard 1:30am? In this
      // case, use the ilib calculations below, which can distinguish between the two properly
      var d = new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond);
      var hBefore = new Date(this.year, this.month - 1, this.day, this.hour - 1, this.minute, this.second, this.millisecond);
      this.offset = -d.getTimezoneOffset() / 1440;

      if (d.getTimezoneOffset() < hBefore.getTimezoneOffset()) {
        var startOffset = -hBefore.getTimezoneOffset() / 1440;
        this.rd = this.newRd({
          rd: this.rd.getRataDie() - startOffset
        });
      } else {
        this.rd = this.newRd({
          rd: this.rd.getRataDie() - this.offset
        });
      }

      this._init2(params);
    } else {
      new TimeZone({
        id: this.timezone,
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (tz) {
          this.tz = tz; // getOffsetMillis requires that this.year, this.rd, and this.dst
          // are set in order to figure out which time zone rules apply and
          // what the offset is at that point in the year

          this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;
          this.rd = this.newRd({
            rd: this.rd.getRataDie() - this.offset
          });

          this._init2(params);
        })
      });
    }
  } else {
    this._init2(params);
  }
};
/**
 * @private
 * Finish initializing this date object
 */


GregorianDate.prototype._init2 = function (params) {
  if (!this.rd) {
    this.rd = this.newRd(params);

    this._calcDateComponents();
  }

  if (typeof params.onLoad === "function") {
    params.onLoad(this);
  }
};
/**
 * Return a new RD for this date type using the given params.
 * @private
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */


GregorianDate.prototype.newRd = function (params) {
  return new GregRataDie(params);
};
/**
 * Calculates the Gregorian year for a given rd number.
 * @private
 * @static
 */


GregorianDate._calcYear = function (rd) {
  var days400, days100, days4, years400, years100, years4, years1, year;
  years400 = Math.floor((rd - 1) / 146097);
  days400 = MathUtils.mod(rd - 1, 146097);
  years100 = Math.floor(days400 / 36524);
  days100 = MathUtils.mod(days400, 36524);
  years4 = Math.floor(days100 / 1461);
  days4 = MathUtils.mod(days100, 1461);
  years1 = Math.floor(days4 / 365);
  year = 400 * years400 + 100 * years100 + 4 * years4 + years1;

  if (years100 !== 4 && years1 !== 4) {
    year++;
  }

  return year;
};
/**
 * @private
 */


GregorianDate.prototype._calcYear = function (rd) {
  return GregorianDate._calcYear(rd);
};
/**
 * Calculate the date components for the current time zone
 * @private
 */


GregorianDate.prototype._calcDateComponents = function () {
  if (this.timezone === "local" && this.rd.getRataDie() >= -99280837 && this.rd.getRataDie() <= 100719163) {
    // console.log("using js Date to calculate offset");
    // use the intrinsic JS Date object to do the tz conversion for us, which
    // guarantees that it follows the system tz database settings
    var d = new Date(this.rd.getTimeExtended());
    /**
     * Year in the Gregorian calendar.
     * @type number
     */

    this.year = d.getFullYear();
    /**
     * The month number, ranging from 1 (January) to 12 (December).
     * @type number
     */

    this.month = d.getMonth() + 1;
    /**
     * The day of the month. This ranges from 1 to 31.
     * @type number
     */

    this.day = d.getDate();
    /**
     * The hour of the day. This can be a number from 0 to 23, as times are
     * stored unambiguously in the 24-hour clock.
     * @type number
     */

    this.hour = d.getHours();
    /**
     * The minute of the hours. Ranges from 0 to 59.
     * @type number
     */

    this.minute = d.getMinutes();
    /**
     * The second of the minute. Ranges from 0 to 59.
     * @type number
     */

    this.second = d.getSeconds();
    /**
     * The millisecond of the second. Ranges from 0 to 999.
     * @type number
     */

    this.millisecond = d.getMilliseconds();
    this.offset = -d.getTimezoneOffset() / 1440;
  } else {
    // console.log("using ilib to calculate offset. tz is " + this.timezone);
    // console.log("GregDate._calcDateComponents: date is " + JSON.stringify(this) + " parent is " + JSON.stringify(this.parent) + " and parent.parent is " + JSON.stringify(this.parent.parent));
    if (typeof this.offset === "undefined") {
      // console.log("calculating offset");
      this.year = this._calcYear(this.rd.getRataDie()); // now offset the RD by the time zone, then recalculate in case we were
      // near the year boundary

      if (!this.tz) {
        this.tz = new TimeZone({
          id: this.timezone
        });
      }

      this.offset = this.tz.getOffsetMillis(this) / 86400000; // } else {
      // console.log("offset is already defined somehow. type is " + typeof(this.offset));
      // console.trace("Stack is this one");
    } // console.log("offset is " + this.offset);


    var rd = this.rd.getRataDie();

    if (this.offset !== 0) {
      rd += this.offset;
    }

    this.year = this._calcYear(rd);
    var yearStartRd = this.newRd({
      year: this.year,
      month: 1,
      day: 1,
      cal: this.cal
    }); // remainder is days into the year

    var remainder = rd - yearStartRd.getRataDie() + 1;
    var cumulative = GregorianCal.prototype.isLeapYear.call(this.cal, this.year) ? GregRataDie.cumMonthLengthsLeap : GregRataDie.cumMonthLengths;
    this.month = SearchUtils.bsearch(Math.floor(remainder), cumulative);
    remainder = remainder - cumulative[this.month - 1];
    this.day = Math.floor(remainder);
    remainder -= this.day; // now convert to milliseconds for the rest of the calculation

    remainder = Math.round(remainder * 86400000);
    this.hour = Math.floor(remainder / 3600000);
    remainder -= this.hour * 3600000;
    this.minute = Math.floor(remainder / 60000);
    remainder -= this.minute * 60000;
    this.second = Math.floor(remainder / 1000);
    remainder -= this.second * 1000;
    this.millisecond = Math.floor(remainder);
  }
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 *
 * @return {number} the day of the week
 */


GregorianDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd, 7);
};
/**
 * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to
 * 365, regardless of months or weeks, etc. That is, January 1st is day 1, and
 * December 31st is 365 in regular years, or 366 in leap years.
 * @return {number} the ordinal day of the year
 */


GregorianDate.prototype.getDayOfYear = function () {
  var cumulativeMap = this.cal.isLeapYear(this.year) ? GregRataDie.cumMonthLengthsLeap : GregRataDie.cumMonthLengths;
  return cumulativeMap[this.month - 1] + this.day;
};
/**
 * Return the era for this date as a number. The value for the era for Gregorian
 * calendars is -1 for "before the common era" (BCE) and 1 for "the common era" (CE).
 * BCE dates are any date before Jan 1, 1 CE. In the proleptic Gregorian calendar,
 * there is a year 0, so any years that are negative or zero are BCE. In the Julian
 * calendar, there is no year 0. Instead, the calendar goes straight from year -1 to
 * 1.
 * @return {number} 1 if this date is in the common era, -1 if it is before the
 * common era
 */


GregorianDate.prototype.getEra = function () {
  return this.year < 1 ? -1 : 1;
};
/**
 * Return the name of the calendar that governs this date.
 *
 * @return {string} a string giving the name of the calendar
 */


GregorianDate.prototype.getCalendar = function () {
  return "gregorian";
}; // register with the factory method


IDate._constructors["gregorian"] = GregorianDate;
module.exports = GregorianDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/HanCal.js":
/*!*****************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/HanCal.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * han.js - Represent a Han Chinese Lunar calendar object.
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js 
Calendar.js 
MathUtils.js 
Astro.js
GregorianDate.js
GregRataDie.js
RataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var Astro = __webpack_require__(/*! ./Astro.js */ "./node_modules/@enact/i18n/ilib/lib/Astro.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");

var GregorianDate = __webpack_require__(/*! ./GregorianDate.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js");

var GregRataDie = __webpack_require__(/*! ./GregRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/GregRataDie.js");
/**
 * @class
 * Construct a new Han algorithmic calendar object. This class encodes information about
 * a Han algorithmic calendar.<p>
 * 
 * 
 * @constructor
 * @param {Object=} params optional parameters to load the calendrical data
 * @extends Calendar
 */


var HanCal = function HanCal(params) {
  this.type = "han";
  var sync = params && typeof params.sync === 'boolean' ? params.sync : true;
  Astro.initAstro(sync, params && params.loadParams, ilib.bind(this, function (x) {
    if (params && typeof params.onLoad === 'function') {
      params.onLoad(this);
    }
  }));
};
/**
 * @protected
 * @static
 * @param {number} year
 * @param {number=} cycle
 * @return {number}
 */


HanCal._getElapsedYear = function (year, cycle) {
  var elapsedYear = year || 0;

  if (typeof year !== 'undefined' && year < 61 && typeof cycle !== 'undefined') {
    elapsedYear = 60 * cycle + year;
  }

  return elapsedYear;
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from
 * @param {number} longitude longitude to seek 
 * @returns {number} the julian day of the next time that the solar longitude 
 * is a multiple of the given longitude
 */


HanCal._hanNextSolarLongitude = function (jd, longitude) {
  var tz = HanCal._chineseTZ(jd);

  var uni = Astro._universalFromLocal(jd, tz);

  var sol = Astro._nextSolarLongitude(uni, longitude);

  return Astro._localFromUniversal(sol, tz);
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from 
 * @returns {number} the major solar term for the julian day
 */


HanCal._majorSTOnOrAfter = function (jd) {
  var tz = HanCal._chineseTZ(jd);

  var uni = Astro._universalFromLocal(jd, tz);

  var next = Astro._fixangle(30 * Math.ceil(Astro._solarLongitude(uni) / 30));

  return HanCal._hanNextSolarLongitude(jd, next);
};
/**
 * @protected
 * @static
 * @param {number} year the year for which the leap year information is being sought
 * @param {number=} cycle if the given year < 60, this can specify the cycle. If the
 * cycle is not given, then the year should be given as elapsed years since the beginning
 * of the epoch
 */


HanCal._solsticeBefore = function (year, cycle) {
  var elapsedYear = HanCal._getElapsedYear(year, cycle);

  var gregyear = elapsedYear - 2697;
  var rd = new GregRataDie({
    year: gregyear - 1,
    month: 12,
    day: 15,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  return HanCal._majorSTOnOrAfter(rd.getRataDie() + RataDie.gregorianEpoch);
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from
 * @returns {number} the current major solar term
 */


HanCal._chineseTZ = function (jd) {
  var year = GregorianDate._calcYear(jd - RataDie.gregorianEpoch);

  return year < 1929 ? 465.6666666666666666 : 480;
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from 
 * @returns {number} the julian day of next new moon on or after the given julian day date
 */


HanCal._newMoonOnOrAfter = function (jd) {
  var tz = HanCal._chineseTZ(jd);

  var uni = Astro._universalFromLocal(jd, tz);

  var moon = Astro._newMoonAtOrAfter(uni); // floor to the start of the julian day


  return Astro._floorToJD(Astro._localFromUniversal(moon, tz));
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from 
 * @returns {number} the julian day of previous new moon before the given julian day date
 */


HanCal._newMoonBefore = function (jd) {
  var tz = HanCal._chineseTZ(jd);

  var uni = Astro._universalFromLocal(jd, tz);

  var moon = Astro._newMoonBefore(uni); // floor to the start of the julian day


  return Astro._floorToJD(Astro._localFromUniversal(moon, tz));
};
/**
 * @static
 * @protected
 * @param {number} year the year for which the leap year information is being sought
 * @param {number=} cycle if the given year < 60, this can specify the cycle. If the
 * cycle is not given, then the year should be given as elapsed years since the beginning
 * of the epoch
 */


HanCal._leapYearCalc = function (year, cycle) {
  var ret = {
    elapsedYear: HanCal._getElapsedYear(year, cycle)
  };
  ret.solstice1 = HanCal._solsticeBefore(ret.elapsedYear);
  ret.solstice2 = HanCal._solsticeBefore(ret.elapsedYear + 1); // ceil to the end of the julian day

  ret.m1 = HanCal._newMoonOnOrAfter(Astro._ceilToJD(ret.solstice1));
  ret.m2 = HanCal._newMoonBefore(Astro._ceilToJD(ret.solstice2));
  return ret;
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from
 * @returns {number} the current major solar term
 */


HanCal._currentMajorST = function (jd) {
  var s = Astro._solarLongitude(Astro._universalFromLocal(jd, HanCal._chineseTZ(jd)));

  return MathUtils.amod(2 + Math.floor(s / 30), 12);
};
/**
 * @protected
 * @static
 * @param {number} jd julian day to calculate from
 * @returns {boolean} true if there is no major solar term in the same year
 */


HanCal._noMajorST = function (jd) {
  return HanCal._currentMajorST(jd) === HanCal._currentMajorST(HanCal._newMoonOnOrAfter(jd + 1));
};
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for some luni-solar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=first month, 2=second month, etc.
 * 
 * @param {number} year a year for which the number of months is sought
 * @param {number=} cycle if the given year < 60, this can specify the cycle. If the
 * cycle is not given, then the year should be given as elapsed years since the beginning
 * of the epoch
 * @return {number} The number of months in the given year
 */


HanCal.prototype.getNumMonths = function (year, cycle) {
  return this.isLeapYear(year, cycle) ? 13 : 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 * 
 * @param {number} month the elapsed month for which the length is sought
 * @param {number} year the elapsed year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


HanCal.prototype.getMonLength = function (month, year) {
  // distance between two new moons in Nanjing China
  var calc = HanCal._leapYearCalc(year);

  var priorNewMoon = HanCal._newMoonOnOrAfter(calc.m1 + month * 29);

  var postNewMoon = HanCal._newMoonOnOrAfter(priorNewMoon + 1);

  return postNewMoon - priorNewMoon;
};
/**
 * Return the equivalent year in the 2820 year cycle that begins on 
 * Far 1, 474. This particular cycle obeys the cycle-of-years formula 
 * whereas the others do not specifically. This cycle can be used as
 * a proxy for other years outside of the cycle by shifting them into 
 * the cycle.   
 * @param {number} year year to find the equivalent cycle year for
 * @returns {number} the equivalent cycle year
 */


HanCal.prototype.equivalentCycleYear = function (year) {
  var y = year - (year >= 0 ? 474 : 473);
  return MathUtils.mod(y, 2820) + 474;
};
/**
 * Return true if the given year is a leap year in the Han calendar.
 * If the year is given as a year/cycle combination, then the year should be in the 
 * range [1,60] and the given cycle is the cycle in which the year is located. If 
 * the year is greater than 60, then
 * it represents the total number of years elapsed in the proleptic calendar since
 * the beginning of the Chinese epoch in on 15 Feb, -2636 (Gregorian). In this 
 * case, the cycle parameter is ignored.
 * 
 * @param {number} year the year for which the leap year information is being sought
 * @param {number=} cycle if the given year < 60, this can specify the cycle. If the
 * cycle is not given, then the year should be given as elapsed years since the beginning
 * of the epoch
 * @return {boolean} true if the given year is a leap year
 */


HanCal.prototype.isLeapYear = function (year, cycle) {
  var calc = HanCal._leapYearCalc(year, cycle);

  return Math.round((calc.m2 - calc.m1) / 29.530588853000001) === 12;
};
/**
 * Return the month of the year that is the leap month. If the given year is
 * not a leap year, then this method will return -1.
 * 
 * @param {number} year the year for which the leap year information is being sought
 * @param {number=} cycle if the given year < 60, this can specify the cycle. If the
 * cycle is not given, then the year should be given as elapsed years since the beginning
 * of the epoch
 * @return {number} the number of the month that is doubled in this leap year, or -1
 * if this is not a leap year
 */


HanCal.prototype.getLeapMonth = function (year, cycle) {
  var calc = HanCal._leapYearCalc(year, cycle);

  if (Math.round((calc.m2 - calc.m1) / 29.530588853000001) != 12) {
    return -1; // no leap month
  } // search between rd1 and rd2 for the first month with no major solar term. That is our leap month.


  var month = 0;

  var m = HanCal._newMoonOnOrAfter(calc.m1 + 1);

  while (!HanCal._noMajorST(m)) {
    month++;
    m = HanCal._newMoonOnOrAfter(m + 1);
  } // return the number of the month that is doubled


  return month;
};
/**
 * Return the date of Chinese New Years in the given calendar year.
 * 
 * @param {number} year the Chinese year for which the new year information is being sought
 * @param {number=} cycle if the given year < 60, this can specify the cycle. If the
 * cycle is not given, then the year should be given as elapsed years since the beginning
 * of the epoch
 * @return {number} the julian day of the beginning of the given year 
 */


HanCal.prototype.newYears = function (year, cycle) {
  var calc = HanCal._leapYearCalc(year, cycle);

  var m2 = HanCal._newMoonOnOrAfter(calc.m1 + 1);

  if (Math.round((calc.m2 - calc.m1) / 29.530588853000001) === 12 && (HanCal._noMajorST(calc.m1) || HanCal._noMajorST(m2))) {
    return HanCal._newMoonOnOrAfter(m2 + 1);
  }

  return m2;
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


HanCal.prototype.getType = function () {
  return this.type;
};
/* register this calendar for the factory method */


Calendar._constructors["han"] = HanCal;
module.exports = HanCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/HanDate.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/HanDate.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * HanDate.js - Represent a date in the Han algorithmic calendar
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
IDate.js
GregorianDate.js 
HanCal.js
Astro.js 
JSUtils.js
MathUtils.js
LocaleInfo.js 
Locale.js
TimeZone.js
HanRataDie.js
RataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var Astro = __webpack_require__(/*! ./Astro.js */ "./node_modules/@enact/i18n/ilib/lib/Astro.js");

var HanCal = __webpack_require__(/*! ./HanCal.js */ "./node_modules/@enact/i18n/ilib/lib/HanCal.js");

var GregorianDate = __webpack_require__(/*! ./GregorianDate.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js");

var HanRataDie = __webpack_require__(/*! ./HanRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/HanRataDie.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");
/**
 * @class
 * 
 * Construct a new Han date object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>cycle</i> - any integer giving the number of 60-year cycle in which the date is located.
 * If the cycle is not given but the year is, it is assumed that the year parameter is a fictitious 
 * linear count of years since the beginning of the epoch, much like other calendars. This linear
 * count is never used. If both the cycle and year are given, the year is wrapped to the range 0 
 * to 60 and treated as if it were a year in the regular 60-year cycle.
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>timezone</i> - the TimeZone instance or time zone name as a string 
 * of this han date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * 
 * <li><i>locale</i> - locale for this han date. If the time zone is not 
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that 
 * represents the locale.
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Han date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above 
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date 
 * components are 
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the 
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich 
 * Mean Time").<p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @constructor
 * @extends Date
 * @param {Object=} params parameters that govern the settings and behaviour of this Han date
 */


var HanDate = function HanDate(params) {
  params = params || {};

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

HanDate.prototype = new IDate({
  noinstance: true
});
HanDate.prototype.parent = IDate;
HanDate.prototype.constructor = HanDate;
/**
 * Initialize the han date
 * @private
 */

HanDate.prototype._init = function (params) {
  new HanCal({
    sync: params && typeof params.sync === 'boolean' ? params.sync : true,
    loadParams: params && params.loadParams,
    onLoad: ilib.bind(this, function (cal) {
      this.cal = cal;

      if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond || params.cycle || params.cycleYear) {
        if (typeof params.cycle !== 'undefined') {
          /**
           * Cycle number in the Han calendar.
           * @type number
           */
          this.cycle = parseInt(params.cycle, 10) || 0;
          var year = (typeof params.year !== 'undefined' ? parseInt(params.year, 10) : parseInt(params.cycleYear, 10)) || 0;
          /**
           * Year in the Han calendar.
           * @type number
           */

          this.year = HanCal._getElapsedYear(year, this.cycle);
        } else {
          if (typeof params.year !== 'undefined') {
            this.year = parseInt(params.year, 10) || 0;
            this.cycle = Math.floor((this.year - 1) / 60);
          } else {
            this.year = this.cycle = 0;
          }
        }
        /**
         * The month number, ranging from 1 to 13
         * @type number
         */


        this.month = parseInt(params.month, 10) || 1;
        /**
         * The day of the month. This ranges from 1 to 30.
         * @type number
         */

        this.day = parseInt(params.day, 10) || 1;
        /**
         * The hour of the day. This can be a number from 0 to 23, as times are
         * stored unambiguously in the 24-hour clock.
         * @type number
         */

        this.hour = parseInt(params.hour, 10) || 0;
        /**
         * The minute of the hours. Ranges from 0 to 59.
         * @type number
         */

        this.minute = parseInt(params.minute, 10) || 0;
        /**
         * The second of the minute. Ranges from 0 to 59.
         * @type number
         */

        this.second = parseInt(params.second, 10) || 0;
        /**
         * The millisecond of the second. Ranges from 0 to 999.
         * @type number
         */

        this.millisecond = parseInt(params.millisecond, 10) || 0; // derived properties

        /**
         * Year in the cycle of the Han calendar
         * @type number
         */

        this.cycleYear = MathUtils.amod(this.year, 60);
        /**
         * The day of the year. Ranges from 1 to 384.
         * @type number
         */

        this.dayOfYear = parseInt(params.dayOfYear, 10);

        if (typeof params.dst === 'boolean') {
          this.dst = params.dst;
        }

        this.newRd({
          cal: this.cal,
          cycle: this.cycle,
          year: this.year,
          month: this.month,
          day: this.day,
          hour: this.hour,
          minute: this.minute,
          second: this.second,
          millisecond: this.millisecond,
          sync: params.sync,
          loadParams: params.loadParams,
          callback: ilib.bind(this, function (rd) {
            if (rd) {
              this.rd = rd; // add the time zone offset to the rd to convert to UTC

              new TimeZone({
                id: this.timezone,
                sync: params.sync,
                loadParams: params.loadParams,
                onLoad: ilib.bind(this, function (tz) {
                  this.tz = tz; // getOffsetMillis requires that this.year, this.rd, and this.dst 
                  // are set in order to figure out which time zone rules apply and 
                  // what the offset is at that point in the year

                  this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

                  if (this.offset !== 0) {
                    // this newRd can be called synchronously because we already called
                    // it asynchronously above, so all of the astro data should 
                    // already be loaded.
                    this.rd = this.newRd({
                      cal: this.cal,
                      rd: this.rd.getRataDie() - this.offset
                    });

                    this._calcLeap();
                  } else {
                    // re-use the derived properties from the RD calculations
                    this.leapMonth = this.rd.leapMonth;
                    this.priorLeapMonth = this.rd.priorLeapMonth;
                    this.leapYear = this.rd.leapYear;
                  }

                  this._init2(params);
                })
              });
            } else {
              this._init2(params);
            }
          })
        });
      } else {
        this._init2(params);
      }
    })
  });
};
/**
 * Finish the initialization for the han date.
 * @private
 */


HanDate.prototype._init2 = function (params) {
  if (!this.rd) {
    // init2() may be called without newRd having been called before,
    // so we cannot guarantee that the astro data is already loaded.
    // That means, we have to treat this as a possibly asynchronous
    // call.
    this.newRd(JSUtils.merge(params || {}, {
      cal: this.cal,
      sync: params.sync,
      loadParams: params.loadParams,
      callback: ilib.bind(this, function (rd) {
        this.rd = rd;

        this._calcDateComponents();

        if (params && typeof params.onLoad === 'function') {
          params.onLoad(this);
        }
      })
    }));
  } else {
    if (params && typeof params.onLoad === 'function') {
      params.onLoad(this);
    }
  }
};
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */


HanDate.prototype.newRd = function (params) {
  return new HanRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from 
 * @returns {number} the year for the RD
 */


HanDate.prototype._calcYear = function (rd) {
  var gregdate = new GregorianDate({
    rd: rd,
    timezone: this.timezone
  });
  var hanyear = gregdate.year + 2697;
  var newYears = this.cal.newYears(hanyear);
  return hanyear - (rd + RataDie.gregorianEpoch < newYears ? 1 : 0);
};
/** 
 * @private 
 * Calculate the leap year and months from the RD.
 */


HanDate.prototype._calcLeap = function () {
  var jd = this.rd.getRataDie() + RataDie.gregorianEpoch;

  var calc = HanCal._leapYearCalc(this.year);

  var m2 = HanCal._newMoonOnOrAfter(calc.m1 + 1);

  this.leapYear = Math.round((calc.m2 - calc.m1) / 29.530588853000001) === 12;
  var newYears = this.leapYear && (HanCal._noMajorST(calc.m1) || HanCal._noMajorST(m2)) ? HanCal._newMoonOnOrAfter(m2 + 1) : m2;

  var m = HanCal._newMoonBefore(jd + 1);

  this.priorLeapMonth = HanRataDie._priorLeapMonth(newYears, HanCal._newMoonBefore(m));
  this.leapMonth = this.leapYear && HanCal._noMajorST(m) && !this.priorLeapMonth;
};
/**
 * @private
 * Calculate date components for the given RD date.
 */


HanDate.prototype._calcDateComponents = function () {
  var remainder,
      jd = this.rd.getRataDie() + RataDie.gregorianEpoch; // console.log("HanDate._calcDateComponents: calculating for jd " + jd);

  if (typeof this.offset === "undefined") {
    // now offset the jd by the time zone, then recalculate in case we were 
    // near the year boundary
    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    jd += this.offset;
  } // use the Gregorian calendar objects as a convenient way to short-cut some
  // of the date calculations


  var gregyear = GregorianDate._calcYear(this.rd.getRataDie());

  this.year = gregyear + 2697;

  var calc = HanCal._leapYearCalc(this.year);

  var m2 = HanCal._newMoonOnOrAfter(calc.m1 + 1);

  this.leapYear = Math.round((calc.m2 - calc.m1) / 29.530588853000001) === 12;
  var newYears = this.leapYear && (HanCal._noMajorST(calc.m1) || HanCal._noMajorST(m2)) ? HanCal._newMoonOnOrAfter(m2 + 1) : m2; // See if it's between Jan 1 and the Chinese new years of that Gregorian year. If
  // so, then the Han year is actually the previous one

  if (jd < newYears) {
    this.year--;
    calc = HanCal._leapYearCalc(this.year);
    m2 = HanCal._newMoonOnOrAfter(calc.m1 + 1);
    this.leapYear = Math.round((calc.m2 - calc.m1) / 29.530588853000001) === 12;
    newYears = this.leapYear && (HanCal._noMajorST(calc.m1) || HanCal._noMajorST(m2)) ? HanCal._newMoonOnOrAfter(m2 + 1) : m2;
  } // month is elapsed month, not the month number + leap month boolean


  var m = HanCal._newMoonBefore(jd + 1);

  this.month = Math.round((m - calc.m1) / 29.530588853000001);
  this.priorLeapMonth = HanRataDie._priorLeapMonth(newYears, HanCal._newMoonBefore(m));
  this.leapMonth = this.leapYear && HanCal._noMajorST(m) && !this.priorLeapMonth;
  this.cycle = Math.floor((this.year - 1) / 60);
  this.cycleYear = MathUtils.amod(this.year, 60);
  this.day = Astro._floorToJD(jd) - m + 1;
  /*
  console.log("HanDate._calcDateComponents: year is " + this.year);
  console.log("HanDate._calcDateComponents: isLeapYear is " + this.leapYear);
  console.log("HanDate._calcDateComponents: cycle is " + this.cycle);
  console.log("HanDate._calcDateComponents: cycleYear is " + this.cycleYear);
  console.log("HanDate._calcDateComponents: month is " + this.month);
  console.log("HanDate._calcDateComponents: isLeapMonth is " + this.leapMonth);
  console.log("HanDate._calcDateComponents: day is " + this.day);
  */
  // floor to the start of the julian day

  remainder = jd - Astro._floorToJD(jd); // console.log("HanDate._calcDateComponents: time remainder is " + remainder);
  // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000;
  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = remainder;
};
/**
 * Return the year within the Chinese cycle of this date. Cycles are 60 
 * years long, and the value returned from this method is the number of the year 
 * within this cycle. The year returned from getYear() is the total elapsed 
 * years since the beginning of the Chinese epoch and does not include 
 * the cycles. 
 * 
 * @return {number} the year within the current Chinese cycle
 */


HanDate.prototype.getCycleYears = function () {
  return this.cycleYear;
};
/**
 * Return the Chinese cycle number of this date. Cycles are 60 years long,
 * and the value returned from getCycleYear() is the number of the year 
 * within this cycle. The year returned from getYear() is the total elapsed 
 * years since the beginning of the Chinese epoch and does not include 
 * the cycles. 
 * 
 * @return {number} the current Chinese cycle
 */


HanDate.prototype.getCycles = function () {
  return this.cycle;
};
/**
 * Return whether the year of this date is a leap year in the Chinese Han 
 * calendar. 
 * 
 * @return {boolean} true if the year of this date is a leap year in the 
 * Chinese Han calendar. 
 */


HanDate.prototype.isLeapYear = function () {
  return this.leapYear;
};
/**
 * Return whether the month of this date is a leap month in the Chinese Han 
 * calendar.
 * 
 * @return {boolean} true if the month of this date is a leap month in the 
 * Chinese Han calendar.
 */


HanDate.prototype.isLeapMonth = function () {
  return this.leapMonth;
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 * 
 * @return {number} the day of the week
 */


HanDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd, 7);
};
/**
 * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to 
 * 365, regardless of months or weeks, etc. That is, Farvardin 1st is day 1, and 
 * December 31st is 365 in regular years, or 366 in leap years.
 * @return {number} the ordinal day of the year
 */


HanDate.prototype.getDayOfYear = function () {
  var newYears = this.cal.newYears(this.year);

  var priorNewMoon = HanCal._newMoonOnOrAfter(newYears + (this.month - 1) * 29);

  return priorNewMoon - newYears + this.day;
};
/**
 * Return the era for this date as a number. The value for the era for Han 
 * calendars is -1 for "before the han era" (BP) and 1 for "the han era" (anno 
 * persico or AP). 
 * BP dates are any date before Farvardin 1, 1 AP. In the proleptic Han calendar, 
 * there is a year 0, so any years that are negative or zero are BP.
 * @return {number} 1 if this date is in the common era, -1 if it is before the 
 * common era 
 */


HanDate.prototype.getEra = function () {
  return this.year < 1 ? -1 : 1;
};
/**
 * Return the name of the calendar that governs this date.
 * 
 * @return {string} a string giving the name of the calendar
 */


HanDate.prototype.getCalendar = function () {
  return "han";
}; // register with the factory method


IDate._constructors["han"] = HanDate;
module.exports = HanDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/HanRataDie.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/HanRataDie.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * HanDate.js - Represent a date in the Han algorithmic calendar
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
HanCal.js
MathUtils.js
RataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var HanCal = __webpack_require__(/*! ./HanCal.js */ "./node_modules/@enact/i18n/ilib/lib/HanCal.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");
/**
 * Construct a new Han RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>cycle</i> - any integer giving the number of 60-year cycle in which the date is located.
 * If the cycle is not given but the year is, it is assumed that the year parameter is a fictitious 
 * linear count of years since the beginning of the epoch, much like other calendars. This linear
 * count is never used. If both the cycle and year are given, the year is wrapped to the range 0 
 * to 60 and treated as if it were a year in the regular 60-year cycle.
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Han date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @class
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Han RD date
 */


var HanRataDie = function HanRataDie(params) {
  this.rd = NaN;

  if (params && params.cal) {
    this.cal = params.cal;
    RataDie.call(this, params);

    if (params && typeof params.callback === 'function') {
      params.callback(this);
    }
  } else {
    new HanCal({
      sync: params && params.sync,
      loadParams: params && params.loadParams,
      onLoad: ilib.bind(this, function (c) {
        this.cal = c;
        RataDie.call(this, params);

        if (params && typeof params.callback === 'function') {
          params.callback(this);
        }
      })
    });
  }
};

HanRataDie.prototype = new RataDie();
HanRataDie.prototype.parent = RataDie;
HanRataDie.prototype.constructor = HanRataDie;
/**
 * The difference between a zero Julian day and the first Han date
 * which is February 15, -2636 (Gregorian).
 * @private
 * @type number
 */

HanRataDie.epoch = 758325.5;
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 *
 * @protected
 * @param {Object} date the date components to calculate the RD from
 */

HanRataDie.prototype._setDateComponents = function (date) {
  var calc = HanCal._leapYearCalc(date.year, date.cycle);

  var m2 = HanCal._newMoonOnOrAfter(calc.m1 + 1);

  var newYears;
  this.leapYear = Math.round((calc.m2 - calc.m1) / 29.530588853000001) === 12;

  if (this.leapYear && (HanCal._noMajorST(calc.m1) || HanCal._noMajorST(m2))) {
    newYears = HanCal._newMoonOnOrAfter(m2 + 1);
  } else {
    newYears = m2;
  }

  var priorNewMoon = HanCal._newMoonOnOrAfter(calc.m1 + date.month * 29); // this is a julian day


  this.priorLeapMonth = HanRataDie._priorLeapMonth(newYears, HanCal._newMoonBefore(priorNewMoon));
  this.leapMonth = this.leapYear && HanCal._noMajorST(priorNewMoon) && !this.priorLeapMonth;
  var rdtime = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000;
  /*
  console.log("getRataDie: converting " +  JSON.stringify(date) + " to an RD");
  console.log("getRataDie: year is " +  date.year + " plus cycle " + date.cycle);
  console.log("getRataDie: isLeapYear is " +  this.leapYear);
  console.log("getRataDie: priorNewMoon is " +  priorNewMoon);
  console.log("getRataDie: day in month is " +  date.day);
  console.log("getRataDie: rdtime is " +  rdtime);
  console.log("getRataDie: rd is " +  (priorNewMoon + date.day - 1 + rdtime));
  */

  this.rd = priorNewMoon + date.day - 1 + rdtime - RataDie.gregorianEpoch;
};
/**
 * Return the rd number of the particular day of the week on or before the 
 * given rd. eg. The Sunday on or before the given rd.
 * @private
 * @param {number} rd the rata die date of the reference date
 * @param {number} dayOfWeek the day of the week that is being sought relative 
 * to the current date
 * @return {number} the rd of the day of the week
 */


HanRataDie.prototype._onOrBefore = function (rd, dayOfWeek) {
  return rd - MathUtils.mod(Math.floor(rd) - dayOfWeek, 7);
};
/**
 * @protected
 * @static
 * @param {number} jd1 first julian day
 * @param {number} jd2 second julian day
 * @returns {boolean} true if there is a leap month earlier in the same year 
 * as the given months 
 */


HanRataDie._priorLeapMonth = function (jd1, jd2) {
  return jd2 >= jd1 && (HanRataDie._priorLeapMonth(jd1, HanCal._newMoonBefore(jd2)) || HanCal._noMajorST(jd2));
};

module.exports = HanRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/HebrewCal.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/HebrewCal.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * hebrew.js - Represent a Hebrew calendar object.
 * 
 * Copyright © 2012-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js MathUtils.js */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * @class
 * Construct a new Hebrew calendar object. This class encodes information about
 * the Hebrew (Jewish) calendar. The Hebrew calendar is a tabular hebrew 
 * calendar where the dates are calculated by arithmetic rules. This differs from 
 * the religious Hebrew calendar which is used to mark the beginning of particular 
 * holidays. The religious calendar depends on the first sighting of the new 
 * crescent moon to determine the first day of the new month. Because humans and 
 * weather are both involved, the actual time of sighting varies, so it is not 
 * really possible to precalculate the religious calendar. Certain groups, such 
 * as the Hebrew Society of North America, decreed in in 2007 that they will use
 * a calendar based on calculations rather than observations to determine the 
 * beginning of lunar months, and therefore the dates of holidays.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var HebrewCal = function HebrewCal(options) {
  this.type = "hebrew";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/**
 * Return the number of days elapsed in the Hebrew calendar before the
 * given year starts.
 * @private
 * @param {number} year the year for which the number of days is sought
 * @return {number} the number of days elapsed in the Hebrew calendar before the
 * given year starts
 */


HebrewCal.elapsedDays = function (year) {
  var months = Math.floor((235 * year - 234) / 19);
  var parts = 204 + 793 * MathUtils.mod(months, 1080);
  var hours = 11 + 12 * months + 793 * Math.floor(months / 1080) + Math.floor(parts / 1080);
  var days = 29 * months + Math.floor(hours / 24);
  return MathUtils.mod(3 * (days + 1), 7) < 3 ? days + 1 : days;
};
/**
 * Return the number of days that the New Year's (Rosh HaShanah) in the Hebrew 
 * calendar will be corrected for the given year. Corrections are caused because New 
 * Year's is not allowed to start on certain days of the week. To deal with 
 * it, the start of the new year is corrected for the next year by adding a 
 * day to the 8th month (Heshvan) and/or the 9th month (Kislev) in the current
 * year to make them 30 days long instead of 29.
 * 
 * @private
 * @param {number} year the year for which the correction is sought
 * @param {number} elapsed number of days elapsed up to this year
 * @return {number} the number of days correction in the current year to make sure
 * Rosh HaShanah does not fall on undesirable days of the week
 */


HebrewCal.newYearsCorrection = function (year, elapsed) {
  var lastYear = HebrewCal.elapsedDays(year - 1),
      thisYear = elapsed,
      nextYear = HebrewCal.elapsedDays(year + 1);
  return nextYear - thisYear == 356 ? 2 : thisYear - lastYear == 382 ? 1 : 0;
};
/**
 * Return the rata die date of the new year for the given hebrew year.
 * @private
 * @param {number} year the year for which the new year is needed
 * @return {number} the rata die date of the new year
 */


HebrewCal.newYear = function (year) {
  var elapsed = HebrewCal.elapsedDays(year);
  return elapsed + HebrewCal.newYearsCorrection(year, elapsed);
};
/**
 * Return the number of days in the given year. Years contain a variable number of
 * days because the date of Rosh HaShanah (New Year's) changes so that it doesn't
 * fall on particular days of the week. Days are added to the months of Heshvan
 * and/or Kislev in the previous year in order to prevent the current year's New
 * Year from being on Sunday, Wednesday, or Friday.
 * 
 * @param {number} year the year for which the length is sought
 * @return {number} number of days in the given year
 */


HebrewCal.daysInYear = function (year) {
  return HebrewCal.newYear(year + 1) - HebrewCal.newYear(year);
};
/**
 * Return true if the given year contains a long month of Heshvan. That is,
 * it is 30 days instead of 29.
 * 
 * @private
 * @param {number} year the year in which that month is questioned
 * @return {boolean} true if the given year contains a long month of Heshvan
 */


HebrewCal.longHeshvan = function (year) {
  return MathUtils.mod(HebrewCal.daysInYear(year), 10) === 5;
};
/**
 * Return true if the given year contains a long month of Kislev. That is,
 * it is 30 days instead of 29.
 * 
 * @private
 * @param {number} year the year in which that month is questioned
 * @return {boolean} true if the given year contains a short month of Kislev
 */


HebrewCal.longKislev = function (year) {
  return MathUtils.mod(HebrewCal.daysInYear(year), 10) !== 3;
};
/**
 * Return the date of the last day of the month for the given year. The date of
 * the last day of the month is variable because a number of months gain an extra 
 * day in leap years, and it is variable which months gain a day for each leap 
 * year and which do not.
 * 
 * @param {number} month the month for which the number of days is sought
 * @param {number} year the year in which that month is
 * @return {number} the number of days in the given month and year
 */


HebrewCal.prototype.lastDayOfMonth = function (month, year) {
  switch (month) {
    case 2:
    case 4:
    case 6:
    case 10:
      return 29;

    case 13:
      return this.isLeapYear(year) ? 29 : 0;

    case 8:
      return HebrewCal.longHeshvan(year) ? 30 : 29;

    case 9:
      return HebrewCal.longKislev(year) ? 30 : 29;

    case 12:
    case 1:
    case 3:
    case 5:
    case 7:
    case 11:
      return 30;

    default:
      return 0;
  }
};
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for luni-solar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=first month, 2=second month, etc.
 * 
 * @param {number} year a year for which the number of months is sought
 */


HebrewCal.prototype.getNumMonths = function (year) {
  return this.isLeapYear(year) ? 13 : 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of leap years.
 *
 * @param {number} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @returns {number} the number of days within the given month in the given year, or
 * 0 for an invalid month in the year
 */


HebrewCal.prototype.getMonLength = function (month, year) {
  if (month < 1 || month > 13 || month == 13 && !this.isLeapYear(year)) {
    return 0;
  }

  return this.lastDayOfMonth(month, year);
};
/**
 * Return true if the given year is a leap year in the Hebrew calendar.
 * The year parameter may be given as a number, or as a HebrewDate object.
 * @param {number|Object} year the year for which the leap year information is being sought
 * @returns {boolean} true if the given year is a leap year
 */


HebrewCal.prototype.isLeapYear = function (year) {
  var y = typeof year == 'number' ? year : year.year;
  return MathUtils.mod(1 + 7 * y, 19) < 7;
};
/**
 * Return the type of this calendar.
 * 
 * @returns {string} the name of the type of this calendar 
 */


HebrewCal.prototype.getType = function () {
  return this.type;
};
/*register this calendar for the factory method */


Calendar._constructors["hebrew"] = HebrewCal;
module.exports = HebrewCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/HebrewDate.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/HebrewDate.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * HebrewDate.js - Represent a date in the Hebrew calendar
 *
 * Copyright © 2012-2015, 2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
Locale.js
LocaleInfo.js
TimeZone.js
IDate.js
MathUtils.js
Calendar.js
HebrewCal.js
HebrewRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var HebrewCal = __webpack_require__(/*! ./HebrewCal.js */ "./node_modules/@enact/i18n/ilib/lib/HebrewCal.js");

var HebrewRataDie = __webpack_require__(/*! ./HebrewRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/HebrewRataDie.js");
/**
 * @class
 * Construct a new civil Hebrew date object. The constructor can be called
 * with a params object that can contain the following properties:<p>
 *
 * <ul>
 * <li><i>julianday</i> - the Julian Day to set into this date
 * <li><i>year</i> - any integer except 0. Years go from -1 (BCE) to 1 (CE), skipping the zero year
 * <li><i>month</i> - 1 to 12, where 1 means Nisan, 2 means Iyyar, etc.
 * <li><i>day</i> - 1 to 30
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation
 * is always done with an unambiguous 24 hour representation
 * <li><i>parts</i> - 0 to 1079. Specify the halaqim parts of an hour. Either specify
 * the parts or specify the minutes, seconds, and milliseconds, but not both.
 * <li><i>minute</i> - 0 to 59
 * <li><i>second</i> - 0 to 59
 * <li><i>millisecond</i> - 0 to 999
 * <li><i>locale</i> - the TimeZone instance or time zone name as a string
 * of this julian date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * <li><i>timezone</i> - the time zone of this instance. If the time zone is not
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that
 * represents the locale.
 *
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If called with another Hebrew date argument, the date components of the given
 * date are copied into the current one.<p>
 *
 * If the constructor is called with no arguments at all or if none of the
 * properties listed above
 * from <i>julianday</i> through <i>millisecond</i> are present, then the date
 * components are
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich
 * Mean Time").<p>
 *
 *
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Hebrew date
 */


var HebrewDate = function HebrewDate(params) {
  this.cal = new HebrewCal();
  params = params || {};

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

HebrewDate.prototype = new IDate({
  noinstance: true
});
HebrewDate.prototype.parent = IDate;
HebrewDate.prototype.constructor = HebrewDate;
/**
 * Initialize this date
 * @private
 */

HebrewDate.prototype._init = function (params) {
  if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond || params.parts) {
    /**
     * Year in the Hebrew calendar.
     * @type number
     */
    this.year = parseInt(params.year, 10) || 0;
    /**
     * The month number, ranging from 1 to 13.
     * @type number
     */

    this.month = parseInt(params.month, 10) || 1;
    /**
     * The day of the month. This ranges from 1 to 30.
     * @type number
     */

    this.day = parseInt(params.day, 10) || 1;
    /**
     * The hour of the day. This can be a number from 0 to 23, as times are
     * stored unambiguously in the 24-hour clock.
     * @type number
     */

    this.hour = parseInt(params.hour, 10) || 0;

    if (typeof params.parts !== 'undefined') {
      /**
       * The parts (halaqim) of the hour. This can be a number from 0 to 1079.
       * @type number
       */
      this.parts = parseInt(params.parts, 10);
      var seconds = parseInt(params.parts, 10) * 3.333333333333;
      this.minute = Math.floor(seconds / 60);
      seconds -= this.minute * 60;
      this.second = Math.floor(seconds);
      this.millisecond = seconds - this.second;
    } else {
      /**
       * The minute of the hours. Ranges from 0 to 59.
       * @type number
       */
      this.minute = parseInt(params.minute, 10) || 0;
      /**
       * The second of the minute. Ranges from 0 to 59.
       * @type number
       */

      this.second = parseInt(params.second, 10) || 0;
      /**
       * The millisecond of the second. Ranges from 0 to 999.
       * @type number
       */

      this.millisecond = parseInt(params.millisecond, 10) || 0;
    }
    /**
     * The day of the year. Ranges from 1 to 383.
     * @type number
     */


    this.dayOfYear = parseInt(params.dayOfYear, 10);

    if (typeof params.dst === 'boolean') {
      this.dst = params.dst;
    }

    this.rd = this.newRd(this); // add the time zone offset to the rd to convert to UTC

    new TimeZone({
      id: this.timezone,
      sync: params.sync,
      loadParams: params.loadParams,
      onLoad: ilib.bind(this, function (tz) {
        this.tz = tz; // getOffsetMillis requires that this.year, this.rd, and this.dst
        // are set in order to figure out which time zone rules apply and
        // what the offset is at that point in the year

        this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

        if (this.offset !== 0) {
          this.rd = this.newRd({
            rd: this.rd.getRataDie() - this.offset
          });
        }

        this._init2(params);
      })
    });
  } else {
    this._init2(params);
  }
};
/**
 * Finish initializing this date
 * @private
 */


HebrewDate.prototype._init2 = function (params) {
  if (!this.rd) {
    this.rd = this.newRd(params);

    this._calcDateComponents();
  }

  if (typeof params.onLoad === "function") {
    params.onLoad(this);
  }
};
/**
 * the cumulative lengths of each month for a non-leap year, without new years corrections,
 * that can be used in reverse to map days to months
 * @private
 * @const
 * @type Array.<number>
 */


HebrewDate.cumMonthLengthsReverse = [//  [days, monthnumber],
[0, 7],
/* Tishri - Jewish New Year (Rosh HaShanah) starts in month 7 */
[30, 8],
/* Heshvan */
[59, 9],
/* Kislev */
[88, 10],
/* Teveth */
[117, 11],
/* Shevat */
[147, 12],
/* Adar I */
[176, 1],
/* Nisan */
[206, 2],
/* Iyyar */
[235, 3],
/* Sivan */
[265, 4],
/* Tammuz */
[294, 5],
/* Av */
[324, 6],
/* Elul */
[354, 7]
/* end of year sentinel value */
];
/**
 * the cumulative lengths of each month for a leap year, without new years corrections
 * that can be used in reverse to map days to months
 *
 * @private
 * @const
 * @type Array.<number>
 */

HebrewDate.cumMonthLengthsLeapReverse = [//  [days, monthnumber],
[0, 7],
/* Tishri - Jewish New Year (Rosh HaShanah) starts in month 7 */
[30, 8],
/* Heshvan */
[59, 9],
/* Kislev */
[88, 10],
/* Teveth */
[117, 11],
/* Shevat */
[147, 12],
/* Adar I */
[177, 13],
/* Adar II */
[206, 1],
/* Nisan */
[236, 2],
/* Iyyar */
[265, 3],
/* Sivan */
[295, 4],
/* Tammuz */
[324, 5],
/* Av */
[354, 6],
/* Elul */
[384, 7]
/* end of year sentinel value */
];
/**
 * Number of days difference between RD 0 of the Hebrew calendar
 * (Jan 1, 1 Gregorian = JD 1721057.5) and RD 0 of the Hebrew calendar
 * (September 7, -3760 Gregorian = JD 347997.25)
 * @private
 * @const
 * @type number
 */

HebrewDate.GregorianDiff = 1373060.25;
/**
 * Return a new RD for this date type using the given params.
 * @private
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */

HebrewDate.prototype.newRd = function (params) {
  return new HebrewRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from
 * @returns {number} the year for the RD
 */


HebrewDate.prototype._calcYear = function (rd) {
  var year, approximation, nextNewYear; // divide by the average number of days per year in the Hebrew calendar
  // to approximate the year, then tweak it to get the real year

  approximation = Math.floor(rd / 365.246822206) + 1; // console.log("HebrewDate._calcYear: approx is " + approximation);
  // search forward from approximation-1 for the year that actually contains this rd

  year = approximation;
  nextNewYear = HebrewCal.newYear(year);

  while (rd >= nextNewYear) {
    year++;
    nextNewYear = HebrewCal.newYear(year);
  }

  return year - 1;
};
/**
 * Calculate date components for the given RD date.
 * @protected
 */


HebrewDate.prototype._calcDateComponents = function () {
  var remainder,
      i,
      table,
      target,
      rd = this.rd.getRataDie(); // console.log("HebrewDate.calcComponents: calculating for rd " + rd);

  if (typeof this.offset === "undefined") {
    this.year = this._calcYear(rd); // now offset the RD by the time zone, then recalculate in case we were
    // near the year boundary

    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    rd += this.offset;
    this.year = this._calcYear(rd);
  } // console.log("HebrewDate.calcComponents: year is " + this.year + " with starting rd " + thisNewYear);


  remainder = rd - HebrewCal.newYear(this.year); // console.log("HebrewDate.calcComponents: remainder is " + remainder);
  // take out new years corrections so we get the right month when we look it up in the table

  if (remainder >= 59) {
    if (remainder >= 88) {
      if (HebrewCal.longKislev(this.year)) {
        remainder--;
      }
    }

    if (HebrewCal.longHeshvan(this.year)) {
      remainder--;
    }
  } // console.log("HebrewDate.calcComponents: after new years corrections, remainder is " + remainder);


  table = this.cal.isLeapYear(this.year) ? HebrewDate.cumMonthLengthsLeapReverse : HebrewDate.cumMonthLengthsReverse;
  i = 0;
  target = Math.floor(remainder);

  while (i + 1 < table.length && target >= table[i + 1][0]) {
    i++;
  }

  this.month = table[i][1]; // console.log("HebrewDate.calcComponents: remainder is " + remainder);

  remainder -= table[i][0]; // console.log("HebrewDate.calcComponents: month is " + this.month + " and remainder is " + remainder);

  this.day = Math.floor(remainder);
  remainder -= this.day;
  this.day++; // days are 1-based
  // console.log("HebrewDate.calcComponents: day is " + this.day + " and remainder is " + remainder);
  // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000; // the hours from 0 to 6 are actually 18:00 to midnight of the previous
  // gregorian day, so we have to adjust for that

  if (this.hour >= 6) {
    this.hour -= 6;
  } else {
    this.hour += 18;
  }

  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = Math.floor(remainder);
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 *
 * @return {number} the day of the week
 */


HebrewDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd + 1, 7);
};
/**
 * Get the Halaqim (parts) of an hour. There are 1080 parts in an hour, which means
 * each part is 3.33333333 seconds long. This means the number returned may not
 * be an integer.
 *
 * @return {number} the halaqim parts of the current hour
 */


HebrewDate.prototype.getHalaqim = function () {
  if (this.parts < 0) {
    // convert to ms first, then to parts
    var h = this.minute * 60000 + this.second * 1000 + this.millisecond;
    this.parts = h * 0.0003;
  }

  return this.parts;
};
/**
 * Return the rd number of the first Sunday of the given ISO year.
 * @protected
 * @return the rd of the first Sunday of the ISO year
 */


HebrewDate.prototype.firstSunday = function (year) {
  var tishri1 = this.newRd({
    year: year,
    month: 7,
    day: 1,
    hour: 18,
    minute: 0,
    second: 0,
    millisecond: 0,
    cal: this.cal
  });
  var firstThu = this.newRd({
    rd: tishri1.onOrAfter(4),
    cal: this.cal
  });
  return firstThu.before(0);
};
/**
 * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to
 * 385, regardless of months or weeks, etc. That is, Tishri 1st is day 1, and
 * Elul 29 is 385 for a leap year with a long Heshvan and long Kislev.
 * @return {number} the ordinal day of the year
 */


HebrewDate.prototype.getDayOfYear = function () {
  var table = this.cal.isLeapYear(this.year) ? HebrewRataDie.cumMonthLengthsLeap : HebrewRataDie.cumMonthLengths;
  var days = table[this.month - 1];

  if ((this.month < 7 || this.month > 8) && HebrewCal.longHeshvan(this.year)) {
    days++;
  }

  if ((this.month < 7 || this.month > 9) && HebrewCal.longKislev(this.year)) {
    days++;
  }

  return days + this.day;
};
/**
 * Return the ordinal number of the week within the month. The first week of a month is
 * the first one that contains 4 or more days in that month. If any days precede this
 * first week, they are marked as being in week 0. This function returns values from 0
 * through 6.<p>
 *
 * The locale is a required parameter because different locales that use the same
 * Hebrew calendar consider different days of the week to be the beginning of
 * the week. This can affect the week of the month in which some days are located.
 *
 * @param {Locale|string} locale the locale or locale spec to use when figuring out
 * the first day of the week
 * @return {number} the ordinal number of the week within the current month
 */


HebrewDate.prototype.getWeekOfMonth = function (locale) {
  var li = new LocaleInfo(locale),
      first = this.newRd({
    year: this.year,
    month: this.month,
    day: 1,
    hour: 18,
    minute: 0,
    second: 0,
    millisecond: 0
  }),
      rd = this.rd.getRataDie(),
      weekStart = first.onOrAfter(li.getFirstDayOfWeek());

  if (weekStart - first.getRataDie() > 3) {
    // if the first week has 4 or more days in it of the current month, then consider
    // that week 1. Otherwise, it is week 0. To make it week 1, move the week start
    // one week earlier.
    weekStart -= 7;
  }

  return rd < weekStart ? 0 : Math.floor((rd - weekStart) / 7) + 1;
};
/**
 * Return the era for this date as a number. The value for the era for Hebrew
 * calendars is -1 for "before the Hebrew era" and 1 for "the Hebrew era".
 * Hebrew era dates are any date after Tishri 1, 1, which is the same as
 * September 7, 3760 BC in the Gregorian calendar.
 *
 * @return {number} 1 if this date is in the Hebrew era, -1 if it is before the
 * Hebrew era
 */


HebrewDate.prototype.getEra = function () {
  return this.year < 1 ? -1 : 1;
};
/**
 * Return the name of the calendar that governs this date.
 *
 * @return {string} a string giving the name of the calendar
 */


HebrewDate.prototype.getCalendar = function () {
  return "hebrew";
}; // register with the factory method


IDate._constructors["hebrew"] = HebrewDate;
module.exports = HebrewDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/HebrewRataDie.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/HebrewRataDie.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * HebrewRataDie.js - Represent an RD date in the Hebrew calendar
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
MathUtils.js
HebrewCal.js
RataDie.js
*/

var HebrewCal = __webpack_require__(/*! ./HebrewCal.js */ "./node_modules/@enact/i18n/ilib/lib/HebrewCal.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");
/**
 * @class
 * Construct a new Hebrew RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>parts</i> - 0 to 1079. Specify the halaqim parts of an hour. Either specify 
 * the parts or specify the minutes, seconds, and milliseconds, but not both. 
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Hebrew date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Hebrew RD date
 */


var HebrewRataDie = function HebrewRataDie(params) {
  this.cal = params && params.cal || new HebrewCal();
  this.rd = NaN;
  RataDie.call(this, params);
};

HebrewRataDie.prototype = new RataDie();
HebrewRataDie.prototype.parent = RataDie;
HebrewRataDie.prototype.constructor = HebrewRataDie;
/**
 * The difference between a zero Julian day and the first day of the Hebrew 
 * calendar: sunset on Monday, Tishri 1, 1 = September 7, 3760 BC Gregorian = JD 347997.25
 * @private
 * @type number
 */

HebrewRataDie.prototype.epoch = 347997.25;
/**
 * the cumulative lengths of each month for a non-leap year, without new years corrections
 * @private
 * @const
 * @type Array.<number>
 */

HebrewRataDie.cumMonthLengths = [176,
/* Nisan */
206,
/* Iyyar */
235,
/* Sivan */
265,
/* Tammuz */
294,
/* Av */
324,
/* Elul */
0,
/* Tishri - Jewish New Year (Rosh HaShanah) starts in month 7 */
30,
/* Heshvan */
59,
/* Kislev */
88,
/* Teveth */
117,
/* Shevat */
147
/* Adar I */
];
/**
 * the cumulative lengths of each month for a leap year, without new years corrections 
 * @private
 * @const
 * @type Array.<number>
 */

HebrewRataDie.cumMonthLengthsLeap = [206,
/* Nisan */
236,
/* Iyyar */
265,
/* Sivan */
295,
/* Tammuz */
324,
/* Av */
354,
/* Elul */
0,
/* Tishri - Jewish New Year (Rosh HaShanah) starts in month 7 */
30,
/* Heshvan */
59,
/* Kislev */
88,
/* Teveth */
117,
/* Shevat */
147,
/* Adar I */
177
/* Adar II */
];
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 * 
 * @private
 * @param {Object} date the date components to calculate the RD from
 */

HebrewRataDie.prototype._setDateComponents = function (date) {
  var elapsed = HebrewCal.elapsedDays(date.year);
  var days = elapsed + HebrewCal.newYearsCorrection(date.year, elapsed) + date.day - 1;
  var sum = 0,
      table; //console.log("getRataDie: converting " +  JSON.stringify(date));
  //console.log("getRataDie: days is " +  days);
  //console.log("getRataDie: new years correction is " +  HebrewCal.newYearsCorrection(date.year, elapsed));

  table = this.cal.isLeapYear(date.year) ? HebrewRataDie.cumMonthLengthsLeap : HebrewRataDie.cumMonthLengths;
  sum = table[date.month - 1]; // gets cumulative without correction, so now add in the correction

  if ((date.month < 7 || date.month > 8) && HebrewCal.longHeshvan(date.year)) {
    sum++;
  }

  if ((date.month < 7 || date.month > 9) && HebrewCal.longKislev(date.year)) {
    sum++;
  } // console.log("getRataDie: cum days is now " +  sum);


  days += sum; // the date starts at sunset, which we take as 18:00, so the hours from
  // midnight to 18:00 are on the current Gregorian day, and the hours from
  // 18:00 to midnight are on the previous Gregorian day. So to calculate the 
  // number of hours into the current day that this time represents, we have
  // to count from 18:00 to midnight first, and add in 6 hours if the time is
  // less than 18:00

  var minute, second, millisecond;

  if (typeof date.parts !== 'undefined') {
    // The parts (halaqim) of the hour. This can be a number from 0 to 1079.
    var parts = parseInt(date.parts, 10);
    var seconds = parseInt(parts, 10) * 3.333333333333;
    minute = Math.floor(seconds / 60);
    seconds -= minute * 60;
    second = Math.floor(seconds);
    millisecond = seconds - second;
  } else {
    minute = parseInt(date.minute, 10) || 0;
    second = parseInt(date.second, 10) || 0;
    millisecond = parseInt(date.millisecond, 10) || 0;
  }

  var time;

  if (date.hour >= 18) {
    time = ((date.hour - 18 || 0) * 3600000 + (minute || 0) * 60000 + (second || 0) * 1000 + (millisecond || 0)) / 86400000;
  } else {
    time = 0.25 + // 6 hours from 18:00 to midnight on the previous gregorian day
    ((date.hour || 0) * 3600000 + (minute || 0) * 60000 + (second || 0) * 1000 + (millisecond || 0)) / 86400000;
  } //console.log("getRataDie: rd is " +  (days + time));


  this.rd = days + time;
};
/**
 * Return the rd number of the particular day of the week on or before the 
 * given rd. eg. The Sunday on or before the given rd.
 * @private
 * @param {number} rd the rata die date of the reference date
 * @param {number} dayOfWeek the day of the week that is being sought relative 
 * to the current date
 * @return {number} the rd of the day of the week
 */


HebrewRataDie.prototype._onOrBefore = function (rd, dayOfWeek) {
  return rd - MathUtils.mod(Math.floor(rd) - dayOfWeek + 1, 7);
};

module.exports = HebrewRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/IDate.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/IDate.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * IDate.js - Represent a date in any calendar. This class is subclassed for each 
 * calendar and includes some shared functionality.
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends LocaleInfo.js */


var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");
/**
 * @class
 * Superclass for all the calendar date classes that contains shared 
 * functionality. This class is never instantiated on its own. Instead,
 * you should use the {@link DateFactory} function to manufacture a new
 * instance of a subclass of IDate. This class is called IDate for "ilib
 * date" so that it does not conflict with the built-in Javascript Date
 * class.
 * 
 * @private
 * @constructor
 * @param {Object=} options The date components to initialize this date with
 */


var IDate = function IDate(options) {};
/* place for the subclasses to put their constructors so that the factory method
 * can find them. Do this to add your date after it's defined: 
 * IDate._constructors["mytype"] = IDate.MyTypeConstructor;
 */


IDate._constructors = {};
IDate.prototype = {
  getType: function getType() {
    return "date";
  },

  /**
   * Return the unix time equivalent to this date instance. Unix time is
   * the number of milliseconds since midnight on Jan 1, 1970 UTC (Gregorian). This 
   * method only returns a valid number for dates between midnight, 
   * Jan 1, 1970 UTC (Gregorian) and Jan 19, 2038 at 3:14:07am UTC (Gregorian) when 
   * the unix time runs out. If this instance encodes a date outside of that range, 
   * this method will return -1. For date types that are not Gregorian, the point 
   * in time represented by this date object will only give a return value if it
   * is in the correct range in the Gregorian calendar as given previously.
   * 
   * @return {number} a number giving the unix time, or -1 if the date is outside the
   * valid unix time range
   */
  getTime: function getTime() {
    return this.rd.getTime();
  },

  /**
   * Return the extended unix time equivalent to this Gregorian date instance. Unix time is
   * the number of milliseconds since midnight on Jan 1, 1970 UTC. Traditionally unix time
   * (or the type "time_t" in C/C++) is only encoded with an unsigned 32 bit integer, and thus 
   * runs out on Jan 19, 2038. However, most Javascript engines encode numbers well above 
   * 32 bits and the Date object allows you to encode up to 100 million days worth of time 
   * after Jan 1, 1970, and even more interestingly, 100 million days worth of time before
   * Jan 1, 1970 as well. This method returns the number of milliseconds in that extended 
   * range. If this instance encodes a date outside of that range, this method will return
   * NaN.
   * 
   * @return {number} a number giving the extended unix time, or Nan if the date is outside 
   * the valid extended unix time range
   */
  getTimeExtended: function getTimeExtended() {
    return this.rd.getTimeExtended();
  },

  /**
   * Set the time of this instance according to the given unix time. Unix time is
   * the number of milliseconds since midnight on Jan 1, 1970.
   * 
   * @param {number} millis the unix time to set this date to in milliseconds 
   */
  setTime: function setTime(millis) {
    this.rd = this.newRd({
      unixtime: millis,
      cal: this.cal
    });

    this._calcDateComponents();
  },
  getDays: function getDays() {
    return this.day;
  },
  getMonths: function getMonths() {
    return this.month;
  },
  getYears: function getYears() {
    return this.year;
  },
  getHours: function getHours() {
    return this.hour;
  },
  getMinutes: function getMinutes() {
    return this.minute;
  },
  getSeconds: function getSeconds() {
    return this.second;
  },
  getMilliseconds: function getMilliseconds() {
    return this.millisecond;
  },
  getEra: function getEra() {
    return this.year < 1 ? -1 : 1;
  },
  setDays: function setDays(day) {
    this.day = parseInt(day, 10) || 1;

    this.rd._setDateComponents(this);
  },
  setMonths: function setMonths(month) {
    this.month = parseInt(month, 10) || 1;

    this.rd._setDateComponents(this);
  },
  setYears: function setYears(year) {
    this.year = parseInt(year, 10) || 0;

    this.rd._setDateComponents(this);
  },
  setHours: function setHours(hour) {
    this.hour = parseInt(hour, 10) || 0;

    this.rd._setDateComponents(this);
  },
  setMinutes: function setMinutes(minute) {
    this.minute = parseInt(minute, 10) || 0;

    this.rd._setDateComponents(this);
  },
  setSeconds: function setSeconds(second) {
    this.second = parseInt(second, 10) || 0;

    this.rd._setDateComponents(this);
  },
  setMilliseconds: function setMilliseconds(milli) {
    this.millisecond = parseInt(milli, 10) || 0;

    this.rd._setDateComponents(this);
  },

  /**
   * Return a new date instance in the current calendar that represents the first instance 
   * of the given day of the week before the current date. The day of the week is encoded
   * as a number where 0 = Sunday, 1 = Monday, etc.
   * 
   * @param {number} dow the day of the week before the current date that is being sought
   * @return {IDate} the date being sought
   */
  before: function before(dow) {
    return new this.constructor({
      rd: this.rd.before(dow, this.offset),
      timezone: this.timezone
    });
  },

  /**
   * Return a new date instance in the current calendar that represents the first instance 
   * of the given day of the week after the current date. The day of the week is encoded
   * as a number where 0 = Sunday, 1 = Monday, etc.
   * 
   * @param {number} dow the day of the week after the current date that is being sought
   * @return {IDate} the date being sought
   */
  after: function after(dow) {
    return new this.constructor({
      rd: this.rd.after(dow, this.offset),
      timezone: this.timezone
    });
  },

  /**
   * Return a new Gregorian date instance that represents the first instance of the 
   * given day of the week on or before the current date. The day of the week is encoded
   * as a number where 0 = Sunday, 1 = Monday, etc.
   * 
   * @param {number} dow the day of the week on or before the current date that is being sought
   * @return {IDate} the date being sought
   */
  onOrBefore: function onOrBefore(dow) {
    return new this.constructor({
      rd: this.rd.onOrBefore(dow, this.offset),
      timezone: this.timezone
    });
  },

  /**
   * Return a new Gregorian date instance that represents the first instance of the 
   * given day of the week on or after the current date. The day of the week is encoded
   * as a number where 0 = Sunday, 1 = Monday, etc.
   * 
   * @param {number} dow the day of the week on or after the current date that is being sought
   * @return {IDate} the date being sought
   */
  onOrAfter: function onOrAfter(dow) {
    return new this.constructor({
      rd: this.rd.onOrAfter(dow, this.offset),
      timezone: this.timezone
    });
  },

  /**
   * Return a Javascript Date object that is equivalent to this date
   * object.
   * 
   * @return {Date|undefined} a javascript Date object
   */
  getJSDate: function getJSDate() {
    var unix = this.rd.getTimeExtended();
    return isNaN(unix) ? undefined : new Date(unix);
  },

  /**
   * Return the Rata Die (fixed day) number of this date.
   * 
   * @protected
   * @return {number} the rd date as a number
   */
  getRataDie: function getRataDie() {
    return this.rd.getRataDie();
  },

  /**
   * Set the date components of this instance based on the given rd.
   * @protected
   * @param {number} rd the rata die date to set
   */
  setRd: function setRd(rd) {
    this.rd = this.newRd({
      rd: rd,
      cal: this.cal
    });

    this._calcDateComponents();
  },

  /**
   * Return the Julian Day equivalent to this calendar date as a number.
   * 
   * @return {number} the julian date equivalent of this date
   */
  getJulianDay: function getJulianDay() {
    return this.rd.getJulianDay();
  },

  /**
   * Set the date of this instance using a Julian Day.
   * @param {number|JulianDay} date the Julian Day to use to set this date
   */
  setJulianDay: function setJulianDay(date) {
    this.rd = this.newRd({
      julianday: _typeof(date) === 'object' ? date.getDate() : date,
      cal: this.cal
    });

    this._calcDateComponents();
  },

  /**
   * Return the time zone associated with this date, or 
   * undefined if none was specified in the constructor.
   * 
   * @return {string|undefined} the name of the time zone for this date instance
   */
  getTimeZone: function getTimeZone() {
    return this.timezone || "local";
  },

  /**
   * Set the time zone associated with this date.
   * @param {string=} tzName the name of the time zone to set into this date instance,
   * or "undefined" to unset the time zone 
   */
  setTimeZone: function setTimeZone(tzName) {
    if (!tzName || tzName === "") {
      // same as undefining it
      this.timezone = undefined;
      this.tz = undefined;
    } else if (typeof tzName === 'string') {
      this.timezone = tzName;
      this.tz = undefined; // assuming the same UTC time, but a new time zone, now we have to 
      // recalculate what the date components are

      this._calcDateComponents();
    }
  },

  /**
   * Return the rd number of the first Sunday of the given ISO year.
   * @protected
   * @param {number} year the year for which the first Sunday is being sought
   * @return {number} the rd of the first Sunday of the ISO year
   */
  firstSunday: function firstSunday(year) {
    var firstDay = this.newRd({
      year: year,
      month: 1,
      day: 1,
      hour: 0,
      minute: 0,
      second: 0,
      millisecond: 0,
      cal: this.cal
    });
    var firstThu = this.newRd({
      rd: firstDay.onOrAfter(4),
      cal: this.cal
    });
    return firstThu.before(0);
  },

  /**
   * Return the ISO 8601 week number in the current year for the current date. The week
   * number ranges from 0 to 55, as some years have 55 weeks assigned to them in some
   * calendars.
   * 
   * @return {number} the week number for the current date
   */
  getWeekOfYear: function getWeekOfYear() {
    var rd = Math.floor(this.rd.getRataDie());

    var year = this._calcYear(rd + this.offset);

    var yearStart = this.firstSunday(year);
    var nextYear; // if we have a January date, it may be in this ISO year or the previous year

    if (rd < yearStart) {
      yearStart = this.firstSunday(year - 1);
    } else {
      // if we have a late December date, it may be in this ISO year, or the next year
      nextYear = this.firstSunday(year + 1);

      if (rd >= nextYear) {
        yearStart = nextYear;
      }
    }

    return Math.floor((rd - yearStart) / 7) + 1;
  },

  /**
   * Return the ordinal number of the week within the month. The first week of a month is
   * the first one that contains 4 or more days in that month. If any days precede this
   * first week, they are marked as being in week 0. This function returns values from 0
   * through 6.<p>
   * 
   * The locale is a required parameter because different locales that use the same 
   * Gregorian calendar consider different days of the week to be the beginning of
   * the week. This can affect the week of the month in which some days are located.
   * 
   * @param {Locale|string} locale the locale or locale spec to use when figuring out 
   * the first day of the week
   * @return {number} the ordinal number of the week within the current month
   */
  getWeekOfMonth: function getWeekOfMonth(locale) {
    var li = new LocaleInfo(locale);
    var first = this.newRd({
      year: this._calcYear(this.rd.getRataDie() + this.offset),
      month: this.getMonths(),
      day: 1,
      hour: 0,
      minute: 0,
      second: 0,
      millisecond: 0,
      cal: this.cal
    });
    var weekStart = first.onOrAfter(li.getFirstDayOfWeek());

    if (weekStart - first.getRataDie() > 3) {
      // if the first week has 4 or more days in it of the current month, then consider
      // that week 1. Otherwise, it is week 0. To make it week 1, move the week start
      // one week earlier.
      weekStart -= 7;
    }

    return Math.floor((this.rd.getRataDie() - weekStart) / 7) + 1;
  }
};
module.exports = IDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/IString.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/IString.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * IString.js - ilib string subclass definition
 *
 * Copyright © 2012-2015, 2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js Utils.js Locale.js MathUtils.js
// !data plurals


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");
/**
 * @class
 * Create a new ilib string instance. This string inherits from and
 * extends the Javascript String class. It can be
 * used almost anywhere that a normal Javascript string is used, though in
 * some instances you will need to call the {@link #toString} method when
 * a built-in Javascript string is needed. The formatting methods are
 * methods that are not in the intrinsic String class and are most useful
 * when localizing strings in an app or web site in combination with
 * the ResBundle class.<p>
 *
 * This class is named IString ("ilib string") so as not to conflict with the
 * built-in Javascript String class.
 *
 * @constructor
 * @param {string|IString=} string initialize this instance with this string
 */


var IString = function IString(string) {
  if (_typeof(string) === 'object') {
    if (string instanceof IString) {
      this.str = string.str;
    } else {
      this.str = string.toString();
    }
  } else if (typeof string === 'string') {
    this.str = new String(string);
  } else {
    this.str = "";
  }

  this.length = this.str.length;
  this.cpLength = -1;
  this.localeSpec = ilib.getLocale();
};
/**
 * Return true if the given character is a Unicode surrogate character,
 * either high or low.
 *
 * @private
 * @static
 * @param {string} ch character to check
 * @return {boolean} true if the character is a surrogate
 */


IString._isSurrogate = function (ch) {
  var n = ch.charCodeAt(0);
  return n >= 0xDC00 && n <= 0xDFFF || n >= 0xD800 && n <= 0xDBFF;
}; // build in the English rule


IString.plurals_default = {
  "one": {
    "and": [{
      "eq": ["i", 1]
    }, {
      "eq": ["v", 0]
    }]
  }
};
/**
 * Convert a UCS-4 code point to a Javascript string. The codepoint can be any valid
 * UCS-4 Unicode character, including supplementary characters. Standard Javascript
 * only supports supplementary characters using the UTF-16 encoding, which has
 * values in the range 0x0000-0xFFFF. String.fromCharCode() will only
 * give you a string containing 16-bit characters, and will not properly convert
 * the code point for a supplementary character (which has a value > 0xFFFF) into
 * two UTF-16 surrogate characters. Instead, it will just just give you whatever
 * single character happens to be the same as your code point modulo 0x10000, which
 * is almost never what you want.<p>
 *
 * Similarly, that means if you use String.charCodeAt()
 * you will only retrieve a 16-bit value, which may possibly be a single
 * surrogate character that is part of a surrogate pair representing a character
 * in the supplementary plane. It will not give you a code point. Use
 * IString.codePointAt() to access code points in a string, or use
 * an iterator to walk through the code points in a string.
 *
 * @static
 * @param {number} codepoint UCS-4 code point to convert to a character
 * @return {string} a string containing the character represented by the codepoint
 */

IString.fromCodePoint = function (codepoint) {
  if (codepoint < 0x10000) {
    return String.fromCharCode(codepoint);
  } else {
    var high = Math.floor(codepoint / 0x10000) - 1;
    var low = codepoint & 0xFFFF;
    return String.fromCharCode(0xD800 | (high & 0x000F) << 6 | (low & 0xFC00) >> 10) + String.fromCharCode(0xDC00 | low & 0x3FF);
  }
};
/**
 * Convert the character or the surrogate pair at the given
 * index into the intrinsic Javascript string to a Unicode
 * UCS-4 code point.
 *
 * @static
 * @param {string} str string to get the code point from
 * @param {number} index index into the string
 * @return {number} code point of the character at the
 * given index into the string
 */


IString.toCodePoint = function (str, index) {
  if (!str || str.length === 0) {
    return -1;
  }

  var code = -1,
      high = str.charCodeAt(index);

  if (high >= 0xD800 && high <= 0xDBFF) {
    if (str.length > index + 1) {
      var low = str.charCodeAt(index + 1);

      if (low >= 0xDC00 && low <= 0xDFFF) {
        code = ((high & 0x3C0) >> 6) + 1 << 16 | ((high & 0x3F) << 10 | low & 0x3FF);
      }
    }
  } else {
    code = high;
  }

  return code;
};
/**
 * Load the plural the definitions of plurals for the locale.
 * @param {boolean=} sync
 * @param {Locale|string=} locale
 * @param {Object=} loadParams
 * @param {function(*)=} onLoad
 */


IString.loadPlurals = function (sync, locale, loadParams, onLoad) {
  var loc;

  if (locale) {
    loc = typeof locale === 'string' ? new Locale(locale) : locale;
  } else {
    loc = new Locale(ilib.getLocale());
  }

  var spec = loc.getLanguage();

  if (!ilib.data["plurals_" + spec]) {
    Utils.loadData({
      name: "plurals.json",
      object: "IString",
      locale: loc,
      sync: sync,
      loadParams: loadParams,
      callback: ilib.bind(this, function (plurals) {
        if (!plurals) {
          ilib.data.cache.IString[spec] = IString.plurals_default;
        }

        ilib.data["plurals_" + spec] = plurals || IString.plurals_default;

        if (onLoad && typeof onLoad === 'function') {
          onLoad(ilib.data["plurals_" + spec]);
        }
      })
    });
  } else {
    if (onLoad && typeof onLoad === 'function') {
      onLoad(ilib.data["plurals_" + spec]);
    }
  }
};
/**
 * @private
 * @static
 */


IString._fncs = {
  /**
   * @private
   * @param {Object} obj
   * @return {string|undefined}
   */
  firstProp: function firstProp(obj) {
    for (var p in obj) {
      if (p && obj[p]) {
        return p;
      }
    }

    return undefined; // should never get here
  },

  /**
   * @private
   * @param {Object} obj
   * @return {string|undefined}
   */
  firstPropRule: function firstPropRule(obj) {
    if (Object.prototype.toString.call(obj) === '[object Array]') {
      return "inrange";
    } else if (Object.prototype.toString.call(obj) === '[object Object]') {
      for (var p in obj) {
        if (p && obj[p]) {
          return p;
        }
      }
    }

    return undefined; // should never get here
  },

  /**
   * @private
   * @param {Object} obj
   * @param {number|Object} n
   * @return {?}
   */
  getValue: function getValue(obj, n) {
    if (_typeof(obj) === 'object') {
      var subrule = IString._fncs.firstPropRule(obj);

      if (subrule === "inrange") {
        return IString._fncs[subrule](obj, n);
      }

      return IString._fncs[subrule](obj[subrule], n);
    } else if (typeof obj === 'string') {
      if (_typeof(n) === 'object') {
        return n[obj];
      }

      return n;
    } else {
      return obj;
    }
  },

  /**
   * @private
   * @param {number|Object} n
   * @param {Array.<number|Array.<number>>|Object} range
   * @return {boolean}
   */
  matchRangeContinuous: function matchRangeContinuous(n, range) {
    for (var num in range) {
      if (typeof num !== 'undefined' && typeof range[num] !== 'undefined') {
        var obj = range[num];

        if (typeof obj === 'number') {
          if (n === range[num]) {
            return true;
          } else if (n >= range[0] && n <= range[1]) {
            return true;
          }
        } else if (Object.prototype.toString.call(obj) === '[object Array]') {
          if (n >= obj[0] && n <= obj[1]) {
            return true;
          }
        }
      }
    }

    return false;
  },

  /**
   * @private
   * @param {*} number
   * @return {Object}
   */
  calculateNumberDigits: function calculateNumberDigits(number) {
    var numberToString = number.toString();
    var parts = [];
    var numberDigits = {};
    var operandSymbol = {};
    var integerPart, decimalPartLength, decimalPart;

    if (numberToString.indexOf('.') !== -1) {
      //decimal
      parts = numberToString.split('.', 2);
      numberDigits.integerPart = parseInt(parts[0], 10);
      numberDigits.decimalPartLength = parts[1].length;
      numberDigits.decimalPart = parseInt(parts[1], 10);
      operandSymbol.n = parseFloat(number);
      operandSymbol.i = numberDigits.integerPart;
      operandSymbol.v = numberDigits.decimalPartLength;
      operandSymbol.w = numberDigits.decimalPartLength;
      operandSymbol.f = numberDigits.decimalPart;
      operandSymbol.t = numberDigits.decimalPart;
    } else {
      numberDigits.integerPart = number;
      numberDigits.decimalPartLength = 0;
      numberDigits.decimalPart = 0;
      operandSymbol.n = parseInt(number, 10);
      operandSymbol.i = numberDigits.integerPart;
      operandSymbol.v = 0;
      operandSymbol.w = 0;
      operandSymbol.f = 0;
      operandSymbol.t = 0;
    }

    return operandSymbol;
  },

  /**
   * @private
   * @param {number|Object} n
   * @param {Array.<number|Array.<number>>|Object} range
   * @return {boolean}
   */
  matchRange: function matchRange(n, range) {
    return IString._fncs.matchRangeContinuous(n, range);
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number} n
   * @return {boolean}
   */
  is: function is(rule, n) {
    var left = IString._fncs.getValue(rule[0], n);

    var right = IString._fncs.getValue(rule[1], n);

    return left == right;
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number} n
   * @return {boolean}
   */
  isnot: function isnot(rule, n) {
    return IString._fncs.getValue(rule[0], n) != IString._fncs.getValue(rule[1], n);
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number|Object} n
   * @return {boolean}
   */
  inrange: function inrange(rule, n) {
    if (typeof rule[0] === 'number') {
      if (_typeof(n) === 'object') {
        return IString._fncs.matchRange(n.n, rule);
      }

      return IString._fncs.matchRange(n, rule);
    } else if (typeof rule[0] === 'undefined') {
      var subrule = IString._fncs.firstPropRule(rule);

      return IString._fncs[subrule](rule[subrule], n);
    } else {
      return IString._fncs.matchRange(IString._fncs.getValue(rule[0], n), rule[1]);
    }
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number} n
   * @return {boolean}
   */
  notin: function notin(rule, n) {
    return !IString._fncs.matchRange(IString._fncs.getValue(rule[0], n), rule[1]);
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number} n
   * @return {boolean}
   */
  within: function within(rule, n) {
    return IString._fncs.matchRangeContinuous(IString._fncs.getValue(rule[0], n), rule[1]);
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number} n
   * @return {number}
   */
  mod: function mod(rule, n) {
    return MathUtils.mod(IString._fncs.getValue(rule[0], n), IString._fncs.getValue(rule[1], n));
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number} n
   * @return {number}
   */
  n: function n(rule, _n) {
    return _n;
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number|Object} n
   * @return {boolean}
   */
  or: function or(rule, n) {
    var ruleLength = rule.length;
    var result, i;

    for (i = 0; i < ruleLength; i++) {
      result = IString._fncs.getValue(rule[i], n);

      if (result) {
        return true;
      }
    }

    return false;
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number|Object} n
   * @return {boolean}
   */
  and: function and(rule, n) {
    var ruleLength = rule.length;
    var result, i;

    for (i = 0; i < ruleLength; i++) {
      result = IString._fncs.getValue(rule[i], n);

      if (!result) {
        return false;
      }
    }

    return true;
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number|Object} n
   * @return {boolean}
   */
  eq: function eq(rule, n) {
    var valueLeft = IString._fncs.getValue(rule[0], n);

    var valueRight;

    if (typeof rule[0] === 'string') {
      if (_typeof(n) === 'object') {
        valueRight = n[rule[0]];

        if (typeof rule[1] === 'number') {
          valueRight = IString._fncs.getValue(rule[1], n);
        } else if (_typeof(rule[1]) === 'object' && IString._fncs.firstPropRule(rule[1]) === "inrange") {
          valueRight = IString._fncs.getValue(rule[1], n);
        }
      }
    } else {
      if (IString._fncs.firstPropRule(rule[1]) === "inrange") {
        // mod
        valueRight = IString._fncs.getValue(rule[1], valueLeft);
      } else {
        valueRight = IString._fncs.getValue(rule[1], n);
      }
    }

    if (typeof valueRight === 'boolean') {
      return valueRight ? true : false;
    } else {
      return valueLeft == valueRight ? true : false;
    }
  },

  /**
   * @private
   * @param {Object} rule
   * @param {number|Object} n
   * @return {boolean}
   */
  neq: function neq(rule, n) {
    var valueLeft = IString._fncs.getValue(rule[0], n);

    var valueRight;
    var leftRange;
    var rightRange;

    if (typeof rule[0] === 'string') {
      valueRight = n[rule[0]];

      if (typeof rule[1] === 'number') {
        valueRight = IString._fncs.getValue(rule[1], n);
      } else if (_typeof(rule[1]) === 'object') {
        leftRange = rule[1][0];
        rightRange = rule[1][1];

        if (typeof leftRange === 'number' && typeof rightRange === 'number') {
          if (valueLeft >= leftRange && valueRight <= rightRange) {
            return false;
          } else {
            return true;
          }
        }
      }
    } else {
      if (IString._fncs.firstPropRule(rule[1]) === "inrange") {
        // mod
        valueRight = IString._fncs.getValue(rule[1], valueLeft);
      } else {
        valueRight = IString._fncs.getValue(rule[1], n);
      }
    }

    if (typeof valueRight === 'boolean') {
      //mod
      return valueRight ? false : true;
    } else {
      return valueLeft !== valueRight ? true : false;
    }
  }
};
IString.prototype = {
  /**
   * Return the length of this string in characters. This function defers to the regular
   * Javascript string class in order to perform the length function. Please note that this
   * method is a real method, whereas the length property of Javascript strings is
   * implemented by native code and appears as a property.<p>
   *
   * Example:
   *
   * <pre>
   * var str = new IString("this is a string");
   * console.log("String is " + str._length() + " characters long.");
   * </pre>
   * @private
   */
  _length: function _length() {
    return this.str.length;
  },

  /**
   * Format this string instance as a message, replacing the parameters with
   * the given values.<p>
   *
   * The string can contain any text that a regular Javascript string can
   * contain. Replacement parameters have the syntax:
   *
   * <pre>
   * {name}
   * </pre>
   *
   * Where "name" can be any string surrounded by curly brackets. The value of
   * "name" is taken from the parameters argument.<p>
   *
   * Example:
   *
   * <pre>
   * var str = new IString("There are {num} objects.");
   * console.log(str.format({
   *   num: 12
   * });
   * </pre>
   *
   * Would give the output:
   *
   * <pre>
   * There are 12 objects.
   * </pre>
   *
   * If a property is missing from the parameter block, the replacement
   * parameter substring is left untouched in the string, and a different
   * set of parameters may be applied a second time. This way, different
   * parts of the code may format different parts of the message that they
   * happen to know about.<p>
   *
   * Example:
   *
   * <pre>
   * var str = new IString("There are {num} objects in the {container}.");
   * console.log(str.format({
   *   num: 12
   * });
   * </pre>
   *
   * Would give the output:<p>
   *
   * <pre>
   * There are 12 objects in the {container}.
   * </pre>
   *
   * The result can then be formatted again with a different parameter block that
   * specifies a value for the container property.
   *
   * @param params a Javascript object containing values for the replacement
   * parameters in the current string
   * @return a new IString instance with as many replacement parameters filled
   * out as possible with real values.
   */
  format: function format(params) {
    var formatted = this.str;

    if (params) {
      var regex;

      for (var p in params) {
        if (typeof params[p] !== 'undefined') {
          regex = new RegExp("\{" + p + "\}", "g");
          formatted = formatted.replace(regex, params[p]);
        }
      }
    }

    return formatted.toString();
  },

  /** @private */
  _testChoice: function _testChoice(index, limit) {
    var numberDigits = {};
    var operandValue = {};

    switch (_typeof(index)) {
      case 'number':
        operandValue = IString._fncs.calculateNumberDigits(index);

        if (limit.substring(0, 2) === "<=") {
          limit = parseFloat(limit.substring(2));
          return operandValue.n <= limit;
        } else if (limit.substring(0, 2) === ">=") {
          limit = parseFloat(limit.substring(2));
          return operandValue.n >= limit;
        } else if (limit.charAt(0) === "<") {
          limit = parseFloat(limit.substring(1));
          return operandValue.n < limit;
        } else if (limit.charAt(0) === ">") {
          limit = parseFloat(limit.substring(1));
          return operandValue.n > limit;
        } else {
          this.locale = this.locale || new Locale(this.localeSpec);

          switch (limit) {
            case "zero":
            case "one":
            case "two":
            case "few":
            case "many":
              // CLDR locale-dependent number classes
              var ruleset = ilib.data["plurals_" + this.locale.getLanguage()];

              if (ruleset) {
                var rule = ruleset[limit];
                return IString._fncs.getValue(rule, operandValue);
              }

              break;

            case "":
            case "other":
              // matches anything
              return true;

            default:
              var dash = limit.indexOf("-");

              if (dash !== -1) {
                // range
                var start = limit.substring(0, dash);
                var end = limit.substring(dash + 1);
                return operandValue.n >= parseInt(start, 10) && operandValue.n <= parseInt(end, 10);
              } else {
                return operandValue.n === parseInt(limit, 10);
              }

          }
        }

        break;

      case 'boolean':
        return limit === "true" && index === true || limit === "false" && index === false;

      case 'string':
        var regexp = new RegExp(limit, "i");
        return regexp.test(index);

      case 'object':
        throw "syntax error: formatChoice parameter for the argument index cannot be an object";
    }

    return false;
  },

  /**
   * Format a string as one of a choice of strings dependent on the value of
   * a particular argument index or array of indices.<p>
   *
   * The syntax of the choice string is as follows. The string contains a
   * series of choices separated by a vertical bar character "|". Each choice
   * has a value or range of values to match followed by a hash character "#"
   * followed by the string to use if the variable matches the criteria.<p>
   *
   * Example string:
   *
   * <pre>
   * var num = 2;
   * var str = new IString("0#There are no objects.|1#There is one object.|2#There are {number} objects.");
   * console.log(str.formatChoice(num, {
   *   number: num
   * }));
   * </pre>
   *
   * Gives the output:
   *
   * <pre>
   * "There are 2 objects."
   * </pre>
   *
   * The strings to format may contain replacement variables that will be formatted
   * using the format() method above and the params argument as a source of values
   * to use while formatting those variables.<p>
   *
   * If the criterion for a particular choice is empty, that choice will be used
   * as the default one for use when none of the other choice's criteria match.<p>
   *
   * Example string:
   *
   * <pre>
   * var num = 22;
   * var str = new IString("0#There are no objects.|1#There is one object.|#There are {number} objects.");
   * console.log(str.formatChoice(num, {
   *   number: num
   * }));
   * </pre>
   *
   * Gives the output:
   *
   * <pre>
   * "There are 22 objects."
   * </pre>
   *
   * If multiple choice patterns can match a given argument index, the first one
   * encountered in the string will be used. If no choice patterns match the
   * argument index, then the default choice will be used. If there is no default
   * choice defined, then this method will return an empty string.<p>
   *
   * <b>Special Syntax</b><p>
   *
   * For any choice format string, all of the patterns in the string should be
   * of a single type: numeric, boolean, or string/regexp. The type of the
   * patterns is determined by the type of the argument index parameter.<p>
   *
   * If the argument index is numeric, then some special syntax can be used
   * in the patterns to match numeric ranges.<p>
   *
   * <ul>
   * <li><i>&gt;x</i> - match any number that is greater than x
   * <li><i>&gt;=x</i> - match any number that is greater than or equal to x
   * <li><i>&lt;x</i> - match any number that is less than x
   * <li><i>&lt;=x</i> - match any number that is less than or equal to x
   * <li><i>start-end</i> - match any number in the range [start,end)
   * <li><i>zero</i> - match any number in the class "zero". (See below for
   * a description of number classes.)
   * <li><i>one</i> - match any number in the class "one"
   * <li><i>two</i> - match any number in the class "two"
   * <li><i>few</i> - match any number in the class "few"
   * <li><i>many</i> - match any number in the class "many"
      * <li><i>other</i> - match any number in the other or default class
   * </ul>
   *
   * A number class defines a set of numbers that receive a particular syntax
   * in the strings. For example, in Slovenian, integers ending in the digit
   * "1" are in the "one" class, including 1, 21, 31, ... 101, 111, etc.
   * Similarly, integers ending in the digit "2" are in the "two" class.
   * Integers ending in the digits "3" or "4" are in the "few" class, and
   * every other integer is handled by the default string.<p>
   *
   * The definition of what numbers are included in a class is locale-dependent.
   * They are defined in the data file plurals.json. If your string is in a
   * different locale than the default for ilib, you should call the setLocale()
   * method of the string instance before calling this method.<p>
   *
   * <b>Other Pattern Types</b><p>
   *
   * If the argument index is a boolean, the string values "true" and "false"
   * may appear as the choice patterns.<p>
   *
   * If the argument index is of type string, then the choice patterns may contain
   * regular expressions, or static strings as degenerate regexps.<p>
   *
   * <b>Multiple Indexes</b><p>
   *
   * If you have 2 or more indexes to format into a string, you can pass them as
   * an array. When you do that, the patterns to match should be a comma-separate
   * list of patterns as per the rules above.<p>
   *
      * Example string:
      *
      * <pre>
      * var str = new IString("zero,zero#There are no objects on zero pages.|one,one#There is 1 object on 1 page.|other,one#There are {number} objects on 1 page.|#There are {number} objects on {pages} pages.");
      * var num = 4, pages = 1;
      * console.log(str.formatChoice([num, pages], {
      *   number: num,
      *   pages: pages
      * }));
      * </pre>
      *
      * Gives the output:<p>
      *
      * <pre>
      * "There are 4 objects on 1 page."
      * </pre>
      *
      * Note that when there is a single index, you would typically leave the pattern blank to
      * indicate the default choice. When there are multiple indices, sometimes one of the
      * patterns has to be the default case when the other is not. Rather than leaving one or
      * more of the patterns blank with commas that look out-of-place in the middle of it, you
      * can use the word "other" to indicate a match with the default or other choice. The above example
      * shows the use of the "other" pattern. That said, you are allowed to leave the pattern
      * blank if you so choose. In the example above, the pattern for the third string could
      * easily have been written as ",one" instead of "other,one" and the result will be the same.
      *
   * @param {*|Array.<*>} argIndex The index into the choice array of the current parameter,
   * or an array of indices
   * @param {Object} params The hash of parameter values that replace the replacement
   * variables in the string
   * @throws "syntax error in choice format pattern: " if there is a syntax error
   * @return {string} the formatted string
   */
  formatChoice: function formatChoice(argIndex, params) {
    var choices = this.str.split("|");

    var type = _typeof(argIndex);

    var limits = [];
    var strings = [];
    var i;
    var parts;
    var limit;
    var arg;
    var result = undefined;
    var defaultCase = "";

    if (this.str.length === 0) {
      // nothing to do
      return "";
    } // first parse all the choices


    for (i = 0; i < choices.length; i++) {
      parts = choices[i].split("#");

      if (parts.length > 2) {
        limits[i] = parts[0];
        parts = parts.shift();
        strings[i] = parts.join("#");
      } else if (parts.length === 2) {
        limits[i] = parts[0];
        strings[i] = parts[1];
      } else {
        // syntax error
        throw "syntax error in choice format pattern: " + choices[i];
      }
    }

    var args = ilib.isArray(argIndex) ? argIndex : [argIndex]; // then apply the argument index (or indices)

    for (i = 0; i < limits.length; i++) {
      if (limits[i].length === 0) {
        // this is default case
        defaultCase = new IString(strings[i]);
      } else {
        var limitsArr = limits[i].indexOf(",") > -1 ? limits[i].split(",") : [limits[i]];
        var applicable = true;

        for (var j = 0; applicable && j < args.length && j < limitsArr.length; j++) {
          applicable = this._testChoice(args[j], limitsArr[j]);
        }

        if (applicable) {
          result = new IString(strings[i]);
          i = limits.length;
        }
      }
    }

    if (!result) {
      result = defaultCase || new IString("");
    }

    result = result.format(params);
    return result.toString();
  },
  // delegates

  /**
   * Same as String.toString()
   * @return {string} this instance as regular Javascript string
   */
  toString: function toString() {
    return this.str.toString();
  },

  /**
   * Same as String.valueOf()
   * @return {string} this instance as a regular Javascript string
   */
  valueOf: function valueOf() {
    return this.str.valueOf();
  },

  /**
   * Same as String.charAt()
   * @param {number} index the index of the character being sought
   * @return {IString} the character at the given index
   */
  charAt: function charAt(index) {
    return new IString(this.str.charAt(index));
  },

  /**
   * Same as String.charCodeAt(). This only reports on
   * 2-byte UCS-2 Unicode values, and does not take into
   * account supplementary characters encoded in UTF-16.
   * If you would like to take account of those characters,
   * use codePointAt() instead.
   * @param {number} index the index of the character being sought
   * @return {number} the character code of the character at the
   * given index in the string
   */
  charCodeAt: function charCodeAt(index) {
    return this.str.charCodeAt(index);
  },

  /**
   * Same as String.concat()
   * @param {string} strings strings to concatenate to the current one
   * @return {IString} a concatenation of the given strings
   */
  concat: function concat(strings) {
    return new IString(this.str.concat(strings));
  },

  /**
   * Same as String.indexOf()
   * @param {string} searchValue string to search for
   * @param {number} start index into the string to start searching, or
   * undefined to search the entire string
   * @return {number} index into the string of the string being sought,
   * or -1 if the string is not found
   */
  indexOf: function indexOf(searchValue, start) {
    return this.str.indexOf(searchValue, start);
  },

  /**
   * Same as String.lastIndexOf()
   * @param {string} searchValue string to search for
   * @param {number} start index into the string to start searching, or
   * undefined to search the entire string
   * @return {number} index into the string of the string being sought,
   * or -1 if the string is not found
   */
  lastIndexOf: function lastIndexOf(searchValue, start) {
    return this.str.lastIndexOf(searchValue, start);
  },

  /**
   * Same as String.match()
   * @param {string} regexp the regular expression to match
   * @return {Array.<string>} an array of matches
   */
  match: function match(regexp) {
    return this.str.match(regexp);
  },

  /**
   * Same as String.replace()
   * @param {string} searchValue a regular expression to search for
   * @param {string} newValue the string to replace the matches with
   * @return {IString} a new string with all the matches replaced
   * with the new value
   */
  replace: function replace(searchValue, newValue) {
    return new IString(this.str.replace(searchValue, newValue));
  },

  /**
   * Same as String.search()
   * @param {string} regexp the regular expression to search for
   * @return {number} position of the match, or -1 for no match
   */
  search: function search(regexp) {
    return this.str.search(regexp);
  },

  /**
   * Same as String.slice()
   * @param {number} start first character to include in the string
   * @param {number} end include all characters up to, but not including
   * the end character
   * @return {IString} a slice of the current string
   */
  slice: function slice(start, end) {
    return new IString(this.str.slice(start, end));
  },

  /**
   * Same as String.split()
   * @param {string} separator regular expression to match to find
   * separations between the parts of the text
   * @param {number} limit maximum number of items in the final
   * output array. Any items beyond that limit will be ignored.
   * @return {Array.<string>} the parts of the current string split
   * by the separator
   */
  split: function split(separator, limit) {
    return this.str.split(separator, limit);
  },

  /**
   * Same as String.substr()
   * @param {number} start the index of the character that should
   * begin the returned substring
   * @param {number} length the number of characters to return after
   * the start character.
   * @return {IString} the requested substring
   */
  substr: function substr(start, length) {
    var plat = ilib._getPlatform();

    if (plat === "qt" || plat === "rhino" || plat === "trireme") {
      // qt and rhino have a broken implementation of substr(), so
      // work around it
      if (typeof length === "undefined") {
        length = this.str.length - start;
      }
    }

    return new IString(this.str.substr(start, length));
  },

  /**
   * Same as String.substring()
   * @param {number} from the index of the character that should
   * begin the returned substring
   * @param {number} to the index where to stop the extraction. If
   * omitted, extracts the rest of the string
   * @return {IString} the requested substring
   */
  substring: function substring(from, to) {
    return this.str.substring(from, to);
  },

  /**
   * Same as String.toLowerCase(). Note that this method is
   * not locale-sensitive.
   * @return {IString} a string with the first character
   * lower-cased
   */
  toLowerCase: function toLowerCase() {
    return this.str.toLowerCase();
  },

  /**
   * Same as String.toUpperCase(). Note that this method is
   * not locale-sensitive. Use toLocaleUpperCase() instead
   * to get locale-sensitive behaviour.
   * @return {IString} a string with the first character
   * upper-cased
   */
  toUpperCase: function toUpperCase() {
    return this.str.toUpperCase();
  },

  /**
   * Convert the character or the surrogate pair at the given
   * index into the string to a Unicode UCS-4 code point.
   * @protected
   * @param {number} index index into the string
   * @return {number} code point of the character at the
   * given index into the string
   */
  _toCodePoint: function _toCodePoint(index) {
    return IString.toCodePoint(this.str, index);
  },

  /**
   * Call the callback with each character in the string one at
   * a time, taking care to step through the surrogate pairs in
   * the UTF-16 encoding properly.<p>
   *
   * The standard Javascript String's charAt() method only
   * returns a particular 16-bit character in the
   * UTF-16 encoding scheme.
   * If the index to charAt() is pointing to a low- or
   * high-surrogate character,
   * it will return the surrogate character rather
   * than the the character
   * in the supplementary planes that the two surrogates together
   * encode. This function will call the callback with the full
   * character, making sure to join two
   * surrogates into one character in the supplementary planes
   * where necessary.<p>
   *
   * @param {function(string)} callback a callback function to call with each
   * full character in the current string
   */
  forEach: function forEach(callback) {
    if (typeof callback === 'function') {
      var it = this.charIterator();

      while (it.hasNext()) {
        callback(it.next());
      }
    }
  },

  /**
   * Call the callback with each numeric code point in the string one at
   * a time, taking care to step through the surrogate pairs in
   * the UTF-16 encoding properly.<p>
   *
   * The standard Javascript String's charCodeAt() method only
   * returns information about a particular 16-bit character in the
   * UTF-16 encoding scheme.
   * If the index to charCodeAt() is pointing to a low- or
   * high-surrogate character,
   * it will return the code point of the surrogate character rather
   * than the code point of the character
   * in the supplementary planes that the two surrogates together
   * encode. This function will call the callback with the full
   * code point of each character, making sure to join two
   * surrogates into one code point in the supplementary planes.<p>
   *
   * @param {function(string)} callback a callback function to call with each
   * code point in the current string
   */
  forEachCodePoint: function forEachCodePoint(callback) {
    if (typeof callback === 'function') {
      var it = this.iterator();

      while (it.hasNext()) {
        callback(it.next());
      }
    }
  },

  /**
   * Return an iterator that will step through all of the characters
   * in the string one at a time and return their code points, taking
   * care to step through the surrogate pairs in UTF-16 encoding
   * properly.<p>
   *
   * The standard Javascript String's charCodeAt() method only
   * returns information about a particular 16-bit character in the
   * UTF-16 encoding scheme.
   * If the index is pointing to a low- or high-surrogate character,
   * it will return a code point of the surrogate character rather
   * than the code point of the character
   * in the supplementary planes that the two surrogates together
   * encode.<p>
   *
   * The iterator instance returned has two methods, hasNext() which
   * returns true if the iterator has more code points to iterate through,
   * and next() which returns the next code point as a number.<p>
   *
   * @return {Object} an iterator
   * that iterates through all the code points in the string
   */
  iterator: function iterator() {
    /**
     * @constructor
     */
    function _iterator(istring) {
      this.index = 0;

      this.hasNext = function () {
        return this.index < istring.str.length;
      };

      this.next = function () {
        if (this.index < istring.str.length) {
          var num = istring._toCodePoint(this.index);

          this.index += num > 0xFFFF ? 2 : 1;
        } else {
          num = -1;
        }

        return num;
      };
    }

    ;
    return new _iterator(this);
  },

  /**
   * Return an iterator that will step through all of the characters
   * in the string one at a time, taking
   * care to step through the surrogate pairs in UTF-16 encoding
   * properly.<p>
   *
   * The standard Javascript String's charAt() method only
   * returns information about a particular 16-bit character in the
   * UTF-16 encoding scheme.
   * If the index is pointing to a low- or high-surrogate character,
   * it will return that surrogate character rather
   * than the surrogate pair which represents a character
   * in the supplementary planes.<p>
   *
   * The iterator instance returned has two methods, hasNext() which
   * returns true if the iterator has more characters to iterate through,
   * and next() which returns the next character.<p>
   *
   * @return {Object} an iterator
   * that iterates through all the characters in the string
   */
  charIterator: function charIterator() {
    /**
     * @constructor
     */
    function _chiterator(istring) {
      this.index = 0;

      this.hasNext = function () {
        return this.index < istring.str.length;
      };

      this.next = function () {
        var ch;

        if (this.index < istring.str.length) {
          ch = istring.str.charAt(this.index);

          if (IString._isSurrogate(ch) && this.index + 1 < istring.str.length && IString._isSurrogate(istring.str.charAt(this.index + 1))) {
            this.index++;
            ch += istring.str.charAt(this.index);
          }

          this.index++;
        }

        return ch;
      };
    }

    ;
    return new _chiterator(this);
  },

  /**
   * Return the code point at the given index when the string is viewed
   * as an array of code points. If the index is beyond the end of the
   * array of code points or if the index is negative, -1 is returned.
   * @param {number} index index of the code point
   * @return {number} code point of the character at the given index into
   * the string
   */
  codePointAt: function codePointAt(index) {
    if (index < 0) {
      return -1;
    }

    var count,
        it = this.iterator(),
        ch;

    for (count = index; count >= 0 && it.hasNext(); count--) {
      ch = it.next();
    }

    return count < 0 ? ch : -1;
  },

  /**
   * Set the locale to use when processing choice formats. The locale
   * affects how number classes are interpretted. In some cultures,
   * the limit "few" maps to "any integer that ends in the digits 2 to 9" and
   * in yet others, "few" maps to "any integer that ends in the digits
   * 3 or 4".
   * @param {Locale|string} locale locale to use when processing choice
   * formats with this string
   * @param {boolean=} sync [optional] whether to load the locale data synchronously
   * or not
   * @param {Object=} loadParams [optional] parameters to pass to the loader function
   * @param {function(*)=} onLoad [optional] function to call when the loading is done
   */
  setLocale: function setLocale(locale, sync, loadParams, onLoad) {
    if (_typeof(locale) === 'object') {
      this.locale = locale;
    } else {
      this.localeSpec = locale;
      this.locale = new Locale(locale);
    }

    IString.loadPlurals(typeof sync !== 'undefined' ? sync : true, this.locale, loadParams, onLoad);
  },

  /**
   * Return the locale to use when processing choice formats. The locale
   * affects how number classes are interpretted. In some cultures,
   * the limit "few" maps to "any integer that ends in the digits 2 to 9" and
   * in yet others, "few" maps to "any integer that ends in the digits
   * 3 or 4".
   * @return {string} localespec to use when processing choice
   * formats with this string
   */
  getLocale: function getLocale() {
    return (this.locale ? this.locale.getSpec() : this.localeSpec) || ilib.getLocale();
  },

  /**
   * Return the number of code points in this string. This may be different
   * than the number of characters, as the UTF-16 encoding that Javascript
   * uses for its basis returns surrogate pairs separately. Two 2-byte
   * surrogate characters together make up one character/code point in
   * the supplementary character planes. If your string contains no
   * characters in the supplementary planes, this method will return the
   * same thing as the length() method.
   * @return {number} the number of code points in this string
   */
  codePointLength: function codePointLength() {
    if (this.cpLength === -1) {
      var it = this.iterator();
      this.cpLength = 0;

      while (it.hasNext()) {
        this.cpLength++;
        it.next();
      }

      ;
    }

    return this.cpLength;
  }
};
module.exports = IString;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/IslamicCal.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/IslamicCal.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * islamic.js - Represent a Islamic calendar object.
 * 
 * Copyright © 2012-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
Calendar.js 
MathUtils.js 
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * @class
 * Construct a new Islamic calendar object. This class encodes information about
 * the civil Islamic calendar. The civil Islamic calendar is a tabular islamic 
 * calendar where the dates are calculated by arithmetic rules. This differs from 
 * the religious Islamic calendar which is used to mark the beginning of particular 
 * holidays. The religious calendar depends on the first sighting of the new 
 * crescent moon to determine the first day of the new month. Because humans and 
 * weather are both involved, the actual time of sighting varies, so it is not 
 * really possible to precalculate the religious calendar. Certain groups, such 
 * as the Islamic Society of North America, decreed in in 2007 that they will use
 * a calendar based on calculations rather than observations to determine the 
 * beginning of lunar months, and therefore the dates of holidays.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var IslamicCal = function IslamicCal(options) {
  this.type = "islamic";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/**
 * the lengths of each month 
 * @private
 * @const
 * @type Array.<number>
 */


IslamicCal.monthLengths = [30,
/* Muharram */
29,
/* Saffar */
30,
/* Rabi'I */
29,
/* Rabi'II */
30,
/* Jumada I */
29,
/* Jumada II */
30,
/* Rajab */
29,
/* Sha'ban */
30,
/* Ramadan */
29,
/* Shawwal */
30,
/* Dhu al-Qa'da */
29
/* Dhu al-Hijja */
];
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for luni-solar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=first month, 2=second month, etc.
 * 
 * @param {number} year a year for which the number of months is sought
 */

IslamicCal.prototype.getNumMonths = function (year) {
  return 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 *
 * @param {number} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


IslamicCal.prototype.getMonLength = function (month, year) {
  if (month !== 12) {
    return IslamicCal.monthLengths[month - 1];
  } else {
    return this.isLeapYear(year) ? 30 : 29;
  }
};
/**
 * Return true if the given year is a leap year in the Islamic calendar.
 * The year parameter may be given as a number, or as a IslamicDate object.
 * @param {number} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */


IslamicCal.prototype.isLeapYear = function (year) {
  return MathUtils.mod(14 + 11 * year, 30) < 11;
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


IslamicCal.prototype.getType = function () {
  return this.type;
};
/*register this calendar for the factory method */


Calendar._constructors["islamic"] = IslamicCal;
module.exports = IslamicCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/IslamicDate.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/IslamicDate.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * islamicDate.js - Represent a date in the Islamic calendar
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
Locale.js
LocaleInfo.js
TimeZone.js
IDate.js
MathUtils.js
SearchUtils.js
Calendar.js
IslamicCal.js
IslamicRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var SearchUtils = __webpack_require__(/*! ./SearchUtils.js */ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var IslamicRataDie = __webpack_require__(/*! ./IslamicRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/IslamicRataDie.js");

var IslamicCal = __webpack_require__(/*! ./IslamicCal.js */ "./node_modules/@enact/i18n/ilib/lib/IslamicCal.js");
/**
 * @class
 * Construct a new civil Islamic date object. The constructor can be called
 * with a params object that can contain the following properties:<p>
 * 
 * <ul>
 * <li><i>julianday</i> - the Julian Day to set into this date
 * <li><i>year</i> - any integer except 0. Years go from -1 (BCE) to 1 (CE), skipping the zero year
 * <li><i>month</i> - 1 to 12, where 1 means Muharram, 2 means Saffar, etc.
 * <li><i>day</i> - 1 to 30
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * <li><i>minute</i> - 0 to 59
 * <li><i>second</i> - 0 to 59
 * <li><i>millisecond</i> - 0 to 999
 * <li><i>locale</i> - the TimeZone instance or time zone name as a string 
 * of this julian date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * <li><i>timezone</i> - the time zone of this instance. If the time zone is not 
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that 
 * represents the locale. 
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 * 
 * If called with another Islamic date argument, the date components of the given
 * date are copied into the current one.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above 
 * from <i>julianday</i> through <i>millisecond</i> are present, then the date 
 * components are 
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the 
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich 
 * Mean Time").<p>
 * 
 * 
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Islamic date
 */


var IslamicDate = function IslamicDate(params) {
  this.cal = new IslamicCal();
  params = params || {};

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

IslamicDate.prototype = new IDate({
  noinstance: true
});
IslamicDate.prototype.parent = IDate;
IslamicDate.prototype.constructor = IslamicDate;
/**
 * Initialize the date
 * @private
 */

IslamicDate.prototype._init = function (params) {
  if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond) {
    /**
     * Year in the Islamic calendar.
     * @type number
     */
    this.year = parseInt(params.year, 10) || 0;
    /**
     * The month number, ranging from 1 to 12 (December).
     * @type number
     */

    this.month = parseInt(params.month, 10) || 1;
    /**
     * The day of the month. This ranges from 1 to 30.
     * @type number
     */

    this.day = parseInt(params.day, 10) || 1;
    /**
     * The hour of the day. This can be a number from 0 to 23, as times are
     * stored unambiguously in the 24-hour clock.
     * @type number
     */

    this.hour = parseInt(params.hour, 10) || 0;
    /**
     * The minute of the hours. Ranges from 0 to 59.
     * @type number
     */

    this.minute = parseInt(params.minute, 10) || 0;
    /**
     * The second of the minute. Ranges from 0 to 59.
     * @type number
     */

    this.second = parseInt(params.second, 10) || 0;
    /**
     * The millisecond of the second. Ranges from 0 to 999.
     * @type number
     */

    this.millisecond = parseInt(params.millisecond, 10) || 0;
    /**
     * The day of the year. Ranges from 1 to 355.
     * @type number
     */

    this.dayOfYear = parseInt(params.dayOfYear, 10);

    if (typeof params.dst === 'boolean') {
      this.dst = params.dst;
    }

    this.rd = this.newRd(this);
    new TimeZone({
      id: this.timezone,
      sync: params.sync,
      loadParams: params.loadParams,
      onLoad: ilib.bind(this, function (tz) {
        this.tz = tz; // add the time zone offset to the rd to convert to UTC
        // getOffsetMillis requires that this.year, this.rd, and this.dst 
        // are set in order to figure out which time zone rules apply and 
        // what the offset is at that point in the year

        this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

        if (this.offset !== 0) {
          this.rd = this.newRd({
            rd: this.rd.getRataDie() - this.offset
          });
        }

        this._init2(params);
      })
    });
  } else {
    this._init2(params);
  }
};
/**
 * @private
 * Finish initializing this date object
 */


IslamicDate.prototype._init2 = function (params) {
  if (!this.rd) {
    this.rd = this.newRd(params);

    this._calcDateComponents();
  }

  if (typeof params.onLoad === "function") {
    params.onLoad(this);
  }
};
/**
 * the cumulative lengths of each month, for a non-leap year 
 * @private
 * @const
 * @type Array.<number>
 */


IslamicDate.cumMonthLengths = [0,
/* Muharram */
30,
/* Saffar */
59,
/* Rabi'I */
89,
/* Rabi'II */
118,
/* Jumada I */
148,
/* Jumada II */
177,
/* Rajab */
207,
/* Sha'ban */
236,
/* Ramadan */
266,
/* Shawwal */
295,
/* Dhu al-Qa'da */
325,
/* Dhu al-Hijja */
354];
/**
 * Number of days difference between RD 0 of the Gregorian calendar and
 * RD 0 of the Islamic calendar. 
 * @private
 * @const
 * @type number
 */

IslamicDate.GregorianDiff = 227015;
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */

IslamicDate.prototype.newRd = function (params) {
  return new IslamicRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from 
 * @returns {number} the year for the RD
 */


IslamicDate.prototype._calcYear = function (rd) {
  return Math.floor((30 * rd + 10646) / 10631);
};
/**
 * Calculate date components for the given RD date.
 * @protected
 */


IslamicDate.prototype._calcDateComponents = function () {
  var remainder,
      rd = this.rd.getRataDie();
  this.year = this._calcYear(rd);

  if (typeof this.offset === "undefined") {
    this.year = this._calcYear(rd); // now offset the RD by the time zone, then recalculate in case we were 
    // near the year boundary

    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    rd += this.offset;
    this.year = this._calcYear(rd);
  } //console.log("IslamicDate.calcComponent: calculating for rd " + rd);
  //console.log("IslamicDate.calcComponent: year is " + ret.year);


  var yearStart = this.newRd({
    year: this.year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  remainder = rd - yearStart.getRataDie() + 1;
  this.dayOfYear = remainder; //console.log("IslamicDate.calcComponent: remainder is " + remainder);

  this.month = SearchUtils.bsearch(remainder, IslamicDate.cumMonthLengths);
  remainder -= IslamicDate.cumMonthLengths[this.month - 1]; //console.log("IslamicDate.calcComponent: month is " + this.month + " and remainder is " + remainder);

  this.day = Math.floor(remainder);
  remainder -= this.day; //console.log("IslamicDate.calcComponent: day is " + this.day + " and remainder is " + remainder);
  // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000;
  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = remainder;
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 * 
 * @return {number} the day of the week
 */


IslamicDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd - 2, 7);
};
/**
 * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to 
 * 354 or 355, regardless of months or weeks, etc. That is, Muharran 1st is day 1, and 
 * Dhu al-Hijja 29 is 354.
 * @return {number} the ordinal day of the year
 */


IslamicDate.prototype.getDayOfYear = function () {
  return IslamicDate.cumMonthLengths[this.month - 1] + this.day;
};
/**
 * Return the era for this date as a number. The value for the era for Islamic 
 * calendars is -1 for "before the Islamic era" and 1 for "the Islamic era". 
 * Islamic era dates are any date after Muharran 1, 1, which is the same as
 * July 16, 622 CE in the Gregorian calendar. 
 * 
 * @return {number} 1 if this date is in the common era, -1 if it is before the 
 * common era 
 */


IslamicDate.prototype.getEra = function () {
  return this.year < 1 ? -1 : 1;
};
/**
 * Return the name of the calendar that governs this date.
 * 
 * @return {string} a string giving the name of the calendar
 */


IslamicDate.prototype.getCalendar = function () {
  return "islamic";
}; //register with the factory method


IDate._constructors["islamic"] = IslamicDate;
module.exports = IslamicDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/IslamicRataDie.js":
/*!*************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/IslamicRataDie.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * IslamicRataDie.js - Represent an RD date in the Islamic calendar
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
IslamicCal.js
RataDie.js
*/

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");

var IslamicCal = __webpack_require__(/*! ./IslamicCal.js */ "./node_modules/@enact/i18n/ilib/lib/IslamicCal.js");
/**
 * @class
 * Construct a new Islamic RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Islamic date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Islamic RD date
 */


var IslamicRataDie = function IslamicRataDie(params) {
  this.cal = params && params.cal || new IslamicCal();
  this.rd = NaN;
  RataDie.call(this, params);
};

IslamicRataDie.prototype = new RataDie();
IslamicRataDie.prototype.parent = RataDie;
IslamicRataDie.prototype.constructor = IslamicRataDie;
/**
 * The difference between a zero Julian day and the first Islamic date
 * of Friday, July 16, 622 CE Julian. 
 * @private
 * @type number
 */

IslamicRataDie.prototype.epoch = 1948439.5;
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 *
 * @protected
 * @param {Object} date the date components to calculate the RD from
 */

IslamicRataDie.prototype._setDateComponents = function (date) {
  var days = (date.year - 1) * 354 + Math.ceil(29.5 * (date.month - 1)) + date.day + Math.floor((3 + 11 * date.year) / 30) - 1;
  var time = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000; //console.log("getRataDie: converting " +  JSON.stringify(date));
  //console.log("getRataDie: days is " +  days);
  //console.log("getRataDie: time is " +  time);
  //console.log("getRataDie: rd is " +  (days + time));

  this.rd = days + time;
};

module.exports = IslamicRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/JSUtils.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * JSUtils.js - Misc utilities to work around Javascript engine differences
 * 
 * Copyright © 2013-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var JSUtils = {};
/**
 * Perform a shallow copy of the source object to the target object. This only 
 * copies the assignments of the source properties to the target properties, 
 * but not recursively from there.<p>
 * 
 * 
 * @static
 * @param {Object} source the source object to copy properties from
 * @param {Object} target the target object to copy properties into
 */

JSUtils.shallowCopy = function (source, target) {
  var prop = undefined;

  if (source && target) {
    for (prop in source) {
      if (prop !== undefined && typeof source[prop] !== 'undefined') {
        target[prop] = source[prop];
      }
    }
  }
};
/**
 * Perform a recursive deep copy from the "from" object to the "deep" object.
 * 
 * @static
 * @param {Object} from the object to copy from
 * @param {Object} to the object to copy to
 * @return {Object} a reference to the the "to" object
 */


JSUtils.deepCopy = function (from, to) {
  var prop;

  for (prop in from) {
    if (prop) {
      if (_typeof(from[prop]) === 'object') {
        to[prop] = {};
        JSUtils.deepCopy(from[prop], to[prop]);
      } else {
        to[prop] = from[prop];
      }
    }
  }

  return to;
};
/**
 * Map a string to the given set of alternate characters. If the target set
 * does not contain a particular character in the input string, then that
 * character will be copied to the output unmapped.
 * 
 * @static
 * @param {string} str a string to map to an alternate set of characters
 * @param {Array.<string>|Object} map a mapping to alternate characters
 * @return {string} the source string where each character is mapped to alternate characters
 */


JSUtils.mapString = function (str, map) {
  var mapped = "";

  if (map && str) {
    for (var i = 0; i < str.length; i++) {
      var c = str.charAt(i); // TODO use a char iterator?

      mapped += map[c] || c;
    }
  } else {
    mapped = str;
  }

  return mapped;
};
/**
 * Check if an object is a member of the given array. If this javascript engine
 * support indexOf, it is used directly. Otherwise, this function implements it
 * itself. The idea is to make sure that you can use the quick indexOf if it is
 * available, but use a slower implementation in older engines as well.
 * 
 * @static
 * @param {Array.<Object>} array array to search
 * @param {Object} obj object being sought. This should be of the same type as the
 * members of the array being searched. If not, this function will not return
 * any results.
 * @return {number} index of the object in the array, or -1 if it is not in the array.
 */


JSUtils.indexOf = function (array, obj) {
  if (!array || !obj) {
    return -1;
  }

  if (typeof array.indexOf === 'function') {
    return array.indexOf(obj);
  } else {
    for (var i = 0; i < array.length; i++) {
      if (array[i] === obj) {
        return i;
      }
    }

    return -1;
  }
};
/**
 * Pad the str with zeros to the given length of digits.
 * 
 * @static
 * @param {string|number} str the string or number to pad
 * @param {number} length the desired total length of the output string, padded
 * @param {boolean=} right if true, pad on the right side of the number rather than the left.
 * Default is false.
 */


JSUtils.pad = function (str, length, right) {
  if (typeof str !== 'string') {
    str = "" + str;
  }

  var start = 0; // take care of negative numbers

  if (str.charAt(0) === '-') {
    start++;
  }

  return str.length >= length + start ? str : right ? str + JSUtils.pad.zeros.substring(0, length - str.length + start) : str.substring(0, start) + JSUtils.pad.zeros.substring(0, length - str.length + start) + str.substring(start);
};
/** @private */


JSUtils.pad.zeros = "00000000000000000000000000000000";
/**
 * Convert a string into the hexadecimal representation
 * of the Unicode characters in that string.
 * 
 * @static
 * @param {string} string The string to convert
 * @param {number=} limit the number of digits to use to represent the character (1 to 8)
 * @return {string} a hexadecimal representation of the
 * Unicode characters in the input string
 */

JSUtils.toHexString = function (string, limit) {
  var i,
      result = "",
      lim = limit && limit < 9 ? limit : 4;

  if (!string) {
    return "";
  }

  for (i = 0; i < string.length; i++) {
    var ch = string.charCodeAt(i).toString(16);
    result += JSUtils.pad(ch, lim);
  }

  return result.toUpperCase();
};
/**
 * Test whether an object in a Javascript Date. 
 * 
 * @static
 * @param {Object|null|undefined} object The object to test
 * @return {boolean} return true if the object is a Date
 * and false otherwise
 */


JSUtils.isDate = function (object) {
  if (_typeof(object) === 'object') {
    return Object.prototype.toString.call(object) === '[object Date]';
  }

  return false;
};
/**
 * Merge the properties of object2 into object1 in a deep manner and return a merged
 * object. If the property exists in both objects, the value in object2 will overwrite 
 * the value in object1. If a property exists in object1, but not in object2, its value
 * will not be touched. If a property exists in object2, but not in object1, it will be 
 * added to the merged result.<p>
 * 
 * Name1 and name2 are for creating debug output only. They are not necessary.<p>
 * 
 * 
 * @static
 * @param {*} object1 the object to merge into
 * @param {*} object2 the object to merge
 * @param {boolean=} replace if true, replace the array elements in object1 with those in object2.
 * If false, concatenate array elements in object1 with items in object2.
 * @param {string=} name1 name of the object being merged into
 * @param {string=} name2 name of the object being merged in
 * @return {Object} the merged object
 */


JSUtils.merge = function (object1, object2, replace, name1, name2) {
  var prop = undefined,
      newObj = {};

  for (prop in object1) {
    if (prop && typeof object1[prop] !== 'undefined') {
      newObj[prop] = object1[prop];
    }
  }

  for (prop in object2) {
    if (prop && typeof object2[prop] !== 'undefined') {
      if (ilib.isArray(object1[prop]) && ilib.isArray(object2[prop])) {
        if (typeof replace !== 'boolean' || !replace) {
          newObj[prop] = [].concat(object1[prop]);
          newObj[prop] = newObj[prop].concat(object2[prop]);
        } else {
          newObj[prop] = object2[prop];
        }
      } else if (_typeof(object1[prop]) === 'object' && _typeof(object2[prop]) === 'object') {
        newObj[prop] = JSUtils.merge(object1[prop], object2[prop], replace);
      } else {
        // for debugging. Used to determine whether or not json files are overriding their parents unnecessarily
        if (name1 && name2 && newObj[prop] == object2[prop]) {
          console.log("Property " + prop + " in " + name1 + " is being overridden by the same value in " + name2);
        }

        newObj[prop] = object2[prop];
      }
    }
  }

  return newObj;
};
/**
 * Return true if the given object has no properties.<p>
 * 
 * 
 * @static
 * @param {Object} obj the object to check
 * @return {boolean} true if the given object has no properties, false otherwise
 */


JSUtils.isEmpty = function (obj) {
  var prop = undefined;

  if (!obj) {
    return true;
  }

  for (prop in obj) {
    if (prop && typeof obj[prop] !== 'undefined') {
      return false;
    }
  }

  return true;
};
/**
 * @static
 */


JSUtils.hashCode = function (obj) {
  var hash = 0;

  function addHash(hash, newValue) {
    // co-prime numbers creates a nicely distributed hash
    hash *= 65543;
    hash += newValue;
    hash %= 2147483647;
    return hash;
  }

  function stringHash(str) {
    var hash = 0;

    for (var i = 0; i < str.length; i++) {
      hash = addHash(hash, str.charCodeAt(i));
    }

    return hash;
  }

  switch (_typeof(obj)) {
    case 'undefined':
      hash = 0;
      break;

    case 'string':
      hash = stringHash(obj);
      break;

    case 'function':
    case 'number':
    case 'xml':
      hash = stringHash(String(obj));
      break;

    case 'boolean':
      hash = obj ? 1 : 0;
      break;

    case 'object':
      var props = [];

      for (var p in obj) {
        if (obj.hasOwnProperty(p)) {
          props.push(p);
        }
      } // make sure the order of the properties doesn't matter


      props.sort();

      for (var i = 0; i < props.length; i++) {
        hash = addHash(hash, stringHash(props[i]));
        hash = addHash(hash, JSUtils.hashCode(obj[props[i]]));
      }

      break;
  }

  return hash;
};

module.exports = JSUtils;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/JulianCal.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/JulianCal.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * julian.js - Represent a Julian calendar object.
 * 
 * Copyright © 2012-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js MathUtils.js */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * @class
 * Construct a new Julian calendar object. This class encodes information about
 * a Julian calendar.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var JulianCal = function JulianCal(options) {
  this.type = "julian";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/* the lengths of each month */


JulianCal.monthLengths = [31,
/* Jan */
28,
/* Feb */
31,
/* Mar */
30,
/* Apr */
31,
/* May */
30,
/* Jun */
31,
/* Jul */
31,
/* Aug */
30,
/* Sep */
31,
/* Oct */
30,
/* Nov */
31
/* Dec */
];
/**
 * the cumulative lengths of each month, for a non-leap year 
 * @private
 * @const
 * @type Array.<number>
 */

JulianCal.cumMonthLengths = [0,
/* Jan */
31,
/* Feb */
59,
/* Mar */
90,
/* Apr */
120,
/* May */
151,
/* Jun */
181,
/* Jul */
212,
/* Aug */
243,
/* Sep */
273,
/* Oct */
304,
/* Nov */
334,
/* Dec */
365];
/**
 * the cumulative lengths of each month, for a leap year 
 * @private
 * @const
 * @type Array.<number>
 */

JulianCal.cumMonthLengthsLeap = [0,
/* Jan */
31,
/* Feb */
60,
/* Mar */
91,
/* Apr */
121,
/* May */
152,
/* Jun */
182,
/* Jul */
213,
/* Aug */
244,
/* Sep */
274,
/* Oct */
305,
/* Nov */
335,
/* Dec */
366];
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for lunar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=Jaunary, 2=February, etc. until 12=December.
 * 
 * @param {number} year a year for which the number of months is sought
 */

JulianCal.prototype.getNumMonths = function (year) {
  return 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 * 
 * @param {number} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


JulianCal.prototype.getMonLength = function (month, year) {
  if (month !== 2 || !this.isLeapYear(year)) {
    return JulianCal.monthLengths[month - 1];
  } else {
    return 29;
  }
};
/**
 * Return true if the given year is a leap year in the Julian calendar.
 * The year parameter may be given as a number, or as a JulDate object.
 * @param {number|JulianDate} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */


JulianCal.prototype.isLeapYear = function (year) {
  var y = typeof year === 'number' ? year : year.year;
  return MathUtils.mod(y, 4) === (year > 0 ? 0 : 3);
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


JulianCal.prototype.getType = function () {
  return this.type;
};
/* register this calendar for the factory method */


Calendar._constructors["julian"] = JulianCal;
module.exports = JulianCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/JulianDate.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/JulianDate.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * JulianDate.js - Represent a date in the Julian calendar
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
Locale.js
IDate.js 
TimeZone.js
Calendar.js 
JulianCal.js 
SearchUtils.js 
MathUtils.js
LocaleInfo.js 
JulianRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var SearchUtils = __webpack_require__(/*! ./SearchUtils.js */ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var JulianRataDie = __webpack_require__(/*! ./JulianRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/JulianRataDie.js");

var JulianCal = __webpack_require__(/*! ./JulianCal.js */ "./node_modules/@enact/i18n/ilib/lib/JulianCal.js");
/**
 * @class
 * Construct a new date object for the Julian Calendar. The constructor can be called
 * with a parameter object that contains any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970 (Gregorian).
 * <li><i>julianday</i> - the Julian Day to set into this date
 * <li><i>year</i> - any integer except 0. Years go from -1 (BCE) to 1 (CE), skipping the zero 
 * year which doesn't exist in the Julian calendar
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * <li><i>day</i> - 1 to 31
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * <li><i>minute</i> - 0 to 59
 * <li><i>second</i> - 0 to 59
 * <li><i>millisecond<i> - 0 to 999
 * <li><i>locale</i> - the TimeZone instance or time zone name as a string 
 * of this julian date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * <li><i>timezone</i> - the time zone of this instance. If the time zone is not 
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that 
 * represents the locale. 
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 * 
 * NB. The <a href="http://en.wikipedia.org/wiki/Julian_date">Julian Day</a> 
 * (JulianDay) object is a <i>different</i> object than a 
 * <a href="http://en.wikipedia.org/wiki/Julian_calendar">date in
 * the Julian calendar</a> and the two are not to be confused. The Julian Day 
 * object represents time as a number of whole and fractional days since the 
 * beginning of the epoch, whereas a date in the Julian 
 * calendar is a regular date that signifies year, month, day, etc. using the rules
 * of the Julian calendar. The naming of Julian Days and the Julian calendar are
 * unfortunately close, and come from history.<p>
 *  
 * If called with another Julian date argument, the date components of the given
 * date are copied into the current one.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above 
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date 
 * components are 
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the 
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich 
 * Mean Time").<p>
 * 
 * 
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Julian date
 */


var JulianDate = function JulianDate(params) {
  this.cal = new JulianCal();
  params = params || {};

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

JulianDate.prototype = new IDate({
  noinstance: true
});
JulianDate.prototype.parent = IDate;
JulianDate.prototype.constructor = JulianDate;
/**
 * @private
 * Initialize the date
 */

JulianDate.prototype._init = function (params) {
  if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond) {
    /**
     * Year in the Julian calendar.
     * @type number
     */
    this.year = parseInt(params.year, 10) || 0;
    /**
     * The month number, ranging from 1 (January) to 12 (December).
     * @type number
     */

    this.month = parseInt(params.month, 10) || 1;
    /**
     * The day of the month. This ranges from 1 to 31.
     * @type number
     */

    this.day = parseInt(params.day, 10) || 1;
    /**
     * The hour of the day. This can be a number from 0 to 23, as times are
     * stored unambiguously in the 24-hour clock.
     * @type number
     */

    this.hour = parseInt(params.hour, 10) || 0;
    /**
     * The minute of the hours. Ranges from 0 to 59.
     * @type number
     */

    this.minute = parseInt(params.minute, 10) || 0;
    /**
     * The second of the minute. Ranges from 0 to 59.
     * @type number
     */

    this.second = parseInt(params.second, 10) || 0;
    /**
     * The millisecond of the second. Ranges from 0 to 999.
     * @type number
     */

    this.millisecond = parseInt(params.millisecond, 10) || 0;
    /**
     * The day of the year. Ranges from 1 to 383.
     * @type number
     */

    this.dayOfYear = parseInt(params.dayOfYear, 10);

    if (typeof params.dst === 'boolean') {
      this.dst = params.dst;
    }

    this.rd = this.newRd(this);
    new TimeZone({
      id: this.timezone,
      sync: params.sync,
      loadParams: params.loadParams,
      onLoad: ilib.bind(this, function (tz) {
        this.tz = tz; // add the time zone offset to the rd to convert to UTC
        // getOffsetMillis requires that this.year, this.rd, and this.dst 
        // are set in order to figure out which time zone rules apply and 
        // what the offset is at that point in the year

        this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

        if (this.offset !== 0) {
          this.rd = this.newRd({
            rd: this.rd.getRataDie() - this.offset
          });
        }

        this._init2(params);
      })
    });
  } else {
    this._init2(params);
  }
};
/**
 * @private
 * Finish initializing the date
 */


JulianDate.prototype._init2 = function (params) {
  if (!this.rd) {
    this.rd = this.newRd(params);

    this._calcDateComponents();
  }

  if (typeof params.onLoad === "function") {
    params.onLoad(this);
  }
};
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */


JulianDate.prototype.newRd = function (params) {
  return new JulianRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from 
 * @returns {number} the year for the RD
 */


JulianDate.prototype._calcYear = function (rd) {
  var year = Math.floor((4 * (Math.floor(rd) - 1) + 1464) / 1461);
  return year <= 0 ? year - 1 : year;
};
/**
 * Calculate date components for the given RD date.
 * @protected
 */


JulianDate.prototype._calcDateComponents = function () {
  var remainder,
      cumulative,
      rd = this.rd.getRataDie();
  this.year = this._calcYear(rd);

  if (typeof this.offset === "undefined") {
    this.year = this._calcYear(rd); // now offset the RD by the time zone, then recalculate in case we were 
    // near the year boundary

    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    rd += this.offset;
    this.year = this._calcYear(rd);
  }

  var jan1 = this.newRd({
    year: this.year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  remainder = rd + 1 - jan1.getRataDie();
  cumulative = this.cal.isLeapYear(this.year) ? JulianCal.cumMonthLengthsLeap : JulianCal.cumMonthLengths;
  this.month = SearchUtils.bsearch(Math.floor(remainder), cumulative);
  remainder = remainder - cumulative[this.month - 1];
  this.day = Math.floor(remainder);
  remainder -= this.day; // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000;
  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = remainder;
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 * 
 * @return {number} the day of the week
 */


JulianDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.rd.getRataDie() + (this.offset || 0));
  return MathUtils.mod(rd - 2, 7);
};
/**
 * Return the name of the calendar that governs this date.
 * 
 * @return {string} a string giving the name of the calendar
 */


JulianDate.prototype.getCalendar = function () {
  return "julian";
}; //register with the factory method


IDate._constructors["julian"] = JulianDate;
module.exports = JulianDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/JulianDay.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/JulianDay.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * JulianDay.js - A Julian Day object.
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @class
 * A Julian Day class. A Julian Day is a date based on the Julian Day count
 * of time invented by Joseph Scaliger in 1583 for use with astronomical calculations. 
 * Do not confuse it with a date in the Julian calendar, which it has very
 * little in common with. The naming is unfortunately close, and comes from history.<p>
 * 
 * 
 * @constructor
 * @param {number} num the Julian Day expressed as a floating point number 
 */

var JulianDay = function JulianDay(num) {
  this.jd = num;
  this.days = Math.floor(this.jd);
  this.frac = num - this.days;
};

JulianDay.prototype = {
  /**
   * Return the integral portion of this Julian Day instance. This corresponds to
   * the number of days since the beginning of the epoch.
   * 
   * @return {number} the integral portion of this Julian Day
   */
  getDays: function getDays() {
    return this.days;
  },

  /**
   * Set the date of this Julian Day instance.
   * 
   * @param {number} days the julian date expressed as a floating point number
   */
  setDays: function setDays(days) {
    this.days = Math.floor(days);
    this.jd = this.days + this.frac;
  },

  /**
   * Return the fractional portion of this Julian Day instance. This portion 
   * corresponds to the time of day for the instance.
   */
  getDayFraction: function getDayFraction() {
    return this.frac;
  },

  /**
   * Set the fractional part of the Julian Day. The fractional part represents
   * the portion of a fully day. Julian dates start at noon, and proceed until
   * noon of the next day. That would mean midnight is represented as a fractional
   * part of 0.5.
   * 
   * @param {number} fraction The fractional part of the Julian date
   */
  setDayFraction: function setDayFraction(fraction) {
    var t = Math.floor(fraction);
    this.frac = fraction - t;
    this.jd = this.days + this.frac;
  },

  /** 
   * Return the Julian Day expressed as a floating point number.
   * @return {number} the Julian Day as a number
   */
  getDate: function getDate() {
    return this.jd;
  },

  /**
   * Set the date of this Julian Day instance.
   * 
   * @param {number} num the numeric Julian Day to set into this instance
   */
  setDate: function setDate(num) {
    this.jd = num;
  },

  /**
   * Add an offset to the current date instance. The offset should be expressed in
   * terms of Julian days. That is, each integral unit represents one day of time, and
   * fractional part represents a fraction of a regular 24-hour day.
   * 
   * @param {number} offset an amount to add (or subtract) to the current result instance.
   */
  addDate: function addDate(offset) {
    if (typeof offset === 'number') {
      this.jd += offset;
      this.days = Math.floor(this.jd);
      this.frac = this.jd - this.days;
    }
  }
};
module.exports = JulianDay;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/JulianRataDie.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/JulianRataDie.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * julianDate.js - Represent a date in the Julian calendar
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
JulianCal.js 
RataDie.js
*/

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");

var JulianCal = __webpack_require__(/*! ./JulianCal.js */ "./node_modules/@enact/i18n/ilib/lib/JulianCal.js");
/**
 * @class
 * Construct a new Julian RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Julian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Julian RD date
 */


var JulianRataDie = function JulianRataDie(params) {
  this.cal = params && params.cal || new JulianCal();
  this.rd = NaN;
  RataDie.call(this, params);
};

JulianRataDie.prototype = new RataDie();
JulianRataDie.prototype.parent = RataDie;
JulianRataDie.prototype.constructor = JulianRataDie;
/**
 * The difference between a zero Julian day and the first Julian date
 * of Friday, July 16, 622 CE Julian. 
 * @private
 * @type number
 */

JulianRataDie.prototype.epoch = 1721422.5;
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 * 
 * @protected
 * @param {Object} date the date components to calculate the RD from
 */

JulianRataDie.prototype._setDateComponents = function (date) {
  var year = date.year + (date.year < 0 ? 1 : 0);
  var years = 365 * (year - 1) + Math.floor((year - 1) / 4);
  var dayInYear = (date.month > 1 ? JulianCal.cumMonthLengths[date.month - 1] : 0) + date.day + (this.cal.isLeapYear(date.year) && date.month > 2 ? 1 : 0);
  var rdtime = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000;
  /*
  console.log("calcRataDie: converting " +  JSON.stringify(parts));
  console.log("getRataDie: year is " +  years);
  console.log("getRataDie: day in year is " +  dayInYear);
  console.log("getRataDie: rdtime is " +  rdtime);
  console.log("getRataDie: rd is " +  (years + dayInYear + rdtime));
  */

  this.rd = years + dayInYear + rdtime;
};

module.exports = JulianRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/Loader.js":
/*!*****************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/Loader.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Loader.js - shared loader implementation
 * 
 * Copyright © 2015, 2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Path.js */

var Path = __webpack_require__(/*! ./Path.js */ "./node_modules/@enact/i18n/ilib/lib/Path.js");

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");
/** 
 * @class
 * Superclass of the loader classes that contains shared functionality.
 * 
 * @private
 * @constructor
 */


var Loader = function Loader() {
  // console.log("new Loader instance");
  this.protocol = "file://";
  this.includePath = [];
};

Loader.prototype = new ilib.Loader();
Loader.prototype.parent = ilib.Loader;
Loader.prototype.constructor = Loader;

Loader.prototype._loadFile = function (pathname, sync, cb) {};

Loader.prototype._exists = function (dir, file) {
  var fullpath = Path.normalize(Path.join(dir, file));

  if (this.protocol !== "http://") {
    var text = this._loadFile(fullpath, true);

    if (text) {
      this.includePath.push(dir);
    }
  } else {
    // put the dir on the list now assuming it exists, and check for its availability 
    // later so we can avoid the 404 errors eventually
    this.includePath.push(dir);

    this._loadFile(fullpath, false, ilib.bind(this, function (text) {
      if (!text) {
        //console.log("Loader._exists: removing " + dir + " from the include path because it doesn't exist.");
        this.includePath = this.includePath.slice(-1);
      }
    }));
  }
};

Loader.prototype._loadFileAlongIncludePath = function (includePath, pathname) {
  for (var i = 0; i < includePath.length; i++) {
    var manifest = this.manifest[includePath[i]];

    if (!manifest || Loader.indexOf(manifest, pathname) > -1) {
      var filepath = Path.join(includePath[i], pathname); //console.log("Loader._loadFileAlongIncludePath: attempting sync load " + filepath);

      var text = this._loadFile(filepath, true);

      if (text) {
        //console.log("Loader._loadFileAlongIncludePath: succeeded");
        return text;
      } //else {
      //console.log("Loader._loadFileAlongIncludePath: failed");
      //} 

    } //else {
    //console.log("Loader._loadFileAlongIncludePath: " + pathname + " not in manifest for " + this.includePath[i]);
    //}

  } //console.log("Loader._loadFileAlongIncludePath: file not found anywhere along the path.");


  return undefined;
};

Loader.prototype.loadFiles = function (paths, sync, params, callback) {
  var includePath = params && params.base ? [params.base].concat(this.includePath) : this.includePath; //console.log("Loader loadFiles called");
  // make sure we know what we can load

  if (!paths) {
    // nothing to load
    //console.log("nothing to load");
    return;
  }

  if (params && params.returnOne) {
    // Only return the most locale-specific data. Do this by searching backwards
    // in the list of paths.
    var pathname;
    var tmp = [];

    while ((pathname = paths.pop()) !== undefined) {
      tmp.push(pathname);
    }

    paths = tmp;
  } //console.log("generic loader: attempting to load these files: " + JSON.stringify(paths) + "\n");


  if (sync) {
    var ret = []; // synchronous

    this._loadManifests(true);

    for (var i = 0; i < paths.length; i++) {
      var text = this._loadFileAlongIncludePath(includePath, Path.normalize(paths[i]));

      ret.push(typeof text === "string" ? JSON.parse(text) : text);

      if (params && params.returnOne && text) {
        break;
      }
    }

    ; // only call the callback at the end of the chain of files

    if (typeof callback === 'function') {
      callback(ret);
    }

    return ret;
  } // asynchronous


  this._loadManifests(false, ilib.bind(this, function () {
    //console.log("Loader.loadFiles: now loading files asynchronously");
    var results = [];

    this._loadFilesAsync(includePath, paths, results, callback);
  }));
};

Loader.prototype._loadFilesAsyncAlongIncludePath = function (includes, filename, cb) {
  var text = undefined;

  if (includes.length > 0) {
    var root = includes[0];
    includes = includes.slice(1);
    var manifest = this.manifest[root];

    if (!manifest || Loader.indexOf(manifest, filename) > -1) {
      var filepath = Path.join(root, filename);

      this._loadFile(filepath, false, ilib.bind(this, function (t) {
        //console.log("Loader._loadFilesAsyncAlongIncludePath: loading " + (t ? " success" : " failed"));
        if (t) {
          cb(t);
        } else {
          this._loadFilesAsyncAlongIncludePath(includes, filename, cb);
        }
      }));
    } else {
      //console.log("Loader._loadFilesAsyncAlongIncludePath: " + filepath + " not in manifest for " + root);
      this._loadFilesAsyncAlongIncludePath(includes, filename, cb);
    }
  } else {
    // file not found in any of the include paths
    cb();
  }
};

Loader.prototype._loadFilesAsync = function (includePath, paths, results, callback) {
  if (paths.length > 0) {
    var filename = paths[0];
    paths = paths.slice(1); //console.log("Loader._loadFilesAsync: attempting to load " + filename + " along the include path.");

    this._loadFilesAsyncAlongIncludePath(includePath, filename, ilib.bind(this, function (json) {
      results.push(typeof json === "string" ? JSON.parse(json) : json);

      this._loadFilesAsync(includePath, paths, results, callback);
    }));
  } else {
    // only call the callback at the end of the chain of files
    if (typeof callback === 'function') {
      callback(results);
    }
  }
};

Loader.prototype._loadManifestFile = function (i, sync, cb) {
  //console.log("Loader._loadManifestFile: Checking include path " + i + " " + this.includePath[i]);
  if (i < this.includePath.length) {
    var filepath = Path.join(this.includePath[i], "ilibmanifest.json"); //console.log("Loader._loadManifestFile: Loading manifest file " + filepath);

    var text = this._loadFile(filepath, sync, ilib.bind(this, function (text) {
      if (text) {
        //console.log("Loader._loadManifestFile: success!");
        this.manifest[this.includePath[i]] = (typeof text === "string" ? JSON.parse(text) : text).files;
      } //else console.log("Loader._loadManifestFile: failed...");


      this._loadManifestFile(i + 1, sync, cb);
    }));
  } else {
    if (typeof cb === 'function') {
      //console.log("Loader._loadManifestFile: now calling callback function");
      cb();
    }
  }
};

Loader.prototype._loadManifests = function (sync, cb) {
  //console.log("Loader._loadManifests: called " + (sync ? "synchronously" : "asychronously."));
  if (!this.manifest) {
    //console.log("Loader._loadManifests: attempting to find manifests");
    this.manifest = {};

    if (typeof sync !== 'boolean') {
      sync = true;
    }

    this._loadManifestFile(0, sync, cb);
  } else {
    //console.log("Loader._loadManifests: already loaded");
    if (typeof cb === 'function') {
      //console.log("Loader._loadManifests: now calling callback function");
      cb();
    }
  }
};

Loader.prototype.listAvailableFiles = function (sync, cb) {
  //console.log("generic loader: list available files called");
  this._loadManifests(sync, ilib.bind(this, function () {
    if (typeof cb === 'function') {
      //console.log("generic loader: now calling caller's callback function");
      cb(this.manifest);
    }
  }));

  return this.manifest;
};

Loader.indexOf = function (array, obj) {
  if (!array || !obj) {
    return -1;
  }

  if (typeof array.indexOf === 'function') {
    return array.indexOf(obj);
  } else {
    for (var i = 0; i < array.length; i++) {
      if (array[i] === obj) {
        return i;
      }
    }

    return -1;
  }
};

Loader.prototype.checkAvailability = function (file) {
  for (var dir in this.manifest) {
    if (Loader.indexOf(this.manifest[dir], file) !== -1) {
      return true;
    }
  }

  return false;
};

Loader.prototype.isAvailable = function (file, sync, cb) {
  //console.log("Loader.isAvailable: called");
  if (typeof sync !== 'boolean') {
    sync = true;
  }

  if (sync) {
    this._loadManifests(sync);

    return this.checkAvailability(file);
  }

  this._loadManifests(false, ilib.bind(this, function () {
    // console.log("generic loader: isAvailable " + path + "? ");
    if (typeof cb === 'function') {
      cb(this.checkAvailability(file));
    }
  }));
};

module.exports = Loader;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/Locale.js":
/*!*****************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/Locale.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * Locale.js - Locale specifier definition
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js JSUtils.js


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");
/**
 * @class
 * Create a new locale instance. Locales are specified either with a specifier string 
 * that follows the BCP-47 convention (roughly: "language-region-script-variant") or 
 * with 4 parameters that specify the language, region, variant, and script individually.<p>
 * 
 * The language is given as an ISO 639-1 two-letter, lower-case language code. You
 * can find a full list of these codes at 
 * <a href="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes</a><p>
 * 
 * The region is given as an ISO 3166-1 two-letter, upper-case region code. You can
 * find a full list of these codes at 
 * <a href="http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2</a>.<p>
 * 
 * The variant is any string that does not contain a dash which further differentiates
 * locales from each other.<p>
 * 
 * The script is given as the ISO 15924 four-letter script code. In some locales,
 * text may be validly written in more than one script. For example, Serbian is often
 * written in both Latin and Cyrillic, though not usually mixed together. You can find a
 * full list of these codes at 
 * <a href="http://en.wikipedia.org/wiki/ISO_15924#List_of_codes">http://en.wikipedia.org/wiki/ISO_15924#List_of_codes</a>.<p>
 * 
 * As an example in ilib, the script can be used in the date formatter. Dates formatted 
 * in Serbian could have day-of-week names or month names written in the Latin
 * or Cyrillic script. Often one script is default such that sr-SR-Latn is the same
 * as sr-SR so the script code "Latn" can be left off of the locale spec.<p> 
 * 
 * Each part is optional, and an empty string in the specifier before or after a 
 * dash or as a parameter to the constructor denotes an unspecified value. In this
 * case, many of the ilib functions will treat the locale as generic. For example
 * the locale "en-" is equivalent to "en" and to "en--" and denotes a locale
 * of "English" with an unspecified region and variant, which typically matches
 * any region or variant.<p>
 * 
 * Without any arguments to the constructor, this function returns the locale of
 * the host Javascript engine.<p>
 * 
 * 
 * @constructor
 * @param {?string|Locale=} language the ISO 639 2-letter code for the language, or a full 
 * locale spec in BCP-47 format, or another Locale instance to copy from
 * @param {string=} region the ISO 3166 2-letter code for the region
 * @param {string=} variant the name of the variant of this locale, if any
 * @param {string=} script the ISO 15924 code of the script for this locale, if any
 */


var Locale = function Locale(language, region, variant, script) {
  if (typeof region === 'undefined' && typeof variant === 'undefined' && typeof script === 'undefined') {
    var spec = language || ilib.getLocale();

    if (typeof spec === 'string') {
      var parts = spec.split('-');

      for (var i = 0; i < parts.length; i++) {
        if (Locale._isLanguageCode(parts[i])) {
          /** 
           * @private
           * @type {string|undefined}
           */
          this.language = parts[i];
        } else if (Locale._isRegionCode(parts[i])) {
          /** 
           * @private
           * @type {string|undefined}
           */
          this.region = parts[i];
        } else if (Locale._isScriptCode(parts[i])) {
          /** 
           * @private
           * @type {string|undefined}
           */
          this.script = parts[i];
        } else {
          /** 
           * @private
           * @type {string|undefined}
           */
          this.variant = parts[i];
        }
      }

      this.language = this.language || undefined;
      this.region = this.region || undefined;
      this.script = this.script || undefined;
      this.variant = this.variant || undefined;
    } else if (_typeof(spec) === 'object') {
      this.language = spec.language || undefined;
      this.region = spec.region || undefined;
      this.script = spec.script || undefined;
      this.variant = spec.variant || undefined;
    }
  } else {
    if (language && typeof language === "string") {
      language = language.trim();
      this.language = language.length > 0 ? language.toLowerCase() : undefined;
    } else {
      this.language = undefined;
    }

    if (region && typeof region === "string") {
      region = region.trim();
      this.region = region.length > 0 ? region.toUpperCase() : undefined;
    } else {
      this.region = undefined;
    }

    if (variant && typeof variant === "string") {
      variant = variant.trim();
      this.variant = variant.length > 0 ? variant : undefined;
    } else {
      this.variant = undefined;
    }

    if (script && typeof script === "string") {
      script = script.trim();
      this.script = script.length > 0 ? script : undefined;
    } else {
      this.script = undefined;
    }
  }

  this._genSpec();
}; // from http://en.wikipedia.org/wiki/ISO_3166-1


Locale.a2toa3regmap = {
  "AF": "AFG",
  "AX": "ALA",
  "AL": "ALB",
  "DZ": "DZA",
  "AS": "ASM",
  "AD": "AND",
  "AO": "AGO",
  "AI": "AIA",
  "AQ": "ATA",
  "AG": "ATG",
  "AR": "ARG",
  "AM": "ARM",
  "AW": "ABW",
  "AU": "AUS",
  "AT": "AUT",
  "AZ": "AZE",
  "BS": "BHS",
  "BH": "BHR",
  "BD": "BGD",
  "BB": "BRB",
  "BY": "BLR",
  "BE": "BEL",
  "BZ": "BLZ",
  "BJ": "BEN",
  "BM": "BMU",
  "BT": "BTN",
  "BO": "BOL",
  "BQ": "BES",
  "BA": "BIH",
  "BW": "BWA",
  "BV": "BVT",
  "BR": "BRA",
  "IO": "IOT",
  "BN": "BRN",
  "BG": "BGR",
  "BF": "BFA",
  "BI": "BDI",
  "KH": "KHM",
  "CM": "CMR",
  "CA": "CAN",
  "CV": "CPV",
  "KY": "CYM",
  "CF": "CAF",
  "TD": "TCD",
  "CL": "CHL",
  "CN": "CHN",
  "CX": "CXR",
  "CC": "CCK",
  "CO": "COL",
  "KM": "COM",
  "CG": "COG",
  "CD": "COD",
  "CK": "COK",
  "CR": "CRI",
  "CI": "CIV",
  "HR": "HRV",
  "CU": "CUB",
  "CW": "CUW",
  "CY": "CYP",
  "CZ": "CZE",
  "DK": "DNK",
  "DJ": "DJI",
  "DM": "DMA",
  "DO": "DOM",
  "EC": "ECU",
  "EG": "EGY",
  "SV": "SLV",
  "GQ": "GNQ",
  "ER": "ERI",
  "EE": "EST",
  "ET": "ETH",
  "FK": "FLK",
  "FO": "FRO",
  "FJ": "FJI",
  "FI": "FIN",
  "FR": "FRA",
  "GF": "GUF",
  "PF": "PYF",
  "TF": "ATF",
  "GA": "GAB",
  "GM": "GMB",
  "GE": "GEO",
  "DE": "DEU",
  "GH": "GHA",
  "GI": "GIB",
  "GR": "GRC",
  "GL": "GRL",
  "GD": "GRD",
  "GP": "GLP",
  "GU": "GUM",
  "GT": "GTM",
  "GG": "GGY",
  "GN": "GIN",
  "GW": "GNB",
  "GY": "GUY",
  "HT": "HTI",
  "HM": "HMD",
  "VA": "VAT",
  "HN": "HND",
  "HK": "HKG",
  "HU": "HUN",
  "IS": "ISL",
  "IN": "IND",
  "ID": "IDN",
  "IR": "IRN",
  "IQ": "IRQ",
  "IE": "IRL",
  "IM": "IMN",
  "IL": "ISR",
  "IT": "ITA",
  "JM": "JAM",
  "JP": "JPN",
  "JE": "JEY",
  "JO": "JOR",
  "KZ": "KAZ",
  "KE": "KEN",
  "KI": "KIR",
  "KP": "PRK",
  "KR": "KOR",
  "KW": "KWT",
  "KG": "KGZ",
  "LA": "LAO",
  "LV": "LVA",
  "LB": "LBN",
  "LS": "LSO",
  "LR": "LBR",
  "LY": "LBY",
  "LI": "LIE",
  "LT": "LTU",
  "LU": "LUX",
  "MO": "MAC",
  "MK": "MKD",
  "MG": "MDG",
  "MW": "MWI",
  "MY": "MYS",
  "MV": "MDV",
  "ML": "MLI",
  "MT": "MLT",
  "MH": "MHL",
  "MQ": "MTQ",
  "MR": "MRT",
  "MU": "MUS",
  "YT": "MYT",
  "MX": "MEX",
  "FM": "FSM",
  "MD": "MDA",
  "MC": "MCO",
  "MN": "MNG",
  "ME": "MNE",
  "MS": "MSR",
  "MA": "MAR",
  "MZ": "MOZ",
  "MM": "MMR",
  "NA": "NAM",
  "NR": "NRU",
  "NP": "NPL",
  "NL": "NLD",
  "NC": "NCL",
  "NZ": "NZL",
  "NI": "NIC",
  "NE": "NER",
  "NG": "NGA",
  "NU": "NIU",
  "NF": "NFK",
  "MP": "MNP",
  "NO": "NOR",
  "OM": "OMN",
  "PK": "PAK",
  "PW": "PLW",
  "PS": "PSE",
  "PA": "PAN",
  "PG": "PNG",
  "PY": "PRY",
  "PE": "PER",
  "PH": "PHL",
  "PN": "PCN",
  "PL": "POL",
  "PT": "PRT",
  "PR": "PRI",
  "QA": "QAT",
  "RE": "REU",
  "RO": "ROU",
  "RU": "RUS",
  "RW": "RWA",
  "BL": "BLM",
  "SH": "SHN",
  "KN": "KNA",
  "LC": "LCA",
  "MF": "MAF",
  "PM": "SPM",
  "VC": "VCT",
  "WS": "WSM",
  "SM": "SMR",
  "ST": "STP",
  "SA": "SAU",
  "SN": "SEN",
  "RS": "SRB",
  "SC": "SYC",
  "SL": "SLE",
  "SG": "SGP",
  "SX": "SXM",
  "SK": "SVK",
  "SI": "SVN",
  "SB": "SLB",
  "SO": "SOM",
  "ZA": "ZAF",
  "GS": "SGS",
  "SS": "SSD",
  "ES": "ESP",
  "LK": "LKA",
  "SD": "SDN",
  "SR": "SUR",
  "SJ": "SJM",
  "SZ": "SWZ",
  "SE": "SWE",
  "CH": "CHE",
  "SY": "SYR",
  "TW": "TWN",
  "TJ": "TJK",
  "TZ": "TZA",
  "TH": "THA",
  "TL": "TLS",
  "TG": "TGO",
  "TK": "TKL",
  "TO": "TON",
  "TT": "TTO",
  "TN": "TUN",
  "TR": "TUR",
  "TM": "TKM",
  "TC": "TCA",
  "TV": "TUV",
  "UG": "UGA",
  "UA": "UKR",
  "AE": "ARE",
  "GB": "GBR",
  "US": "USA",
  "UM": "UMI",
  "UY": "URY",
  "UZ": "UZB",
  "VU": "VUT",
  "VE": "VEN",
  "VN": "VNM",
  "VG": "VGB",
  "VI": "VIR",
  "WF": "WLF",
  "EH": "ESH",
  "YE": "YEM",
  "ZM": "ZMB",
  "ZW": "ZWE"
};
Locale.a1toa3langmap = {
  "ab": "abk",
  "aa": "aar",
  "af": "afr",
  "ak": "aka",
  "sq": "sqi",
  "am": "amh",
  "ar": "ara",
  "an": "arg",
  "hy": "hye",
  "as": "asm",
  "av": "ava",
  "ae": "ave",
  "ay": "aym",
  "az": "aze",
  "bm": "bam",
  "ba": "bak",
  "eu": "eus",
  "be": "bel",
  "bn": "ben",
  "bh": "bih",
  "bi": "bis",
  "bs": "bos",
  "br": "bre",
  "bg": "bul",
  "my": "mya",
  "ca": "cat",
  "ch": "cha",
  "ce": "che",
  "ny": "nya",
  "zh": "zho",
  "cv": "chv",
  "kw": "cor",
  "co": "cos",
  "cr": "cre",
  "hr": "hrv",
  "cs": "ces",
  "da": "dan",
  "dv": "div",
  "nl": "nld",
  "dz": "dzo",
  "en": "eng",
  "eo": "epo",
  "et": "est",
  "ee": "ewe",
  "fo": "fao",
  "fj": "fij",
  "fi": "fin",
  "fr": "fra",
  "ff": "ful",
  "gl": "glg",
  "ka": "kat",
  "de": "deu",
  "el": "ell",
  "gn": "grn",
  "gu": "guj",
  "ht": "hat",
  "ha": "hau",
  "he": "heb",
  "hz": "her",
  "hi": "hin",
  "ho": "hmo",
  "hu": "hun",
  "ia": "ina",
  "id": "ind",
  "ie": "ile",
  "ga": "gle",
  "ig": "ibo",
  "ik": "ipk",
  "io": "ido",
  "is": "isl",
  "it": "ita",
  "iu": "iku",
  "ja": "jpn",
  "jv": "jav",
  "kl": "kal",
  "kn": "kan",
  "kr": "kau",
  "ks": "kas",
  "kk": "kaz",
  "km": "khm",
  "ki": "kik",
  "rw": "kin",
  "ky": "kir",
  "kv": "kom",
  "kg": "kon",
  "ko": "kor",
  "ku": "kur",
  "kj": "kua",
  "la": "lat",
  "lb": "ltz",
  "lg": "lug",
  "li": "lim",
  "ln": "lin",
  "lo": "lao",
  "lt": "lit",
  "lu": "lub",
  "lv": "lav",
  "gv": "glv",
  "mk": "mkd",
  "mg": "mlg",
  "ms": "msa",
  "ml": "mal",
  "mt": "mlt",
  "mi": "mri",
  "mr": "mar",
  "mh": "mah",
  "mn": "mon",
  "na": "nau",
  "nv": "nav",
  "nb": "nob",
  "nd": "nde",
  "ne": "nep",
  "ng": "ndo",
  "nn": "nno",
  "no": "nor",
  "ii": "iii",
  "nr": "nbl",
  "oc": "oci",
  "oj": "oji",
  "cu": "chu",
  "om": "orm",
  "or": "ori",
  "os": "oss",
  "pa": "pan",
  "pi": "pli",
  "fa": "fas",
  "pl": "pol",
  "ps": "pus",
  "pt": "por",
  "qu": "que",
  "rm": "roh",
  "rn": "run",
  "ro": "ron",
  "ru": "rus",
  "sa": "san",
  "sc": "srd",
  "sd": "snd",
  "se": "sme",
  "sm": "smo",
  "sg": "sag",
  "sr": "srp",
  "gd": "gla",
  "sn": "sna",
  "si": "sin",
  "sk": "slk",
  "sl": "slv",
  "so": "som",
  "st": "sot",
  "es": "spa",
  "su": "sun",
  "sw": "swa",
  "ss": "ssw",
  "sv": "swe",
  "ta": "tam",
  "te": "tel",
  "tg": "tgk",
  "th": "tha",
  "ti": "tir",
  "bo": "bod",
  "tk": "tuk",
  "tl": "tgl",
  "tn": "tsn",
  "to": "ton",
  "tr": "tur",
  "ts": "tso",
  "tt": "tat",
  "tw": "twi",
  "ty": "tah",
  "ug": "uig",
  "uk": "ukr",
  "ur": "urd",
  "uz": "uzb",
  "ve": "ven",
  "vi": "vie",
  "vo": "vol",
  "wa": "wln",
  "cy": "cym",
  "wo": "wol",
  "fy": "fry",
  "xh": "xho",
  "yi": "yid",
  "yo": "yor",
  "za": "zha",
  "zu": "zul"
};
/**
 * Tell whether or not the str does not start with a lower case ASCII char.
 * @private
 * @param {string} str the char to check
 * @return {boolean} true if the char is not a lower case ASCII char
 */

Locale._notLower = function (str) {
  // do this with ASCII only so we don't have to depend on the CType functions
  var ch = str.charCodeAt(0);
  return ch < 97 || ch > 122;
};
/**
 * Tell whether or not the str does not start with an upper case ASCII char.
 * @private
 * @param {string} str the char to check
 * @return {boolean} true if the char is a not an upper case ASCII char
 */


Locale._notUpper = function (str) {
  // do this with ASCII only so we don't have to depend on the CType functions
  var ch = str.charCodeAt(0);
  return ch < 65 || ch > 90;
};
/**
 * Tell whether or not the str does not start with a digit char.
 * @private
 * @param {string} str the char to check
 * @return {boolean} true if the char is a not an upper case ASCII char
 */


Locale._notDigit = function (str) {
  // do this with ASCII only so we don't have to depend on the CType functions
  var ch = str.charCodeAt(0);
  return ch < 48 || ch > 57;
};
/**
 * Tell whether or not the given string has the correct syntax to be 
 * an ISO 639 language code.
 * 
 * @private
 * @param {string} str the string to parse
 * @return {boolean} true if the string could syntactically be a language code.
 */


Locale._isLanguageCode = function (str) {
  if (typeof str === 'undefined' || str.length < 2 || str.length > 3) {
    return false;
  }

  for (var i = 0; i < str.length; i++) {
    if (Locale._notLower(str.charAt(i))) {
      return false;
    }
  }

  return true;
};
/**
 * Tell whether or not the given string has the correct syntax to be 
 * an ISO 3166 2-letter region code or M.49 3-digit region code.
 * 
 * @private
 * @param {string} str the string to parse
 * @return {boolean} true if the string could syntactically be a language code.
 */


Locale._isRegionCode = function (str) {
  if (typeof str === 'undefined' || str.length < 2 || str.length > 3) {
    return false;
  }

  if (str.length === 2) {
    for (var i = 0; i < str.length; i++) {
      if (Locale._notUpper(str.charAt(i))) {
        return false;
      }
    }
  } else {
    for (var i = 0; i < str.length; i++) {
      if (Locale._notDigit(str.charAt(i))) {
        return false;
      }
    }
  }

  return true;
};
/**
 * Tell whether or not the given string has the correct syntax to be 
 * an ISO 639 language code.
 * 
 * @private
 * @param {string} str the string to parse
 * @return {boolean} true if the string could syntactically be a language code.
 */


Locale._isScriptCode = function (str) {
  if (typeof str === 'undefined' || str.length !== 4 || Locale._notUpper(str.charAt(0))) {
    return false;
  }

  for (var i = 1; i < 4; i++) {
    if (Locale._notLower(str.charAt(i))) {
      return false;
    }
  }

  return true;
};
/**
 * Return the ISO-3166 alpha3 equivalent region code for the given ISO 3166 alpha2
 * region code. If the given alpha2 code is not found, this function returns its
 * argument unchanged.
 * @static
 * @param {string|undefined} alpha2 the alpha2 code to map
 * @return {string|undefined} the alpha3 equivalent of the given alpha2 code, or the alpha2
 * parameter if the alpha2 value is not found
 */


Locale.regionAlpha2ToAlpha3 = function (alpha2) {
  return Locale.a2toa3regmap[alpha2] || alpha2;
};
/**
 * Return the ISO-639 alpha3 equivalent language code for the given ISO 639 alpha1
 * language code. If the given alpha1 code is not found, this function returns its
 * argument unchanged.
 * @static
 * @param {string|undefined} alpha1 the alpha1 code to map
 * @return {string|undefined} the alpha3 equivalent of the given alpha1 code, or the alpha1
 * parameter if the alpha1 value is not found
 */


Locale.languageAlpha1ToAlpha3 = function (alpha1) {
  return Locale.a1toa3langmap[alpha1] || alpha1;
};

Locale.prototype = {
  /**
   * @private
   */
  _genSpec: function _genSpec() {
    this.spec = this.language || "";

    if (this.script) {
      if (this.spec.length > 0) {
        this.spec += "-";
      }

      this.spec += this.script;
    }

    if (this.region) {
      if (this.spec.length > 0) {
        this.spec += "-";
      }

      this.spec += this.region;
    }

    if (this.variant) {
      if (this.spec.length > 0) {
        this.spec += "-";
      }

      this.spec += this.variant;
    }
  },

  /**
   * Return the ISO 639 language code for this locale. 
   * @return {string|undefined} the language code for this locale 
   */
  getLanguage: function getLanguage() {
    return this.language;
  },

  /**
   * Return the language of this locale as an ISO-639-alpha3 language code
   * @return {string|undefined} the alpha3 language code of this locale
   */
  getLanguageAlpha3: function getLanguageAlpha3() {
    return Locale.languageAlpha1ToAlpha3(this.language);
  },

  /**
   * Return the ISO 3166 region code for this locale.
   * @return {string|undefined} the region code of this locale
   */
  getRegion: function getRegion() {
    return this.region;
  },

  /**
   * Return the region of this locale as an ISO-3166-alpha3 region code
   * @return {string|undefined} the alpha3 region code of this locale
   */
  getRegionAlpha3: function getRegionAlpha3() {
    return Locale.regionAlpha2ToAlpha3(this.region);
  },

  /**
   * Return the ISO 15924 script code for this locale
   * @return {string|undefined} the script code of this locale
   */
  getScript: function getScript() {
    return this.script;
  },

  /**
   * Return the variant code for this locale
   * @return {string|undefined} the variant code of this locale, if any
   */
  getVariant: function getVariant() {
    return this.variant;
  },

  /**
   * Return the whole locale specifier as a string.
   * @return {string} the locale specifier
   */
  getSpec: function getSpec() {
    if (!this.spec) this._genSpec();
    return this.spec;
  },

  /**
   * Return the language locale specifier. This includes the
   * language and the script if it is available. This can be
   * used to see whether the written language of two locales
   * match each other regardless of the region or variant.
   * 
   * @return {string} the language locale specifier
   */
  getLangSpec: function getLangSpec() {
    var spec = this.language;

    if (spec && this.script) {
      spec += "-" + this.script;
    }

    return spec || "";
  },

  /**
   * Express this locale object as a string. Currently, this simply calls the getSpec
   * function to represent the locale as its specifier.
   * 
   * @return {string} the locale specifier
   */
  toString: function toString() {
    return this.getSpec();
  },

  /**
   * Return true if the the other locale is exactly equal to the current one.
   * @return {boolean} whether or not the other locale is equal to the current one 
   */
  equals: function equals(other) {
    return this.language === other.language && this.region === other.region && this.script === other.script && this.variant === other.variant;
  },

  /**
   * Return true if the current locale is the special pseudo locale.
   * @return {boolean} true if the current locale is the special pseudo locale
   */
  isPseudo: function isPseudo() {
    return JSUtils.indexOf(ilib.pseudoLocales, this.spec) > -1;
  }
}; // static functions

/**
 * @private
 */

Locale.locales = [// !macro localelist
];
/**
 * Return the list of available locales that this iLib file supports.
 * If this copy of ilib is pre-assembled with locale data, then the 
 * list locales may be much smaller
 * than the list of all available locales in the iLib repository. The
 * assembly tool will automatically fill in the list for an assembled
 * copy of iLib. If this copy is being used with dynamically loaded 
 * data, then you 
 * can load any locale that iLib supports. You can form a locale with any 
 * combination of a language and region tags that exist in the locale
 * data directory. Language tags are in the root of the locale data dir,
 * and region tags can be found underneath the "und" directory. (The 
 * region tags are separated into a different dir because the region names 
 * conflict with language names on file systems that are case-insensitive.) 
 * If you have culled the locale data directory to limit the size of
 * your app, then this function should return only those files that actually exist
 * according to the ilibmanifest.json file in the root of that locale
 * data dir. Make sure your ilibmanifest.json file is up-to-date with
 * respect to the list of files that exist in the locale data dir.
 * 
 * @param {boolean} sync if false, load the list of available files from disk
 * asynchronously, otherwise load them synchronously. (Default: true/synchronously)
 * @param {Function} onLoad a callback function to call if asynchronous
 * load was requested and the list of files have been loaded.
 * @return {Array.<string>} this is an array of locale specs for which 
 * this iLib file has locale data for
 */

Locale.getAvailableLocales = function (sync, onLoad) {
  var locales = [];

  if (Locale.locales.length || typeof ilib._load.listAvailableFiles !== 'function') {
    locales = Locale.locales;

    if (onLoad && typeof onLoad === 'function') {
      onLoad(locales);
    }
  } else {
    if (typeof sync === 'undefined') {
      sync = true;
    }

    ilib._load.listAvailableFiles(sync, function (manifest) {
      if (manifest) {
        for (var dir in manifest) {
          var filelist = manifest[dir];

          for (var i = 0; i < filelist.length; i++) {
            if (filelist[i].length > 15 && filelist[i].substr(-15) === "localeinfo.json") {
              locales.push(filelist[i].substring(0, filelist[i].length - 16).replace(/\//g, "-"));
            }
          }
        }
      }

      if (onLoad && typeof onLoad === 'function') {
        onLoad(locales);
      }
    });
  }

  return locales;
};

module.exports = Locale;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * LocaleInfo.js - Encode locale-specific defaults
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js Locale.js Utils.js
// !data localeinfo


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");
/**
 * @class
 * Create a new locale info instance. Locale info instances give information about
 * the default settings for a particular locale. These settings may be overridden
 * by various parts of the code, and should be used as a fall-back setting of last
 * resort. <p>
 * 
 * The optional options object holds extra parameters if they are necessary. The
 * current list of supported options are:
 * 
 * <ul>
 * <li><i>onLoad</i> - a callback function to call when the locale info object is fully 
 * loaded. When the onLoad option is given, the localeinfo object will attempt to
 * load any missing locale data using the ilib loader callback.
 * When the constructor is done (even if the data is already preassembled), the 
 * onLoad function is called with the current instance as a parameter, so this
 * callback can be used with preassembled or dynamic loading or a mix of the two.
 * 
 * <li><i>sync</i> - tell whether to load any missing locale data synchronously or 
 * asynchronously. If this option is given as "false", then the "onLoad"
 * callback must be given, as the instance returned from this constructor will
 * not be usable for a while. 
 *
 * <li><i>loadParams</i> - an object containing parameters to pass to the 
 * loader callback function when locale data is missing. The parameters are not
 * interpretted or modified in any way. They are simply passed along. The object 
 * may contain any property/value pairs as long as the calling code is in
 * agreement with the loader callback function as to what those parameters mean.
 * </ul>
 * 
 * If this copy of ilib is pre-assembled and all the data is already available, 
 * or if the data was already previously loaded, then this constructor will call
 * the onLoad callback immediately when the initialization is done. 
 * If the onLoad option is not given, this class will only attempt to load any
 * missing locale data synchronously.
 * 
 * 
 * @constructor
 * @see {ilib.setLoaderCallback} for information about registering a loader callback
 * function
 * @param {Locale|string=} locale the locale for which the info is sought, or undefined for
 * @param {Object=} options the locale for which the info is sought, or undefined for
 * the current locale
 */


var LocaleInfo = function LocaleInfo(locale, options) {
  var sync = true,
      loadParams = undefined;
  /**
    @private 
    @type {{
  	calendar:string,
  	clock:string,
  	currency:string,
  	delimiter: {quotationStart:string,quotationEnd:string,alternateQuotationStart:string,alternateQuotationEnd:string},
  	firstDayOfWeek:number,
  	meridiems:string,
  	numfmt:{
  		currencyFormats:{common:string,commonNegative:string,iso:string,isoNegative:string},
  		decimalChar:string,
  		exponential:string,
  		groupChar:string,
  		negativenumFmt:string,
  		negativepctFmt:string,
  		pctChar:string,
  		pctFmt:string,
  		prigroupSize:number,
  		roundingMode:string,
  		script:string,
  		secgroupSize:number,
  		useNative:boolean
  	},
  	timezone:string,
  	units:string,
  	weekendEnd:number,
  	weekendStart:number,
  	paperSizes:{regular:string}
    }}
  */

  this.info = LocaleInfo.defaultInfo;

  switch (_typeof(locale)) {
    case "string":
      this.locale = new Locale(locale);
      break;

    default:
    case "undefined":
      this.locale = new Locale();
      break;

    case "object":
      this.locale = locale;
      break;
  }

  if (options) {
    if (typeof options.sync !== 'undefined') {
      sync = options.sync == true;
    }

    if (typeof options.loadParams !== 'undefined') {
      loadParams = options.loadParams;
    }
  }

  if (!ilib.data.cache.LocaleInfo) {
    ilib.data.cache.LocaleInfo = {};
  }

  Utils.loadData({
    object: "LocaleInfo",
    locale: this.locale,
    name: "localeinfo.json",
    sync: sync,
    loadParams: loadParams,
    callback: ilib.bind(this, function (info) {
      if (!info) {
        info = LocaleInfo.defaultInfo;
        var spec = this.locale.getSpec().replace(/-/g, "_");
        ilib.data.cache.LocaleInfo[spec] = info;
      }

      this.info = info;

      if (options && typeof options.onLoad === 'function') {
        options.onLoad(this);
      }
    })
  });
};

LocaleInfo.defaultInfo = ilib.data.localeinfo;
LocaleInfo.defaultInfo = LocaleInfo.defaultInfo || {
  "calendar": "gregorian",
  "clock": "24",
  "currency": "USD",
  "delimiter": {
    "quotationStart": "“",
    "quotationEnd": "”",
    "alternateQuotationStart": "‘",
    "alternateQuotationEnd": "’"
  },
  "firstDayOfWeek": 1,
  "meridiems": "gregorian",
  "numfmt": {
    "script": "Latn",
    "decimalChar": ".",
    "groupChar": ",",
    "pctChar": "%",
    "exponential": "E",
    "prigroupSize": 3,
    "currencyFormats": {
      "common": "{s} {n}",
      "commonNegative": "-{s} {n}",
      "iso": "{s} {n}",
      "isoNegative": "({s} {n})"
    },
    "negativenumFmt": "-{n}",
    "pctFmt": "{n}%",
    "negativepctFmt": "-{n}%",
    "roundingMode": "halfdown",
    "useNative": false
  },
  "paperSizes": {
    "regular": "A4"
  },
  "timezone": "Etc/UTC",
  "units": "metric",
  "weekendEnd": 0,
  "weekendStart": 6
};
LocaleInfo.prototype = {
  /**
   * Return the name of the locale's language in English.
   * @returns {string} the name of the locale's language in English
   */
  getLanguageName: function getLanguageName() {
    return this.info["language.name"];
  },

  /**
   * Return the name of the locale's region in English. If the locale
   * has no region, this returns undefined.
   * 
   * @returns {string|undefined} the name of the locale's region in English
   */
  getRegionName: function getRegionName() {
    return this.info["region.name"];
  },

  /**
  * Return whether this locale commonly uses the 12- or the 24-hour clock.
  *  
  * @returns {string} "12" if the locale commonly uses a 12-hour clock, or "24"
  * if the locale commonly uses a 24-hour clock. 
  */
  getClock: function getClock() {
    return this.info.clock;
  },

  /**
   * Return the locale that this info object was created with.
   * @returns {Locale} The locale spec of the locale used to construct this info instance
   */
  getLocale: function getLocale() {
    return this.locale;
  },

  /**
   * Return the name of the measuring system that is commonly used in the given locale.
   * Valid values are "uscustomary", "imperial", and "metric".
   * 
   * @returns {string} The name of the measuring system commonly used in the locale
   */
  getUnits: function getUnits() {
    return this.info.units;
  },

  /**
   * Return the name of the calendar that is commonly used in the given locale.
   * 
   * @returns {string} The name of the calendar commonly used in the locale
   */
  getCalendar: function getCalendar() {
    return this.info.calendar;
  },

  /**
   * Return the day of week that starts weeks in the current locale. Days are still
   * numbered the standard way with 0 for Sunday through 6 for Saturday, but calendars 
   * should be displayed and weeks calculated with the day of week returned from this 
   * function as the first day of the week.
   * 
   * @returns {number} the day of the week that starts weeks in the current locale.
   */
  getFirstDayOfWeek: function getFirstDayOfWeek() {
    return this.info.firstDayOfWeek;
  },

  /**
   * Return the day of week that starts weekend in the current locale. Days are still
   * numbered the standard way with 0 for Sunday through 6 for Saturday.
   * 
   * @returns {number} the day of the week that starts weeks in the current locale.
   */
  getWeekEndStart: function getWeekEndStart() {
    return this.info.weekendStart;
  },

  /**
   * Return the day of week that starts weekend in the current locale. Days are still
   * numbered the standard way with 0 for Sunday through 6 for Saturday.
   * 
   * @returns {number} the day of the week that starts weeks in the current locale.
   */
  getWeekEndEnd: function getWeekEndEnd() {
    return this.info.weekendEnd;
  },

  /**
   * Return the default time zone for this locale. Many locales span across multiple
   * time zones. In this case, the time zone with the largest population is chosen
   * to represent the locale. This is obviously not that accurate, but then again,
   * this method's return value should only be used as a default anyways.
   * @returns {string} the default time zone for this locale.
   */
  getTimeZone: function getTimeZone() {
    return this.info.timezone;
  },

  /**
   * Return the decimal separator for formatted numbers in this locale.
   * @returns {string} the decimal separator char
   */
  getDecimalSeparator: function getDecimalSeparator() {
    return this.info.numfmt.decimalChar;
  },

  /**
   * Return the decimal separator for formatted numbers in this locale for native script.
   * @returns {string} the decimal separator char
   */
  getNativeDecimalSeparator: function getNativeDecimalSeparator() {
    return this.info.native_numfmt && this.info.native_numfmt.decimalChar || this.info.numfmt.decimalChar;
  },

  /**
   * Return the separator character used to separate groups of digits on the 
   * integer side of the decimal character.
   * @returns {string} the grouping separator char
   */
  getGroupingSeparator: function getGroupingSeparator() {
    return this.info.numfmt.groupChar;
  },

  /**
   * Return the separator character used to separate groups of digits on the 
   * integer side of the decimal character for the native script if present other than the default script.
   * @returns {string} the grouping separator char
   */
  getNativeGroupingSeparator: function getNativeGroupingSeparator() {
    return this.info.native_numfmt && this.info.native_numfmt.groupChar || this.info.numfmt.groupChar;
  },

  /**
   * Return the minimum number of digits grouped together on the integer side 
   * for the first (primary) group. 
   * In western European cultures, groupings are in 1000s, so the number of digits
   * is 3. 
   * @returns {number} the number of digits in a primary grouping, or 0 for no grouping
   */
  getPrimaryGroupingDigits: function getPrimaryGroupingDigits() {
    return typeof this.info.numfmt.prigroupSize !== 'undefined' && this.info.numfmt.prigroupSize || 0;
  },

  /**
   * Return the minimum number of digits grouped together on the integer side
   * for the second or more (secondary) group.<p>
   *   
   * In western European cultures, all groupings are by 1000s, so the secondary
   * size should be 0 because there is no secondary size. In general, if this 
   * method returns 0, then all groupings are of the primary size.<p> 
   * 
   * For some other cultures, the first grouping (primary)
   * is 3 and any subsequent groupings (secondary) are two. So, 100000 would be
   * written as: "1,00,000".
   * 
   * @returns {number} the number of digits in a secondary grouping, or 0 for no 
   * secondary grouping. 
   */
  getSecondaryGroupingDigits: function getSecondaryGroupingDigits() {
    return this.info.numfmt.secgroupSize || 0;
  },

  /**
   * Return the format template used to format percentages in this locale.
   * @returns {string} the format template for formatting percentages
   */
  getPercentageFormat: function getPercentageFormat() {
    return this.info.numfmt.pctFmt;
  },

  /**
   * Return the format template used to format percentages in this locale
   * with negative amounts.
   * @returns {string} the format template for formatting percentages
   */
  getNegativePercentageFormat: function getNegativePercentageFormat() {
    return this.info.numfmt.negativepctFmt;
  },

  /**
   * Return the symbol used for percentages in this locale.
   * @returns {string} the symbol used for percentages in this locale
   */
  getPercentageSymbol: function getPercentageSymbol() {
    return this.info.numfmt.pctChar || "%";
  },

  /**
   * Return the symbol used for exponential in this locale.
   * @returns {string} the symbol used for exponential in this locale
   */
  getExponential: function getExponential() {
    return this.info.numfmt.exponential;
  },

  /**
   * Return the symbol used for exponential in this locale for native script.
   * @returns {string} the symbol used for exponential in this locale for native script
   */
  getNativeExponential: function getNativeExponential() {
    return this.info.native_numfmt && this.info.native_numfmt.exponential || this.info.numfmt.exponential;
  },

  /**
   * Return the symbol used for percentages in this locale for native script.
   * @returns {string} the symbol used for percentages in this locale for native script
   */
  getNativePercentageSymbol: function getNativePercentageSymbol() {
    return this.info.native_numfmt && this.info.native_numfmt.pctChar || this.info.numfmt.pctChar || "%";
  },

  /**
   * Return the format template used to format negative numbers in this locale.
   * @returns {string} the format template for formatting negative numbers
   */
  getNegativeNumberFormat: function getNegativeNumberFormat() {
    return this.info.numfmt.negativenumFmt;
  },

  /**
   * Return an object containing the format templates for formatting currencies
   * in this locale. The object has a number of properties in it that each are
   * a particular style of format. Normally, this contains a "common" and an "iso"
   * style, but may contain others in the future.
   * @returns {Object} an object containing the format templates for currencies
   */
  getCurrencyFormats: function getCurrencyFormats() {
    return this.info.numfmt.currencyFormats;
  },

  /**
   * Return the currency that is legal in the locale, or which is most commonly 
   * used in regular commerce.
   * @returns {string} the ISO 4217 code for the currency of this locale
   */
  getCurrency: function getCurrency() {
    return this.info.currency;
  },

  /**
   * Return a string that describes the style of digits used by this locale.
   * Possible return values are:
   * <ul>
   * <li><i>western</i> - uses the regular western 10-based digits 0 through 9
   * <li><i>optional</i> - native 10-based digits exist, but in modern usage,
   * this locale most often uses western digits
   * <li><i>native</i> - native 10-based native digits exist and are used
   * regularly by this locale
   * <li><i>custom</i> - uses native digits by default that are not 10-based
   * </ul>
   * @returns {string} string that describes the style of digits used in this locale
   */
  getDigitsStyle: function getDigitsStyle() {
    if (this.info.numfmt && this.info.numfmt.useNative) {
      return "native";
    }

    if (typeof this.info.native_numfmt !== 'undefined') {
      return "optional";
    }

    return "western";
  },

  /**
   * Return the digits of the default script if they are defined.
   * If not defined, the default should be the regular "Arabic numerals"
   * used in the Latin script. (0-9)
   * @returns {string|undefined} the digits used in the default script 
   */
  getDigits: function getDigits() {
    return this.info.numfmt.digits;
  },

  /**
   * Return the digits of the native script if they are defined. 
   * @returns {string|undefined} the digits used in the default script 
   */
  getNativeDigits: function getNativeDigits() {
    return this.info.numfmt.useNative && this.info.numfmt.digits || this.info.native_numfmt && this.info.native_numfmt.digits;
  },

  /**
   * If this locale typically uses a different type of rounding for numeric
   * formatting other than halfdown, especially for currency, then it can be 
   * specified in the localeinfo. If the locale uses the default, then this 
   * method returns undefined. The locale's rounding method overrides the 
   * rounding method for the currency itself, which can sometimes shared 
   * between various locales so it is less specific.
   * @returns {string} the name of the rounding mode typically used in this
   * locale, or "halfdown" if the locale does not override the default
   */
  getRoundingMode: function getRoundingMode() {
    return this.info.numfmt.roundingMode;
  },

  /**
   * Return the default script used to write text in the language of this 
   * locale. Text for most languages is written in only one script, but there
   * are some languages where the text can be written in a number of scripts,
   * depending on a variety of things such as the region, ethnicity, religion, 
   * etc. of the author. This method returns the default script for the
   * locale, in which the language is most commonly written.<p> 
   * 
   * The script is returned as an ISO 15924 4-letter code.
   * 
   * @returns {string} the ISO 15924 code for the default script used to write
   * text in this locale 
   */
  getDefaultScript: function getDefaultScript() {
    return this.info.scripts ? this.info.scripts[0] : "Latn";
  },

  /**
   * Return the script used for the current locale. If the current locale
   * explicitly defines a script, then this script is returned. If not, then 
   * the default script for the locale is returned.
   * 
   * @see LocaleInfo.getDefaultScript
   * @returns {string} the ISO 15924 code for the script used to write
   * text in this locale
   */
  getScript: function getScript() {
    return this.locale.getScript() || this.getDefaultScript();
  },

  /**
   * Return an array of script codes which are used to write text in the current
   * language. Text for most languages is written in only one script, but there
   * are some languages where the text can be written in a number of scripts,
   * depending on a variety of things such as the region, ethnicity, religion, 
   * etc. of the author. This method returns an array of script codes in which 
   * the language is commonly written.
   * 
   * @returns {Array.<string>} an array of ISO 15924 codes for the scripts used 
   * to write text in this language
   */
  getAllScripts: function getAllScripts() {
    return this.info.scripts || ["Latn"];
  },

  /**
   * Return the default style of meridiems used in this locale. Meridiems are 
   * times of day like AM/PM. In a few locales with some calendars, for example
   * Amharic/Ethiopia using the Ethiopic calendar, the times of day may be
   * split into different segments than simple AM/PM as in the Gregorian 
   * calendar. Only a few locales are like that. For most locales, formatting 
   * a Gregorian date will use the regular Gregorian AM/PM meridiems.
   *  
   * @returns {string} the default meridiems style used in this locale. Possible
   * values are "gregorian", "chinese", and "ethiopic"
   */
  getMeridiemsStyle: function getMeridiemsStyle() {
    return this.info.meridiems || "gregorian";
  },

  /**
   * Return the default PaperSize information in this locale.
   * @returns {string} default PaperSize in this locale
   */
  getPaperSize: function getPaperSize() {
    return this.info.paperSizes.regular;
  },

  /**
   * Return the default Delimiter QuotationStart information in this locale.
   * @returns {string} default QuotationStart in this locale
   */
  getDelimiterQuotationStart: function getDelimiterQuotationStart() {
    return this.info.delimiter.quotationStart;
  },

  /**
   * Return the default Delimiter QuotationEnd information in this locale.
   * @returns {string} default QuotationEnd in this locale
   */
  getDelimiterQuotationEnd: function getDelimiterQuotationEnd() {
    return this.info.delimiter.quotationEnd;
  }
};
module.exports = LocaleInfo;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/MathUtils.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * MathUtils.js - Misc math utility routines
 *
 * Copyright © 2013-2015, 2018 JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var MathUtils = {};
/**
 * Return the sign of the given number. If the sign is negative, this function
 * returns -1. If the sign is positive or zero, this function returns 1.
 * @static
 * @param {number} num the number to test
 * @return {number} -1 if the number is negative, and 1 otherwise
 */

MathUtils.signum = function (num) {
  var n = num;

  if (typeof num === 'string') {
    n = parseInt(num, 10);
  } else if (typeof num !== 'number') {
    return 1;
  }

  return n < 0 ? -1 : 1;
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.floor = function (num) {
  return Math.floor(num);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.ceiling = function (num) {
  return Math.ceil(num);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.down = function (num) {
  return num < 0 ? Math.ceil(num) : Math.floor(num);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.up = function (num) {
  return num < 0 ? Math.floor(num) : Math.ceil(num);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.halfup = function (num) {
  return num < 0 ? Math.ceil(num - 0.5) : Math.floor(num + 0.5);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.halfdown = function (num) {
  return num < 0 ? Math.floor(num + 0.5) : Math.ceil(num - 0.5);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.halfeven = function (num) {
  return Math.floor(num) % 2 === 0 ? Math.ceil(num - 0.5) : Math.floor(num + 0.5);
};
/**
 * @static
 * @protected
 * @param {number} num number to round
 * @return {number} rounded number
 */


MathUtils.halfodd = function (num) {
  return Math.floor(num) % 2 !== 0 ? Math.ceil(num - 0.5) : Math.floor(num + 0.5);
};
/**
 * Do a proper modulo function. The Javascript % operator will give the truncated
 * division algorithm, but for calendrical calculations, we need the Euclidean
 * division algorithm where the remainder of any division, whether the dividend
 * is negative or not, is always a positive number in the range [0, modulus).<p>
 *
 *
 * @static
 * @param {number} dividend the number being divided
 * @param {number} modulus the number dividing the dividend. This should always be a positive number.
 * @return the remainder of dividing the dividend by the modulus.
 */


MathUtils.mod = function (dividend, modulus) {
  if (modulus == 0) {
    return 0;
  }

  var x = dividend % modulus;
  return x < 0 ? x + modulus : x;
};
/**
 * Do a proper adjusted modulo function. The Javascript % operator will give the truncated
 * division algorithm, but for calendrical calculations, we need the Euclidean
 * division algorithm where the remainder of any division, whether the dividend
 * is negative or not, is always a positive number in the range (0, modulus]. The adjusted
 * modulo function differs from the regular modulo function in that when the remainder is
 * zero, the modulus should be returned instead.<p>
 *
 *
 * @static
 * @param {number} dividend the number being divided
 * @param {number} modulus the number dividing the dividend. This should always be a positive number.
 * @return the remainder of dividing the dividend by the modulus.
 */


MathUtils.amod = function (dividend, modulus) {
  if (modulus == 0) {
    return 0;
  }

  var x = dividend % modulus;
  return x <= 0 ? x + modulus : x;
};
/**
 * Return the number with the decimal shifted by the given precision.
 * Positive precisions shift the decimal to the right giving larger
 * numbers, and negative ones shift the decimal to the left giving
 * smaller numbers.
 *
 * @static
 * @param {number} number the number to shift
 * @param {number} precision the number of places to move the decimal point
 * @returns {number} the number with the decimal point shifted by the
 * given number of decimals
 */


MathUtils.shiftDecimal = function shift(number, precision) {
  var numArray = ("" + number).split("e");
  return +(numArray[0] + "e" + (numArray[1] ? +numArray[1] + precision : precision));
};
/**
 * Returns the base 10 logarithm of a number. For platforms that support
 * Math.log10() it is used directly. For plaforms that do not, such as Qt/QML,
 * it will be calculated using the natural logarithm.
 *
 * @param {number} num the number to take the logarithm of
 * @returns {number} the base-10 logarithm of the given number
 */


MathUtils.log10 = function (num) {
  if (typeof Math.log10 === "function") {
    return Math.log10(num);
  }

  return Math.log(num) / Math.LN10;
};
/**
 * Return the given number with only the given number of significant digits.
 * The number of significant digits can start with the digits greater than
 * 1 and straddle the decimal point, or it may start after the decimal point.
 * If the number of digits requested is less than 1, the original number
 * will be returned unchanged.
 *
 * @static
 * @param {number} number the number to return with only significant digits
 * @param {number} digits the number of significant digits to include in the
 * returned number
 * @param {function(number): number=} round a rounding function to use
 * @returns {number} the given number with only the requested number of
 * significant digits
 */


MathUtils.significant = function (number, digits, round) {
  if (digits < 1 || number === 0) return number;
  var rnd = round || Math.round;
  var factor = -Math.floor(MathUtils.log10(Math.abs(number))) + digits - 1;
  return MathUtils.shiftDecimal(rnd(MathUtils.shiftDecimal(number, factor)), -factor);
};

module.exports = MathUtils;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/Path.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/Path.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * Path.js - minimal pure js implementation of the nodejs path module
 * 
 * Copyright © 2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var Path = {
  /**
   * Return the parent directory of the given pathname
   * similar to the dirname shell function.  
   * @static
   * @param {string} pathname path to check
   * @return {string} the parent dir of the given pathname
   */
  dirname: function dirname(pathname) {
    pathname = pathname.replace(/\\/g, "/");
    var i = pathname.lastIndexOf("/");
    return i !== -1 ? pathname.substring(0, i) : pathname;
  },

  /**
   * Return the normalized version of the given pathname. This
   * cleans up things like double directory separators and such.
   * @static
   * @param {string} pathname path to check
   * @return {string} the normalized version of the given pathname
   */
  normalize: function normalize(pathname) {
    if (pathname) {
      pathname = pathname.replace(/\\/g, "/");
      pathname = pathname.replace(/\/\//g, "/");
      pathname = pathname.replace(/\/[^/]*[^\./]\/\.\./g, "/.");
      pathname = pathname.replace(/\/\//g, "/");
      pathname = pathname.replace(/\/\.\//g, "/");
      pathname = pathname.replace(/^\.\//, "");
      pathname = pathname.replace(/\/\//g, "/");
      pathname = pathname.replace(/\/\.$/, "/");
      pathname = pathname.replace(/\/\//g, "/");
      if (pathname.length > 1) pathname = pathname.replace(/\/$/, "");
      if (pathname.length === 0) pathname = '.';
    }

    return pathname;
  },

  /**
   * Return a path that is the concatenation of all the of the arguments
   * which each name a path segment.
   * @static
   * @param {...string} var_args
   * @return {string} the concatenated pathname
   */
  join: function join(var_args) {
    var arr = [];

    for (var i = 0; i < arguments.length; i++) {
      arr.push(arguments[i] && arguments[i].length > 0 ? arguments[i] : ".");
    }

    return Path.normalize(arr.join("/"));
  }
};
module.exports = Path;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/PersAlgoRataDie.js":
/*!**************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/PersAlgoRataDie.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * PersAlsoRataDie.js - Represent an RD date in the Persian algorithmic calendar
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
PersianAlgoCal.js 
MathUtils.js
RataDie.js
*/

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var PersianAlgoCal = __webpack_require__(/*! ./PersianAlgoCal.js */ "./node_modules/@enact/i18n/ilib/lib/PersianAlgoCal.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");
/**
 * @class
 * Construct a new Persian RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Persian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Persian RD date
 */


var PersAlgoRataDie = function PersAlgoRataDie(params) {
  this.cal = params && params.cal || new PersianAlgoCal();
  this.rd = NaN;
  RataDie.call(this, params);
};

PersAlgoRataDie.prototype = new RataDie();
PersAlgoRataDie.prototype.parent = RataDie;
PersAlgoRataDie.prototype.constructor = PersAlgoRataDie;
/**
 * The difference between a zero Julian day and the first Persian date
 * @private
 * @type number
 */

PersAlgoRataDie.prototype.epoch = 1948319.5;
/**
 * @private
 * @const
 * @type Array.<number>
 * the cumulative lengths of each month, for a non-leap year 
 */

PersAlgoRataDie.cumMonthLengths = [0, // Farvardin
31, // Ordibehesht
62, // Khordad
93, // Tir
124, // Mordad
155, // Shahrivar
186, // Mehr
216, // Aban
246, // Azar
276, // Dey
306, // Bahman
336, // Esfand
365];
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 *
 * @protected
 * @param {Object} date the date components to calculate the RD from
 */

PersAlgoRataDie.prototype._setDateComponents = function (date) {
  var year = this.cal.equivalentCycleYear(date.year);
  var y = date.year - (date.year >= 0 ? 474 : 473);
  var rdOfYears = 1029983 * Math.floor(y / 2820) + 365 * (year - 1) + Math.floor((682 * year - 110) / 2816);
  var dayInYear = (date.month > 1 ? PersAlgoRataDie.cumMonthLengths[date.month - 1] : 0) + date.day;
  var rdtime = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000;
  /*
  // console.log("getRataDie: converting " +  JSON.stringify(this));
  console.log("getRataDie: year is " +  year);
  console.log("getRataDie: rd of years is " +  rdOfYears);
  console.log("getRataDie: day in year is " +  dayInYear);
  console.log("getRataDie: rdtime is " +  rdtime);
  console.log("getRataDie: rd is " +  (rdOfYears + dayInYear + rdtime));
  */

  this.rd = rdOfYears + dayInYear + rdtime;
};
/**
 * Return the rd number of the particular day of the week on or before the 
 * given rd. eg. The Sunday on or before the given rd.
 * @private
 * @param {number} rd the rata die date of the reference date
 * @param {number} dayOfWeek the day of the week that is being sought relative 
 * to the current date
 * @return {number} the rd of the day of the week
 */


PersAlgoRataDie.prototype._onOrBefore = function (rd, dayOfWeek) {
  return rd - MathUtils.mod(Math.floor(rd) - dayOfWeek - 3, 7);
};

module.exports = PersAlgoRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/PersRataDie.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/PersRataDie.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * persratadie.js - Represent a rata die date in the Persian calendar
 *
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
MathUtils.js
RataDie.js
Astro.js
GregorianDate.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Astro = __webpack_require__(/*! ./Astro.js */ "./node_modules/@enact/i18n/ilib/lib/Astro.js");

var RataDie = __webpack_require__(/*! ./RataDie.js */ "./node_modules/@enact/i18n/ilib/lib/RataDie.js");

var GregorianDate = __webpack_require__(/*! ./GregorianDate.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js");
/**
 * @class
 * Construct a new Persian RD date number object. The constructor parameters can
 * contain any of the following properties:
 *
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian
 *
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 *
 * <li><i>year</i> - any integer, including 0
 *
 * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.
 *
 * <li><i>day</i> - 1 to 31
 *
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation
 * is always done with an unambiguous 24 hour representation
 *
 * <li><i>minute</i> - 0 to 59
 *
 * <li><i>second</i> - 0 to 59
 *
 * <li><i>millisecond</i> - 0 to 999
 *
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Persian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 *
 * If the constructor is called with no arguments at all or if none of the
 * properties listed above are present, then the RD is calculate based on
 * the current date at the time of instantiation. <p>
 *
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 *
 *
 * @private
 * @constructor
 * @extends RataDie
 * @param {Object=} params parameters that govern the settings and behaviour of this Persian RD date
 */


var PersRataDie = function PersRataDie(params) {
  this.rd = NaN;
  Astro.initAstro(params && typeof params.sync === 'boolean' ? params.sync : true, params && params.loadParams, ilib.bind(this, function (x) {
    RataDie.call(this, params);

    if (params && typeof params.callback === 'function') {
      params.callback(this);
    }
  }));
};

PersRataDie.prototype = new RataDie();
PersRataDie.prototype.parent = RataDie;
PersRataDie.prototype.constructor = PersRataDie;
/**
 * The difference between a zero Julian day and the first Persian date
 * @private
 * @type number
 */

PersRataDie.prototype.epoch = 1948319.5;
/**
 * @protected
 */

PersRataDie.prototype._tehranEquinox = function (year) {
  var equJED, equJD, equAPP, equTehran, dtTehran, eot; //  March equinox in dynamical time

  equJED = Astro._equinox(year, 0); //  Correct for delta T to obtain Universal time

  equJD = equJED - Astro._deltat(year) / (24 * 60 * 60); //  Apply the equation of time to yield the apparent time at Greenwich

  eot = Astro._equationOfTime(equJED) * 360;
  eot = (eot - 20 * Math.floor(eot / 20)) / 360;
  equAPP = equJD + eot;
  /*
   * Finally, we must correct for the constant difference between
   * the Greenwich meridian and the time zone standard for Iran
   * Standard time, 52 degrees 30 minutes to the East.
   */

  dtTehran = 52.5 / 360;
  equTehran = equAPP + dtTehran;
  return equTehran;
};
/**
 * Calculate the year based on the given Julian day.
 * @protected
 * @param {number} jd the Julian day to get the year for
 * @return {{year:number,equinox:number}} the year and the last equinox
 */


PersRataDie.prototype._getYear = function (jd) {
  var gd = new GregorianDate({
    julianday: jd
  });
  var guess = gd.getYears() - 2,
      nexteq,
      ret = {}; //ret.equinox = Math.floor(this._tehranEquinox(guess));

  ret.equinox = this._tehranEquinox(guess);

  while (ret.equinox > jd) {
    guess--; // ret.equinox = Math.floor(this._tehranEquinox(guess));

    ret.equinox = this._tehranEquinox(guess);
  }

  nexteq = ret.equinox - 1; // if the equinox falls after noon, then the day after that is the start of the
  // next year, so truncate the JD to get the noon of the day before the day with
  //the equinox on it, then add 0.5 to get the midnight of that day

  while (!(Math.floor(ret.equinox) + 0.5 <= jd && jd < Math.floor(nexteq) + 0.5)) {
    ret.equinox = nexteq;
    guess++; // nexteq = Math.floor(this._tehranEquinox(guess));

    nexteq = this._tehranEquinox(guess);
  } // Mean solar tropical year is 365.24219878 days


  ret.year = Math.round((ret.equinox - this.epoch - 1) / 365.24219878) + 1;
  return ret;
};
/**
 * Calculate the Rata Die (fixed day) number of the given date from the
 * date components.
 *
 * @protected
 * @param {Object} date the date components to calculate the RD from
 */


PersRataDie.prototype._setDateComponents = function (date) {
  var adr, guess, jd; // Mean solar tropical year is 365.24219878 days

  guess = this.epoch + 1 + 365.24219878 * ((date.year || 0) - 2);
  adr = {
    year: (date.year || 0) - 1,
    equinox: 0
  };

  while (adr.year < date.year) {
    adr = this._getYear(guess);
    guess = adr.equinox + (365.24219878 + 2);
  }

  jd = Math.floor(adr.equinox) + ((date.month || 0) <= 7 ? ((date.month || 1) - 1) * 31 : ((date.month || 1) - 1) * 30 + 6) + ((date.day || 1) - 1 + 0.5); // add 0.5 so that we convert JDs, which start at noon to RDs which start at midnight

  jd += ((date.hour || 0) * 3600000 + (date.minute || 0) * 60000 + (date.second || 0) * 1000 + (date.millisecond || 0)) / 86400000;
  this.rd = jd - this.epoch;
};
/**
 * Return the rd number of the particular day of the week on or before the
 * given rd. eg. The Sunday on or before the given rd.
 * @private
 * @param {number} rd the rata die date of the reference date
 * @param {number} dayOfWeek the day of the week that is being sought relative
 * to the current date
 * @return {number} the rd of the day of the week
 */


PersRataDie.prototype._onOrBefore = function (rd, dayOfWeek) {
  return rd - MathUtils.mod(Math.floor(rd) - dayOfWeek - 3, 7);
};

module.exports = PersRataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/PersianAlgoCal.js":
/*!*************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/PersianAlgoCal.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * persian.js - Represent a Persian algorithmic calendar object.
 * 
 * Copyright © 2014-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js MathUtils.js */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");
/**
 * @class
 * Construct a new Persian algorithmic calendar object. This class encodes information about
 * a Persian algorithmic calendar.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var PersianAlgoCal = function PersianAlgoCal(options) {
  this.type = "persian-algo";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/**
 * @private
 * @const
 * @type Array.<number> 
 * the lengths of each month 
 */


PersianAlgoCal.monthLengths = [31, // Farvardin
31, // Ordibehesht
31, // Khordad
31, // Tir
31, // Mordad
31, // Shahrivar
30, // Mehr
30, // Aban
30, // Azar
30, // Dey
30, // Bahman
29 // Esfand
];
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for some luni-solar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=first month, 2=second month, etc.
 * 
 * @param {number} year a year for which the number of months is sought
 * @return {number} The number of months in the given year
 */

PersianAlgoCal.prototype.getNumMonths = function (year) {
  return 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 * 
 * @param {number} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


PersianAlgoCal.prototype.getMonLength = function (month, year) {
  if (month !== 12 || !this.isLeapYear(year)) {
    return PersianAlgoCal.monthLengths[month - 1];
  } else {
    // Month 12, Esfand, has 30 days instead of 29 in leap years
    return 30;
  }
};
/**
 * Return the equivalent year in the 2820 year cycle that begins on 
 * Far 1, 474. This particular cycle obeys the cycle-of-years formula 
 * whereas the others do not specifically. This cycle can be used as
 * a proxy for other years outside of the cycle by shifting them into 
 * the cycle.   
 * @param {number} year year to find the equivalent cycle year for
 * @returns {number} the equivalent cycle year
 */


PersianAlgoCal.prototype.equivalentCycleYear = function (year) {
  var y = year - (year >= 0 ? 474 : 473);
  return MathUtils.mod(y, 2820) + 474;
};
/**
 * Return true if the given year is a leap year in the Persian calendar.
 * The year parameter may be given as a number, or as a PersAlgoDate object.
 * @param {number} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */


PersianAlgoCal.prototype.isLeapYear = function (year) {
  return MathUtils.mod((this.equivalentCycleYear(year) + 38) * 682, 2816) < 682;
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


PersianAlgoCal.prototype.getType = function () {
  return this.type;
};
/* register this calendar for the factory method */


Calendar._constructors["persian-algo"] = PersianAlgoCal;
module.exports = PersianAlgoCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/PersianAlgoDate.js":
/*!**************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/PersianAlgoDate.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * PersianAlgoDate.js - Represent a date in the Persian algorithmic calendar
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
Locale.js
LocaleInfo.js
TimeZone.js
IDate.js
PersianAlgoCal.js 
SearchUtils.js
MathUtils.js
PersAlgoRataDie.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var SearchUtils = __webpack_require__(/*! ./SearchUtils.js */ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var PersianAlgoCal = __webpack_require__(/*! ./PersianAlgoCal.js */ "./node_modules/@enact/i18n/ilib/lib/PersianAlgoCal.js");

var PersAlgoRataDie = __webpack_require__(/*! ./PersAlgoRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/PersAlgoRataDie.js");
/**
 * @class
 * 
 * Construct a new Persian date object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>timezone</i> - the TimeZone instance or time zone name as a string 
 * of this persian date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * 
 * <li><i>locale</i> - locale for this persian date. If the time zone is not 
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that 
 * represents the locale.
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Persian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above 
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date 
 * components are 
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the 
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich 
 * Mean Time").<p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Persian date
 */


var PersianAlgoDate = function PersianAlgoDate(params) {
  this.cal = new PersianAlgoCal();
  params = params || {};

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }

  if (!this.rd) {
    this.rd = this.newRd(params);

    this._calcDateComponents();
  }
};

PersianAlgoDate.prototype = new IDate({
  noinstance: true
});
PersianAlgoDate.prototype.parent = IDate;
PersianAlgoDate.prototype.constructor = PersianAlgoDate;
/**
 * Initialize this date
 * @private
 */

PersianAlgoDate.prototype._init = function (params) {
  if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond) {
    /**
     * Year in the Persian calendar.
     * @type number
     */
    this.year = parseInt(params.year, 10) || 0;
    /**
     * The month number, ranging from 1 to 12
     * @type number
     */

    this.month = parseInt(params.month, 10) || 1;
    /**
     * The day of the month. This ranges from 1 to 31.
     * @type number
     */

    this.day = parseInt(params.day, 10) || 1;
    /**
     * The hour of the day. This can be a number from 0 to 23, as times are
     * stored unambiguously in the 24-hour clock.
     * @type number
     */

    this.hour = parseInt(params.hour, 10) || 0;
    /**
     * The minute of the hours. Ranges from 0 to 59.
     * @type number
     */

    this.minute = parseInt(params.minute, 10) || 0;
    /**
     * The second of the minute. Ranges from 0 to 59.
     * @type number
     */

    this.second = parseInt(params.second, 10) || 0;
    /**
     * The millisecond of the second. Ranges from 0 to 999.
     * @type number
     */

    this.millisecond = parseInt(params.millisecond, 10) || 0;
    /**
     * The day of the year. Ranges from 1 to 366.
     * @type number
     */

    this.dayOfYear = parseInt(params.dayOfYear, 10);

    if (typeof params.dst === 'boolean') {
      this.dst = params.dst;
    }

    this.rd = this.newRd(this);
    new TimeZone({
      id: this.timezone,
      sync: params.sync,
      loadParams: params.loadParams,
      onLoad: ilib.bind(this, function (tz) {
        this.tz = tz; // add the time zone offset to the rd to convert to UTC
        // getOffsetMillis requires that this.year, this.rd, and this.dst 
        // are set in order to figure out which time zone rules apply and 
        // what the offset is at that point in the year

        this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

        if (this.offset !== 0) {
          this.rd = this.newRd({
            rd: this.rd.getRataDie() - this.offset
          });
        }

        this._init2(params);
      })
    });
  } else {
    this._init2(params);
  }
};
/**
 * @private
 * Finish initializing this date object
 */


PersianAlgoDate.prototype._init2 = function (params) {
  if (!this.rd) {
    this.rd = this.newRd(params);

    this._calcDateComponents();
  }

  if (typeof params.onLoad === "function") {
    params.onLoad(this);
  }
};
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */


PersianAlgoDate.prototype.newRd = function (params) {
  return new PersAlgoRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from 
 * @returns {number} the year for the RD
 */


PersianAlgoDate.prototype._calcYear = function (rd) {
  var shiftedRd = rd - 173126;
  var numberOfCycles = Math.floor(shiftedRd / 1029983);
  var shiftedDayInCycle = MathUtils.mod(shiftedRd, 1029983);
  var yearInCycle = shiftedDayInCycle === 1029982 ? 2820 : Math.floor((2816 * shiftedDayInCycle + 1031337) / 1028522);
  var year = 474 + 2820 * numberOfCycles + yearInCycle;
  return year > 0 ? year : year - 1;
};
/**
 * @private
 * Calculate date components for the given RD date.
 */


PersianAlgoDate.prototype._calcDateComponents = function () {
  var remainder,
      rd = this.rd.getRataDie();
  this.year = this._calcYear(rd);

  if (typeof this.offset === "undefined") {
    // now offset the RD by the time zone, then recalculate in case we were 
    // near the year boundary
    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    rd += this.offset;
    this.year = this._calcYear(rd);
  } //console.log("PersAlgoDate.calcComponent: calculating for rd " + rd);
  //console.log("PersAlgoDate.calcComponent: year is " + ret.year);


  var yearStart = this.newRd({
    year: this.year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  remainder = rd - yearStart.getRataDie() + 1;
  this.dayOfYear = remainder; //console.log("PersAlgoDate.calcComponent: remainder is " + remainder);

  this.month = SearchUtils.bsearch(remainder, PersAlgoRataDie.cumMonthLengths);
  remainder -= PersAlgoRataDie.cumMonthLengths[this.month - 1]; //console.log("PersAlgoDate.calcComponent: month is " + this.month + " and remainder is " + remainder);

  this.day = Math.floor(remainder);
  remainder -= this.day; //console.log("PersAlgoDate.calcComponent: day is " + this.day + " and remainder is " + remainder);
  // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000;
  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = remainder;
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 * 
 * @return {number} the day of the week
 */


PersianAlgoDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.getRataDie());
  return MathUtils.mod(rd - 3, 7);
};
/**
 * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to 
 * 365, regardless of months or weeks, etc. That is, Farvardin 1st is day 1, and 
 * December 31st is 365 in regular years, or 366 in leap years.
 * @return {number} the ordinal day of the year
 */


PersianAlgoDate.prototype.getDayOfYear = function () {
  return PersAlgoRataDie.cumMonthLengths[this.month - 1] + this.day;
};
/**
 * Return the era for this date as a number. The value for the era for Persian 
 * calendars is -1 for "before the persian era" (BP) and 1 for "the persian era" (anno 
 * persico or AP). 
 * BP dates are any date before Farvardin 1, 1 AP. In the proleptic Persian calendar, 
 * there is a year 0, so any years that are negative or zero are BP.
 * @return {number} 1 if this date is in the common era, -1 if it is before the 
 * common era 
 */


PersianAlgoDate.prototype.getEra = function () {
  return this.year < 1 ? -1 : 1;
};
/**
 * Return the name of the calendar that governs this date.
 * 
 * @return {string} a string giving the name of the calendar
 */


PersianAlgoDate.prototype.getCalendar = function () {
  return "persian-algo";
}; // register with the factory method


IDate._constructors["persian-algo"] = PersianAlgoDate;
module.exports = PersianAlgoDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/PersianCal.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/PersianCal.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * persianastro.js - Represent a Persian astronomical (Hijjri) calendar object.
 * 
 * Copyright © 2014-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
Calendar.js 
PersRataDie.js 
ilib.js
MathUtils.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var PersRataDie = __webpack_require__(/*! ./PersRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/PersRataDie.js");
/**
 * @class
 * Construct a new Persian astronomical (Hijjri) calendar object. This class encodes 
 * information about a Persian calendar. This class differs from the 
 * Persian calendar in that the leap years are calculated based on the
 * astronomical observations of the sun in Teheran, instead of calculating
 * the leap years based on a regular cyclical rhythm algorithm.<p>
 * 
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var PersianCal = function PersianCal(options) {
  this.type = "persian";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};
/**
 * @private
 * @const
 * @type Array.<number> 
 * the lengths of each month 
 */


PersianCal.monthLengths = [31, // Farvardin
31, // Ordibehesht
31, // Khordad
31, // Tir
31, // Mordad
31, // Shahrivar
30, // Mehr
30, // Aban
30, // Azar
30, // Dey
30, // Bahman
29 // Esfand
];
/**
 * Return the number of months in the given year. The number of months in a year varies
 * for some luni-solar calendars because in some years, an extra month is needed to extend the 
 * days in a year to an entire solar year. The month is represented as a 1-based number
 * where 1=first month, 2=second month, etc.
 * 
 * @param {number} year a year for which the number of months is sought
 * @return {number} The number of months in the given year
 */

PersianCal.prototype.getNumMonths = function (year) {
  return 12;
};
/**
 * Return the number of days in a particular month in a particular year. This function
 * can return a different number for a month depending on the year because of things
 * like leap years.
 * 
 * @param {number} month the month for which the length is sought
 * @param {number} year the year within which that month can be found
 * @return {number} the number of days within the given month in the given year
 */


PersianCal.prototype.getMonLength = function (month, year) {
  if (month !== 12 || !this.isLeapYear(year)) {
    return PersianCal.monthLengths[month - 1];
  } else {
    // Month 12, Esfand, has 30 days instead of 29 in leap years
    return 30;
  }
};
/**
 * Return true if the given year is a leap year in the Persian astronomical calendar.
 * @param {number} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */


PersianCal.prototype.isLeapYear = function (year) {
  var rdNextYear = new PersRataDie({
    cal: this,
    year: year + 1,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  var rdThisYear = new PersRataDie({
    cal: this,
    year: year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  return rdNextYear.getRataDie() - rdThisYear.getRataDie() > 365;
};
/**
 * Return the type of this calendar.
 * 
 * @return {string} the name of the type of this calendar 
 */


PersianCal.prototype.getType = function () {
  return this.type;
};
/* register this calendar for the factory method */


Calendar._constructors["persian"] = PersianCal;
module.exports = PersianCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/PersianDate.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/PersianDate.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * PersianDate.js - Represent a date in the Persian astronomical (Hijjri) calendar
 *
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends
ilib.js
Locale.js
TimeZone.js
IDate.js
PersRataDie.js
PersianCal.js
SearchUtils.js
MathUtils.js
JSUtils.js
LocaleInfo.js
Astro.js
*/
// !data astro

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var SearchUtils = __webpack_require__(/*! ./SearchUtils.js */ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var TimeZone = __webpack_require__(/*! ./TimeZone.js */ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var Astro = __webpack_require__(/*! ./Astro.js */ "./node_modules/@enact/i18n/ilib/lib/Astro.js");

var PersianCal = __webpack_require__(/*! ./PersianCal.js */ "./node_modules/@enact/i18n/ilib/lib/PersianCal.js");

var PersRataDie = __webpack_require__(/*! ./PersRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/PersRataDie.js");
/**
 * @class
 *
 * Construct a new Persian astronomical date object. The constructor parameters can
 * contain any of the following properties:
 *
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970, Gregorian
 *
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 *
 * <li><i>year</i> - any integer, including 0
 *
 * <li><i>month</i> - 1 to 12, where 1 means Farvardin, 2 means Ordibehesht, etc.
 *
 * <li><i>day</i> - 1 to 31
 *
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation
 * is always done with an unambiguous 24 hour representation
 *
 * <li><i>minute</i> - 0 to 59
 *
 * <li><i>second</i> - 0 to 59
 *
 * <li><i>millisecond</i> - 0 to 999
 *
 * <li><i>timezone</i> - the TimeZone instance or time zone name as a string
 * of this persian date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 *
 * <li><i>locale</i> - locale for this persian date. If the time zone is not
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that
 * represents the locale.
 *
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another Persian date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 *
 * If the constructor is called with no arguments at all or if none of the
 * properties listed above
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date
 * components are
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich
 * Mean Time").<p>
 *
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 *
 *
 * @constructor
 * @extends IDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Persian date
 */


var PersianDate = function PersianDate(params) {
  this.cal = new PersianCal();
  params = params || {};

  if (params.timezone) {
    this.timezone = params.timezone;
  }

  if (params.locale) {
    this.locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (!this.timezone) {
    if (this.locale) {
      new LocaleInfo(this.locale, {
        sync: params.sync,
        loadParams: params.loadParams,
        onLoad: ilib.bind(this, function (li) {
          this.li = li;
          this.timezone = li.getTimeZone();

          this._init(params);
        })
      });
    } else {
      this.timezone = "local";

      this._init(params);
    }
  } else {
    this._init(params);
  }
};

PersianDate.prototype = new IDate({
  noinstance: true
});
PersianDate.prototype.parent = IDate;
PersianDate.prototype.constructor = PersianDate;
/**
 * @private
 * Initialize this date object
 */

PersianDate.prototype._init = function (params) {
  Astro.initAstro(typeof params.sync === 'boolean' ? params.sync : true, params.loadParams, ilib.bind(this, function (x) {
    if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond) {
      /**
       * Year in the Persian calendar.
       * @type number
       */
      this.year = parseInt(params.year, 10) || 0;
      /**
       * The month number, ranging from 1 to 12
       * @type number
       */

      this.month = parseInt(params.month, 10) || 1;
      /**
       * The day of the month. This ranges from 1 to 31.
       * @type number
       */

      this.day = parseInt(params.day, 10) || 1;
      /**
       * The hour of the day. This can be a number from 0 to 23, as times are
       * stored unambiguously in the 24-hour clock.
       * @type number
       */

      this.hour = parseInt(params.hour, 10) || 0;
      /**
       * The minute of the hours. Ranges from 0 to 59.
       * @type number
       */

      this.minute = parseInt(params.minute, 10) || 0;
      /**
       * The second of the minute. Ranges from 0 to 59.
       * @type number
       */

      this.second = parseInt(params.second, 10) || 0;
      /**
       * The millisecond of the second. Ranges from 0 to 999.
       * @type number
       */

      this.millisecond = parseInt(params.millisecond, 10) || 0;
      /**
       * The day of the year. Ranges from 1 to 366.
       * @type number
       */

      this.dayOfYear = parseInt(params.dayOfYear, 10);

      if (typeof params.dst === 'boolean') {
        this.dst = params.dst;
      }

      this.newRd(JSUtils.merge(params, {
        callback: ilib.bind(this, function (rd) {
          this.rd = rd;
          new TimeZone({
            id: this.timezone,
            sync: params.sync,
            loadParams: params.loadParams,
            onLoad: ilib.bind(this, function (tz) {
              this.tz = tz; // add the time zone offset to the rd to convert to UTC
              // getOffsetMillis requires that this.year, this.rd, and this.dst
              // are set in order to figure out which time zone rules apply and
              // what the offset is at that point in the year

              this.offset = this.tz._getOffsetMillisWallTime(this) / 86400000;

              if (this.offset !== 0) {
                this.rd = this.newRd({
                  rd: this.rd.getRataDie() - this.offset
                });
              }

              this._init2(params);
            })
          });
        })
      }));
    } else {
      this._init2(params);
    }
  }));
};
/**
 * @private
 * Finish initializing this date object
 */


PersianDate.prototype._init2 = function (params) {
  if (!this.rd) {
    this.newRd(JSUtils.merge(params, {
      callback: ilib.bind(this, function (rd) {
        this.rd = rd;

        this._calcDateComponents();

        if (typeof params.onLoad === "function") {
          params.onLoad(this);
        }
      })
    }));
  } else {
    if (typeof params.onLoad === "function") {
      params.onLoad(this);
    }
  }
};
/**
 * @private
 * @const
 * @type Array.<number>
 * the cumulative lengths of each month, for a non-leap year
 */


PersianDate.cumMonthLengths = [0, // Farvardin
31, // Ordibehesht
62, // Khordad
93, // Tir
124, // Mordad
155, // Shahrivar
186, // Mehr
216, // Aban
246, // Azar
276, // Dey
306, // Bahman
336, // Esfand
366];
/**
 * Return a new RD for this date type using the given params.
 * @protected
 * @param {Object=} params the parameters used to create this rata die instance
 * @returns {RataDie} the new RD instance for the given params
 */

PersianDate.prototype.newRd = function (params) {
  return new PersRataDie(params);
};
/**
 * Return the year for the given RD
 * @protected
 * @param {number} rd RD to calculate from
 * @returns {number} the year for the RD
 */


PersianDate.prototype._calcYear = function (rd) {
  var julianday = rd + this.rd.epoch;
  return this.rd._getYear(julianday).year;
};
/**
 * @private
 * Calculate date components for the given RD date.
 */


PersianDate.prototype._calcDateComponents = function () {
  var remainder,
      rd = this.rd.getRataDie();
  this.year = this._calcYear(rd);

  if (typeof this.offset === "undefined") {
    // now offset the RD by the time zone, then recalculate in case we were
    // near the year boundary
    if (!this.tz) {
      this.tz = new TimeZone({
        id: this.timezone
      });
    }

    this.offset = this.tz.getOffsetMillis(this) / 86400000;
  }

  if (this.offset !== 0) {
    rd += this.offset;
    this.year = this._calcYear(rd);
  } //console.log("PersDate.calcComponent: calculating for rd " + rd);
  //console.log("PersDate.calcComponent: year is " + ret.year);


  var yearStart = this.newRd({
    year: this.year,
    month: 1,
    day: 1,
    hour: 0,
    minute: 0,
    second: 0,
    millisecond: 0
  });
  remainder = rd - yearStart.getRataDie() + 1;
  this.dayOfYear = remainder; //console.log("PersDate.calcComponent: remainder is " + remainder);

  this.month = SearchUtils.bsearch(Math.floor(remainder), PersianDate.cumMonthLengths);
  remainder -= PersianDate.cumMonthLengths[this.month - 1]; //console.log("PersDate.calcComponent: month is " + this.month + " and remainder is " + remainder);

  this.day = Math.floor(remainder);
  remainder -= this.day; //console.log("PersDate.calcComponent: day is " + this.day + " and remainder is " + remainder);
  // now convert to milliseconds for the rest of the calculation

  remainder = Math.round(remainder * 86400000);
  this.hour = Math.floor(remainder / 3600000);
  remainder -= this.hour * 3600000;
  this.minute = Math.floor(remainder / 60000);
  remainder -= this.minute * 60000;
  this.second = Math.floor(remainder / 1000);
  remainder -= this.second * 1000;
  this.millisecond = remainder;
};
/**
 * Return the day of the week of this date. The day of the week is encoded
 * as number from 0 to 6, with 0=Sunday, 1=Monday, etc., until 6=Saturday.
 *
 * @return {number} the day of the week
 */


PersianDate.prototype.getDayOfWeek = function () {
  var rd = Math.floor(this.getRataDie());
  return MathUtils.mod(rd - 3, 7);
};
/**
 * Return the ordinal day of the year. Days are counted from 1 and proceed linearly up to
 * 365, regardless of months or weeks, etc. That is, Farvardin 1st is day 1, and
 * December 31st is 365 in regular years, or 366 in leap years.
 * @return {number} the ordinal day of the year
 */


PersianDate.prototype.getDayOfYear = function () {
  return PersianDate.cumMonthLengths[this.month - 1] + this.day;
};
/**
 * Return the era for this date as a number. The value for the era for Persian
 * calendars is -1 for "before the persian era" (BP) and 1 for "the persian era" (anno
 * persico or AP).
 * BP dates are any date before Farvardin 1, 1 AP. In the proleptic Persian calendar,
 * there is a year 0, so any years that are negative or zero are BP.
 * @return {number} 1 if this date is in the common era, -1 if it is before the
 * common era
 */


PersianDate.prototype.getEra = function () {
  return this.year < 1 ? -1 : 1;
};
/**
 * Return the name of the calendar that governs this date.
 *
 * @return {string} a string giving the name of the calendar
 */


PersianDate.prototype.getCalendar = function () {
  return "persian";
}; // register with the factory method


IDate._constructors["persian"] = PersianDate;
module.exports = PersianDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/RataDie.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/RataDie.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * ratadie.js - Represent the RD date number in the calendar
 * 
 * Copyright © 2014-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
JulianDay.js
MathUtils.js
JSUtils.js
*/


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var JulianDay = __webpack_require__(/*! ./JulianDay.js */ "./node_modules/@enact/i18n/ilib/lib/JulianDay.js");
/**
 * @class
 * Construct a new RD date number object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>cycle</i> - any integer giving the number of 60-year cycle in which the date is located.
 * If the cycle is not given but the year is, it is assumed that the year parameter is a fictitious 
 * linear count of years since the beginning of the epoch, much like other calendars. This linear
 * count is never used. If both the cycle and year are given, the year is wrapped to the range 0 
 * to 60 and treated as if it were a year in the regular 60-year cycle.
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>parts</i> - 0 to 1079. Specify the halaqim parts of an hour. Either specify 
 * the parts or specify the minutes, seconds, and milliseconds, but not both. This is only used
 * in the Hebrew calendar. 
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.
 * </ul>
 *
 * If the constructor is called with another date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above are present, then the RD is calculate based on 
 * the current date at the time of instantiation. <p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @private
 * @constructor
 * @param {Object=} params parameters that govern the settings and behaviour of this RD date
 */


var RataDie = function RataDie(params) {
  if (params) {
    if (typeof params.date !== 'undefined') {
      // accept JS Date classes or strings
      var date = params.date;

      if (!JSUtils.isDate(date)) {
        date = new Date(date); // maybe a string initializer?
      }

      this._setTime(date.getTime());
    } else if (typeof params.unixtime !== 'undefined') {
      this._setTime(parseInt(params.unixtime, 10));
    } else if (typeof params.julianday !== 'undefined') {
      // JD time is defined to be UTC
      this._setJulianDay(parseFloat(params.julianday));
    } else if (params.year || params.month || params.day || params.hour || params.minute || params.second || params.millisecond || params.parts || params.cycle) {
      this._setDateComponents(params);
    } else if (typeof params.rd !== 'undefined') {
      /**
       * @type {number} the Rata Die number of this date for this calendar type
       */
      this.rd = _typeof(params.rd) === 'object' && params.rd instanceof RataDie ? params.rd.rd : params.rd;
    }
  }

  if (typeof this.rd === 'undefined' || isNaN(this.rd)) {
    var now = new Date();

    this._setTime(now.getTime());
  }
};
/**
 * @private
 * @const
 * @type {number}
 */


RataDie.gregorianEpoch = 1721424.5;
RataDie.prototype = {
  /**
   * @protected
   * @type {number}
   * the difference between a zero Julian day and the zero Gregorian date. 
   */
  epoch: RataDie.gregorianEpoch,

  /**
   * Set the RD of this instance according to the given unix time. Unix time is
   * the number of milliseconds since midnight on Jan 1, 1970.
   *
   * @protected
   * @param {number} millis the unix time to set this date to in milliseconds 
   */
  _setTime: function _setTime(millis) {
    // 2440587.5 is the julian day of midnight Jan 1, 1970, UTC (Gregorian)
    this._setJulianDay(2440587.5 + millis / 86400000);
  },

  /**
   * Set the date of this instance using a Julian Day.
   * @protected
   * @param {number} date the Julian Day to use to set this date
   */
  _setJulianDay: function _setJulianDay(date) {
    var jd = typeof date === 'number' ? new JulianDay(date) : date; // round to the nearest millisecond

    this.rd = MathUtils.halfup((jd.getDate() - this.epoch) * 86400000) / 86400000;
  },

  /**
   * Return the rd number of the particular day of the week on or before the 
   * given rd. eg. The Sunday on or before the given rd.
   * @protected
   * @param {number} rd the rata die date of the reference date
   * @param {number} dayOfWeek the day of the week that is being sought relative 
   * to the current date
   * @return {number} the rd of the day of the week
   */
  _onOrBefore: function _onOrBefore(rd, dayOfWeek) {
    return rd - MathUtils.mod(Math.floor(rd) - dayOfWeek - 2, 7);
  },

  /**
   * Return the rd number of the particular day of the week on or before the current rd.
   * eg. The Sunday on or before the current rd. If the offset is given, the calculation
   * happens in wall time instead of UTC. UTC time may be a day before or day behind 
   * wall time, so it it would give the wrong day of the week if this calculation was
   * done in UTC time when the caller really wanted wall time. Even though the calculation
   * may be done in wall time, the return value is nonetheless always given in UTC.
   * @param {number} dayOfWeek the day of the week that is being sought relative 
   * to the current date
   * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is
   * not given
   * @return {number} the rd of the day of the week
   */
  onOrBefore: function onOrBefore(dayOfWeek, offset) {
    offset = offset || 0;
    return this._onOrBefore(this.rd + offset, dayOfWeek) - offset;
  },

  /**
   * Return the rd number of the particular day of the week on or before the current rd.
   * eg. The Sunday on or before the current rd. If the offset is given, the calculation
   * happens in wall time instead of UTC. UTC time may be a day before or day behind 
   * wall time, so it it would give the wrong day of the week if this calculation was
   * done in UTC time when the caller really wanted wall time. Even though the calculation
   * may be done in wall time, the return value is nonetheless always given in UTC.
   * @param {number} dayOfWeek the day of the week that is being sought relative 
   * to the reference date
   * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is
   * not given
   * @return {number} the day of the week
   */
  onOrAfter: function onOrAfter(dayOfWeek, offset) {
    offset = offset || 0;
    return this._onOrBefore(this.rd + 6 + offset, dayOfWeek) - offset;
  },

  /**
   * Return the rd number of the particular day of the week before the current rd.
   * eg. The Sunday before the current rd. If the offset is given, the calculation
   * happens in wall time instead of UTC. UTC time may be a day before or day behind 
   * wall time, so it it would give the wrong day of the week if this calculation was
   * done in UTC time when the caller really wanted wall time. Even though the calculation
   * may be done in wall time, the return value is nonetheless always given in UTC.
   * @param {number} dayOfWeek the day of the week that is being sought relative 
   * to the reference date
   * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is
   * not given
   * @return {number} the day of the week
   */
  before: function before(dayOfWeek, offset) {
    offset = offset || 0;
    return this._onOrBefore(this.rd - 1 + offset, dayOfWeek) - offset;
  },

  /**
   * Return the rd number of the particular day of the week after the current rd.
   * eg. The Sunday after the current rd. If the offset is given, the calculation
   * happens in wall time instead of UTC. UTC time may be a day before or day behind 
   * wall time, so it it would give the wrong day of the week if this calculation was
   * done in UTC time when the caller really wanted wall time. Even though the calculation
   * may be done in wall time, the return value is nonetheless always given in UTC.
   * @param {number} dayOfWeek the day of the week that is being sought relative 
   * to the reference date
   * @param {number=} offset RD offset for the time zone. Zero is assumed if this param is
   * not given
   * @return {number} the day of the week
   */
  after: function after(dayOfWeek, offset) {
    offset = offset || 0;
    return this._onOrBefore(this.rd + 7 + offset, dayOfWeek) - offset;
  },

  /**
   * Return the unix time equivalent to this Gregorian date instance. Unix time is
   * the number of milliseconds since midnight on Jan 1, 1970 UTC. This method only
   * returns a valid number for dates between midnight, Jan 1, 1970 and  
   * Jan 19, 2038 at 3:14:07am when the unix time runs out. If this instance 
   * encodes a date outside of that range, this method will return -1.
   * 
   * @return {number} a number giving the unix time, or -1 if the date is outside the
   * valid unix time range
   */
  getTime: function getTime() {
    // earlier than Jan 1, 1970
    // or later than Jan 19, 2038 at 3:14:07am
    var jd = this.getJulianDay();

    if (jd < 2440587.5 || jd > 2465442.634803241) {
      return -1;
    } // avoid the rounding errors in the floating point math by only using
    // the whole days from the rd, and then calculating the milliseconds directly


    return Math.round((jd - 2440587.5) * 86400000);
  },

  /**
   * Return the extended unix time equivalent to this Gregorian date instance. Unix time is
   * the number of milliseconds since midnight on Jan 1, 1970 UTC. Traditionally unix time
   * (or the type "time_t" in C/C++) is only encoded with a unsigned 32 bit integer, and thus 
   * runs out on Jan 19, 2038. However, most Javascript engines encode numbers well above 
   * 32 bits and the Date object allows you to encode up to 100 million days worth of time 
   * after Jan 1, 1970, and even more interestingly 100 million days worth of time before
   * Jan 1, 1970 as well. This method returns the number of milliseconds in that extended 
   * range. If this instance encodes a date outside of that range, this method will return
   * NaN.
   * 
   * @return {number} a number giving the extended unix time, or NaN if the date is outside 
   * the valid extended unix time range
   */
  getTimeExtended: function getTimeExtended() {
    var jd = this.getJulianDay(); // test if earlier than Jan 1, 1970 - 100 million days
    // or later than Jan 1, 1970 + 100 million days

    if (jd < -97559412.5 || jd > 102440587.5) {
      return NaN;
    } // avoid the rounding errors in the floating point math by only using
    // the whole days from the rd, and then calculating the milliseconds directly


    return Math.round((jd - 2440587.5) * 86400000);
  },

  /**
   * Return the Julian Day equivalent to this calendar date as a number.
   * This returns the julian day in UTC.
   * 
   * @return {number} the julian date equivalent of this date
   */
  getJulianDay: function getJulianDay() {
    return this.rd + this.epoch;
  },

  /**
   * Return the Rata Die (fixed day) number of this RD date.
   * 
   * @return {number} the rd date as a number
   */
  getRataDie: function getRataDie() {
    return this.rd;
  }
};
module.exports = RataDie;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/ResBundle.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/ResBundle.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * ResBundle.js - Resource bundle definition
 * 
 * Copyright © 2012-2016, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js Locale.js LocaleInfo.js IString.js Utils.js JSUtils.js
// !data pseudomap

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var IString = __webpack_require__(/*! ./IString.js */ "./node_modules/@enact/i18n/ilib/lib/IString.js");
/**
 * @class
 * Create a new resource bundle instance. The resource bundle loads strings
 * appropriate for a particular locale and provides them via the getString 
 * method.<p>
 * 
 * The options object may contain any (or none) of the following properties:
 * 
 * <ul>
 * <li><i>locale</i> - The locale of the strings to load. If not specified, the default
 * locale is the the default for the web page or app in which the bundle is 
 * being loaded.
 * 
 * <li><i>name</i> - Base name of the resource bundle to load. If not specified the default
 * base name is "resources".
 * 
 * <li><i>type</i> - Name the type of strings this bundle contains. Valid values are 
 * "xml", "html", "text", "c", or "raw". The default is "text". If the type is "xml" or "html",
 * then XML/HTML entities and tags are not pseudo-translated. During a real translation, 
 * HTML character entities are translated to their corresponding characters in a source
 * string before looking that string up in the translations. Also, the characters "<", ">",
 * and "&" are converted to entities again in the output, but characters are left as they
 * are. If the type is "xml", "html", or "text" types, then the replacement parameter names
 * are not pseudo-translated as well so that the output can be used for formatting with 
 * the IString class. If the type is "c" then all C language style printf replacement
 * parameters (eg. "%s" and "%d") are skipped automatically. If the type is raw, all characters 
 * are pseudo-translated, including replacement parameters as well as XML/HTML tags and entities.
 * 
 * <li><i>lengthen</i> - when pseudo-translating the string, tell whether or not to 
 * automatically lengthen the string to simulate "long" languages such as German
 * or French. This is a boolean value. Default is false.
 * 
 * <li><i>missing</i> - what to do when a resource is missing. The choices are:
 * <ul>
 *   <li><i>source</i> - return the source string unchanged
 *   <li><i>pseudo</i> - return the pseudo-translated source string, translated to the
 *   script of the locale if the mapping is available, or just the default Latin 
 *   pseudo-translation if not
 *   <li><i>empty</i> - return the empty string 
 * </ul>
 * The default behaviour is the same as before, which is to return the source string
 * unchanged.
 * 
 * <li><i>onLoad</i> - a callback function to call when the resources are fully 
 * loaded. When the onLoad option is given, this class will attempt to
 * load any missing locale data using the ilib loader callback.
 * When the constructor is done (even if the data is already preassembled), the 
 * onLoad function is called with the current instance as a parameter, so this
 * callback can be used with preassembled or dynamic loading or a mix of the two. 
 * 
 * <li>sync - tell whether to load any missing locale data synchronously or 
 * asynchronously. If this option is given as "false", then the "onLoad"
 * callback must be given, as the instance returned from this constructor will
 * not be usable for a while. 
 *
 * <li><i>loadParams</i> - an object containing parameters to pass to the 
 * loader callback function when locale data is missing. The parameters are not
 * interpretted or modified in any way. They are simply passed along. The object 
 * may contain any property/value pairs as long as the calling code is in
 * agreement with the loader callback function as to what those parameters mean.
 * </ul>
 * 
 * The locale option may be given as a locale spec string or as an 
 * Locale object. If the locale option is not specified, then strings for
 * the default locale will be loaded.<p> 
 * 
 * The name option can be used to put groups of strings together in a
 * single bundle. The strings will then appear together in a JS object in
 * a JS file that can be included before the ilib.<p>
 * 
 * A resource bundle with a particular name is actually a set of bundles
 * that are each specific to a language, a language plus a region, etc. 
 * All bundles with the same base name should
 * contain the same set of source strings, but with different translations for 
 * the given locale. The user of the bundle does not need to be aware of 
 * the locale of the bundle, as long as it contains values for the strings 
 * it needs.<p>
 * 
 * Strings in bundles for a particular locale are inherited from parent bundles
 * that are more generic. In general, the hierarchy is as follows (from 
 * least locale-specific to most locale-specific):
 * 
 * <ol>
 * <li> language
 * <li> region
 * <li> language_script
 * <li> language_region
 * <li> region_variant
 * <li> language_script_region
 * <li> language_region_variant
 * <li> language_script_region_variant
 * </ol>
 * 
 * That is, if the translation for a string does not exist in the current
 * locale, the more-generic parent locale is searched for the string. In the
 * worst case scenario, the string is not found in the base locale's strings. 
 * In this case, the missing option guides this class on what to do. If
 * the missing option is "source", then the original source is returned as 
 * the translation. If it is "empty", the empty string is returned. If it
 * is "pseudo", then the pseudo-translated string that is appropriate for
 * the default script of the locale is returned.<p> 
 * 
 * This allows developers to create code with new or changed strings in it and check in that
 * code without waiting for the translations to be done first. The translated
 * version of the app or web site will still function properly, but will show 
 * a spurious untranslated string here and there until the translations are 
 * done and also checked in.<p>   
 *  
 * The base is whatever language your developers use to code in. For
 * a German web site, strings in the source code may be written in German 
 * for example. Often this base is English, as many web sites are coded in
 * English, but that is not required.<p>
 * 
 * The strings can be extracted with the ilib localization tool (which will be
 * shipped at some future time.) Once the strings
 * have been translated, the set of translated files can be generated with the
 * same tool. The output from the tool can be used as input to the ResBundle
 * object. It is up to the web page or app to make sure the JS file that defines
 * the bundle is included before creating the ResBundle instance.<p>
 * 
 * A special locale "zxx-XX" is used as the pseudo-translation locale because
 * zxx means "no linguistic information" in the ISO 639 standard, and the region 
 * code XX is defined to be user-defined in the ISO 3166 standard. 
 * Pseudo-translation is a locale where the translations are generated on
 * the fly based on the contents of the source string. Characters in the source 
 * string are replaced with other characters and returned. 
 * 
 * Example. If the source string is:
 * 
 * <pre>
 * "This is a string"
 * </pre>
 * 
 * then the pseudo-translated version might look something like this: 
 * 
 * <pre>
 * "Ţħïş ïş á şţřïñĝ"
 * </pre>
 * <p>
 * 
 * Pseudo-translation can be used to test that your app or web site is translatable
 * before an actual translation has happened. These bugs can then be fixed 
 * before the translation starts, avoiding an explosion of bugs later when
 * each language's tester registers the same bug complaining that the same 
 * string is not translated. When pseudo-localizing with
 * the Latin script, this allows the strings to be readable in the UI in the 
 * source language (if somewhat funky-looking), 
 * so that a tester can easily verify that the string is properly externalized 
 * and loaded from a resource bundle without the need to be able to read a
 * foreign language.<p> 
 * 
 * If one of a list of script tags is given in the pseudo-locale specifier, then the
 * pseudo-localization can map characters to very rough transliterations of
 * characters in the given script. For example, zxx-Hebr-XX maps strings to
 * Hebrew characters, which can be used to test your UI in a right-to-left
 * language to catch bidi bugs before a translation is done. Currently, the
 * list of target scripts includes Hebrew (Hebr), Chinese Simplified Han (Hans),
 * and Cyrillic (Cyrl) with more to be added later. If no script is explicitly
 * specified in the locale spec, or if the script is not supported,
 * then the default mapping maps Latin base characters to accented versions of
 * those Latin characters as in the example above.
 *  
 * When the "lengthen" property is set to true in the options, the 
 * pseudotranslation code will add digits to the end of the string to simulate
 * the lengthening that occurs when translating to other languages. The above 
 * example will come out like this:
 * 
 * <pre>
 * "Ţħïş ïş á şţřïñĝ76543210"
 * </pre>
 * 
 * The string is lengthened according to the length of the source string. If
 * the source string is less than 20 characters long, the string is lengthened 
 * by 50%. If the source string is 20-40 
 * characters long, the string is lengthened by 33%. If te string is greater
 * than 40 characters long, the string is lengthened by 20%.<p>
 * 
 * The pseudotranslation always ends a string with the digit "0". If you do
 * not see the digit "0" in the UI for your app, you know that truncation
 * has occurred, and the number you see at the end of the string tells you 
 * how many characters were truncated.<p>
 * 
 * 
 * @constructor
 * @param {?Object} options Options controlling how the bundle is created
 */


var ResBundle = function ResBundle(options) {
  var lookupLocale, spec;
  this.locale = new Locale(); // use the default locale

  this.baseName = "strings";
  this.type = "text";
  this.loadParams = {};
  this.missing = "source";
  this.sync = true;

  if (options) {
    if (options.locale) {
      this.locale = typeof options.locale === 'string' ? new Locale(options.locale) : options.locale;
    }

    if (options.name) {
      this.baseName = options.name;
    }

    if (options.type) {
      this.type = options.type;
    }

    this.lengthen = options.lengthen || false;

    if (typeof options.sync !== 'undefined') {
      this.sync = options.sync == true;
    }

    if (typeof options.loadParams !== 'undefined') {
      this.loadParams = options.loadParams;
    }

    if (typeof options.missing !== 'undefined') {
      if (options.missing === "pseudo" || options.missing === "empty") {
        this.missing = options.missing;
      }
    }
  } else {
    options = {
      sync: true
    };
  }

  this.map = {};

  if (!ilib.data.cache.ResBundle) {
    ilib.data.cache.ResBundle = {};
  }

  lookupLocale = this.locale.isPseudo() ? new Locale("en-US") : this.locale;
  var object = "ResBundle-" + this.baseName;
  Utils.loadData({
    object: object,
    locale: lookupLocale,
    name: this.baseName + ".json",
    sync: this.sync,
    loadParams: this.loadParams,
    callback: ilib.bind(this, function (map) {
      if (!map) {
        map = ilib.data[this.baseName] || {};
        spec = lookupLocale.getSpec().replace(/-/g, '_');
        ilib.data.cache[object][spec] = map;
      }

      this.map = map;

      if (this.locale.isPseudo()) {
        if (!ilib.data.cache.ResBundle.pseudomap) {
          ilib.data.cache.ResBundle.pseudomap = {};
        }

        this._loadPseudo(this.locale, options.onLoad);
      } else if (this.missing === "pseudo") {
        if (!ilib.data.cache.ResBundle.pseudomap) {
          ilib.data.cache.ResBundle.pseudomap = {};
        }

        new LocaleInfo(this.locale, {
          sync: this.sync,
          loadParams: this.loadParams,
          onLoad: ilib.bind(this, function (li) {
            var pseudoLocale = new Locale("zxx", "XX", undefined, li.getDefaultScript());

            this._loadPseudo(pseudoLocale, options.onLoad);
          })
        });
      } else {
        if (typeof options.onLoad === 'function') {
          options.onLoad(this);
        }
      }
    })
  }); // console.log("Merged resources " + this.locale.toString() + " are: " + JSON.stringify(this.map));
  //if (!this.locale.isPseudo() && JSUtils.isEmpty(this.map)) {
  //	console.log("Resources for bundle " + this.baseName + " locale " + this.locale.toString() + " are not available.");
  //}
};

ResBundle.defaultPseudo = ilib.data.pseudomap || {
  "a": "à",
  "e": "ë",
  "i": "í",
  "o": "õ",
  "u": "ü",
  "y": "ÿ",
  "A": "Ã",
  "E": "Ë",
  "I": "Ï",
  "O": "Ø",
  "U": "Ú",
  "Y": "Ŷ"
};
ResBundle.prototype = {
  /**
   * @protected
   */
  _loadPseudo: function _loadPseudo(pseudoLocale, onLoad) {
    Utils.loadData({
      object: "ResBundle",
      locale: pseudoLocale,
      name: "pseudomap.json",
      sync: this.sync,
      loadParams: this.loadParams,
      callback: ilib.bind(this, function (map) {
        if (!map || JSUtils.isEmpty(map)) {
          map = ResBundle.defaultPseudo;
          var spec = pseudoLocale.getSpec().replace(/-/g, '_');
          ilib.data.cache.ResBundle.pseudomap[spec] = map;
        }

        this.pseudomap = map;

        if (typeof onLoad === 'function') {
          onLoad(this);
        }
      })
    });
  },

  /**
   * Return the locale of this resource bundle.
   * @return {Locale} the locale of this resource bundle object 
   */
  getLocale: function getLocale() {
    return this.locale;
  },

  /**
   * Return the name of this resource bundle. This corresponds to the name option
   * given to the constructor.
   * @return {string} name of the the current instance
   */
  getName: function getName() {
    return this.baseName;
  },

  /**
   * Return the type of this resource bundle. This corresponds to the type option
   * given to the constructor.
   * @return {string} type of the the current instance
   */
  getType: function getType() {
    return this.type;
  },
  percentRE: new RegExp("%(\\d+\\$)?([\\-#\\+ 0,\\(])?(\\d+)?(\\.\\d+)?[bBhHsScCdoxXeEfgGaAtT%n]"),

  /**
   * @private
   * Pseudo-translate a string
   */
  _pseudo: function _pseudo(str) {
    if (!str) {
      return undefined;
    }

    var ret = "",
        i;

    for (i = 0; i < str.length; i++) {
      if (this.type !== "raw") {
        if (this.type === "html" || this.type === "xml") {
          if (str.charAt(i) === '<') {
            ret += str.charAt(i++);

            while (i < str.length && str.charAt(i) !== '>') {
              ret += str.charAt(i++);
            }
          } else if (str.charAt(i) === '&') {
            ret += str.charAt(i++);

            while (i < str.length && str.charAt(i) !== ';' && str.charAt(i) !== ' ') {
              ret += str.charAt(i++);
            }
          } else if (str.charAt(i) === '\\' && str.charAt(i + 1) === "u") {
            ret += str.substring(i, i + 6);
            i += 6;
          }
        } else if (this.type === "c") {
          if (str.charAt(i) === "%") {
            var m = this.percentRE.exec(str.substring(i));

            if (m && m.length) {
              // console.log("Match found: " + JSON.stringify(m[0].replace("%", "%%")));
              ret += m[0];
              i += m[0].length;
            }
          }
        }

        if (i < str.length) {
          if (str.charAt(i) === '{') {
            ret += str.charAt(i++);

            while (i < str.length && str.charAt(i) !== '}') {
              ret += str.charAt(i++);
            }

            if (i < str.length) {
              ret += str.charAt(i);
            }
          } else {
            ret += this.pseudomap[str.charAt(i)] || str.charAt(i);
          }
        }
      } else {
        ret += this.pseudomap[str.charAt(i)] || str.charAt(i);
      }
    }

    if (this.lengthen) {
      var add;

      if (ret.length <= 20) {
        add = Math.round(ret.length / 2);
      } else if (ret.length > 20 && ret.length <= 40) {
        add = Math.round(ret.length / 3);
      } else {
        add = Math.round(ret.length / 5);
      }

      for (i = add - 1; i >= 0; i--) {
        ret += i % 10;
      }
    }

    if (this.locale.getScript() === "Hans" || this.locale.getScript() === "Hant" || this.locale.getScript() === "Hani" || this.locale.getScript() === "Hrkt" || this.locale.getScript() === "Jpan" || this.locale.getScript() === "Hira" || this.locale.getScript() === "Kana") {
      // simulate Asian languages by getting rid of all the spaces
      ret = ret.replace(/ /g, "");
    }

    return ret;
  },

  /**
   * @private
   * Escape html characters in the output.
   */
  _escapeXml: function _escapeXml(str) {
    str = str.replace(/&/g, '&amp;');
    str = str.replace(/</g, '&lt;');
    str = str.replace(/>/g, '&gt;');
    return str;
  },

  /**
   * @private
   * @param {string} str the string to unescape
   */
  _unescapeXml: function _unescapeXml(str) {
    str = str.replace(/&amp;/g, '&');
    str = str.replace(/&lt;/g, '<');
    str = str.replace(/&gt;/g, '>');
    return str;
  },

  /**
   * @private
   * Create a key name out of a source string. All this does so far is 
   * compress sequences of white space into a single space on the assumption
   * that this doesn't really change the meaning of the string, and therefore
   * all such strings that compress to the same thing should share the same
   * translation.
   * @param {null|string=} source the source string to make a key out of
   */
  _makeKey: function _makeKey(source) {
    if (!source) return undefined;
    var key = source.replace(/\s+/gm, ' ');
    return this.type === "xml" || this.type === "html" ? this._unescapeXml(key) : key;
  },

  /**
   * @private
   */
  _getStringSingle: function _getStringSingle(source, key, escapeMode) {
    if (!source && !key) return new IString("");
    var trans;

    if (this.locale.isPseudo()) {
      var str = source ? source : this.map[key];
      trans = this._pseudo(str || key);
    } else {
      var keyName = key || this._makeKey(source);

      if (typeof this.map[keyName] !== 'undefined') {
        trans = this.map[keyName];
      } else if (this.missing === "pseudo") {
        trans = this._pseudo(source || key);
      } else if (this.missing === "empty") {
        trans = "";
      } else {
        trans = source;
      }
    }

    if (escapeMode && escapeMode !== "none") {
      if (escapeMode == "default") {
        escapeMode = this.type;
      }

      if (escapeMode === "xml" || escapeMode === "html") {
        trans = this._escapeXml(trans);
      } else if (escapeMode == "js" || escapeMode === "attribute") {
        trans = trans.replace(/'/g, "\\\'").replace(/"/g, "\\\"");
      }
    }

    if (trans === undefined) {
      return undefined;
    } else {
      var ret = new IString(trans);
      ret.setLocale(this.locale.getSpec(), true, this.loadParams); // no callback

      return ret;
    }
  },

  /**
   * Return a localized string, array, or object. This method can localize individual
   * strings or arrays of strings.<p>
   * 
   * If the source parameter is a string, the translation of that string is looked
   * up and returned. If the source parameter is an array of strings, then the translation 
   * of each of the elements of that array is looked up, and an array of translated strings
   * is returned. <p>
   * 
   * If any string is not found in the loaded set of
   * resources, the original source string is returned. If the key is not given,
   * then the source string itself is used as the key. In the case where the 
   * source string is used as the key, the whitespace is compressed down to 1 space
   * each, and the whitespace at the beginning and end of the string is trimmed.<p>
   * 
   * The escape mode specifies what type of output you are escaping the returned
   * string for. Modes are similar to the types: 
   * 
   * <ul>
   * <li>"html" -- prevents HTML injection by escaping the characters &lt &gt; and &amp;
   * <li>"xml" -- currently same as "html" mode
   * <li>"js" -- prevents breaking Javascript syntax by backslash escaping all quote and 
   * double-quote characters
   * <li>"attribute" -- meant for HTML attribute values. Currently this is the same as
   * "js" escape mode.
   * <li>"default" -- use the type parameter from the constructor as the escape mode as well
   * <li>"none" or undefined -- no escaping at all.
   * </ul>
   * 
   * The type parameter of the constructor specifies what type of strings this bundle
   * is operating upon. This allows pseudo-translation and automatic key generation
   * to happen properly by telling this class how to parse the string. The escape mode 
   * for this method is different in that it specifies how this string will be used in 
   * the calling code and therefore how to escape it properly.<p> 
   * 
   * For example, a section of Javascript code may be constructing an HTML snippet in a 
   * string to add to the web page. In this case, the type parameter in the constructor should
   * be "html" so that the source string can be parsed properly, but the escape mode should
   * be "js" so that the output string can be used in Javascript without causing syntax
   * errors.
   * 
   * @param {?string|Array.<string>=} source the source string or strings to translate
   * @param {?string|Array.<string>=} key optional name of the key, if any
   * @param {?string=} escapeMode escape mode, if any
   * @return {IString|Array.<IString>|undefined} the translation of the given source/key or undefined 
   * if the translation is not found and the source is undefined 
   */
  getString: function getString(source, key, escapeMode) {
    if (!source && !key) return new IString(""); //if (typeof(source) === "object") {
    // TODO localize objects
    //} else

    if (ilib.isArray(source)) {
      return source.map(ilib.bind(this, function (str) {
        return typeof str === "string" ? this._getStringSingle(str, key, escapeMode) : str;
      }));
    } else {
      return this._getStringSingle(source, key, escapeMode);
    }
  },

  /**
   * Return a localized string as an intrinsic Javascript String object. This does the same thing as
   * the getString() method, but it returns a regular Javascript string instead of
   * and IString instance. This means it cannot be formatted with the format()
   * method without being wrapped in an IString instance first.
   * 
   * @param {?string=} source the source string to translate
   * @param {?string=} key optional name of the key, if any
   * @param {?string=} escapeMode escape mode, if any
   * @return {string|undefined} the translation of the given source/key or undefined 
   * if the translation is not found and the source is undefined
   */
  getStringJS: function getStringJS(source, key, escapeMode) {
    if (typeof source === 'undefined' && typeof key === 'undefined') {
      return undefined;
    } //if (typeof(source) === "object") {
    // TODO localize objects
    //} else 


    if (ilib.isArray(source)) {
      return this.getString(source, key, escapeMode).map(function (str) {
        return str && str instanceof IString ? str.toString() : str;
      });
    } else {
      var s = this.getString(source, key, escapeMode);
      return s ? s.toString() : undefined;
    }
  },

  /**
   * Return true if the current bundle contains a translation for the given key and
   * source. The
   * getString method will always return a string for any given key and source 
   * combination, so it cannot be used to tell if a translation exists. Either one
   * or both of the source and key must be specified. If both are not specified,
   * this method will return false.
   * 
   * @param {?string=} source source string to look up
   * @param {?string=} key key to look up
   * @return {boolean} true if this bundle contains a translation for the key, and 
   * false otherwise
   */
  containsKey: function containsKey(source, key) {
    if (typeof source === 'undefined' && typeof key === 'undefined') {
      return false;
    }

    var keyName = key || this._makeKey(source);

    return typeof this.map[keyName] !== 'undefined';
  },

  /**
   * Return the merged resources as an entire object. When loading resources for a
   * locale that are not just a set of translated strings, but instead an entire 
   * structured javascript object, you can gain access to that object via this call. This method
   * will ensure that all the of the parts of the object are correct for the locale.<p>
   * 
   * For pre-assembled data, it starts by loading <i>ilib.data[name]</i>, where 
   * <i>name</i> is the base name for this set of resources. Then, it successively 
   * merges objects in the base data using progressively more locale-specific data. 
   * It loads it in this order from <i>ilib.data</i>:
   * 
   * <ol>
   * <li> language
   * <li> region
   * <li> language_script
   * <li> language_region
   * <li> region_variant
   * <li> language_script_region
   * <li> language_region_variant
   * <li> language_script_region_variant
   * </ol>
   * 
   * For dynamically loaded data, the code attempts to load the same sequence as
   * above, but with slash path separators instead of underscores.<p>
   *  
   * Loading the resources this way allows the program to share resources between all
   * locales that share a common language, region, or script. As a 
   * general rule-of-thumb, resources should be as generic as possible in order to
   * cover as many locales as possible.
   * 
   * @return {Object} returns the object that is the basis for this resources instance
   */
  getResObj: function getResObj() {
    return this.map;
  }
};
module.exports = ResBundle;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/ScriptInfo.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/ScriptInfo.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * ScriptInfo.js - information about scripts
 * 
 * Copyright © 2012-2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js Utils.js
// !data scripts

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");
/**
 * @class
 * Create a new script info instance. This class encodes information about
 * scripts, which are sets of characters used in a writing system.<p>
 * 
 * The options object may contain any of the following properties:
 * 
 * <ul>
 * <li><i>onLoad</i> - a callback function to call when the script info object is fully 
 * loaded. When the onLoad option is given, the script info object will attempt to
 * load any missing locale data using the ilib loader callback.
 * When the constructor is done (even if the data is already preassembled), the 
 * onLoad function is called with the current instance as a parameter, so this
 * callback can be used with preassembled or dynamic loading or a mix of the two.
 * 
 * <li><i>sync</i> - tell whether to load any missing locale data synchronously or 
 * asynchronously. If this option is given as "false", then the "onLoad"
 * callback must be given, as the instance returned from this constructor will
 * not be usable for a while. 
 *
 * <li><i>loadParams</i> - an object containing parameters to pass to the 
 * loader callback function when locale data is missing. The parameters are not
 * interpretted or modified in any way. They are simply passed along. The object 
 * may contain any property/value pairs as long as the calling code is in
 * agreement with the loader callback function as to what those parameters mean.
 * </ul>
 * 
 * 
 * @constructor
 * @param {string} script The ISO 15924 4-letter identifier for the script
 * @param {Object=} options parameters to initialize this instance 
 */


var ScriptInfo = function ScriptInfo(script, options) {
  var sync = true,
      loadParams = undefined;
  this.script = script;

  if (options) {
    if (typeof options.sync !== 'undefined') {
      sync = options.sync == true;
    }

    if (typeof options.loadParams !== 'undefined') {
      loadParams = options.loadParams;
    }
  }

  if (!ilib.data.scripts) {
    Utils.loadData({
      object: "ScriptInfo",
      locale: "-",
      name: "scripts.json",
      sync: sync,
      loadParams: loadParams,
      callback: ilib.bind(this, function (info) {
        if (!info) {
          info = {
            "Latn": {
              "nb": 215,
              "nm": "Latin",
              "lid": "Latin",
              "rtl": false,
              "ime": false,
              "casing": true
            }
          };
          var spec = this.locale.getSpec().replace(/-/g, "_");
          ilib.data.cache.ScriptInfo[spec] = info;
        }

        ilib.data.scripts = info;
        this.info = script && ilib.data.scripts[script];

        if (options && typeof options.onLoad === 'function') {
          options.onLoad(this);
        }
      })
    });
  } else {
    this.info = ilib.data.scripts[script];

    if (options && typeof options.onLoad === 'function') {
      options.onLoad(this);
    }
  }
};
/**
 * @private
 */


ScriptInfo._getScriptsArray = function () {
  var ret = [],
      script = undefined,
      scripts = ilib.data.scripts;

  for (script in scripts) {
    if (script && scripts[script]) {
      ret.push(script);
    }
  }

  return ret;
};
/**
 * Return an array of all ISO 15924 4-letter identifier script identifiers that
 * this copy of ilib knows about.
 * @static
 * @param {boolean} sync whether to find the available ids synchronously (true) or asynchronously (false)
 * @param {Object} loadParams arbitrary object full of properties to pass to the loader
 * @param {function(Array.<string>)} onLoad callback function to call when the data is finished loading
 * @return {Array.<string>} an array of all script identifiers that this copy of
 * ilib knows about
 */


ScriptInfo.getAllScripts = function (sync, loadParams, onLoad) {
  if (!ilib.data.scripts) {
    Utils.loadData({
      object: "ScriptInfo",
      locale: "-",
      name: "scripts.json",
      sync: sync,
      loadParams: loadParams,
      callback: ilib.bind(this, function (info) {
        ilib.data.scripts = info;

        if (typeof onLoad === 'function') {
          onLoad(ScriptInfo._getScriptsArray());
        }
      })
    });
  } else {
    if (typeof onLoad === 'function') {
      onLoad(ScriptInfo._getScriptsArray());
    }
  }

  return ScriptInfo._getScriptsArray();
};

ScriptInfo.prototype = {
  /**
   * Return the 4-letter ISO 15924 identifier associated
   * with this script.
   * @return {string} the 4-letter ISO code for this script
   */
  getCode: function getCode() {
    return this.info && this.script;
  },

  /**
   * Get the ISO 15924 code number associated with this
   * script.
   * 
   * @return {number} the ISO 15924 code number
   */
  getCodeNumber: function getCodeNumber() {
    return this.info && this.info.nb || 0;
  },

  /**
   * Get the name of this script in English.
   * 
   * @return {string} the name of this script in English
   */
  getName: function getName() {
    return this.info && this.info.nm;
  },

  /**
   * Get the long identifier assciated with this script.
   * 
   * @return {string} the long identifier of this script
   */
  getLongCode: function getLongCode() {
    return this.info && this.info.lid;
  },

  /**
   * Return the usual direction that text in this script is written
   * in. Possible return values are "rtl" for right-to-left,
   * "ltr" for left-to-right, and "ttb" for top-to-bottom.
   * 
   * @return {string} the usual direction that text in this script is
   * written in
   */
  getScriptDirection: function getScriptDirection() {
    return this.info && typeof this.info.rtl !== 'undefined' && this.info.rtl ? "rtl" : "ltr";
  },

  /**
   * Return true if this script typically requires an input method engine
   * to enter its characters.
   * 
   * @return {boolean} true if this script typically requires an IME
   */
  getNeedsIME: function getNeedsIME() {
    return this.info && this.info.ime ? true : false; // converts undefined to false
  },

  /**
   * Return true if this script uses lower- and upper-case characters.
   * 
   * @return {boolean} true if this script uses letter case
   */
  getCasing: function getCasing() {
    return this.info && this.info.casing ? true : false; // converts undefined to false
  }
};
module.exports = ScriptInfo;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/SearchUtils.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/SearchUtils.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * SearchUtils.js - Misc search utility routines
 * 
 * Copyright © 2013-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

var SearchUtils = {};
/**
 * Binary search a sorted array for a particular target value.
 * If the exact value is not found, it returns the index of the smallest 
 * entry that is greater than the given target value.<p> 
 * 
 * The comparator
 * parameter is a function that knows how to compare elements of the 
 * array and the target. The function should return a value greater than 0
 * if the array element is greater than the target, a value less than 0 if
 * the array element is less than the target, and 0 if the array element 
 * and the target are equivalent.<p>
 * 
 * If the comparator function is not specified, this function assumes
 * the array and the target are numeric values and should be compared 
 * as such.<p>
 * 
 * 
 * @static
 * @param {*} target element being sought 
 * @param {Array} arr the array being searched
 * @param {?function(*,*)=} comparator a comparator that is appropriate for comparing two entries
 * in the array  
 * @return the index of the array into which the value would fit if 
 * inserted, or -1 if given array is not an array or the target is not 
 * a number
 */

SearchUtils.bsearch = function (target, arr, comparator) {
  if (typeof arr === 'undefined' || !arr || typeof target === 'undefined') {
    return -1;
  }

  var high = arr.length - 1,
      low = 0,
      mid = 0,
      value,
      cmp = comparator || SearchUtils.bsearch.numbers;

  while (low <= high) {
    mid = Math.floor((high + low) / 2);
    value = cmp(arr[mid], target);

    if (value > 0) {
      high = mid - 1;
    } else if (value < 0) {
      low = mid + 1;
    } else {
      return mid;
    }
  }

  return low;
};
/**
 * Returns whether or not the given element is greater than, less than,
 * or equal to the given target.<p>
 * 
 * @private
 * @static
 * @param {number} element the element being tested
 * @param {number} target the target being sought
 */


SearchUtils.bsearch.numbers = function (element, target) {
  return element - target;
};
/**
 * Do a bisection search of a function for a particular target value.<p> 
 * 
 * The function to search is a function that takes a numeric parameter, 
 * does calculations, and returns gives a numeric result. The 
 * function should should be smooth and not have any discontinuities 
 * between the low and high values of the parameter.
 *  
 * 
 * @static
 * @param {number} target value being sought
 * @param {number} low the lower bounds to start searching
 * @param {number} high the upper bounds to start searching
 * @param {number} precision minimum precision to support. Use 0 if you want to use the default.
 * @param {?function(number)=} func function to search 
 * @return an approximation of the input value to the function that gives the desired
 * target output value, correct to within the error range of Javascript floating point 
 * arithmetic, or NaN if there was some error
 */


SearchUtils.bisectionSearch = function (target, low, high, precision, func) {
  if (typeof target !== 'number' || typeof low !== 'number' || typeof high !== 'number' || typeof func !== 'function') {
    return NaN;
  }

  var mid = 0,
      value,
      pre = precision > 0 ? precision : 1e-13;

  do {
    mid = (high + low) / 2;
    value = func(mid);

    if (value > target) {
      high = mid;
    } else if (value < target) {
      low = mid;
    }
  } while (high - low > pre);

  return mid;
};

module.exports = SearchUtils;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/ThaiSolarCal.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/ThaiSolarCal.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * thaisolar.js - Represent a Thai solar calendar object.
 *
 * Copyright © 2013-2015,2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends ilib.js Calendar.js GregorianCal.js MathUtils.js */

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var GregorianCal = __webpack_require__(/*! ./GregorianCal.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianCal.js");
/**
 * @class
 * Construct a new Thai solar calendar object. This class encodes information about
 * a Thai solar calendar.<p>
 *
 * @param {Object=} options Options governing the construction of this instance
 * @constructor
 * @extends Calendar
 */


var ThaiSolarCal = function ThaiSolarCal(options) {
  this.type = "thaisolar";

  if (options && typeof options.onLoad === "function") {
    options.onLoad(this);
  }
};

ThaiSolarCal.prototype = new GregorianCal({
  noinstance: true
});
ThaiSolarCal.prototype.parent = GregorianCal;
ThaiSolarCal.prototype.constructor = ThaiSolarCal;
/**
 * Return true if the given year is a leap year in the Thai solar calendar.
 * The year parameter may be given as a number, or as a ThaiSolarDate object.
 * @param {number|ThaiSolarDate} year the year for which the leap year information is being sought
 * @return {boolean} true if the given year is a leap year
 */

ThaiSolarCal.prototype.isLeapYear = function (year) {
  var y = typeof year === 'number' ? year : year.getYears();
  y -= 543;
  var centuries = MathUtils.mod(y, 400);
  return MathUtils.mod(y, 4) === 0 && centuries !== 100 && centuries !== 200 && centuries !== 300;
};
/* register this calendar for the factory method */


Calendar._constructors["thaisolar"] = ThaiSolarCal;
module.exports = ThaiSolarCal;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/ThaiSolarDate.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/ThaiSolarDate.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * ThaiSolarDate.js - Represent a date in the ThaiSolar calendar
 * 
 * Copyright © 2013-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* !depends 
ilib.js
IDate.js 
JSUtils.js
GregorianDate.js
ThaiSolarCal.js
*/

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var Calendar = __webpack_require__(/*! ./Calendar.js */ "./node_modules/@enact/i18n/ilib/lib/Calendar.js");

var IDate = __webpack_require__(/*! ./IDate.js */ "./node_modules/@enact/i18n/ilib/lib/IDate.js");

var ThaiSolarCal = __webpack_require__(/*! ./ThaiSolarCal.js */ "./node_modules/@enact/i18n/ilib/lib/ThaiSolarCal.js");

var GregorianDate = __webpack_require__(/*! ./GregorianDate.js */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js");

var GregRataDie = __webpack_require__(/*! ./GregRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/GregRataDie.js");
/**
 * @class
 * Construct a new Thai solar date object. The constructor parameters can 
 * contain any of the following properties:
 * 
 * <ul>
 * <li><i>unixtime<i> - sets the time of this instance according to the given 
 * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.
 * 
 * <li><i>julianday</i> - sets the time of this instance according to the given
 * Julian Day instance or the Julian Day given as a float
 * 
 * <li><i>year</i> - any integer, including 0
 * 
 * <li><i>month</i> - 1 to 12, where 1 means January, 2 means February, etc.
 * 
 * <li><i>day</i> - 1 to 31
 * 
 * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation 
 * is always done with an unambiguous 24 hour representation
 * 
 * <li><i>minute</i> - 0 to 59
 * 
 * <li><i>second</i> - 0 to 59
 * 
 * <li><i>millisecond</i> - 0 to 999
 * 
 * <li><i>timezone</i> - the TimeZone instance or time zone name as a string 
 * of this Thai solar date. The date/time is kept in the local time. The time zone
 * is used later if this date is formatted according to a different time zone and
 * the difference has to be calculated, or when the date format has a time zone
 * component in it.
 * 
 * <li><i>locale</i> - locale for this Thai solar date. If the time zone is not 
 * given, it can be inferred from this locale. For locales that span multiple
 * time zones, the one with the largest population is chosen as the one that 
 * represents the locale. 
 * </ul>
 *
 * If the constructor is called with another Thai solar date instance instead of
 * a parameter block, the other instance acts as a parameter block and its
 * settings are copied into the current instance.<p>
 * 
 * If the constructor is called with no arguments at all or if none of the 
 * properties listed above 
 * from <i>unixtime</i> through <i>millisecond</i> are present, then the date 
 * components are 
 * filled in with the current date at the time of instantiation. Note that if
 * you do not give the time zone when defaulting to the current time and the 
 * time zone for all of ilib was not set with <i>ilib.setTimeZone()</i>, then the
 * time zone will default to UTC ("Universal Time, Coordinated" or "Greenwich 
 * Mean Time").<p>
 * 
 * If any of the properties from <i>year</i> through <i>millisecond</i> are not
 * specified in the params, it is assumed that they have the smallest possible
 * value in the range for the property (zero or one).<p>
 * 
 * 
 * @constructor
 * @extends GregorianDate
 * @param {Object=} params parameters that govern the settings and behaviour of this Thai solar date
 */


var ThaiSolarDate = function ThaiSolarDate(params) {
  var p = {};

  if (params) {
    JSUtils.shallowCopy(params, p); // there is 198327 days difference between the Thai solar and
    // Gregorian epochs which is equivalent to 543 years

    if (typeof p.year !== 'undefined') {
      p.year -= 543;
    }

    if (typeof p.rd !== 'undefined') {
      p.rd -= 198327;
    }
  }

  this.rd = null; // clear these out so that the GregorianDate constructor can set it

  this.offset = undefined; //console.log("ThaiSolarDate.constructor: date is " + JSON.stringify(this) + " parent is " + JSON.stringify(this.parent) + " and parent.parent is " + JSON.stringify(this.parent.parent));

  p.onLoad = ilib.bind(this, function (gd) {
    this.cal = new ThaiSolarCal(); // make sure the year is set correctly from the original params

    if (params && typeof params.year !== 'undefined') {
      this.year = parseInt(params.year, 10);
    }

    if (params && typeof params.onLoad === "function") {
      params.onLoad(gd);
    }
  });
  GregorianDate.call(this, p);
};

ThaiSolarDate.prototype = new GregorianDate({
  noinstance: true
});
ThaiSolarDate.prototype.parent = GregorianDate.prototype;
ThaiSolarDate.prototype.constructor = ThaiSolarDate;
/**
 * the difference between a zero Julian day and the zero Thai Solar date.
 * This is some 543 years before the start of the Gregorian epoch. 
 * @private
 * @type number
 */

ThaiSolarDate.epoch = 1523097.5;
/**
 * Calculate the date components for the current time zone
 * @protected
 */

ThaiSolarDate.prototype._calcDateComponents = function () {
  // there is 198327 days difference between the Thai solar and 
  // Gregorian epochs which is equivalent to 543 years
  // console.log("ThaiSolarDate._calcDateComponents: date is " + JSON.stringify(this) + " parent is " + JSON.stringify(this.parent) + " and parent.parent is " + JSON.stringify(this.parent.parent));
  this.parent._calcDateComponents.call(this);

  this.year += 543;
};
/**
 * Return the Rata Die (fixed day) number of this date.
 * 
 * @protected
 * @return {number} the rd date as a number
 */


ThaiSolarDate.prototype.getRataDie = function () {
  // there is 198327 days difference between the Thai solar and 
  // Gregorian epochs which is equivalent to 543 years
  return this.rd.getRataDie() + 198327;
};
/**
 * Return a new Gregorian date instance that represents the first instance of the 
 * given day of the week before the current date. The day of the week is encoded
 * as a number where 0 = Sunday, 1 = Monday, etc.
 * 
 * @param {number} dow the day of the week before the current date that is being sought
 * @return {IDate} the date being sought
 */


ThaiSolarDate.prototype.before = function (dow) {
  return new ThaiSolarDate({
    rd: this.rd.before(dow, this.offset) + 198327,
    timezone: this.timezone
  });
};
/**
 * Return a new Gregorian date instance that represents the first instance of the 
 * given day of the week after the current date. The day of the week is encoded
 * as a number where 0 = Sunday, 1 = Monday, etc.
 * 
 * @param {number} dow the day of the week after the current date that is being sought
 * @return {IDate} the date being sought
 */


ThaiSolarDate.prototype.after = function (dow) {
  return new ThaiSolarDate({
    rd: this.rd.after(dow, this.offset) + 198327,
    timezone: this.timezone
  });
};
/**
 * Return a new Gregorian date instance that represents the first instance of the 
 * given day of the week on or before the current date. The day of the week is encoded
 * as a number where 0 = Sunday, 1 = Monday, etc.
 * 
 * @param {number} dow the day of the week on or before the current date that is being sought
 * @return {IDate} the date being sought
 */


ThaiSolarDate.prototype.onOrBefore = function (dow) {
  return new ThaiSolarDate({
    rd: this.rd.onOrBefore(dow, this.offset) + 198327,
    timezone: this.timezone
  });
};
/**
 * Return a new Gregorian date instance that represents the first instance of the 
 * given day of the week on or after the current date. The day of the week is encoded
 * as a number where 0 = Sunday, 1 = Monday, etc.
 * 
 * @param {number} dow the day of the week on or after the current date that is being sought
 * @return {IDate} the date being sought
 */


ThaiSolarDate.prototype.onOrAfter = function (dow) {
  return new ThaiSolarDate({
    rd: this.rd.onOrAfter(dow, this.offset) + 198327,
    timezone: this.timezone
  });
};
/**
 * Return the name of the calendar that governs this date.
 * 
 * @return {string} a string giving the name of the calendar
 */


ThaiSolarDate.prototype.getCalendar = function () {
  return "thaisolar";
}; //register with the factory method


IDate._constructors["thaisolar"] = ThaiSolarDate;
module.exports = ThaiSolarDate;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/TimeZone.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/TimeZone.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * TimeZone.js - Definition of a time zone class
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
!depends 
ilib.js 
Locale.js
LocaleInfo.js
Utils.js
MathUtils.js
JSUtils.js
GregRataDie.js
IString.js
CalendarFactory.js
*/
// !data localeinfo zoneinfo

var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Utils = __webpack_require__(/*! ./Utils.js */ "./node_modules/@enact/i18n/ilib/lib/Utils.js");

var MathUtils = __webpack_require__(/*! ./MathUtils.js */ "./node_modules/@enact/i18n/ilib/lib/MathUtils.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var LocaleInfo = __webpack_require__(/*! ./LocaleInfo.js */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js");

var GregRataDie = __webpack_require__(/*! ./GregRataDie.js */ "./node_modules/@enact/i18n/ilib/lib/GregRataDie.js");

var CalendarFactory = __webpack_require__(/*! ./CalendarFactory.js */ "./node_modules/@enact/i18n/ilib/lib/CalendarFactory.js");

var IString = __webpack_require__(/*! ./IString.js */ "./node_modules/@enact/i18n/ilib/lib/IString.js");
/**
 * @class
 * Create a time zone instance. 
 * 
 * This class reports and transforms
 * information about particular time zones.<p>
 * 
 * The options parameter may contain any of the following properties:
 * 
 * <ul>
 * <li><i>id</i> - The id of the requested time zone such as "Europe/London" or 
 * "America/Los_Angeles". These are taken from the IANA time zone database. (See
 * http://www.iana.org/time-zones for more information.) <p>
 * 
 * There is one special 
 * time zone that is not taken from the IANA database called simply "local". In
 * this case, this class will attempt to discover the current time zone and
 * daylight savings time settings by calling standard Javascript classes to 
 * determine the offsets from UTC. 
 * 
 * <li><i>locale</i> - The locale for this time zone.
 * 
 * <li><i>offset</i> - Choose the time zone based on the offset from UTC given in
 * number of minutes (negative is west, positive is east).
 * 
 * <li><i>onLoad</i> - a callback function to call when the data is fully 
 * loaded. When the onLoad option is given, this class will attempt to
 * load any missing locale data using the ilib loader callback.
 * When the data is loaded, the onLoad function is called with the current 
 * instance as a parameter. 
 * 
 * <li><i>sync</i> - tell whether to load any missing locale data synchronously or 
 * asynchronously. If this option is given as "false", then the "onLoad"
 * callback must be given, as the instance returned from this constructor will
 * not be usable for a while.
 *  
 * <li><i>loadParams</i> - an object containing parameters to pass to the 
 * loader callback function when locale data is missing. The parameters are not
 * interpretted or modified in any way. They are simply passed along. The object 
 * may contain any property/value pairs as long as the calling code is in
 * agreement with the loader callback function as to what those parameters mean.
 * </ul>
 * 
 * There is currently no way in the ECMAscript
 * standard to tell which exact time zone is currently in use. Choosing the
 * id "locale" or specifying an explicit offset will not give a specific time zone, 
 * as it is impossible to tell with certainty which zone the offsets 
 * match.<p>
 * 
 * When the id "local" is given or the offset option is specified, this class will
 * have the following behaviours:
 * <ul>
 * <li>The display name will always be given as the RFC822 style, no matter what
 * style is requested
 * <li>The id will also be returned as the RFC822 style display name
 * <li>When the offset is explicitly given, this class will assume the time zone 
 * does not support daylight savings time, and the offsets will be calculated 
 * the same way year round.
 * <li>When the offset is explicitly given, the inDaylightSavings() method will 
 * always return false.
 * <li>When the id "local" is given, this class will attempt to determine the 
 * daylight savings time settings by examining the offset from UTC on Jan 1
 * and June 1 of the current year. If they are different, this class assumes
 * that the local time zone uses DST. When the offset for a particular date is
 * requested, it will use the built-in Javascript support to determine the 
 * offset for that date.
 * </ul> 
 * 
 * If a more specific time zone is 
 * needed with display names and known start/stop times for DST, use the "id" 
 * property instead to specify the time zone exactly. You can perhaps ask the
 * user which time zone they prefer so that your app does not need to guess.<p>
 * 
 * If the id and the offset are both not given, the default time zone for the 
 * locale is retrieved from
 * the locale info. If the locale is not specified, the default locale for the
 * library is used.<p>
 * 
 * Because this class was designed for use in web sites, and the vast majority
 * of dates and times being formatted are recent date/times, this class is simplified
 * by not implementing historical time zones. That is, when governments change the 
 * time zone rules for a particular zone, only the latest such rule is implemented 
 * in this class. That means that determining the offset for a date that is prior 
 * to the last change may give the wrong result. Historical time zone calculations
 * may be implemented in a later version of iLib if there is enough demand for it,
 * but it would entail a much larger set of time zone data that would have to be
 * loaded.  
 * 
 * 
 * @constructor
 * @param {Object} options Options guiding the construction of this time zone instance
 */


var TimeZone = function TimeZone(options) {
  this.sync = true;
  this.locale = new Locale();
  this.isLocal = false;

  if (options) {
    if (options.locale) {
      this.locale = typeof options.locale === 'string' ? new Locale(options.locale) : options.locale;
    }

    if (options.id) {
      var id = options.id.toString();

      if (id === 'local') {
        this.isLocal = true; // use standard Javascript Date to figure out the time zone offsets

        var now = new Date(),
            jan1 = new Date(now.getFullYear(), 0, 1),
            // months in std JS Date object are 0-based
        jun1 = new Date(now.getFullYear(), 5, 1); // Javascript's method returns the offset backwards, so we have to
        // take the negative to get the correct offset

        this.offsetJan1 = -jan1.getTimezoneOffset();
        this.offsetJun1 = -jun1.getTimezoneOffset(); // the offset of the standard time for the time zone is always the one that is closest 
        // to negative infinity of the two, no matter whether you are in the northern or southern 
        // hemisphere, east or west

        this.offset = Math.min(this.offsetJan1, this.offsetJun1);
      }

      this.id = id;
    } else if (options.offset) {
      this.offset = typeof options.offset === 'string' ? parseInt(options.offset, 10) : options.offset;
      this.id = this.getDisplayName(undefined, undefined);
    }

    if (typeof options.sync !== 'undefined') {
      this.sync = !!options.sync;
    }

    this.loadParams = options.loadParams;
    this.onLoad = options.onLoad;
  } //console.log("timezone: locale is " + this.locale);


  if (!this.id) {
    new LocaleInfo(this.locale, {
      sync: this.sync,
      loadParams: this.loadParams,
      onLoad: ilib.bind(this, function (li) {
        this.id = li.getTimeZone() || "Etc/UTC";

        this._loadtzdata();
      })
    });
  } else {
    this._loadtzdata();
  } //console.log("localeinfo is: " + JSON.stringify(this.locinfo));
  //console.log("id is: " + JSON.stringify(this.id));

};
/*
 * Explanation of the compressed time zone info properties.
 * {
 *     "o": "8:0",      // offset from UTC
 *     "f": "W{c}T",    // standard abbreviation. For time zones that observe DST, the {c} replacement is replaced with the 
 *                      // letter in the e.c or s.c properties below 
 *     "e": {           // info about the end of DST
 *         "j": 78322.5 // Julian day when the transition happens. Either specify the "j" property or all of the "m", "r", and 
 *                      // "t" properties, but not both sets.
 *         "m": 3,      // month that it ends
 *         "r": "l0",   // rule for the day it ends "l" = "last", numbers are Sun=0 through Sat=6. Other syntax is "0>7". 
 *                      // This means the 0-day (Sun) after the 7th of the month. Other possible operators are <, >, <=, >=
 *         "t": "2:0",  // time of day that the DST turns off, hours:minutes
 *         "c": "S"     // character to replace into the abbreviation for standard time 
 *     },
 *     "s": {           // info about the start of DST
 *         "j": 78189.5 // Julian day when the transition happens. Either specify the "j" property or all of the "m", "r", and 
 *                      // "t" properties, but not both sets.
 *         "m": 10,     // month that it starts
 *         "r": "l0",   // rule for the day it starts "l" = "last", numbers are Sun=0 through Sat=6. Other syntax is "0>7".
 *                      // This means the 0-day (Sun) after the 7th of the month. Other possible operators are <, >, <=, >=
 *         "t": "2:0",  // time of day that the DST turns on, hours:minutes
 *         "v": "1:0",  // amount of time saved in hours:minutes
 *         "c": "D"     // character to replace into the abbreviation for daylight time
 *     },
 *     "c": "AU",       // ISO code for the country that contains this time zone
 *     "n": "W. Australia {c} Time"
 *                      // long English name of the zone. The {c} replacement is for the word "Standard" or "Daylight" as appropriate
 * }
 */


TimeZone.prototype._loadtzdata = function () {
  var zoneName = this.id.replace(/-/g, "m").replace(/\+/g, "p"); // console.log("id is: " + JSON.stringify(this.id));
  // console.log("zoneinfo is: " + JSON.stringify(ilib.data.zoneinfo[zoneName]));

  if (!ilib.data.zoneinfo[zoneName] && typeof this.offset === 'undefined') {
    Utils.loadData({
      object: "TimeZone",
      nonlocale: true,
      // locale independent 
      name: "zoneinfo/" + this.id + ".json",
      sync: this.sync,
      loadParams: this.loadParams,
      callback: ilib.bind(this, function (tzdata) {
        if (tzdata && !JSUtils.isEmpty(tzdata)) {
          ilib.data.zoneinfo[zoneName] = tzdata;
        }

        this._initZone(zoneName);
      })
    });
  } else {
    this._initZone(zoneName);
  }
};

TimeZone.prototype._initZone = function (zoneName) {
  /** 
   * @private
   * @type {{o:string,f:string,e:Object.<{m:number,r:string,t:string,z:string}>,s:Object.<{m:number,r:string,t:string,z:string,v:string,c:string}>,c:string,n:string}} 
   */
  this.zone = ilib.data.zoneinfo[zoneName];

  if (!this.zone && typeof this.offset === 'undefined') {
    this.id = "Etc/UTC";
    this.zone = ilib.data.zoneinfo[this.id];
  }

  this._calcDSTSavings();

  if (typeof this.offset === 'undefined' && this.zone.o) {
    var offsetParts = this._offsetStringToObj(this.zone.o);
    /**
     * @private
     * @type {number} raw offset from UTC without DST, in minutes
     */


    this.offset = (Math.abs(offsetParts.h || 0) * 60 + (offsetParts.m || 0)) * MathUtils.signum(offsetParts.h || 0);
  }

  if (this.onLoad && typeof this.onLoad === 'function') {
    this.onLoad(this);
  }
};
/** @private */


TimeZone._marshallIds = function (country, sync, callback) {
  var tz,
      ids = [];

  if (!country) {
    // local is a special zone meaning "the local time zone according to the JS engine we are running upon"
    ids.push("local");

    for (tz in ilib.data.timezones) {
      if (ilib.data.timezones[tz]) {
        ids.push(ilib.data.timezones[tz]);
      }
    }

    if (typeof callback === 'function') {
      callback(ids);
    }
  } else {
    if (!ilib.data.zoneinfo.zonetab) {
      Utils.loadData({
        object: "TimeZone",
        nonlocale: true,
        // locale independent 
        name: "zoneinfo/zonetab.json",
        sync: sync,
        callback: ilib.bind(this, function (tzdata) {
          if (tzdata) {
            ilib.data.zoneinfo.zonetab = tzdata;
          }

          ids = ilib.data.zoneinfo.zonetab[country];

          if (typeof callback === 'function') {
            callback(ids);
          }
        })
      });
    } else {
      ids = ilib.data.zoneinfo.zonetab[country];

      if (typeof callback === 'function') {
        callback(ids);
      }
    }
  }

  return ids;
};
/**
 * Return an array of available zone ids that the constructor knows about.
 * The country parameter is optional. If it is not given, all time zones will
 * be returned. If it specifies a country code, then only time zones for that
 * country will be returned.
 * 
 * @param {string|undefined} country country code for which time zones are being sought
 * @param {boolean} sync whether to find the available ids synchronously (true) or asynchronously (false)
 * @param {function(Array.<string>)} onLoad callback function to call when the data is finished loading
 * @return {Array.<string>} an array of zone id strings
 */


TimeZone.getAvailableIds = function (country, sync, onLoad) {
  var tz,
      ids = [];

  if (typeof sync !== 'boolean') {
    sync = true;
  }

  if (ilib.data.timezones.length === 0) {
    if (typeof ilib._load !== 'undefined' && typeof ilib._load.listAvailableFiles === 'function') {
      ilib._load.listAvailableFiles(sync, function (hash) {
        for (var dir in hash) {
          var files = hash[dir];

          if (ilib.isArray(files)) {
            files.forEach(function (filename) {
              if (filename && filename.match(/^zoneinfo/)) {
                ilib.data.timezones.push(filename.replace(/^zoneinfo\//, "").replace(/\.json$/, ""));
              }
            });
          }
        }

        ids = TimeZone._marshallIds(country, sync, onLoad);
      });
    } else {
      for (tz in ilib.data.zoneinfo) {
        if (ilib.data.zoneinfo[tz]) {
          ilib.data.timezones.push(tz);
        }
      }

      ids = TimeZone._marshallIds(country, sync, onLoad);
    }
  } else {
    ids = TimeZone._marshallIds(country, sync, onLoad);
  }

  return ids;
};
/**
 * Return the id used to uniquely identify this time zone.
 * @return {string} a unique id for this time zone
 */


TimeZone.prototype.getId = function () {
  return this.id.toString();
};
/**
 * Return the abbreviation that is used for the current time zone on the given date.
 * The date may be in DST or during standard time, and many zone names have different
 * abbreviations depending on whether or not the date is falls within DST.<p>
 * 
 * There are two styles that are supported:
 * 
 * <ol>
 * <li>standard - returns the 3 to 5 letter abbreviation of the time zone name such 
 * as "CET" for "Central European Time" or "PDT" for "Pacific Daylight Time"
 * <li>rfc822 - returns an RFC 822 style time zone specifier, which specifies more
 * explicitly what the offset is from UTC
 * <li>long - returns the long name of the zone in English
 * </ol>
 *  
 * @param {IDate=} date a date to determine if it is in daylight time or standard time
 * @param {string=} style one of "standard" or "rfc822". Default if not specified is "standard"
 * @return {string} the name of the time zone, abbreviated according to the style 
 */


TimeZone.prototype.getDisplayName = function (date, style) {
  style = this.isLocal || typeof this.zone === 'undefined' ? "rfc822" : style || "standard";

  switch (style) {
    default:
    case 'standard':
      if (this.zone.f && this.zone.f !== "zzz") {
        if (this.zone.f.indexOf("{c}") !== -1) {
          var letter = "";
          letter = this.inDaylightTime(date) ? this.zone.s && this.zone.s.c : this.zone.e && this.zone.e.c;
          var temp = new IString(this.zone.f);
          return temp.format({
            c: letter || ""
          });
        }

        return this.zone.f;
      }

      var temp = "GMT" + this.zone.o;

      if (this.inDaylightTime(date)) {
        temp += "+" + this.zone.s.v;
      }

      return temp;
      break;

    case 'rfc822':
      var offset = this.getOffset(date),
          // includes the DST if applicable
      ret = "UTC",
          hour = offset.h || 0,
          minute = offset.m || 0;

      if (hour !== 0) {
        ret += hour > 0 ? "+" : "-";

        if (Math.abs(hour) < 10) {
          ret += "0";
        }

        ret += hour < 0 ? -hour : hour;

        if (minute < 10) {
          ret += "0";
        }

        ret += minute;
      }

      return ret;

    case 'long':
      if (this.zone.n) {
        if (this.zone.n.indexOf("{c}") !== -1) {
          var str = this.inDaylightTime(date) ? "Daylight" : "Standard";
          var temp = new IString(this.zone.n);
          return temp.format({
            c: str || ""
          });
        }

        return this.zone.n;
      }

      var temp = "GMT" + this.zone.o;

      if (this.inDaylightTime(date)) {
        temp += "+" + this.zone.s.v;
      }

      return temp;
      break;
  }
};
/**
 * Convert the offset string to an object with an h, m, and possibly s property
 * to indicate the hours, minutes, and seconds.
 * 
 * @private
 * @param {string} str the offset string to convert to an object
 * @return {Object.<{h:number,m:number,s:number}>} an object giving the offset for the zone at 
 * the given date/time, in hours, minutes, and seconds
 */


TimeZone.prototype._offsetStringToObj = function (str) {
  var offsetParts = typeof str === 'string' ? str.split(":") : [],
      ret = {
    h: 0
  },
      temp;

  if (offsetParts.length > 0) {
    ret.h = parseInt(offsetParts[0], 10);

    if (offsetParts.length > 1) {
      temp = parseInt(offsetParts[1], 10);

      if (temp) {
        ret.m = temp;
      }

      if (offsetParts.length > 2) {
        temp = parseInt(offsetParts[2], 10);

        if (temp) {
          ret.s = temp;
        }
      }
    }
  }

  return ret;
};
/**
 * Returns the offset of this time zone from UTC at the given date/time. If daylight saving 
 * time is in effect at the given date/time, this method will return the offset value 
 * adjusted by the amount of daylight saving.
 * @param {IDate=} date the date for which the offset is needed
 * @return {Object.<{h:number,m:number}>} an object giving the offset for the zone at 
 * the given date/time, in hours, minutes, and seconds  
 */


TimeZone.prototype.getOffset = function (date) {
  if (!date) {
    return this.getRawOffset();
  }

  var offset = this.getOffsetMillis(date) / 60000;
  var hours = MathUtils.down(offset / 60),
      minutes = Math.abs(offset) - Math.abs(hours) * 60;
  var ret = {
    h: hours
  };

  if (minutes != 0) {
    ret.m = minutes;
  }

  return ret;
};
/**
 * Returns the offset of this time zone from UTC at the given date/time expressed in 
 * milliseconds. If daylight saving 
 * time is in effect at the given date/time, this method will return the offset value 
 * adjusted by the amount of daylight saving. Negative numbers indicate offsets west
 * of UTC and conversely, positive numbers indicate offset east of UTC.
 *  
 * @param {IDate=} date the date for which the offset is needed, or null for the
 * present date
 * @return {number} the number of milliseconds of offset from UTC that the given date is
 */


TimeZone.prototype.getOffsetMillis = function (date) {
  var ret; // check if the dst property is defined -- the intrinsic JS Date object doesn't work so
  // well if we are in the overlap time at the end of DST

  if (this.isLocal && typeof date.dst === 'undefined') {
    var d = !date ? new Date() : new Date(date.getTimeExtended());
    return -d.getTimezoneOffset() * 60000;
  }

  ret = this.offset;

  if (date && this.inDaylightTime(date)) {
    ret += this.dstSavings;
  }

  return ret * 60000;
};
/**
 * Return the offset in milliseconds when the date has an RD number in wall
 * time rather than in UTC time.
 * @protected
 * @param date the date to check in wall time
 * @returns {number} the number of milliseconds of offset from UTC that the given date is
 */


TimeZone.prototype._getOffsetMillisWallTime = function (date) {
  var ret;
  ret = this.offset;

  if (date && this.inDaylightTime(date, true)) {
    ret += this.dstSavings;
  }

  return ret * 60000;
};
/**
 * Returns the offset of this time zone from UTC at the given date/time. If daylight saving 
 * time is in effect at the given date/time, this method will return the offset value 
 * adjusted by the amount of daylight saving.
 * @param {IDate=} date the date for which the offset is needed
 * @return {string} the offset for the zone at the given date/time as a string in the 
 * format "h:m:s" 
 */


TimeZone.prototype.getOffsetStr = function (date) {
  var offset = this.getOffset(date),
      ret;
  ret = offset.h;

  if (typeof offset.m !== 'undefined') {
    ret += ":" + offset.m;

    if (typeof offset.s !== 'undefined') {
      ret += ":" + offset.s;
    }
  } else {
    ret += ":0";
  }

  return ret;
};
/**
 * Gets the offset from UTC for this time zone.
 * @return {Object.<{h:number,m:number,s:number}>} an object giving the offset from 
 * UTC for this time zone, in hours, minutes, and seconds 
 */


TimeZone.prototype.getRawOffset = function () {
  var hours = MathUtils.down(this.offset / 60),
      minutes = Math.abs(this.offset) - Math.abs(hours) * 60;
  var ret = {
    h: hours
  };

  if (minutes != 0) {
    ret.m = minutes;
  }

  return ret;
};
/**
 * Gets the offset from UTC for this time zone expressed in milliseconds. Negative numbers
 * indicate zones west of UTC, and positive numbers indicate zones east of UTC.
 * 
 * @return {number} an number giving the offset from 
 * UTC for this time zone in milliseconds 
 */


TimeZone.prototype.getRawOffsetMillis = function () {
  return this.offset * 60000;
};
/**
 * Gets the offset from UTC for this time zone without DST savings.
 * @return {string} the offset from UTC for this time zone, in the format "h:m:s" 
 */


TimeZone.prototype.getRawOffsetStr = function () {
  var off = this.getRawOffset();
  return off.h + ":" + (off.m || "0");
};
/**
 * Return the amount of time in hours:minutes that the clock is advanced during
 * daylight savings time.
 * @return {Object.<{h:number,m:number,s:number}>} the amount of time that the 
 * clock advances for DST in hours, minutes, and seconds 
 */


TimeZone.prototype.getDSTSavings = function () {
  if (this.isLocal) {
    // take the absolute because the difference in the offsets may be positive or
    // negative, depending on the hemisphere
    var savings = Math.abs(this.offsetJan1 - this.offsetJun1);
    var hours = MathUtils.down(savings / 60),
        minutes = savings - hours * 60;
    return {
      h: hours,
      m: minutes
    };
  } else if (this.zone && this.zone.s) {
    return this._offsetStringToObj(this.zone.s.v); // this.zone.start.savings
  }

  return {
    h: 0
  };
};
/**
 * Return the amount of time in hours:minutes that the clock is advanced during
 * daylight savings time.
 * @return {string} the amount of time that the clock advances for DST in the
 * format "h:m:s"
 */


TimeZone.prototype.getDSTSavingsStr = function () {
  if (this.isLocal) {
    var savings = this.getDSTSavings();
    return savings.h + ":" + savings.m;
  } else if (typeof this.offset !== 'undefined' && this.zone && this.zone.s) {
    return this.zone.s.v; // this.zone.start.savings
  }

  return "0:0";
};
/**
 * return the rd of the start of DST transition for the given year
 * @protected
 * @param {Object} rule set of rules
 * @param {number} year year to check
 * @return {number} the rd of the start of DST for the year
 */


TimeZone.prototype._calcRuleStart = function (rule, year) {
  var type = "=",
      weekday = 0,
      day,
      refDay,
      cal,
      hour = 0,
      minute = 0,
      second = 0,
      time,
      i;

  if (typeof rule.j !== 'undefined') {
    refDay = new GregRataDie({
      julianday: rule.j
    });
  } else {
    if (rule.r.charAt(0) == 'l' || rule.r.charAt(0) == 'f') {
      cal = CalendarFactory({
        type: "gregorian"
      }); // can be synchronous

      type = rule.r.charAt(0);
      weekday = parseInt(rule.r.substring(1), 10);
      day = type === 'l' ? cal.getMonLength(rule.m, year) : 1; //console.log("_calcRuleStart: Calculating the " + 
      //		(rule.r.charAt(0) == 'f' ? "first " : "last ") + weekday + 
      //		" of month " + rule.m);
    } else {
      i = rule.r.indexOf('<');

      if (i == -1) {
        i = rule.r.indexOf('>');
      }

      if (i != -1) {
        type = rule.r.charAt(i);
        weekday = parseInt(rule.r.substring(0, i), 10);
        day = parseInt(rule.r.substring(i + 1), 10); //console.log("_calcRuleStart: Calculating the " + weekday + 
        //		type + day + " of month " + rule.m);
      } else {
        day = parseInt(rule.r, 10); //console.log("_calcRuleStart: Calculating the " + day + " of month " + rule.m);
      }
    }

    if (rule.t) {
      time = rule.t.split(":");
      hour = parseInt(time[0], 10);

      if (time.length > 1) {
        minute = parseInt(time[1], 10);

        if (time.length > 2) {
          second = parseInt(time[2], 10);
        }
      }
    } //console.log("calculating rd of " + year + "/" + rule.m + "/" + day);


    refDay = new GregRataDie({
      year: year,
      month: rule.m,
      day: day,
      hour: hour,
      minute: minute,
      second: second
    });
  } //console.log("refDay is " + JSON.stringify(refDay));


  var d = refDay.getRataDie();

  switch (type) {
    case 'l':
    case '<':
      //console.log("returning " + refDay.onOrBefore(rd, weekday));
      d = refDay.onOrBefore(weekday);
      break;

    case 'f':
    case '>':
      //console.log("returning " + refDay.onOrAfterRd(rd, weekday));
      d = refDay.onOrAfter(weekday);
      break;
  }

  return d;
};
/**
 * @private
 */


TimeZone.prototype._calcDSTSavings = function () {
  var saveParts = this.getDSTSavings();
  /**
   * @private
   * @type {number} savings in minutes when DST is in effect 
   */

  this.dstSavings = (Math.abs(saveParts.h || 0) * 60 + (saveParts.m || 0)) * MathUtils.signum(saveParts.h || 0);
};
/**
 * @private
 */


TimeZone.prototype._getDSTStartRule = function (year) {
  // TODO: update this when historic/future zones are supported
  return this.zone.s;
};
/**
 * @private
 */


TimeZone.prototype._getDSTEndRule = function (year) {
  // TODO: update this when historic/future zones are supported
  return this.zone.e;
};
/**
 * Returns whether or not the given date is in daylight saving time for the current
 * zone. Note that daylight savings time is observed for the summer. Because
 * the seasons are reversed, daylight savings time in the southern hemisphere usually
 * runs from the end of the year through New Years into the first few months of the
 * next year. This method will correctly calculate the start and end of DST for any
 * location.
 * 
 * @param {IDate=} date a date for which the info about daylight time is being sought,
 * or undefined to tell whether we are currently in daylight savings time
 * @param {boolean=} wallTime if true, then the given date is in wall time. If false or
 * undefined, it is in the usual UTC time.
 * @return {boolean} true if the given date is in DST for the current zone, and false
 * otherwise.
 */


TimeZone.prototype.inDaylightTime = function (date, wallTime) {
  var rd, startRd, endRd, year;

  if (this.isLocal) {
    // check if the dst property is defined -- the intrinsic JS Date object doesn't work so
    // well if we are in the overlap time at the end of DST, so we have to work around that
    // problem by adding in the savings ourselves
    var offset = this.offset * 60000;

    if (typeof date.dst !== 'undefined' && !date.dst) {
      offset += this.dstSavings * 60000;
    }

    var d = new Date(date ? date.getTimeExtended() - offset : undefined); // the DST offset is always the one that is closest to positive infinity, no matter 
    // if you are in the northern or southern hemisphere, east or west

    var dst = Math.max(this.offsetJan1, this.offsetJun1);
    return -d.getTimezoneOffset() === dst;
  }

  if (!date || !date.cal || date.cal.type !== "gregorian") {
    // convert to Gregorian so that we can tell if it is in DST or not
    var time = date && typeof date.getTimeExtended === 'function' ? date.getTimeExtended() : undefined;
    rd = new GregRataDie({
      unixtime: time
    }).getRataDie();
    year = new Date(time).getUTCFullYear();
  } else {
    rd = date.rd.getRataDie();
    year = date.year;
  } // rd should be a Gregorian RD number now, in UTC
  // if we aren't using daylight time in this zone for the given year, then we are 
  // not in daylight time


  if (!this.useDaylightTime(year)) {
    return false;
  } // these calculate the start/end in local wall time


  var startrule = this._getDSTStartRule(year);

  var endrule = this._getDSTEndRule(year);

  startRd = this._calcRuleStart(startrule, year);
  endRd = this._calcRuleStart(endrule, year);

  if (wallTime) {
    // rd is in wall time, so we have to make sure to skip the missing time
    // at the start of DST when standard time ends and daylight time begins
    startRd += this.dstSavings / 1440;
  } else {
    // rd is in UTC, so we have to convert the start/end to UTC time so 
    // that they can be compared directly to the UTC rd number of the date
    // when DST starts, time is standard time already, so we only have
    // to subtract the offset to get to UTC and not worry about the DST savings
    startRd -= this.offset / 1440; // when DST ends, time is in daylight time already, so we have to
    // subtract the DST savings to get back to standard time, then the
    // offset to get to UTC

    endRd -= (this.offset + this.dstSavings) / 1440;
  } // In the northern hemisphere, the start comes first some time in spring (Feb-Apr), 
  // then the end some time in the fall (Sept-Nov). In the southern
  // hemisphere, it is the other way around because the seasons are reversed. Standard
  // time is still in the winter, but the winter months are May-Aug, and daylight 
  // savings time usually starts Aug-Oct of one year and runs through Mar-May of the 
  // next year.


  if (rd < endRd && endRd - rd <= this.dstSavings / 1440 && typeof date.dst === 'boolean') {
    // take care of the magic overlap time at the end of DST
    return date.dst;
  }

  if (startRd < endRd) {
    // northern hemisphere
    return rd >= startRd && rd < endRd ? true : false;
  } // southern hemisphere


  return rd >= startRd || rd < endRd ? true : false;
};
/**
 * Returns true if this time zone switches to daylight savings time at some point
 * in the year, and false otherwise.
 * @param {number} year Whether or not the time zone uses daylight time in the given year. If
 * this parameter is not given, the current year is assumed.
 * @return {boolean} true if the time zone uses daylight savings time
 */


TimeZone.prototype.useDaylightTime = function (year) {
  // this zone uses daylight savings time iff there is a rule defining when to start
  // and when to stop the DST
  return this.isLocal && this.offsetJan1 !== this.offsetJun1 || typeof this.zone !== 'undefined' && typeof this.zone.s !== 'undefined' && typeof this.zone.e !== 'undefined';
};
/**
 * Returns the ISO 3166 code of the country for which this time zone is defined.
 * @return {string} the ISO 3166 code of the country for this zone
 */


TimeZone.prototype.getCountry = function () {
  return this.zone.c;
};

module.exports = TimeZone;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/Utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/Utils.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * Utils.js - Core utility routines
 * 
 * Copyright © 2012-2015, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// !depends ilib.js Locale.js JSUtils.js


var ilib = __webpack_require__(/*! ./ilib.js */ "./node_modules/@enact/i18n/ilib/lib/ilib.js");

var Locale = __webpack_require__(/*! ./Locale.js */ "./node_modules/@enact/i18n/ilib/lib/Locale.js");

var JSUtils = __webpack_require__(/*! ./JSUtils.js */ "./node_modules/@enact/i18n/ilib/lib/JSUtils.js");

var Utils = {};
/**
 * Find and merge all the locale data for a particular prefix in the given locale
 * and return it as a single javascript object. This merges the data in the 
 * correct order:
 * 
 * <ol>
 * <li>shared data (usually English)
 * <li>data for language
 * <li>data for language + region
 * <li>data for language + region + script
 * <li>data for language + region + script + variant
 * </ol>
 * 
 * It is okay for any of the above to be missing. This function will just skip the 
 * missing data. However, if everything except the shared data is missing, this 
 * function returns undefined, allowing the caller to go and dynamically load the
 * data instead.
 * 
 * @static
 * @param {string} prefix prefix under ilib.data of the data to merge
 * @param {Locale} locale locale of the data being sought
 * @param {boolean=} replaceArrays if true, replace the array elements in object1 with those in object2.
 * If false, concatenate array elements in object1 with items in object2.
 * @param {boolean=} returnOne if true, only return the most locale-specific data. If false,
 * merge all the relevant locale data together.
 * @return {Object?} the merged locale data
 */

Utils.mergeLocData = function (prefix, locale, replaceArrays, returnOne) {
  var data = undefined;
  var loc = locale || new Locale();
  var foundLocaleData = false;
  var property = prefix;
  var mostSpecific;
  data = ilib.data[prefix] || {};
  mostSpecific = data;

  if (loc.getLanguage()) {
    property = prefix + '_' + loc.getLanguage();

    if (ilib.data[property]) {
      foundLocaleData = true;
      data = JSUtils.merge(data, ilib.data[property], replaceArrays);
      mostSpecific = ilib.data[property];
    }
  }

  if (loc.getRegion()) {
    property = prefix + '_' + loc.getRegion();

    if (ilib.data[property]) {
      foundLocaleData = true;
      data = JSUtils.merge(data, ilib.data[property], replaceArrays);
      mostSpecific = ilib.data[property];
    }
  }

  if (loc.getLanguage()) {
    property = prefix + '_' + loc.getLanguage();

    if (loc.getScript()) {
      property = prefix + '_' + loc.getLanguage() + '_' + loc.getScript();

      if (ilib.data[property]) {
        foundLocaleData = true;
        data = JSUtils.merge(data, ilib.data[property], replaceArrays);
        mostSpecific = ilib.data[property];
      }
    }

    if (loc.getRegion()) {
      property = prefix + '_' + loc.getLanguage() + '_' + loc.getRegion();

      if (ilib.data[property]) {
        foundLocaleData = true;
        data = JSUtils.merge(data, ilib.data[property], replaceArrays);
        mostSpecific = ilib.data[property];
      }
    }
  }

  if (loc.getRegion() && loc.getVariant()) {
    property = prefix + '_' + loc.getLanguage() + '_' + loc.getVariant();

    if (ilib.data[property]) {
      foundLocaleData = true;
      data = JSUtils.merge(data, ilib.data[property], replaceArrays);
      mostSpecific = ilib.data[property];
    }
  }

  if (loc.getLanguage() && loc.getScript() && loc.getRegion()) {
    property = prefix + '_' + loc.getLanguage() + '_' + loc.getScript() + '_' + loc.getRegion();

    if (ilib.data[property]) {
      foundLocaleData = true;
      data = JSUtils.merge(data, ilib.data[property], replaceArrays);
      mostSpecific = ilib.data[property];
    }
  }

  if (loc.getLanguage() && loc.getRegion() && loc.getVariant()) {
    property = prefix + '_' + loc.getLanguage() + '_' + loc.getRegion() + '_' + loc.getVariant();

    if (ilib.data[property]) {
      foundLocaleData = true;
      data = JSUtils.merge(data, ilib.data[property], replaceArrays);
      mostSpecific = ilib.data[property];
    }
  }

  if (loc.getLanguage() && loc.getScript() && loc.getRegion() && loc.getVariant()) {
    property = prefix + '_' + loc.getLanguage() + '_' + loc.getScript() + '_' + loc.getRegion() + '_' + loc.getVariant();

    if (ilib.data[property]) {
      foundLocaleData = true;
      data = JSUtils.merge(data, ilib.data[property], replaceArrays);
      mostSpecific = ilib.data[property];
    }
  }

  return foundLocaleData ? returnOne ? mostSpecific : data : undefined;
};
/**
 * Return an array of relative path names for the
 * files that represent the data for the given locale.<p>
 * 
 * Note that to prevent the situation where a directory for
 * a language exists next to the directory for a region where
 * the language code and region code differ only by case, the 
 * plain region directories are located under the special 
 * "undefined" language directory which has the ISO code "und".
 * The reason is that some platforms have case-insensitive 
 * file systems, and you cannot have 2 directories with the 
 * same name which only differ by case. For example, "es" is
 * the ISO 639 code for the language "Spanish" and "ES" is
 * the ISO 3166 code for the region "Spain", so both the
 * directories cannot exist underneath "locale". The region
 * therefore will be loaded from "und/ES" instead.<p>  
 * 
 * <h4>Variations</h4>
 * 
 * With only language and region specified, the following
 * sequence of paths will be generated:<p>
 * 
 * <pre>
 * language
 * und/region
 * language/region
 * </pre>
 * 
 * With only language and script specified:<p>
 * 
 * <pre>
 * language
 * language/script
 * </pre>
 * 
 * With only script and region specified:<p>
 * 
 * <pre>
 * und/region  
 * </pre>
 * 
 * With only region and variant specified:<p>
 * 
 * <pre>
 * und/region
 * region/variant
 * </pre>
 * 
 * With only language, script, and region specified:<p>
 * 
 * <pre>
 * language
 * und/region
 * language/script
 * language/region
 * language/script/region
 * </pre>
 * 
 * With only language, region, and variant specified:<p>
 * 
 * <pre>
 * language
 * und/region
 * language/region
 * region/variant
 * language/region/variant
 * </pre>
 * 
 * With all parts specified:<p>
 * 
 * <pre>
 * language
 * und/region
 * language/script
 * language/region
 * region/variant
 * language/script/region
 * language/region/variant
 * language/script/region/variant
 * </pre>
 * 
 * @static
 * @param {Locale} locale load the files for this locale
 * @param {string?} name the file name of each file to load without
 * any path
 * @return {Array.<string>} An array of relative path names
 * for the files that contain the locale data
 */


Utils.getLocFiles = function (locale, name) {
  var dir = "";
  var files = [];
  var filename = name || "resources.json";
  var loc = locale || new Locale();
  var language = loc.getLanguage();
  var region = loc.getRegion();
  var script = loc.getScript();
  var variant = loc.getVariant();
  files.push(filename); // generic shared file

  if (language) {
    dir = language + "/";
    files.push(dir + filename);
  }

  if (region) {
    dir = "und/" + region + "/";
    files.push(dir + filename);
  }

  if (language) {
    if (script) {
      dir = language + "/" + script + "/";
      files.push(dir + filename);
    }

    if (region) {
      dir = language + "/" + region + "/";
      files.push(dir + filename);
    }
  }

  if (region && variant) {
    dir = "und/" + region + "/" + variant + "/";
    files.push(dir + filename);
  }

  if (language && script && region) {
    dir = language + "/" + script + "/" + region + "/";
    files.push(dir + filename);
  }

  if (language && region && variant) {
    dir = language + "/" + region + "/" + variant + "/";
    files.push(dir + filename);
  }

  if (language && script && region && variant) {
    dir = language + "/" + script + "/" + region + "/" + variant + "/";
    files.push(dir + filename);
  }

  return files;
};
/**
 * Load data using the new loader object or via the old function callback.
 * @static
 * @private
 */


Utils._callLoadData = function (files, sync, params, callback) {
  // console.log("Utils._callLoadData called");
  if (typeof ilib._load === 'function') {
    // console.log("Utils._callLoadData: calling as a regular function");
    return ilib._load(files, sync, params, callback);
  } else if (_typeof(ilib._load) === 'object' && typeof ilib._load.loadFiles === 'function') {
    // console.log("Utils._callLoadData: calling as an object");
    return ilib._load.loadFiles(files, sync, params, callback);
  } // console.log("Utils._callLoadData: not calling. Type is " + typeof(ilib._load) + " and instanceof says " + (ilib._load instanceof Loader));


  return undefined;
};
/**
 * Find locale data or load it in. If the data with the given name is preassembled, it will
 * find the data in ilib.data. If the data is not preassembled but there is a loader function,
 * this function will call it to load the data. Otherwise, the callback will be called with
 * undefined as the data. This function will create a cache under the given class object.
 * If data was successfully loaded, it will be set into the cache so that future access to 
 * the same data for the same locale is much quicker.<p>
 * 
 * The parameters can specify any of the following properties:<p>
 * 
 * <ul>
 * <li><i>name</i> - String. The name of the file being loaded. Default: ResBundle.json
 * <li><i>object</i> - String. The name of the class attempting to load data. This is used to differentiate parts of the cache.
 * <li><i>locale</i> - Locale. The locale for which data is loaded. Default is the current locale.
 * <li><i>nonlocale</i> - boolean. If true, the data being loaded is not locale-specific.
 * <li><i>type</i> - String. Type of file to load. This can be "json" or "other" type. Default: "json" 
 * <li><i>replace</i> - boolean. When merging json objects, this parameter controls whether to merge arrays
 * or have arrays replace each other. If true, arrays in child objects replace the arrays in parent 
 * objects. When false, the arrays in child objects are concatenated with the arrays in parent objects.  
 * <li><i>loadParams</i> - Object. An object with parameters to pass to the loader function
 * <li><i>sync</i> - boolean. Whether or not to load the data synchronously
 * <li><i>callback</i> - function(?)=. callback Call back function to call when the data is available.
 * Data is not returned from this method, so a callback function is mandatory.
 * </ul>
 * 
 * @static
 * @param {Object} params Parameters configuring how to load the files (see above)
 */


Utils.loadData = function (params) {
  var name = "resources.json",
      object = "generic",
      locale = new Locale(ilib.getLocale()),
      sync = false,
      type = undefined,
      loadParams = {},
      callback = undefined,
      nonlocale = false,
      replace = false,
      basename;

  if (!params || typeof params.callback !== 'function') {
    return;
  }

  if (params.name) {
    name = params.name;
  }

  if (params.object) {
    object = params.object;
  }

  if (params.locale) {
    locale = typeof params.locale === 'string' ? new Locale(params.locale) : params.locale;
  }

  if (params.type) {
    type = params.type;
  }

  if (params.loadParams) {
    loadParams = params.loadParams;
  }

  if (params.sync) {
    sync = params.sync;
  }

  if (params.nonlocale) {
    nonlocale = !!params.nonlocale;
  }

  if (typeof params.replace === 'boolean') {
    replace = params.replace;
  }

  callback = params.callback;

  if (object && !ilib.data.cache[object]) {
    ilib.data.cache[object] = {};
  }

  if (!type) {
    var dot = name.lastIndexOf(".");
    type = dot !== -1 ? name.substring(dot + 1) : "text";
  }

  var spec = (!nonlocale && locale.getSpec().replace(/-/g, '_') || "root") + "," + name + "," + String(JSUtils.hashCode(loadParams));

  if (!object || !ilib.data.cache[object] || typeof ilib.data.cache[object][spec] === 'undefined') {
    var data,
        returnOne = loadParams && loadParams.returnOne;

    if (type === "json") {
      // console.log("type is json");
      basename = name.substring(0, name.lastIndexOf("."));

      if (nonlocale) {
        basename = basename.replace(/[\.:\(\)\/\\\+\-]/g, "_");
        data = ilib.data[basename];
      } else {
        data = Utils.mergeLocData(basename, locale, replace, returnOne);
      }

      if (data) {
        // console.log("found assembled data");
        if (object) {
          ilib.data.cache[object][spec] = data;
        }

        callback(data);
        return;
      }
    } // console.log("ilib._load is " + typeof(ilib._load));


    if (typeof ilib._load !== 'undefined') {
      // the data is not preassembled, so attempt to load it dynamically
      var files = nonlocale ? [name || "resources.json"] : Utils.getLocFiles(locale, name);

      if (type !== "json") {
        loadParams.returnOne = true;
      }

      Utils._callLoadData(files, sync, loadParams, ilib.bind(this, function (arr) {
        if (type === "json") {
          data = ilib.data[basename] || {};

          for (var i = 0; i < arr.length; i++) {
            if (typeof arr[i] !== 'undefined') {
              if (loadParams.returnOne) {
                data = arr[i];
                break;
              }

              data = JSUtils.merge(data, arr[i], replace);
            }
          }

          if (object) {
            ilib.data.cache[object][spec] = data;
          }

          callback(data);
        } else {
          var i = arr.length - 1;

          while (i > -1 && !arr[i]) {
            i--;
          }

          if (i > -1) {
            if (object) {
              ilib.data.cache[object][spec] = arr[i];
            }

            callback(arr[i]);
          } else {
            callback(undefined);
          }
        }
      }));
    } else {
      // no data other than the generic shared data
      if (type === "json") {
        data = ilib.data[basename];
      }

      if (object && data) {
        ilib.data.cache[object][spec] = data;
      }

      callback(data);
    }
  } else {
    callback(ilib.data.cache && ilib.data.cache[object] && ilib.data.cache[object][spec]);
  }
};

module.exports = Utils;

/***/ }),

/***/ "./node_modules/@enact/i18n/ilib/lib/ilib.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/i18n/ilib/lib/ilib.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, global) {

function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * ilib.js - define the ilib name space
 * 
 * Copyright © 2012-2018, JEDLSoft
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @namespace The global namespace that contains general ilib functions useful
 * to all of ilib
 * 
 * @version // !macro ilibVersion
 */


var ilib = ilib || {};
/** @private */

ilib._ver = function () {
  return;
};
/**
 * Return the current version of ilib.
 * 
 * @static
 * @return {string} a version string for this instance of ilib
 */


ilib.getVersion = function () {
  if (ilib._dyncode) {
    try {
      var pkg; //pkg = require("../package.json");

      /* [Temp fix for webOS build for enyo]
         The build has 2 parts of Enyo using the webOS submission of iLib.
         First, Enyo ilib re-routes the locale JSON requests to /usr/share/javascript/ilib/locale/ in place of ./lib/enyo-ilib/ilib/locale.
         Second, it also copies the js from /usr/share/javascript/ilib/locale/lib into ./lib/enyo-ilib/ilib/lib.
         Since the package.json is outside that lib directory, it's triggering the error.
         Will either need to move the package.json file location or update the webos_enyojs_app_2.6+.bbclass to copy the package.json as well.
      */

      pkg.version = "13.0.2";
      return pkg.version;
    } catch (e) {// ignore
    }
  }

  return ilib._ver() || "13.0";
};
/**
 * Place where resources and such are eventually assigned.
 */


ilib.data = {
  /** @type {{ccc:Object.<string,number>,nfd:Object.<string,string>,nfc:Object.<string,string>,nfkd:Object.<string,string>,nfkc:Object.<string,string>}} */
  norm: {
    ccc: {},
    nfd: {},
    nfc: {},
    nfkd: {},
    nfkc: {}
  },
  zoneinfo: {
    "Etc/UTC": {
      "o": "0:0",
      "f": "UTC"
    },
    "local": {
      "f": "local"
    }
  },

  /** @type {Object.<string,{to:Object.<string,string>,from:Object.<string,number>}>} */
  charmaps: {},

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  ctype: null,

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  ctype_c: null,

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  ctype_l: null,

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  ctype_m: null,

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  ctype_p: null,

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  ctype_z: null,

  /** @type {null|Object.<string,Array.<Array.<number>>>} */
  scriptToRange: null,

  /** @type {null|Object.<string,string|Object.<string|Object.<string,string>>>} */
  dateformats: null,

  /** @type {null|Array.<string>} */
  timezones: [],
  cache: {}
};
/*
if (typeof(window) !== 'undefined') {
    window["ilib"] = ilib;
}
*/
// export ilib for use as a module in nodejs

if (true) {
  module.exports = ilib;
  module.exports.ilib = ilib; // for backwards compatibility with older versions of ilib
}
/**
 * Sets the pseudo locale. Pseudolocalization (or pseudo-localization) is used for testing
 * internationalization aspects of software. Instead of translating the text of the software
 * into a foreign language, as in the process of localization, the textual elements of an application
 * are replaced with an altered version of the original language.These specific alterations make
 * the original words appear readable, but include the most problematic characteristics of 
 * the world's languages: varying length of text or characters, language direction, and so on.
 * Regular Latin pseudo locale: eu-ES and RTL pseudo locale: ps-AF
 * 
 * @param {string|undefined|null} localename the locale specifier for the pseudo locale
 */


ilib.setAsPseudoLocale = function (localename) {
  if (localename) {
    ilib.pseudoLocales.push(localename);
  }
};
/**
 * Reset the list of pseudo locales back to the default single locale of zxx-XX.
 * @static
 */


ilib.clearPseudoLocales = function () {
  ilib.pseudoLocales = ["zxx-XX", "zxx-Cyrl-XX", "zxx-Hans-XX", "zxx-Hebr-XX"];
};

ilib.clearPseudoLocales();
/**
 * Return the name of the platform
 * @private
 * @static
 * @return {string} string naming the platform
 */

ilib._getPlatform = function () {
  if (!ilib._platform) {
    try {
      if (typeof java.lang.Object !== 'undefined') {
        ilib._platform = typeof process !== 'undefined' ? "trireme" : "rhino";
        return ilib._platform;
      }
    } catch (e) {}

    if (typeof process !== 'undefined' && process.versions && process.versions.node && typeof module !== 'undefined') {
      ilib._platform = "nodejs";
    } else if (typeof Qt !== 'undefined') {
      ilib._platform = "qt";
    } else if (typeof window !== 'undefined') {
      ilib._platform = typeof PalmSystem !== 'undefined' ? "webos" : "browser";
    } else {
      ilib._platform = "unknown";
    }
  }

  return ilib._platform;
};
/**
 * If this ilib is running in a browser, return the name of that browser.
 * @private
 * @static
 * @return {string|undefined} the name of the browser that this is running in ("firefox", "chrome", "ie", 
 * "safari", or "opera"), or undefined if this is not running in a browser or if
 * the browser name could not be determined 
 */


ilib._getBrowser = function () {
  var browser = undefined;

  if (ilib._getPlatform() === "browser") {
    if (navigator && navigator.userAgent) {
      if (navigator.userAgent.indexOf("Firefox") > -1) {
        browser = "firefox";
      }

      if (navigator.userAgent.search(/Opera|OPR/) > -1) {
        browser = "opera";
      }

      if (navigator.userAgent.indexOf("Chrome") > -1) {
        browser = "chrome";
      }

      if (navigator.userAgent.indexOf(" .NET") > -1) {
        browser = "ie";
      }

      if (navigator.userAgent.indexOf("Safari") > -1) {
        // chrome also has the string Safari in its userAgent, but the chrome case is 
        // already taken care of above
        browser = "safari";
      }

      if (navigator.userAgent.indexOf("Edge") > -1) {
        browser = "Edge";
      }

      if (navigator.userAgent.search(/iPad|iPhone|iPod/) > -1) {
        // Due to constraints of the iOS platform, 
        // all browser must be built on top of the WebKit rendering engine
        browser = "iOS";
      }
    }
  }

  return browser;
};
/**
 * Return the value of a global variable given its name in a way that works 
 * correctly for the current platform.
 * @private
 * @static
 * @param {string} name the name of the variable to return
 * @return {*} the global variable, or undefined if it does not exist
 */


ilib._global = function (name) {
  switch (ilib._getPlatform()) {
    case "rhino":
      var top = function () {
        return (typeof global === "undefined" ? "undefined" : _typeof(global)) === 'object' ? global : this;
      }();

      break;

    case "nodejs":
    case "trireme":
      top = typeof global !== 'undefined' ? global : this; //console.log("ilib._global: top is " + (typeof(global) !== 'undefined' ? "global" : "this"));

      break;

    case "qt":
      return undefined;

    default:
      top = window;
      break;
  }

  try {
    return top[name];
  } catch (e) {
    return undefined;
  }
};
/**
 * Return true if the global variable is defined on this platform.
 * @private
 * @static
 * @param {string} name the name of the variable to check
 * @return {boolean} true if the global variable is defined on this platform, false otherwise
 */


ilib._isGlobal = function (name) {
  return typeof ilib._global(name) !== 'undefined';
};
/**
 * Clear the file load cache. This is mainly used by the unit tests,
 * but could be used by regular callers if you want to free up memory
 * for garbage collecting.
 */


ilib.clearCache = function () {
  ilib.data.cache = {};
};
/**
 * Sets the default locale for all of ilib. This locale will be used
 * when no explicit locale is passed to any ilib class. If the default
 * locale is not set, ilib will attempt to use the locale of the
 * environment it is running in, if it can find that. If not, it will
 * default to the locale "en-US". If a type of parameter is string, 
 * ilib will take only well-formed BCP-47 tag  <p>
 * 
 * 
 * @static
 * @param {string|undefined|null} spec the locale specifier for the default locale
 */


ilib.setLocale = function (spec) {
  if (typeof spec === 'string' || !spec) {
    ilib.locale = spec;
  } // else ignore other data types, as we don't have the dependencies
  // to look into them to find a locale

};
/**
 * Return the default locale for all of ilib if one has been set. This 
 * locale will be used when no explicit locale is passed to any ilib 
 * class. If the default
 * locale is not set, ilib will attempt to use the locale of the
 * environment it is running in, if it can find that. If not, it will
 * default to the locale "en-US".<p>
 * 
 * 
 * @static
 * @return {string} the locale specifier for the default locale
 */


ilib.getLocale = function () {
  if (typeof ilib.locale !== 'string') {
    var plat = ilib._getPlatform();

    switch (plat) {
      case 'browser':
        // running in a browser
        if (typeof navigator.language !== 'undefined') {
          ilib.locale = navigator.language.substring(0, 3) + navigator.language.substring(3, 5).toUpperCase(); // FF/Opera/Chrome/Webkit    
        }

        if (!ilib.locale) {
          // IE on Windows
          var lang = typeof navigator.browserLanguage !== 'undefined' ? navigator.browserLanguage : typeof navigator.userLanguage !== 'undefined' ? navigator.userLanguage : typeof navigator.systemLanguage !== 'undefined' ? navigator.systemLanguage : undefined;

          if (typeof lang !== 'undefined' && lang) {
            // for some reason, MS uses lower case region tags
            ilib.locale = lang.substring(0, 3) + lang.substring(3, 5).toUpperCase();
          }
        }

        break;

      case 'webos':
        // webOS
        if (typeof PalmSystem.locales !== 'undefined' && typeof PalmSystem.locales.UI != 'undefined' && PalmSystem.locales.UI.length > 0) {
          ilib.locale = PalmSystem.locales.UI;
        } else if (typeof PalmSystem.locale !== 'undefined') {
          ilib.locale = PalmSystem.locale;
        }

        break;

      case 'rhino':
        if (typeof environment !== 'undefined' && environment.user && typeof environment.user.language === 'string' && environment.user.language.length > 0) {
          // running under plain rhino
          ilib.locale = environment.user.language;

          if (typeof environment.user.country === 'string' && environment.user.country.length > 0) {
            ilib.locale += '-' + environment.user.country;
          }
        }

        break;

      case "trireme":
        // under trireme on rhino emulating nodejs
        var lang = process.env.LANG || process.env.LANGUAGE || process.env.LC_ALL; // the LANG variable on unix is in the form "lang_REGION.CHARSET"
        // where language and region are the correct ISO codes separated by
        // an underscore. This translate it back to the BCP-47 form.

        if (lang && typeof lang !== 'undefined') {
          ilib.locale = lang.substring(0, 2).toLowerCase() + '-' + lang.substring(3, 5).toUpperCase();
        }

        break;

      case 'nodejs':
        // running under nodejs
        var lang = process.env.LANG || process.env.LC_ALL; // the LANG variable on unix is in the form "lang_REGION.CHARSET"
        // where language and region are the correct ISO codes separated by
        // an underscore. This translate it back to the BCP-47 form.

        if (lang && typeof lang !== 'undefined') {
          ilib.locale = lang.substring(0, 2).toLowerCase() + '-' + lang.substring(3, 5).toUpperCase();
        }

        break;

      case 'qt':
        // running in the Javascript engine under Qt/QML
        var locobj = Qt.locale();
        var lang = locobj.name && locobj.name.replace("_", "-") || "en-US";
        break;
    }

    ilib.locale = typeof ilib.locale === 'string' && ilib.locale ? ilib.locale : 'en-US';

    if (ilib.locale === "en") {
      ilib.locale = "en-US"; // hack to get various platforms working correctly
    }
  }

  return ilib.locale;
};
/**
 * Sets the default time zone for all of ilib. This time zone will be used when
 * no explicit time zone is passed to any ilib class. If the default time zone
 * is not set, ilib will attempt to use the time zone of the
 * environment it is running in, if it can find that. If not, it will
 * default to the the UTC zone "Etc/UTC".<p>
 * 
 * 
 * @static
 * @param {string} tz the name of the time zone to set as the default time zone
 */


ilib.setTimeZone = function (tz) {
  ilib.tz = tz || ilib.tz;
};
/**
 * Return the default time zone for all of ilib if one has been set. This 
 * time zone will be used when no explicit time zone is passed to any ilib 
 * class. If the default time zone
 * is not set, ilib will attempt to use the locale of the
 * environment it is running in, if it can find that. If not, it will
 * default to the the zone "local".<p>
 * 
 * 
 * @static
 * @return {string} the default time zone for ilib
 */


ilib.getTimeZone = function () {
  if (typeof ilib.tz === 'undefined') {
    if (typeof navigator !== 'undefined' && typeof navigator.timezone !== 'undefined') {
      // running in a browser
      if (navigator.timezone.length > 0) {
        ilib.tz = navigator.timezone;
      }
    } else if (typeof PalmSystem !== 'undefined' && typeof PalmSystem.timezone !== 'undefined') {
      // running in webkit on webOS
      if (PalmSystem.timezone.length > 0) {
        ilib.tz = PalmSystem.timezone;
      }
    } else if (typeof environment !== 'undefined' && typeof environment.user !== 'undefined') {
      // running under rhino
      if (typeof environment.user.timezone !== 'undefined' && environment.user.timezone.length > 0) {
        ilib.tz = environment.user.timezone;
      }
    } else if (typeof process !== 'undefined' && typeof process.env !== 'undefined') {
      // running in nodejs
      if (process.env.TZ && typeof process.env.TZ !== "undefined") {
        ilib.tz = process.env.TZ;
      }
    }

    ilib.tz = ilib.tz || "local";
  }

  return ilib.tz;
};
/**
 * @class
 * Defines the interface for the loader class for ilib. The main method of the
 * loader object is loadFiles(), which loads a set of requested locale data files
 * from where-ever it is stored.
 * @interface
 */


ilib.Loader = function () {};
/**
 * Load a set of files from where-ever it is stored.<p>
 * 
 * This is the main function define a callback function for loading missing locale 
 * data or resources.
 * If this copy of ilib is assembled without including the required locale data
 * or resources, then that data can be lazy loaded dynamically when it is 
 * needed by calling this method. Each ilib class will first
 * check for the existence of data under ilib.data, and if it is not there, 
 * it will attempt to load it by calling this method of the laoder, and then place
 * it there.<p>
 * 
 * Suggested implementations of this method might load files 
 * directly from disk under nodejs or rhino, or within web pages, to load 
 * files from the server with XHR calls.<p>
 * 
 * The first parameter to this method, paths, is an array of relative paths within 
 * the ilib dir structure for the 
 * requested data. These paths will already have the locale spec integrated 
 * into them, so no further tweaking needs to happen to load the data. Simply
 * load the named files. The second
 * parameter tells the loader whether to load the files synchronously or asynchronously.
 * If the sync parameters is false, then the onLoad function must also be specified.
 * The third parameter gives extra parameters to the loader passed from the calling
 * code. This may contain any property/value pairs.  The last parameter, callback,
 * is a callback function to call when all of the data is finishing loading. Make
 * sure to call the callback with the context of "this" so that the caller has their 
 * context back again.<p>
 * 
 * The loader function must be able to operate either synchronously or asychronously. 
 * If the loader function is called with an undefined callback function, it is
 * expected to load the data synchronously, convert it to javascript
 * objects, and return the array of json objects as the return value of the 
 * function. If the loader 
 * function is called with a callback function, it may load the data 
 * synchronously or asynchronously (doesn't matter which) as long as it calls
 * the callback function with the data converted to a javascript objects
 * when it becomes available. If a particular file could not be loaded, the 
 * loader function should put undefined into the corresponding entry in the
 * results array. 
 * Note that it is important that all the data is loaded before the callback
 * is called.<p>
 * 
 * An example implementation for nodejs might be:
 * 
 * <pre>
 * var fs = require("fs");
 * 
 * var myLoader = function() {};
 * myLoader.prototype = new Loader();
 * myLoader.prototype.constructor = myLoader;
 * myLoader.prototype.loadFiles = function(paths, sync, params, callback) {
 *    if (sync) {
 *        var ret = [];
 *        // synchronous load -- just return the result
 *        paths.forEach(function (path) {
 *            var json = fs.readFileSync(path, "utf-8");
 *            ret.push(json ? JSON.parse(json) : undefined);
 *        });
 *        
 *        return ret;
 *    }
 *    this.callback = callback;
 *
 *    // asynchronous
 *    this.results = [];
 *    this._loadFilesAsync(paths);
 * }
 * myLoader.prototype._loadFilesAsync = function (paths) {
 *    if (paths.length > 0) {
 *        var file = paths.shift();
 *        fs.readFile(file, "utf-8", function(err, json) {
 *            this.results.push(err ? undefined : JSON.parse(json));
 *            // call self recursively so that the callback is only called at the end
 *            // when all the files are loaded sequentially
 *            if (paths.length > 0) {
 *                this._loadFilesAsync(paths);
 *            } else {
 *                this.callback(this.results);
 *            }
 *        });
 *     }
 * }
 * 
 * // bind to "this" so that "this" is relative to your own instance
 * ilib.setLoaderCallback(new myLoader());
 * </pre>

 * @param {Array.<string>} paths An array of paths to load from wherever the files are stored 
 * @param {Boolean} sync if true, load the files synchronously, and false means asynchronously
 * @param {Object} params an object with any extra parameters for the loader. These can be 
 * anything. The caller of the ilib class passes these parameters in. Presumably, the code that
 * calls ilib and the code that provides the loader are together and can have a private 
 * agreement between them about what the parameters should contain.
 * @param {function(Object)} callback function to call when the files are all loaded. The 
 * parameter of the callback function is the contents of the files.
 */


ilib.Loader.prototype.loadFiles = function (paths, sync, params, callback) {};
/**
 * Return all files available for loading using this loader instance.
 * This method returns an object where the properties are the paths to
 * directories where files are loaded from and the values are an array
 * of strings containing the relative paths under the directory of each
 * file that can be loaded.<p>
 * 
 * Example:
 *  <pre>
 *  {
 *      "/usr/share/javascript/ilib/locale": [
 *          "dateformats.json",
 *          "aa/dateformats.json",
 *          "af/dateformats.json",
 *          "agq/dateformats.json",
 *          "ak/dateformats.json",
 *          ...
 *          "zxx/dateformats.json"
 *      ]
 *  }
 *  </pre>
 * @returns {Object} a hash containing directory names and
 * paths to file that can be loaded by this loader 
 */


ilib.Loader.prototype.listAvailableFiles = function () {};
/**
 * Return true if the file in the named path is available for loading using
 * this loader. The path may be given as an absolute path, in which case
 * only that file is checked, or as a relative path, in which case, the
 * relative path may appear underneath any of the directories that the loader
 * knows about.
 * @returns {boolean} true if the file in the named path is available for loading, and
 * false otherwise
 */


ilib.Loader.prototype.isAvailable = function (path) {};
/**
 * Set the custom loader used to load ilib's locale data in your environment. 
 * The instance passed in must implement the Loader interface. See the
 * Loader class documentation for more information about loaders. 
 * 
 * @static
 * @param {ilib.Loader} loader class to call to access the requested data.
 * @return {boolean} true if the loader was installed correctly, or false
 * if not
 */


ilib.setLoaderCallback = function (loader) {
  // only a basic check
  if (_typeof(loader) === 'object' && typeof loader.loadFiles === 'function' || typeof loader === 'function' || typeof loader === 'undefined') {
    //console.log("setting callback loader to " + (loader ? loader.name : "undefined"));
    ilib._load = loader;
    return true;
  }

  return false;
};
/**
 * Return the custom Loader instance currently in use with this instance 
 * of ilib. If there is no loader, this method returns undefined.
 * 
 * @protected
 * @static
 * @return {ilib.Loader|undefined} the loader instance currently in use, or 
 * undefined if there is no such loader
 */


ilib.getLoader = function () {
  return ilib._load;
};
/**
 * Test whether an object is an javascript array. 
 * 
 * @static
 * @param {*} object The object to test
 * @return {boolean} return true if the object is an array
 * and false otherwise
 */


ilib.isArray = function (object) {
  if (_typeof(object) === 'object') {
    return Object.prototype.toString.call(object) === '[object Array]';
  }

  return false;
};
/**
 * Extend object1 by mixing in everything from object2 into it. The objects
 * are deeply extended, meaning that this method recursively descends the
 * tree in the objects and mixes them in at each level. Arrays are extended
 * by concatenating the elements of object2 onto those of object1.  
 * 
 * @static
 * @param {Object} object1 the target object to extend
 * @param {Object=} object2 the object to mix in to object1
 * @return {Object} returns object1
 */


ilib.extend = function (object1, object2) {
  var prop = undefined;

  if (object2) {
    for (prop in object2) {
      // don't extend object with undefined or functions
      if (prop && typeof object2[prop] !== 'undefined' && typeof object2[prop] !== "function") {
        if (ilib.isArray(object1[prop]) && ilib.isArray(object2[prop])) {
          //console.log("Merging array prop " + prop);
          object1[prop] = object1[prop].concat(object2[prop]);
        } else if (_typeof(object1[prop]) === 'object' && _typeof(object2[prop]) === 'object') {
          //console.log("Merging object prop " + prop);
          if (prop !== "ilib") {
            object1[prop] = ilib.extend(object1[prop], object2[prop]);
          }
        } else {
          //console.log("Copying prop " + prop);
          // for debugging. Used to determine whether or not json files are overriding their parents unnecessarily
          object1[prop] = object2[prop];
        }
      }
    }
  }

  return object1;
};

ilib.extend2 = function (object1, object2) {
  var prop = undefined;

  if (object2) {
    for (prop in object2) {
      // don't extend object with undefined or functions
      if (prop && typeof object2[prop] !== 'undefined') {
        if (ilib.isArray(object1[prop]) && ilib.isArray(object2[prop])) {
          //console.log("Merging array prop " + prop);
          object1[prop] = object1[prop].concat(object2[prop]);
        } else if (_typeof(object1[prop]) === 'object' && _typeof(object2[prop]) === 'object') {
          //console.log("Merging object prop " + prop);
          if (prop !== "ilib") {
            object1[prop] = ilib.extend2(object1[prop], object2[prop]);
          }
        } else {
          //console.log("Copying prop " + prop);
          // for debugging. Used to determine whether or not json files are overriding their parents unnecessarily
          object1[prop] = object2[prop];
        }
      }
    }
  }

  return object1;
};
/**
 * If Function.prototype.bind does not exist in this JS engine, this
 * function reimplements it in terms of older JS functions.
 * bind() doesn't exist in many older browsers.
 * 
 * @static
 * @param {Object} scope object that the method should operate on
 * @param {function(...)} method method to call
 * @return {function(...)|undefined} function that calls the given method 
 * in the given scope with all of its arguments properly attached, or
 * undefined if there was a problem with the arguments
 */


ilib.bind = function (scope, method
/*, bound arguments*/
) {
  if (!scope || !method) {
    return undefined;
  }
  /** @protected 
   * @param {Arguments} inArrayLike
   * @param {number=} inOffset
   */


  function cloneArray(inArrayLike, inOffset) {
    var arr = [];

    for (var i = inOffset || 0, l = inArrayLike.length; i < l; i++) {
      arr.push(inArrayLike[i]);
    }

    return arr;
  }

  if (typeof method === 'function') {
    var func,
        args = cloneArray(arguments, 2);

    if (typeof method.bind === 'function') {
      func = method.bind.apply(method, [scope].concat(args));
    } else {
      func = function func() {
        var nargs = cloneArray(arguments); // invoke with collected args

        return method.apply(scope, args.concat(nargs));
      };
    }

    return func;
  }

  return undefined;
};
/**
 * @private
 */


ilib._dyncode = false;
/**
 * Return true if this copy of ilib is using dynamically loaded code. It returns
 * false for pre-assembled code.
 * 
 * @static
 * @return {boolean} true if this ilib uses dynamically loaded code, and false otherwise
 */

ilib.isDynCode = function () {
  return ilib._dyncode;
};
/**
 * @private
 */


ilib._dyndata = false;
/**
 * Return true if this copy of ilib is using dynamically loaded locale data. It returns
 * false for pre-assembled data.
 * 
 * @static
 * @return {boolean} true if this ilib uses dynamically loaded locale data, and false otherwise
 */

ilib.isDynData = function () {
  return ilib._dyndata;
};

ilib._loadtime = new Date().getTime();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../../../usr/local/lib/node_modules/@enact/cli/node_modules/process/browser.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/process/browser.js"), __webpack_require__(/*! ./../../../../../../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/@enact/i18n/locale/locale.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/i18n/locale/locale.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isNonLatinLocale = isNonLatinLocale;
exports.isRtlLocale = isRtlLocale;
exports.updateLocale = void 0;

var _ilib = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/ilib */ "./node_modules/@enact/i18n/ilib/lib/ilib.js"));

var _LocaleInfo = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/LocaleInfo */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js"));

var _ScriptInfo = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/ScriptInfo */ "./node_modules/@enact/i18n/ilib/lib/ScriptInfo.js"));

var _case = __webpack_require__(/*! ../src/case */ "./node_modules/@enact/i18n/src/case.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
} // Returns `true` if a locale list is provided and it includes either the language (the first part
// of the spec e.g. ko) or the entire spec (e.g. ko-KR)


var includesLocale = function includesLocale(localeList, locale) {
  return Array.isArray(localeList) && (localeList.includes(locale.getLanguage()) || localeList.includes(locale.toString()));
};
/**
 * Tell whether or not the given locale is considered a non-Latin locale for webOS purposes. This
 * controls which fonts are used in various places to show the various languages. An undefined spec
 * parameter means to test the current locale.
 *
 * @memberof i18n/locale
 * @param {ilib.Locale|string|undefined} spec locale specifier or locale object of the locale to
 *	test, or undefined to test the current locale
 * @param {Object} [options] An object configuring the request. Must include an `onLoad` member to
 *                           receive the result.
 */


function isNonLatinLocale(spec) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _onLoad = options.onLoad,
      latinLanguageOverrides = options.latinLanguageOverrides,
      nonLatinLanguageOverrides = options.nonLatinLanguageOverrides,
      rest = _objectWithoutProperties(options, ["onLoad", "latinLanguageOverrides", "nonLatinLanguageOverrides"]);

  if (!_onLoad) return; // eslint-disable-next-line no-new

  new _LocaleInfo["default"](spec, _objectSpread({}, rest, {
    onLoad: function onLoad(li) {
      var locale = li.getLocale();

      _onLoad( // the language actually is non-latin and should not be treated as latin
      li.getScript() !== 'Latn' && !includesLocale(latinLanguageOverrides, locale) || // the language is latin but should be treated as non-latin
      includesLocale(nonLatinLanguageOverrides, locale));
    }
  }));
}
/**
 * Determines if current locale is a right-to-left locale.
 *
 * @memberof i18n/locale
 * @param {Object} [options] An object configuring the request. Must include an `onLoad` member to
 *                           receive the result.
 */


function isRtlLocale() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _onLoad2 = options.onLoad,
      sync = options.sync;
  if (!_onLoad2) return; // eslint-disable-next-line no-new

  new _LocaleInfo["default"](_ilib["default"].getLocale(), _objectSpread({}, options, {
    onLoad: function onLoad(li) {
      var scriptName = li.getScript(); // eslint-disable-next-line no-new

      new _ScriptInfo["default"](scriptName, {
        sync: sync,
        onLoad: function onLoad(script) {
          _onLoad2(script.getScriptDirection() === 'rtl');
        }
      });
    }
  }));
}
/**
 * This Enact hook lets us know that the system locale has changed and gives
 * us a chance to update the iLib locale before Enact broadcasts its
 * `onlocalechange` signal.
 * Provide a locale string, like 'en-US' or 'ja-JP', to conveniently set
 * that locale immediately. Provide nothing, and reset the locale back to the
 * browser's default language.
 *
 * @memberof i18n/locale
 * @param {String} locale Locale identifier
 * @returns {undefined}
 */


var updateLocale = function updateLocale(locale) {
  // blow away the cache to force it to reload the manifest files for the new app
  // eslint-disable-next-line no-undefined
  if (_ilib["default"]._load) _ilib["default"]._load.manifest = undefined; // remove the cache of the platform name to allow transition between snapshot and browser

  delete _ilib["default"]._platform; // load any external ilib/resbundle data

  _ilib["default"].data = global.ilibData || _ilib["default"].data;
  _ilib["default"].data.cache = _ilib["default"].data.cache || {};
  _ilib["default"].data.cache['ResBundle-strings'] = global.resBundleData || {}; // ilib handles falsy values and automatically uses local locale when encountered which
  // is expected and desired

  _ilib["default"].setLocale(locale);

  var newLocale = _ilib["default"].getLocale(); // Recreate the case mappers to use the just-recently-set locale


  (0, _case.initCaseMappers)();
  return newLocale;
};

exports.updateLocale = updateLocale;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/@enact/i18n/src/Loader.js":
/*!************************************************!*\
  !*** ./node_modules/@enact/i18n/src/Loader.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Loader = EnyoLoader;
exports["default"] = void 0;

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _xhr = _interopRequireDefault(__webpack_require__(/*! xhr */ "./node_modules/xhr/index.js"));

var _Loader = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/Loader */ "./node_modules/@enact/i18n/ilib/lib/Loader.js"));

var _LocaleInfo = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/LocaleInfo */ "./node_modules/@enact/i18n/ilib/lib/LocaleInfo.js"));

var _zoneinfo = _interopRequireDefault(__webpack_require__(/*! ./zoneinfo */ "./node_modules/@enact/i18n/src/zoneinfo.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var getImpl = function getImpl(url, callback, sync) {
  if (typeof XMLHttpRequest !== 'undefined') {
    _xhr["default"].XMLHttpRequest = XMLHttpRequest || _xhr["default"].XMLHttpRequest;
    var req;
    (0, _xhr["default"])({
      url: url,
      sync: sync,
      beforeSend: function beforeSend(r) {
        return req = r;
      }
    }, function (err, resp, body) {
      var error = err || resp.statusCode !== 200 && resp.statusCode; // false failure from chrome and file:// urls

      if (error && req.status === 0 && req.response.length > 0) {
        body = req.response;
        error = false;
      }

      var json = null;

      try {
        json = error ? null : JSON.parse(body);
      } catch (e) {
        error = 'Failed to parse ILIB JSON data';
      }

      callback(json, error);
    });
  } else {
    callback(null, new Error('Not a web browser environment'));
  }
};

var getSync = function getSync(url, callback) {
  return getImpl(url, callback, true);
};

var get = (0, _util.memoize)(function (url) {
  return new Promise(function (resolve, reject) {
    getImpl(url, function (json, error) {
      if (error) {
        reject(error);
      } else {
        resolve(json);
      }
    }, false);
  });
});
var iLibBase =  false ? undefined : __webpack_require__.p + "node_modules/@enact/i18n/ilib";
var iLibResources =  false ? undefined : __webpack_require__.p + "resources";
var cachePrefix = 'ENACT-ILIB-';
var cacheKey = cachePrefix + 'CACHE-ID';
var cacheID = typeof __webpack_require__.ilib_cache_id === 'undefined' ? '$ILIB' : __webpack_require__.ilib_cache_id;

function EnyoLoader() {
  this.base = iLibBase; // TODO: full enyo.platform implementation for improved accuracy

  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' && _typeof(window.PalmSystem) === 'object') {
    this.webos = true;
  }
}

EnyoLoader.prototype = new _Loader["default"]();
EnyoLoader.prototype.constructor = EnyoLoader;

EnyoLoader.prototype._createZoneFile = function (path) {
  var zone = path.substring(path.indexOf('zoneinfo')); // remove the .json suffix to get the name of the zone

  zone = zone.substring(0, zone.length - 5);

  try {
    var zif = new _zoneinfo["default"]('/usr/share/' + zone); // only get the info for this year. Later we can get the info
    // for any historical or future year too

    return zif.getIlibZoneInfo(new Date());
  } catch (e) {// no file, so just return nothing
  }
};

EnyoLoader.prototype._pathjoin = function (_root, subpath) {
  if (!_root || !_root.length) {
    return subpath;
  }

  if (!subpath || !subpath.length) {
    return _root;
  }

  return _root + (_root.charAt(_root.length - 1) !== '/' ? '/' : '') + subpath;
};
/**
 * Load the list of files asynchronously. This uses recursion in
 * order to create a queue of files that will be loaded serially.
 * Each layer, starting at the bottom, loads a file and then loads
 * the layer on top of it. The very top file on the stack will have
 * zero files to load, so instead it will be the one to call the
 * callback to notify the caller that all the content is loaded.
 *
 * @param {Array.<string>} paths array of strings containing relative paths for required locale data
 *	files
 * @param {Array} results empty array in which to place the resulting json when it is loaded from a
 *	file
 * @param {Object} params An object full of parameters that the caller is passing to this function
 *	to help load the files
 * @param {function(Array.<Object>)} callback callback to call when this function is finished
 *	attempting to load all the files that exist and can be loaded
 *
 * @returns {Promise}
 */


EnyoLoader.prototype._loadFilesAsync = function (path, params, cache) {
  var _this = this;

  var _root = iLibResources;

  if (params && typeof params.root !== 'undefined') {
    _root = params.root;
  }

  var cacheItem = cache.data.shift(),
      url;

  if (this.webos && path.indexOf('zoneinfo') !== -1) {
    // TODO: Sort out async zone file loading
    return this._createZoneFile(path);
  } else if (cacheItem) {
    return Promise.resolve(cacheItem);
  }

  return this.loadManifests(_root).then(function () {
    var isRootAvailable = _this.isAvailable(_root, path);

    if (isRootAvailable) {
      url = _this._pathjoin(_root, path);
    } else {
      var localeBase = _this._pathjoin(_this.base, 'locale');

      var isBaseAvailable = _this.isAvailable(localeBase, path);

      if (isBaseAvailable) {
        url = _this._pathjoin(localeBase, path);
      }
    }

    if (url) {
      return get(url).then(function (json) {
        if (_typeof(json) === 'object') {
          cache.update = true;
          return json;
        } else if (path === 'localeinfo.json') {
          return _LocaleInfo["default"].defaultInfo;
        }
      });
    }

    return null;
  });
};

EnyoLoader.prototype._loadFilesCache = function (_root, paths) {
  this._validateCache();

  if (typeof window !== 'undefined' && window.localStorage && paths.length > 0) {
    var stored = window.localStorage.getItem(cachePrefix + _root + '/' + paths[0]);

    if (stored) {
      var target = JSON.stringify(paths);
      var data = JSON.parse(stored);

      if (data.target === target) {
        return data.value;
      } else {
        window.localStorage.removeItem(cachePrefix + _root + '/' + paths[0]);
      }
    }
  }

  return new Array(paths.length);
};

EnyoLoader.prototype._storeFilesCache = function (_root, paths, data) {
  if (typeof window !== 'undefined' && window.localStorage && paths.length > 0) {
    var target = JSON.stringify(paths);
    window.localStorage.setItem(cachePrefix + _root + '/' + paths[0], JSON.stringify({
      target: target,
      value: data
    }));
  }
};

EnyoLoader.prototype._validateCache = function () {
  if (!this._cacheValidated && typeof window !== 'undefined' && window.localStorage) {
    var activeID = window.localStorage.getItem(cacheKey);

    if (activeID !== cacheID) {
      for (var i = 0; i < window.localStorage.length; i++) {
        var key = window.localStorage.key(i);

        if (key.indexOf(cachePrefix) === 0) {
          window.localStorage.removeItem(key);
          i--;
        }
      }

      window.localStorage.setItem(cacheKey, cacheID);
    }
  }

  this._cacheValidated = true;
};

EnyoLoader.prototype.loadFiles = function (paths, sync, params, callback) {
  var _this2 = this;

  var _root = params && typeof params.root !== 'undefined' ? params.root : iLibResources;

  var cache = {
    data: this._loadFilesCache(_root, paths)
  };

  if (sync) {
    var ret = [];

    var locdata = this._pathjoin(this.base, 'locale'); // synchronous


    paths.forEach(function (path, index) {
      if (this.webos && path.indexOf('zoneinfo') !== -1) {
        ret.push(this._createZoneFile(path));
      } else if (cache.data[index]) {
        ret.push(cache.data[index]);
      } else {
        var found = false;

        var handler = function handler(json, err) {
          if (!err && _typeof(json) === 'object') {
            cache.update = true;
            ret.push(json);
            found = true;
          }
        };

        this.loadManifestsSync(_root);

        if (this.isAvailable(_root, path)) {
          getSync(this._pathjoin(_root, path), handler);
        }

        if (!found && this.isAvailable(locdata, path)) {
          getSync(this._pathjoin(locdata, path), handler);
        }

        if (!found) {
          if (path === 'localeinfo.json') {
            // Use default locale info when xhr on root localeinfo.json fails/skips
            ret.push(_LocaleInfo["default"].defaultInfo);
          } else {
            // not there, so fill in a blank entry in the array
            // eslint-disable-next-line no-undefined
            ret.push(undefined);
          }
        }
      }
    }.bind(this));

    if (cache.update) {
      this._storeFilesCache(_root, paths, ret);
    }

    if (typeof callback === 'function') {
      callback.call(this, ret);
    }

    return ret;
  } // asynchronous


  Promise.all(paths.map(function (path) {
    return _this2._loadFilesAsync(path, params, cache);
  })).then(function (results) {
    if (cache.update) {
      _this2._storeFilesCache(_root, paths, results);
    }

    if (typeof callback === 'function') {
      callback.call(_this2, results);
    }
  });
};

EnyoLoader.prototype._handleManifest = function (dirpath, filepath, json) {
  // star indicates there was no ilibmanifest.json, so always try to load files from
  // that dir
  if (json != null) {
    if (typeof window !== 'undefined' && window.localStorage) {
      window.localStorage.setItem(cachePrefix + filepath, JSON.stringify(json));
    }

    this.manifest[dirpath] = json.files;
  } else {
    this.manifest[dirpath] = '*';
  }

  return this.manifest[dirpath];
};

EnyoLoader.prototype._loadManifest = function (_root, subpath, sync) {
  var _this3 = this;

  if (!this.manifest) {
    this.manifest = {};
  }

  var dirpath = this._pathjoin(_root, subpath);

  var filepath = this._pathjoin(dirpath, 'ilibmanifest.json');

  if (this.manifest[dirpath]) {
    return;
  }

  var cachedManifest;

  if (typeof window !== 'undefined' && window.localStorage) {
    cachedManifest = window.localStorage.getItem(cachePrefix + filepath);
  }

  if (cachedManifest) {
    this.manifest[dirpath] = JSON.parse(cachedManifest).files;
    return sync ? this.manifest[dirpath] : Promise.resolve(this.manifest[dirpath]);
  }

  if (sync) {
    getSync(filepath, function (json) {
      _this3._handleManifest(dirpath, filepath, json);
    });
    return;
  }

  return get(filepath).then(function (json) {
    return _this3._handleManifest(dirpath, filepath, json);
  });
};

EnyoLoader.prototype.loadManifests = function (_root) {
  this._validateCache();

  return Promise.all([// standard ilib locale data
  this._loadManifest(this.base, 'locale'), // the app's resources dir
  this._loadManifest('', iLibResources), // maybe it's a custom root? If so, try to load
  // the manifest file first in case it is there
  this._loadManifest(_root, '')]);
};

EnyoLoader.prototype.loadManifestsSync = function (_root) {
  // load standard manifests
  if (!this.manifest) {
    this._validateCache();

    this._loadManifest(this.base, 'locale', true); // standard ilib locale data


    this._loadManifest('', iLibResources, true); // the app's resources dir

  }

  if (!this.manifest[_root]) {
    // maybe it's a custom root? If so, try to load
    // the manifest file first in case it is there
    this._loadManifest(_root, '', true);
  }
};

EnyoLoader.prototype.isAvailable = function (_root, path) {
  // util.print('enyo loader: isAvailable ' + path + '? ');
  // star means attempt to load everything because there was no manifest in that dir
  if (this.manifest[_root] === '*' || this.manifest[_root].indexOf(path) !== -1) {
    // util.print('true\n');
    return true;
  } // util.print('false\n');


  return false;
};

var _default = EnyoLoader;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/i18n/src/case.js":
/*!**********************************************!*\
  !*** ./node_modules/@enact/i18n/src/case.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initCaseMappers = initCaseMappers;
exports.toUpperCase = exports.toLowerCase = void 0;

var _CaseMapper = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/CaseMapper */ "./node_modules/@enact/i18n/ilib/lib/CaseMapper.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var toLowerCaseMapper, toUpperCaseMapper;
/**
 * Set CaseMapper object references to ilib's current locale (its most recently set, by default)
 *
 * @returns {undefined}
 */

function initCaseMappers() {
  toLowerCaseMapper = new _CaseMapper["default"]({
    direction: 'tolower'
  });
  toUpperCaseMapper = new _CaseMapper["default"]({
    direction: 'toupper'
  });
}
/**
 * Locale-safely convert a string to lower case.
 *
 * @function
 * @param {String} inString String to convert to lower case
 * @returns {String} Lower-cased string
 */


var toLowerCase = function toLowerCase(inString) {
  if (inString != null) {
    return toLowerCaseMapper.map(inString.toString());
  }

  return inString;
};
/**
 * Locale-safely convert a string to upper case.
 *
 * @function
 * @param {String} inString String to convert to upper case
 * @returns {String} Upper-cased string
 */


exports.toLowerCase = toLowerCase;

var toUpperCase = function toUpperCase(inString) {
  if (inString != null) {
    return toUpperCaseMapper.map(inString.toString());
  }

  return inString;
};

exports.toUpperCase = toUpperCase;

/***/ }),

/***/ "./node_modules/@enact/i18n/src/dates.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/i18n/src/dates.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // ilib doesn't load the non-Gregorian calendars and dates initially. To ensure they are packaged
// by enyo-dev, we've added explicit requires for each Date (which in turn requires the relevant
// Calendar). This is only necessary for builds not using the library-mode build of enyo-ilib which
// would have included everything

__webpack_require__(/*! ../ilib/lib/GregorianDate */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js"); // not required (rimshot) but included for completeness


__webpack_require__(/*! ../ilib/lib/CopticDate */ "./node_modules/@enact/i18n/ilib/lib/CopticDate.js");

__webpack_require__(/*! ../ilib/lib/EthiopicDate */ "./node_modules/@enact/i18n/ilib/lib/EthiopicDate.js");

__webpack_require__(/*! ../ilib/lib/GregorianDate */ "./node_modules/@enact/i18n/ilib/lib/GregorianDate.js");

__webpack_require__(/*! ../ilib/lib/HanDate */ "./node_modules/@enact/i18n/ilib/lib/HanDate.js");

__webpack_require__(/*! ../ilib/lib/HebrewDate */ "./node_modules/@enact/i18n/ilib/lib/HebrewDate.js");

__webpack_require__(/*! ../ilib/lib/IslamicDate */ "./node_modules/@enact/i18n/ilib/lib/IslamicDate.js");

__webpack_require__(/*! ../ilib/lib/JulianDate */ "./node_modules/@enact/i18n/ilib/lib/JulianDate.js");

__webpack_require__(/*! ../ilib/lib/PersianDate */ "./node_modules/@enact/i18n/ilib/lib/PersianDate.js");

__webpack_require__(/*! ../ilib/lib/PersianAlgoDate */ "./node_modules/@enact/i18n/ilib/lib/PersianAlgoDate.js");

__webpack_require__(/*! ../ilib/lib/ThaiSolarDate */ "./node_modules/@enact/i18n/ilib/lib/ThaiSolarDate.js");

/***/ }),

/***/ "./node_modules/@enact/i18n/src/glue.js":
/*!**********************************************!*\
  !*** ./node_modules/@enact/i18n/src/glue.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

__webpack_require__(/*! ./dates */ "./node_modules/@enact/i18n/src/dates.js");

var _ilib = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/ilib */ "./node_modules/@enact/i18n/ilib/lib/ilib.js"));

var _Loader = _interopRequireDefault(__webpack_require__(/*! ./Loader */ "./node_modules/@enact/i18n/src/Loader.js"));

var _locale = __webpack_require__(/*! ../locale */ "./node_modules/@enact/i18n/locale/locale.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

_ilib["default"].setLoaderCallback(new _Loader["default"]());

if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' && typeof window.UILocale !== 'undefined') {
  // this is a hack until GF-1581 is fixed
  _ilib["default"].setLocale(window.UILocale);
} // we go ahead and run this once during loading of iLib settings are valid
// during the loads of later libraries.


(0, _locale.updateLocale)(null, true);

/***/ }),

/***/ "./node_modules/@enact/i18n/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/i18n/src/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "default", {
  enumerable: true,
  get: function get() {
    return _ilib["default"];
  }
});

__webpack_require__(/*! ./glue */ "./node_modules/@enact/i18n/src/glue.js");

var _ilib = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/ilib */ "./node_modules/@enact/i18n/ilib/lib/ilib.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

/***/ }),

/***/ "./node_modules/@enact/i18n/src/packedbuffer.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/i18n/src/packedbuffer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * packedbuffer.js - represent a packed buffer of bytes
 *
 * Copyright © 2014 LG Electronics, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Represents a binary buffer of unsigned bytes that will be parsed in various ways. The buffer
 * can be decoded by reading various lengths of bytes and interpreting them as longs
 * or unsigned bytes, etc. The bytes are interpreted in big-endian (network) format.
 * @constructor
 * @param {string} buffer the binary buffer represented as a string
 */

var PackedBuffer = function PackedBuffer(buffer) {
  this.buffer = buffer;
  this.index = 0;
};
/**
 * Return the specified number of signed long integers from the current location in
 * the buffer as an array of numbers and advance the current pointer in the buffer.
 * This method will only return as many longs as are available in the rest of the
 * buffer.
 *
 * @param {number} num The number of longs to return
 * @returns {Array.<number>} the array of signed long integers
 */


PackedBuffer.prototype.getLongs = function (num) {
  var result;

  if (this.buffer && this.index < this.buffer.length) {
    result = [];

    for (var i = 0; i < num && this.index + 3 < this.buffer.length; i++) {
      var longnum = this.buffer[this.index] << 24 | this.buffer[this.index + 1] << 16 | this.buffer[this.index + 2] << 8 | this.buffer[this.index + 3];
      result.push(longnum);
      this.index += 4;
    }
  }

  return result;
};
/**
 * Return a signed long integer from the current location in
 * the buffer as an array of numbers and advance the current pointer in the buffer.
 * This method will only return a long if it is available in the buffer, otherwise
 * it will return undefined.
 *
 * @returns {number} the long at the current point in the buffer, or undefined if
 * there is not enough bytes left in the buffer to form a long
 */


PackedBuffer.prototype.getLong = function () {
  var longs = this.getLongs(1);

  if (longs && longs.length > 0) {
    return longs[0];
  }
};
/**
 * Return the specified number of signed byte integers from the current location in
 * the buffer as an array of numbers and advance the current pointer in the buffer.
 * This method will only return as many bytes as are available in the rest of the
 * buffer.
 *
 * @param {number|undefined} num The number of bytes to return
 * @returns {Array.<number>} the array of signed byte integers
 */


PackedBuffer.prototype.getBytes = function (num) {
  var result;

  if (this.buffer && this.index < this.buffer.length) {
    result = [];

    for (var i = 0; i < num && this.index < this.buffer.length; i++) {
      var bytenum = this.buffer[this.index++];

      if (bytenum & 0x80) {
        bytenum -= 0x100;
      }

      result.push(bytenum);
    }
  }

  return result;
};
/**
 * Return a signed byte integer from the current location in
 * the buffer as an array of numbers and advance the current pointer in the buffer.
 * This method will only return a byte if it is available in the buffer, otherwise
 * it will return undefined.
 *
 * @returns {number} the byte at the current point in the buffer, or undefined if
 * there is not enough bytes left in the buffer to form a byte
 */


PackedBuffer.prototype.getByte = function () {
  var bytes = this.getBytes(1);

  if (bytes && bytes.length > 0) {
    return bytes[0];
  }
};
/**
 * Return the specified number of unsigned byte integers from the current location in
 * the buffer as an array of numbers and advance the current pointer in the buffer.
 * This method will only return as many bytes as are available in the rest of the
 * buffer.
 *
 * @param {number} num The number of bytes to return
 * @returns {Array.<number>} the array of unsigned byte integers
 */


PackedBuffer.prototype.getUnsignedBytes = function (num) {
  var result;

  if (this.buffer && this.index < this.buffer.length) {
    result = [];

    for (var i = 0; i < num && this.index < this.buffer.length; i++) {
      result.push(this.buffer[this.index++]);
    }
  }

  return result;
};
/**
 * Return a string made out of the given number of bytes and convert
 * from UTF-8 to UTF-16.
 *
 * @param {number} num The number of bytes to make a string out of
 * @returns {string} a string made out of the given bytes
 */


PackedBuffer.prototype.getString = function (num) {
  var arr = this.getUnsignedBytes(num);
  var str = '';

  for (var i = 0; i < arr.length; i++) {
    str += String.fromCharCode(arr[i]);
  }

  return str;
};
/**
 * Advance the current pointer in the buffer by the specified number of
 * bytes in the string.
 *
 * @param {number} num The number of bytes to skip
 * @returns {void}
 */


PackedBuffer.prototype.skip = function (num) {
  this.index += num;
};

module.exports = PackedBuffer;

/***/ }),

/***/ "./node_modules/@enact/i18n/src/resBundle.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/i18n/src/resBundle.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearResBundle = clearResBundle;
exports.createResBundle = createResBundle;
exports.getIStringFromBundle = getIStringFromBundle;
exports.getResBundle = getResBundle;
exports.setResBundle = setResBundle;

var _IString = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/IString */ "./node_modules/@enact/i18n/ilib/lib/IString.js"));

var _ResBundle = _interopRequireDefault(__webpack_require__(/*! ../ilib/lib/ResBundle */ "./node_modules/@enact/i18n/ilib/lib/ResBundle.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // The ilib.ResBundle for the active locale used by $L


var resBundle;
/**
 * Returns the current ilib.ResBundle
 *
 * @returns {ilib.ResBundle} Current ResBundle
 */

function getResBundle() {
  return resBundle;
}
/**
 * Creates a new ilib.ResBundle for string translation
 *
 * @param  {ilib.Locale} locale Locale for ResBundle
 *
 * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle
 */


function createResBundle(options) {
  var opts = _objectSpread({
    type: 'html',
    name: 'strings',
    lengthen: true
  }, options);

  if (!opts.onLoad) return; // eslint-disable-next-line no-new

  new _ResBundle["default"](_objectSpread({}, opts, {
    onLoad: function onLoad(bundle) {
      opts.onLoad(bundle || null);
    }
  }));
}
/**
 * Set the locale for the strings that $L loads. This may reload the
 * string resources if necessary.
 *
 * @param {string} spec the locale specifier
 * @returns {ilib.ResBundle} Current ResBundle
 */


function setResBundle(bundle) {
  return resBundle = bundle;
}
/**
 * Deletes the current bundle object of strings and clears the cache.
 * @returns {undefined}
 */


function clearResBundle() {
  delete _ResBundle["default"].strings;
  delete _ResBundle["default"].sysres;
  resBundle = null;
}
/**
 * Retrieves an IString from a resource bundle by key.
 *
 * If the bundle doesn't exist, the key is returned wrapped by IString.
 *
 * @param {String|Object} str Key for localized string
 * @param {ResBundl} rb ilib resource bundle
 * @returns	{IString} The string value wrapped by an IString
 */


function getIStringFromBundle(str, rb) {
  var isObject = _typeof(str) === 'object';

  if (rb) {
    return isObject ? rb.getString(str.value, str.key) : rb.getString(str);
  }

  return new _IString["default"](isObject ? str.value : str);
}

/***/ }),

/***/ "./node_modules/@enact/i18n/src/wrapIlibCallback.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/i18n/src/wrapIlibCallback.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapIlibCallback = exports["default"] = void 0;

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var invoke = function invoke(fn, options, callback) {
  var _onLoad = options.onLoad;
  fn(_objectSpread({}, options, {
    onLoad: function onLoad(result) {
      callback(result);
      if (_onLoad) _onLoad(result);
    }
  }));
};

var wrapIlibCallback = function wrapIlibCallback(fn) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var _options$sync = options.sync,
      sync = _options$sync === void 0 ? false : _options$sync;

  if (!fn) {
    return sync ? null : Promise.resolve(null);
  }

  if (sync) {
    var value = null;
    invoke(fn, options, function (v) {
      return value = v;
    });
    return value;
  }

  return new Promise(function (resolve) {
    return invoke(fn, options, resolve);
  });
};

exports.wrapIlibCallback = wrapIlibCallback;
var _default = wrapIlibCallback;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/i18n/src/zoneinfo.js":
/*!**************************************************!*\
  !*** ./node_modules/@enact/i18n/src/zoneinfo.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* eslint-env browser,es6 */

/*
 * zoneinfo.js - represent a binary zone info file
 *
 * Copyright © 2014 LG Electronics, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * The portion of this code that parses the zone info file format is derived
 * from the code in the node-zoneinfo project by Gregory McWhirter licensed
 * under the MIT license:
 *
 * Copyright (c) 2013 Gregory McWhirter
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject
 * to the following conditions:

 * The above copyright notice and this permission notice shall be included
 * in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

var PackedBuffer = __webpack_require__(/*! ./packedbuffer.js */ "./node_modules/@enact/i18n/src/packedbuffer.js");

var _platform = typeof PalmSystem !== 'undefined' ? 'webos' : 'browser';
/**
 * Represents a binary zone info file of the sort that the Unix Zone Info Compiler
 * produces.
 * @constructor
 * @param {string} path path to the file to be loaded
 * @param {number} year year of the zone info rules needed
 */


var ZoneInfoFile = function ZoneInfoFile(path) {
  var that = this;

  switch (_platform) {
    /*
    Uncomment and use this when enyo works for binary load.
    case 'enyo':
    	let ajax = new enyo.Ajax({
    		xhrFields: {
    			responseType:'arraybuffer'
    		},
    		cacheBust: false,
    		sync: true,
    		handleAs: 'binary',
    		url: 'file://' + path
    	});
    	ajax.response(this, function (s, r) {
    		let byteArray = new Uint8Array(r);
    		// console.log('ZoneInfoFile bytes received: ' + byteArray.length);
    		that._parseInfo(byteArray);
    	});
    	//ajax.error(this, function (s, r) {
    	//	console.log('ZoneInfoFile: failed to load files ' + JSON.stringify(s) + ' ' + r);
    	//});
    	ajax.go();
    	break;
    */
    default:
      {
        // use normal web techniques for sync binary data fetching
        // see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Sending_and_Receiving_Binary_Data
        var req = new XMLHttpRequest();
        req.open('GET', 'file:' + path, false);
        req.overrideMimeType('text/plain; charset=x-user-defined');

        req.onload = function () {
          var byteArray = new Uint8Array(req.response.length);

          for (var i = 0; i < req.response.length; i++) {
            byteArray[i] = req.response.charCodeAt(i) & 0xff;
          } // console.log('ZoneInfoFile bytes received: ' + byteArray.length);


          that._parseInfo(byteArray);
        };

        req.onerror = function () {
          throw new Error('Cannot load file ' + path);
        };

        req.send();
        break;
      }
  }
};
/**
 * @private
 * Parse the binary buffer to find the zone info
 * @param {Buffer} buffer The buffer to process
 * @returns {void}
 */


ZoneInfoFile.prototype._parseInfo = function (buffer) {
  var packed = new PackedBuffer(buffer); // The time zone information files used by tzset(3)
  // begin with the magic characters 'TZif' to identify
  // them as time zone information files, followed by
  // sixteen bytes reserved for future use, followed by
  // six four-byte values of type long, written in a
  // ''standard'' byte order (the high-order byte
  // of the value is written first).

  if (packed.getString(4) !== 'TZif') {
    throw new Error('file format not recognized');
  } else {
    // ignore 16 bytes
    packed.skip(16);
    /* eslint-disable camelcase */
    // The number of UTC/local indicators stored in the file.

    var tzh_ttisgmtcnt = packed.getLong(); // The number of standard/wall indicators stored in the file.

    var tzh_ttisstdcnt = packed.getLong(); // The number of leap seconds for which data is stored in the file.

    var tzh_leapcnt = packed.getLong(); // The number of 'transition times' for which data is stored in the file.

    var tzh_timecnt = packed.getLong(); // The number of 'local time types' for which data is stored in the file (must not be zero).

    var tzh_typecnt = packed.getLong(); // The number of characters of 'time zone abbreviation strings' stored in the file.

    var tzh_charcnt = packed.getLong();
    this.transitionTimes = tzh_timecnt ? packed.getLongs(tzh_timecnt) : [];
    this.transitionTimes = this.transitionTimes.map(function (item) {
      return item * 1000;
    }); // these are indexes into the zonesInfo that correspond to each transition time

    this.ruleIndex = tzh_timecnt ? packed.getUnsignedBytes(tzh_timecnt) : [];
    this.zoneInfo = [];

    for (var i = 0; i < tzh_typecnt; i++) {
      this.zoneInfo.push({
        offset: Math.floor(packed.getLong() / 60),
        // offset in seconds, so convert to minutes
        isdst: !!packed.getByte(),
        abbreviationIndex: packed.getByte()
      });
    }

    var allAbbreviations = packed.getString(tzh_charcnt);

    for (var _i = 0; _i < tzh_typecnt; _i++) {
      var abbreviation = allAbbreviations.substring(this.zoneInfo[_i].abbreviationIndex);
      this.zoneInfo[_i].abbreviation = abbreviation.substring(0, abbreviation.indexOf('\x00'));
    } // ignore the leap seconds


    if (tzh_leapcnt) {
      packed.skip(tzh_leapcnt * 2);
    } // skip the standard/wall time indicators


    if (tzh_ttisstdcnt) {
      packed.skip(tzh_ttisstdcnt);
    } // ignore the UTC/local time indicators -- everything should be UTC


    if (tzh_ttisgmtcnt) {
      packed.skip(tzh_ttisgmtcnt);
    } // finished reading
    // Replace ttinfo indexes for ttinfo objects.


    var that = this;
    this.ruleIndex = this.ruleIndex.map(function (item) {
      return {
        offset: that.zoneInfo[item].offset,
        isdst: that.zoneInfo[item].isdst,
        abbreviation: that.zoneInfo[item].abbreviation
      };
    }); // calculate the dst savings for each daylight time

    for (var _i2 = 0; _i2 < tzh_timecnt; _i2++) {
      if (_i2 > 0 && this.ruleIndex[_i2].isdst) {
        this.ruleIndex[_i2].savings = this.ruleIndex[_i2].offset - this.ruleIndex[_i2 - 1].offset;
      }
    } // Set standard, dst, and before ttinfos. before will be
    // used when a given time is before any transitions,
    // and will be set to the first non-dst ttinfo, or to
    // the first dst, if all of them are dst.


    if (!this.transitionTimes.length) {
      this.standardTime = this.zoneInfo[0];
    } else {
      for (var j = tzh_timecnt - 1; j > -1; j--) {
        var tti = this.ruleIndex[j];

        if (!this.standardTime && !tti.isdst) {
          this.standardTime = tti;
        } else if (!this.daylightTime && tti.isdst) {
          this.daylightTime = tti;
        }

        if (this.daylightTime && this.standardTime) {
          break;
        }
      }

      if (this.daylightTime && !this.standardTime) {
        this.standardTime = this.daylightTime;
      }

      for (var k = this.zoneInfo.length - 1; k > 0; k--) {
        if (!this.zoneInfo[k].isdst) {
          this.defaultTime = this.zoneInfo[k];
          break;
        }
      }
    }

    if (!this.defaultTime) {
      this.defaultTime = this.zoneInfo[this.zoneInfo.length - 1];
    }
  }
};
/**
 * Binary search a sorted array of numbers for a particular target value.
 * If the exact value is not found, it returns the index of the largest
 * entry that is smaller than the given target value.<p>
 *
 * @param {number} target element being sought
 * @param {Array} arr the array being searched
 * @returns {number} the index of the array into which the value would fit if
 * inserted, or -1 if given array is not an array or the target is not
 * a number
 */


ZoneInfoFile.prototype.bsearch = function (target, arr) {
  if (typeof arr === 'undefined' || !arr || typeof target === 'undefined' || target < arr[0]) {
    return -1;
  } // greater than the end of the array


  if (target > arr[arr.length - 1]) {
    return arr.length - 1;
  }

  var high = arr.length - 1,
      low = 0,
      mid = 0,
      value;

  while (low <= high) {
    mid = Math.floor((high + low) / 2);
    value = arr[mid] - target;

    if (value > 0) {
      high = mid - 1;
    } else if (value < 0) {
      low = mid + 1;
    } else {
      return mid;
    }
  }

  return high;
};
/**
 * Return whether or not this zone uses DST in the given year.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {boolean} true if the zone uses DST in the given year
 */


ZoneInfoFile.prototype.usesDST = function (date) {
  var thisYear = date.getTime();
  var nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year
  // search for the zone that was effective Jan 1 of this year
  // to Jan 1 of next year, and if any of the infos is DST, then
  // this zone supports DST in the given year.

  var index = this.bsearch(thisYear, this.transitionTimes);

  if (index !== -1) {
    while (index < this.transitionTimes.length && this.transitionTimes[index] < nextYear) {
      if (this.ruleIndex[index++].isdst) {
        return true;
      }
    }
  }

  return false;
};
/**
 * Return the raw offset from UTC that this zone uses at the given time.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {number} offset from from UTC in number of minutes. Negative
 * numbers are west of Greenwich, positive are east of Greenwich
 */


ZoneInfoFile.prototype.getRawOffset = function (date) {
  var thisYear = date.getTime();
  var nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year

  var index = this.bsearch(thisYear, this.transitionTimes);
  var offset = this.defaultTime.offset;

  if (index > -1) {
    while (index < this.transitionTimes.length && this.ruleIndex[index].isdst && this.transitionTimes[index + 1] < nextYear) {
      index++;
    }

    if (index < this.transitionTimes.length && !this.ruleIndex[index].isdst) {
      offset = this.ruleIndex[index].offset;
    }
  }

  return offset;
};
/**
 * If this zone uses DST in the given year, return the DST savings
 * in use. If the zone does not use DST in the given year, this
 * method will return 0.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {number} number of minutes in DST savings if the zone
 * uses DST in the given year, or zero otherwise
 */


ZoneInfoFile.prototype.getDSTSavings = function (date) {
  var thisYear = date.getTime();
  var nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year
  // search for all transitions between now and one year
  // from now, and calculate the difference in DST (if any)

  var index = this.bsearch(thisYear, this.transitionTimes);
  var savings = 0;

  if (index > -1) {
    while (index < this.transitionTimes.length && !this.ruleIndex[index].isdst && this.transitionTimes[index + 1] < nextYear) {
      index++;
    }

    if (index < this.transitionTimes.length && this.ruleIndex[index].isdst) {
      savings = this.ruleIndex[index].savings;
    }
  }

  return savings;
};
/**
 * Return the start date/time of DST if this zone uses
 * DST in the given year.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {number} unixtime representation of the start
 * of DST in the given year, or -1 if the zone does not
 * use DST in the given year
 */


ZoneInfoFile.prototype.getDSTStartDate = function (date) {
  var year = date.getFullYear();
  var thisYear = new Date(year, 0, 1).getTime();
  var nextYear = new Date(year + 1, 0, 1).getTime(); // search for all transitions between Jan 1 of this year
  // to Jan 1 of next year, and calculate the difference
  // in DST (if any)

  var index = this.bsearch(thisYear, this.transitionTimes);
  var startDate = -1;

  if (index > -1) {
    if (this.transitionTimes[index] < thisYear) {
      index++; // start in this year instead of the previous year
    }

    while (index < this.transitionTimes.length && !this.ruleIndex[index].isdst && this.transitionTimes[index + 1] < nextYear) {
      index++;
    }

    if (index < this.transitionTimes.length && this.ruleIndex[index].isdst) {
      startDate = this.transitionTimes[index];
    }
  }

  return startDate;
};
/**
 * Return the end date/time of DST if this zone uses
 * DST in the given year.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {number} unixtime representation of the end
 * of DST in the given year, or -1 if the zone does not
 * use DST in the given year
 */


ZoneInfoFile.prototype.getDSTEndDate = function (date) {
  var year = date.getFullYear();
  var thisYear = new Date(year, 0, 1).getTime();
  var nextYear = new Date(year + 1, 0, 1).getTime(); // search for all transitions between Jan 1 of this year
  // to Jan 1 of next year, and calculate the difference
  // in DST (if any)

  var index = this.bsearch(thisYear, this.transitionTimes);
  var endDate = -1;

  if (index > -1) {
    if (this.transitionTimes[index] < thisYear) {
      index++; // start in this year instead of the previous year
    }

    while (index < this.transitionTimes.length && this.ruleIndex[index].isdst && this.transitionTimes[index + 1] < nextYear) {
      index++;
    }

    if (index < this.transitionTimes.length && !this.ruleIndex[index].isdst) {
      endDate = this.transitionTimes[index];
    }
  }

  return endDate;
};
/**
 * Return the abbreviation used by this zone in standard
 * time.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {string} a string representing the abbreviation
 * used in this time zone during standard time
 */


ZoneInfoFile.prototype.getAbbreviation = function (date) {
  var thisYear = date.getTime();
  var nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year
  // search for all transitions between now and one year from now, and calculate the difference
  // in DST (if any)

  var abbr;

  if (this.transitionTimes.length > 0) {
    var index = this.bsearch(thisYear, this.transitionTimes);
    abbr = this.ruleIndex[index].abbreviation;

    if (index > -1) {
      while (index < this.transitionTimes.length && this.ruleIndex[index].isdst && this.transitionTimes[index + 1] < nextYear) {
        index++;
      }

      if (index < this.transitionTimes.length && !this.ruleIndex[index].isdst) {
        abbr = this.ruleIndex[index].abbreviation;
      }
    }
  } else {
    abbr = this.standardTime.abbreviation;
  }

  return abbr;
};
/**
 * Return the abbreviation used by this zone in daylight
 * time. If the zone does not use DST in the given year,
 * this returns the same thing as getAbbreviation().
 *
 * @param {Date} date the Gregorian date to test
 * @returns {string} a string representing the abbreviation
 * used in this time zone during daylight time
 */


ZoneInfoFile.prototype.getDSTAbbreviation = function (date) {
  var thisYear = date.getTime();
  var nextYear = thisYear + 31536000000; // this is the number of ms in 1 Gregorian year
  // search for all transitions between now and one year from now, and calculate the difference
  // in DST (if any)

  var abbr;

  if (this.transitionTimes.length > 0) {
    var index = this.bsearch(thisYear, this.transitionTimes);
    abbr = this.ruleIndex[index].abbreviation;

    if (index > -1) {
      while (index < this.transitionTimes.length && !this.ruleIndex[index].isdst && this.transitionTimes[index + 1] < nextYear) {
        index++;
      }

      if (index < this.transitionTimes.length && this.ruleIndex[index].isdst) {
        abbr = this.ruleIndex[index].abbreviation;
      }
    }
  } else {
    abbr = this.standardTime.abbreviation;
  }

  return abbr;
};
/**
 * Return the zone information for the given date in ilib
 * format.
 *
 * @param {Date} date the Gregorian date to test
 * @returns {Object} an object containing the zone information
 * for the given date in the format that ilib can use directly
 */


ZoneInfoFile.prototype.getIlibZoneInfo = function (date) {
  function minutesToStr(min) {
    var hours = Math.floor(min / 60);
    var minutes = min - hours * 60;
    return hours + ':' + minutes;
  }

  function unixtimeToJD(millis) {
    return 2440587.5 + millis / 86400000;
  }

  var res = {
    'o': minutesToStr(this.getRawOffset(date))
  };

  if (this.usesDST(date)) {
    res.f = '{c}';
    res.e = {
      'c': this.getAbbreviation(date),
      'j': unixtimeToJD(this.getDSTEndDate(date))
    };
    res.s = {
      'c': this.getDSTAbbreviation(date),
      'j': unixtimeToJD(this.getDSTStartDate(date)),
      'v': minutesToStr(this.getDSTSavings(date))
    };
  } else {
    res.f = this.getAbbreviation(date);
  }

  return res;
};

module.exports = ZoneInfoFile;

/***/ }),

/***/ "./node_modules/@enact/i18n/util/util.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/i18n/util/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "toLowerCase", {
  enumerable: true,
  get: function get() {
    return _case.toLowerCase;
  }
});
Object.defineProperty(exports, "toUpperCase", {
  enumerable: true,
  get: function get() {
    return _case.toUpperCase;
  }
});
exports.toWordCase = exports.toCapitalized = exports.isRtlText = void 0;

__webpack_require__(/*! ../src/glue */ "./node_modules/@enact/i18n/src/glue.js");

var _case = __webpack_require__(/*! ../src/case */ "./node_modules/@enact/i18n/src/case.js");
/**
 * A collection of locale-aware text utility function.
 *
 * @module i18n/util
 * @exports isRtlText
 * @exports toCapitalized
 * @exports toLowerCase
 * @exports toUpperCase
 * @exports toWordCase
 */

/*
 * This regex pattern is used by the [isRtlText()]{@link i18n/utils.isRtlText} function.
 *
 * Arabic: \u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFE
 * Hebrew: \u0590-\u05FF\uFB1D-\uFB4F
 *
 * @private
 */


var rtlPattern = /[\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFE\u0590-\u05FF\uFB1D-\uFB4F]/;
/**
 * Takes content `str` and determines whether or not it is [RTL]{@link /docs/developer-guide/glossary/#rtl}.
 *
 * @function
 * @memberof i18n/util
 * @param {String} str - A string to check the [RTL]{@link /docs/developer-guide/glossary/#rtl}-ness of.
 * @returns {Boolean} `true` if `str` should be RTL; `false` if not.
 * @public
 */

var isRtlText = function isRtlText(str) {
  if (typeof str === 'string') {
    return rtlPattern.test(str);
  }

  return false;
};
/**
 * Capitalizes the first letter of a given string (locale aware).
 *
 * @function
 * @memberof i18n/util
 * @param {String} str - The string to capitalize.
 * @returns {String} The capitalized string.
 * @public
 */


exports.isRtlText = isRtlText;

var toCapitalized = function toCapitalized(str) {
  return (0, _case.toUpperCase)(str.slice(0, 1)) + str.slice(1);
};
/**
 * Capitalizes every word in a string. Words are separated by spaces, not necessarily
 * word-breaks (locale aware).
 *
 * @function
 * @memberof i18n/util
 * @param {String} str - The string to capitalize.
 * @returns {String} The word-cased string.
 * @public
 */


exports.toCapitalized = toCapitalized;

var toWordCase = function toWordCase(str) {
  return str.split(' ').map(toCapitalized).join(' ');
};

exports.toWordCase = toWordCase;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Button/Button.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Button/Button.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonDecorator = exports.ButtonBase = exports.Button = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _Uppercase = _interopRequireDefault(__webpack_require__(/*! @enact/i18n/Uppercase */ "./node_modules/@enact/i18n/Uppercase/Uppercase.js"));

var _Spottable = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight/Spottable */ "./node_modules/@enact/spotlight/Spottable/Spottable.js"));

var _Button = __webpack_require__(/*! @enact/ui/Button */ "./node_modules/@enact/ui/Button/Button.js");

var _Pure = _interopRequireDefault(__webpack_require__(/*! @enact/ui/internal/Pure */ "./node_modules/@enact/ui/internal/Pure/Pure.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _compose = _interopRequireDefault(__webpack_require__(/*! ramda/src/compose */ "./node_modules/ramda/src/compose.js"));

var _Icon = __webpack_require__(/*! ../Icon */ "./node_modules/@enact/moonstone/Icon/Icon.js");

var _Marquee = __webpack_require__(/*! ../Marquee */ "./node_modules/@enact/moonstone/Marquee/Marquee.js");

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _ButtonModule = _interopRequireDefault(__webpack_require__(/*! ./Button.module.css */ "./node_modules/@enact/moonstone/Button/Button.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
} // Make a basic Icon in case we need it later. This cuts `Pure` out of icon for a small gain.


var Icon = (0, _Skinnable["default"])(_Icon.IconBase);
/**
 * A button component.
 *
 * This component is most often not used directly but may be composed within another component as it
 * is within [Button]{@link moonstone/Button.Button}.
 *
 * @class ButtonBase
 * @memberof moonstone/Button
 * @extends ui/Button.ButtonBase
 * @ui
 * @public
 */

var ButtonBase = (0, _kind["default"])({
  name: 'Button',
  propTypes:
  /** @lends moonstone/Button.ButtonBase.prototype */
  {
    /**
     * The background opacity of this button.
     *
     * Valid values are:
     * * `'translucent'`,
     * * `'lightTranslucent'`, and
     * * `'transparent'`.
     *
     * @type {String}
     * @public
     */
    backgroundOpacity: _propTypes["default"].oneOf(['translucent', 'lightTranslucent', 'transparent']),

    /**
     * The color of the underline beneath button's content.
     *
     * Accepts one of the following color names, which correspond with the colored buttons on a
     * standard remote control: `'red'`, `'green'`, `'yellow'`, `'blue'`.
     *
     * @type {String}
     * @public
     */
    color: _propTypes["default"].oneOf(['red', 'green', 'yellow', 'blue']),

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `button` - The root class name
     * * `bg` - The background node of the button
     * * `selected` - Applied to a `selected` button
     * * `small` - Applied to a `small` button
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object
  },
  styles: {
    css: _ButtonModule["default"],
    publicClassNames: ['button', 'bg', 'selected', 'small']
  },
  computed: {
    className: function className(_ref) {
      var backgroundOpacity = _ref.backgroundOpacity,
          color = _ref.color,
          styler = _ref.styler;
      return styler.append(backgroundOpacity, color);
    }
  },
  render: function render(_ref2) {
    var css = _ref2.css,
        rest = _objectWithoutProperties(_ref2, ["css"]);

    delete rest.backgroundOpacity;
    delete rest.color;
    return _Button.ButtonBase.inline(_objectSpread({
      'data-webos-voice-intent': 'Select'
    }, rest, {
      css: css,
      iconComponent: Icon
    }));
  }
});
/**
 * Enforces a minimum width on the Button.
 *
 * *NOTE*: This property's default is `true` and must be explicitly set to `false` to allow
 * the button to shrink to fit its contents.
 *
 * @name minWidth
 * @memberof moonstone/Button.ButtonBase.prototype
 * @type {Boolean}
 * @default true
 * @public
 */

/**
 * Applies Moonstone specific behaviors to [Button]{@link moonstone/Button.ButtonBase} components.
 *
 * @hoc
 * @memberof moonstone/Button
 * @mixes i18n/Uppercase.Uppercase
 * @mixes moonstone/Marquee.MarqueeDecorator
 * @mixes ui/Button.ButtonDecorator
 * @mixes spotlight/Spottable.Spottable
 * @mixes moonstone/Skinnable.Skinnable
 * @public
 */

exports.ButtonBase = ButtonBase;
var ButtonDecorator = (0, _compose["default"])(_Pure["default"], _Uppercase["default"], (0, _Marquee.MarqueeDecorator)({
  className: _ButtonModule["default"].marquee
}), _Button.ButtonDecorator, _Spottable["default"], _Skinnable["default"]);
/**
 * A button component, ready to use in Moonstone applications.
 *
 * Usage:
 * ```
 * <Button
 * 	backgroundOpacity="translucent"
 * 	color="blue"
 * >
 * 	Press me!
 * </Button>
 * ```
 *
 * @class Button
 * @memberof moonstone/Button
 * @extends moonstone/Button.ButtonBase
 * @mixes moonstone/Button.ButtonDecorator
 * @ui
 * @public
 */

exports.ButtonDecorator = ButtonDecorator;
var Button = ButtonDecorator(ButtonBase);
exports.Button = Button;
var _default = Button;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Button/Button.module.css":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Button/Button.module.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"button":"Button_button__3vH56","bg":"Button_bg__24IA8","client":"Button_client__3oLz7","icon":"Button_icon__20K-t","marquee":"Button_marquee__PooW_","minWidth":"Button_minWidth__1xxpT","small":"Button_small__rYkBX","pressed":"Button_pressed__2Jo3V","expand":"Button_expand__HyCRb","translucent":"Button_translucent__3YirF","lightTranslucent":"Button_lightTranslucent__20l7i","transparent":"Button_transparent__1vA9C","red":"Button_red__2I9IV","green":"Button_green__U46Eb","yellow":"Button_yellow__37P_T","blue":"Button_blue__sMWfy","selected":"Button_selected__1ER-9","none":"Button_none__Qa41L","contract":"Button_contract__1lKhH"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Icon/Icon.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/moonstone/Icon/Icon.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "icons", {
  enumerable: true,
  get: function get() {
    return _IconList["default"];
  }
});
exports.IconDecorator = exports.IconBase = exports.Icon = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _Icon = _interopRequireDefault(__webpack_require__(/*! @enact/ui/Icon */ "./node_modules/@enact/ui/Icon/Icon.js"));

var _Pure = _interopRequireDefault(__webpack_require__(/*! @enact/ui/internal/Pure */ "./node_modules/@enact/ui/internal/Pure/Pure.js"));

var _compose = _interopRequireDefault(__webpack_require__(/*! ramda/src/compose */ "./node_modules/ramda/src/compose.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _IconList = _interopRequireDefault(__webpack_require__(/*! ./IconList.js */ "./node_modules/@enact/moonstone/Icon/IconList.js"));

var _IconModule = _interopRequireDefault(__webpack_require__(/*! ./Icon.module.css */ "./node_modules/@enact/moonstone/Icon/Icon.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Renders a moonstone-styled icon without any behavior.
 *
 * @class IconBase
 * @memberof moonstone/Icon
 * @extends ui/Icon.Icon
 * @ui
 * @public
 */


var IconBase = (0, _kind["default"])({
  name: 'Icon',
  render: function render(props) {
    return _Icon["default"].inline(_objectSpread({}, props, {
      css: _IconModule["default"],
      iconList: _IconList["default"]
    }));
  }
}); // Let's find a way to import this list directly, and bonus feature, render our icons in the docs
// next to their names.

/**
 * An object whose keys can be used as the child of an [Icon]{@link moonstone/Icon.Icon} component.
 *
 * List of Icons:
 * ```
 * plus
 * minus
 * arrowhookleft
 * arrowhookright
 * ellipsis
 * check
 * circle
 * stop
 * play
 * pause
 * forward
 * backward
 * skipforward
 * skipbackward
 * pauseforward
 * pausebackward
 * pausejumpforward
 * pausejumpbackward
 * jumpforward
 * jumpbackward
 * denselist
 * bulletlist
 * list
 * drawer
 * arrowlargedown
 * arrowlargeup
 * arrowlargeleft
 * arrowlargeright
 * arrowsmallup
 * arrowsmalldown
 * arrowsmallleft
 * arrowsmallright
 * closex
 * search
 * rollforward
 * rollbackward
 * exitfullscreen
 * fullscreen
 * arrowshrinkleft
 * arrowshrinkright
 * arrowextend
 * arrowshrink
 * flag
 * funnel
 * trash
 * star
 * hollowstar
 * halfstar
 * gear
 * plug
 * lock
 * forward15
 * back15
 * continousplay
 * playlist
 * resumeplay
 * image
 * audio
 * music
 * languages
 * cc
 * ccon
 * ccoff
 * sub
 * recordings
 * livezoom
 * liveplayback
 * liveplaybackoff
 * repeat
 * repeatoff
 * series
 * repeatdownload
 * view360
 * view360off
 * info
 * ```
 *
 * @name iconList
 * @memberof moonstone/Icon
 * @constant
 * @type {Object}
 * @public
 */

/**
 * Moonstone-specific behaviors to apply to [IconBase]{@link moonstone/Icon.IconBase}.
 *
 * @hoc
 * @memberof moonstone/Icon
 * @mixes moonstone/Skinnable.Skinnable
 * @public
 */

exports.IconBase = IconBase;
var IconDecorator = (0, _compose["default"])(_Pure["default"], _Skinnable["default"]);
/**
 * A Moonstone-styled icon.
 *
 * @class Icon
 * @memberof moonstone/Icon
 * @extends moonstone/Icon.IconBase
 * @mixes moonstone/Icon.IconDecorator
 * @ui
 * @public
 */

exports.IconDecorator = IconDecorator;
var Icon = IconDecorator(IconBase);
exports.Icon = Icon;
var _default = Icon;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Icon/Icon.module.css":
/*!************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Icon/Icon.module.css ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"icon":"Icon_icon__2lhxc","small":"Icon_small__1mJQ7","dingbat":"Icon_dingbat__3-eeg"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Icon/IconList.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Icon/IconList.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0; // Full List (Hash) of Moonstone Supported Icons
//

var _default = {
  plus: 0x0002B,
  // plus
  minus: 0x0002D,
  // hyphen
  arrowhookleft: 0x021A9,
  // LeftArrowHook
  arrowhookright: 0x021AA,
  // RightArrowHook
  ellipsis: 0x022EF,
  // ellipsis
  check: 0x02713,
  // checkmark
  circle: 0x0EFFDB,
  // record
  stop: 0x0EFFDC,
  // stop
  play: 0x0EFFDD,
  // play
  pause: 0x0EFFDE,
  // pause
  forward: 0x0EFFDF,
  // forward
  backward: 0x0EFFE0,
  // rewind
  skipforward: 0x0EFFE1,
  // skip_forward
  skipbackward: 0x0EFFE2,
  // skip_backwards
  pauseforward: 0x0EFFE3,
  // indicator_forward
  pausebackward: 0x0EFFE4,
  // indicator_backward
  pausejumpforward: 0x0EFFE5,
  // indicator_skip_forward
  pausejumpbackward: 0x0EFFE6,
  // indicator_skip_backward
  jumpforward: 0x0EFFE7,
  // indicator_end
  jumpbackward: 0x0EFFE8,
  // indicator_begin
  denselist: 0x0EFFE9,
  // list_big
  bulletlist: 0x0EFFEA,
  // list_bullets
  list: 0x0EFFEB,
  // list_simple
  drawer: 0x0EFFEC,
  // list_actions
  arrowlargedown: 0x0EFFED,
  // caret_down_large
  arrowlargeup: 0x0EFFEE,
  // caret_up_large
  arrowlargeleft: 0x0EFFEF,
  // caret_left_large
  arrowlargeright: 0x0EFFF0,
  // caret_right_large
  arrowsmallup: 0x0EFFF1,
  // caret_up_small
  arrowsmalldown: 0x0EFFF2,
  // caret_down_small
  arrowsmallleft: 0x0EFFF3,
  // caret_left_small
  arrowsmallright: 0x0EFFF4,
  // caret_right_small
  closex: 0x0EFFF5,
  // close_x
  search: 0x0EFFF6,
  // magnify
  rollforward: 0x0EFFF7,
  // redo
  rollbackward: 0x0EFFF8,
  // undo
  exitfullscreen: 0x0EFFF9,
  // minimize
  fullscreen: 0x0EFFFA,
  // maximize
  arrowshrinkleft: 0x0EFFFB,
  // shrink_panel_left
  arrowshrinkright: 0x0EFFFC,
  // shrink_panel_right
  arrowextend: 0x0F0021,
  // arrow_left
  arrowshrink: 0x0F0022,
  // arrow_right
  flag: 0x0F0023,
  // flag
  funnel: 0x0F0024,
  // filter
  trash: 0x0F0025,
  // trash
  star: 0x0F0028,
  // star_full
  hollowstar: 0x0F0029,
  // star_empty
  halfstar: 0x0F002A,
  // star_half
  gear: 0x0F002B,
  // gear
  plug: 0x0F002C,
  // input
  lock: 0x0F002D,
  // lock
  forward15: 0x0F0041,
  // forward15
  back15: 0x0F0042,
  // back15
  continousplay: 0x0F0043,
  // continous_play
  playlist: 0x0F0044,
  // playlist
  resumeplay: 0x0F0045,
  // resume_play
  image: 0x0F0046,
  // image
  audio: 0x0F0061,
  // audio
  music: 0x0F0062,
  // music
  languages: 0x0F0081,
  // languages
  cc: 0x0F0082,
  // cc
  ccon: 0x0F0083,
  // cc_on
  ccoff: 0x0F0084,
  // cc_off
  sub: 0x0F0085,
  // sub
  recordings: 0x0F00A1,
  // recordings
  livezoom: 0x0F00A2,
  // live_zoom
  liveplayback: 0x0F00A3,
  // live_playback
  liveplaybackoff: 0x0F00A4,
  // live_playback_off
  repeat: 0x0F00A5,
  // repeat
  repeatoff: 0x0F00A6,
  // repeat_off
  series: 0x0F00A7,
  // series
  repeatdownload: 0x0F00A8,
  // repeat_download
  view360: 0x0F00A9,
  // view_360
  view360off: 0x0F00AA,
  // view_360_off
  info: 0x0F00AB // info

};
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/IconButton/IconButton.js":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/IconButton/IconButton.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconButtonDecorator = exports.IconButtonBase = exports.IconButton = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _IconButton = __webpack_require__(/*! @enact/ui/IconButton */ "./node_modules/@enact/ui/IconButton/IconButton.js");

var _Pure = _interopRequireDefault(__webpack_require__(/*! @enact/ui/internal/Pure */ "./node_modules/@enact/ui/internal/Pure/Pure.js"));

var _Spottable = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight/Spottable */ "./node_modules/@enact/spotlight/Spottable/Spottable.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _compose = _interopRequireDefault(__webpack_require__(/*! ramda/src/compose */ "./node_modules/ramda/src/compose.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _Button = __webpack_require__(/*! ../Button */ "./node_modules/@enact/moonstone/Button/Button.js");

var _Icon = _interopRequireDefault(__webpack_require__(/*! ../Icon */ "./node_modules/@enact/moonstone/Icon/Icon.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _TooltipDecorator = _interopRequireDefault(__webpack_require__(/*! ../TooltipDecorator */ "./node_modules/@enact/moonstone/TooltipDecorator/TooltipDecorator.js"));

var _IconButtonModule = _interopRequireDefault(__webpack_require__(/*! ./IconButton.module.css */ "./node_modules/@enact/moonstone/IconButton/IconButton.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * A moonstone-styled icon button without any behavior.
 *
 * @class IconButtonBase
 * @memberof moonstone/IconButton
 * @extends moonstone/Button.ButtonBase
 * @extends ui/IconButton.IconButtonBase
 * @omit buttonComponent
 * @omit iconComponent
 * @ui
 * @public
 */


var IconButtonBase = (0, _kind["default"])({
  name: 'IconButton',
  propTypes:
  /** @lends moonstone/IconButton.IconButtonBase.prototype */
  {
    /**
     * The background-color opacity of this icon button.
     *
     * Valid values are:
     * * `'translucent'`,
     * * `'lightTranslucent'`, and
     * * `'transparent'`.
     *
     * @type {String}
     * @public
     */
    backgroundOpacity: _propTypes["default"].oneOf(['translucent', 'lightTranslucent', 'transparent']),

    /**
     * The color of the underline beneath the icon.
     *
     * This property accepts one of the following color names, which correspond with the
     * colored buttons on a standard remote control: `'red'`, `'green'`, `'yellow'`, `'blue'`
     *
     * @type {String}
     * @public
     */
    color: _propTypes["default"].oneOf(['red', 'green', 'yellow', 'blue']),

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `iconButton` - The root class name
     * * `bg` - The background node of the icon button
     * * `selected` - Applied to a `selected` icon button
     * * `small` - Applied to a `small` icon button
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object,

    /**
     * An optional node to receive the tooltip from `TooltipDecorator`.
     *
     * @type {Node}
     * @private
     */
    tooltipNode: _propTypes["default"].node
  },
  styles: {
    css: _IconButtonModule["default"],
    publicClassNames: ['iconButton', 'bg', 'selected', 'small']
  },
  computed: {
    className: function className(_ref) {
      var color = _ref.color,
          styler = _ref.styler;
      return styler.append(color);
    }
  },
  render: function render(_ref2) {
    var children = _ref2.children,
        css = _ref2.css,
        tooltipNode = _ref2.tooltipNode,
        rest = _objectWithoutProperties(_ref2, ["children", "css", "tooltipNode"]);

    return _IconButton.IconButtonBase.inline(_objectSpread({
      'data-webos-voice-intent': 'Select'
    }, rest, {
      buttonComponent: _react["default"].createElement(_Button.ButtonBase, {
        css: css
      }),
      css: css,
      icon: children,
      iconComponent: _Icon["default"],
      children: tooltipNode
    }));
  }
});
/**
 * Moonstone-specific button behaviors to apply to
 * [IconButton]{@link moonstone/IconButton.IconButtonBase}.
 *
 * @hoc
 * @memberof moonstone/IconButton
 * @mixes moonstone/TooltipDecorator.TooltipDecorator
 * @mixes ui/IconButton.IconButtonDecorator
 * @mixes spotlight/Spottable.Spottable
 * @mixes moonstone/Skinnable.Skinnable
 * @public
 */

exports.IconButtonBase = IconButtonBase;
var IconButtonDecorator = (0, _compose["default"])(_Pure["default"], (0, _TooltipDecorator["default"])({
  tooltipDestinationProp: 'tooltipNode'
}), _IconButton.IconButtonDecorator, _Spottable["default"], _Skinnable["default"]);
/**
 * `IconButton` does not have `Marquee` or `Uppercase` like `Button` has, as it should not contain
 * text.
 *
 * Usage:
 * ```
 * <IconButton onClick={handleClick} small>
 *     plus
 * </IconButton>
 * ```
 *
 * @class IconButton
 * @memberof moonstone/IconButton
 * @extends moonstone/IconButton.IconButtonBase
 * @mixes moonstone/IconButton.IconButtonDecorator
 * @ui
 * @public
 */

exports.IconButtonDecorator = IconButtonDecorator;
var IconButton = IconButtonDecorator(IconButtonBase);
exports.IconButton = IconButton;
var _default = IconButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/IconButton/IconButton.module.css":
/*!************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/IconButton/IconButton.module.css ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"iconButton":"IconButton_iconButton__1dGYW","small":"IconButton_small__1lLOz","red":"IconButton_red__1LpST","green":"IconButton_green__3JzW7","yellow":"IconButton_yellow__35Si1","blue":"IconButton_blue__3nNj-","icon":"IconButton_icon__3g-96","bg":"IconButton_bg__1mDUo","selected":"IconButton_selected__1Labo"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Marquee/Marquee.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Marquee/Marquee.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MarqueeBase", {
  enumerable: true,
  get: function get() {
    return _Marquee.MarqueeBase;
  }
});
Object.defineProperty(exports, "MarqueeController", {
  enumerable: true,
  get: function get() {
    return _Marquee.MarqueeController;
  }
});
exports.MarqueeDecorator = exports.Marquee = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _I18nDecorator = __webpack_require__(/*! @enact/i18n/I18nDecorator */ "./node_modules/@enact/i18n/I18nDecorator/I18nDecorator.js");

var _util = __webpack_require__(/*! @enact/i18n/util */ "./node_modules/@enact/i18n/util/util.js");

var _Marquee = __webpack_require__(/*! @enact/ui/Marquee */ "./node_modules/@enact/ui/Marquee/index.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Provides components for displaying and controlling marqueed text.
 *
 * @example
 * <Marquee marqueeOn="render">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Marquee>
 *
 * @see ui/Marquee
 * @module moonstone/Marquee
 * @exports Marquee
 * @exports MarqueeBase
 * @exports MarqueeController
 * @exports MarqueeDecorator
 */


var MarqueeDecorator = (0, _hoc["default"])({
  marqueeDirection: function marqueeDirection(str) {
    return (0, _util.isRtlText)(str) ? 'rtl' : 'ltr';
  }
}, function (config, Wrapped) {
  return (0, _I18nDecorator.I18nContextDecorator)({
    rtlProp: 'rtl',
    localeProp: 'locale'
  }, (0, _Marquee.MarqueeDecorator)(config, Wrapped));
});
exports.MarqueeDecorator = MarqueeDecorator;
var Marquee = MarqueeDecorator('div');
exports.Marquee = Marquee;
var _default = Marquee;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/MoonstoneDecorator/AccessibilityDecorator.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/MoonstoneDecorator/AccessibilityDecorator.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccessibilityDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _Registry = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/Registry */ "./node_modules/@enact/core/internal/Registry/Registry.js"));

var _Resizable = __webpack_require__(/*! @enact/ui/Resizable */ "./node_modules/@enact/ui/Resizable/Resizable.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * A higher-order component that classifies an application with a target set of font sizing rules.
 *
 * @class AccessibilityDecorator
 * @memberof moonstone/MoonstoneDecorator
 * @hoc
 * @public
 */


var AccessibilityDecorator = (0, _hoc["default"])(function (config, Wrapped) {
  var _class, _temp; // eslint-disable-line no-unused-vars


  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, _class);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.resizeRegistry = _Registry["default"].create();
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.resizeRegistry.parent = this.context;
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (prevProps.textSize !== this.props.textSize) {
          this.resizeRegistry.notify({});
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.resizeRegistry.parent = null;
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            className = _this$props.className,
            highContrast = _this$props.highContrast,
            textSize = _this$props.textSize,
            props = _objectWithoutProperties(_this$props, ["className", "highContrast", "textSize"]);

        var accessibilityClassName = highContrast ? "enact-a11y-high-contrast enact-text-".concat(textSize) : "enact-text-".concat(textSize);
        var combinedClassName = className ? "".concat(className, " ").concat(accessibilityClassName) : accessibilityClassName;
        var variants = {};
        if (highContrast) variants.highContrast = true;
        if (textSize === 'large') variants.largeText = true;
        return _react["default"].createElement(_Resizable.ResizeContext.Provider, {
          value: this.resizeRegistry.register
        }, _react["default"].createElement(Wrapped, Object.assign({
          className: combinedClassName,
          skinVariants: variants
        }, props)));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.contextType = _Resizable.ResizeContext, _class.displayName = 'AccessibilityDecorator', _class.propTypes =
  /** @lends moonstone/MoonstoneDecorator.AccessibilityDecorator.prototype */
  {
    /**
     * Enables additional features to help users visually differentiate components.
     *
     * The UI library will be responsible for using this information to adjust
     * the components' contrast to this preset.
     *
     * @type {Boolean}
     * @public
     */
    highContrast: _propTypes["default"].bool,

    /**
     * Sets the goal size of the text.
     *
     * The UI library will be responsible for using this
     * information to adjust the components' text sizes to this preset.
     * Current presets are `'normal'` (default), and `'large'`.
     *
     * @type {String}
     * @default 'normal'
     * @public
     */
    textSize: _propTypes["default"].oneOf(['normal', 'large'])
  }, _class.defaultProps = {
    highContrast: false,
    textSize: 'normal'
  }, _temp;
});
exports.AccessibilityDecorator = AccessibilityDecorator;
var _default = AccessibilityDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/MoonstoneDecorator/I18nFontDecorator.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/MoonstoneDecorator/I18nFontDecorator.js ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.I18nFontDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _i18n = _interopRequireDefault(__webpack_require__(/*! @enact/i18n */ "./node_modules/@enact/i18n/src/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _fontGenerator = __webpack_require__(/*! ./fontGenerator */ "./node_modules/@enact/moonstone/MoonstoneDecorator/fontGenerator.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var I18nFontDecorator = (0, _hoc["default"])(function (config, Wrapped) {
  var _class, _temp; // eslint-disable-line no-unused-vars


  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(I18nDecorator, _React$Component);

    function I18nDecorator(props) {
      var _this;

      _classCallCheck(this, I18nDecorator);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(I18nDecorator).call(this, props));
      _this.state = {
        locale: props.locale || _i18n["default"].getLocale()
      };
      return _this;
    }

    _createClass(I18nDecorator, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        (0, _fontGenerator.fontGenerator)(this.state.locale);
        (0, _fontGenerator.fontOverrideGenerator)(this.state.locale);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(_, prevState) {
        if (prevState.locale !== this.state.locale) {
          (0, _fontGenerator.fontOverrideGenerator)(this.state.locale);
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _react["default"].createElement(Wrapped, this.props);
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props, state) {
        var locale = props.locale || _i18n["default"].getLocale();

        return locale !== state.locale ? {
          locale: locale
        } : null;
      }
    }]);

    return I18nDecorator;
  }(_react["default"].Component), _class.displayName = 'I18nFontDecorator', _class.propTypes = {
    locale: _propTypes["default"].string
  }, _temp;
});
exports.I18nFontDecorator = I18nFontDecorator;
var _default = I18nFontDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/MoonstoneDecorator/MoonstoneDecorator.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/MoonstoneDecorator/MoonstoneDecorator.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MoonstoneDecorator = exports["default"] = void 0;

var _keymap = __webpack_require__(/*! @enact/core/keymap */ "./node_modules/@enact/core/keymap/index.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _I18nDecorator = _interopRequireDefault(__webpack_require__(/*! @enact/i18n/I18nDecorator */ "./node_modules/@enact/i18n/I18nDecorator/I18nDecorator.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));

var _resolution = __webpack_require__(/*! @enact/ui/resolution */ "./node_modules/@enact/ui/resolution/index.js");

var _FloatingLayer = __webpack_require__(/*! @enact/ui/FloatingLayer */ "./node_modules/@enact/ui/FloatingLayer/index.js");

var _SpotlightRootDecorator = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight/SpotlightRootDecorator */ "./node_modules/@enact/spotlight/SpotlightRootDecorator/SpotlightRootDecorator.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _I18nFontDecorator = _interopRequireDefault(__webpack_require__(/*! ./I18nFontDecorator */ "./node_modules/@enact/moonstone/MoonstoneDecorator/I18nFontDecorator.js"));

var _AccessibilityDecorator = _interopRequireDefault(__webpack_require__(/*! ./AccessibilityDecorator */ "./node_modules/@enact/moonstone/MoonstoneDecorator/AccessibilityDecorator.js"));

var _screenTypes = _interopRequireDefault(__webpack_require__(/*! ./screenTypes.json */ "./node_modules/@enact/moonstone/MoonstoneDecorator/screenTypes.json"));

var _MoonstoneDecoratorModule = _interopRequireDefault(__webpack_require__(/*! ./MoonstoneDecorator.module.css */ "./node_modules/@enact/moonstone/MoonstoneDecorator/MoonstoneDecorator.module.css"));

var _Touchable = __webpack_require__(/*! @enact/ui/Touchable */ "./node_modules/@enact/ui/Touchable/Touchable.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Default config for `MoonstoneDecorator`.
 *
 * @memberof moonstone/MoonstoneDecorator.MoonstoneDecorator
 * @hocconfig
 */


var defaultConfig = {
  disableFullscreen: false,
  "float": true,
  i18n: {
    sync: true
  },
  noAutoFocus: false,
  overlay: false,
  ri: {
    screenTypes: _screenTypes["default"]
  },
  skin: true,
  spotlight: true,
  textSize: true
};
/**
 * A higher-order component that applies Moonstone theming to an application.
 *
 * It also applies [floating layer]{@link ui/FloatingLayer.FloatingLayerDecorator},
 * [resolution independence]{@link ui/resolution.ResolutionDecorator},
 * [skin support]{@link moonstone/Skinnable}, [spotlight]{@link spotlight.SpotlightRootDecorator}, and
 * [internationalization support]{@link i18n/I18nDecorator.I18nDecorator}. It is meant to be applied to
 * the root element of an app.
 *
 * [Skins]{@link moonstone/Skinnable} provide a way to change the coloration of your app. The currently
 * supported skins for Moonstone are "moonstone" (the default, dark skin) and "moonstone-light".
 * Use the `skin` property to assign a skin. Ex: `<DecoratedApp skin="light" />`
 *
 * @class MoonstoneDecorator
 * @memberof moonstone/MoonstoneDecorator
 * @hoc
 * @public
 */

var MoonstoneDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var ri = config.ri,
      i18n = config.i18n,
      spotlight = config.spotlight,
      _float = config["float"],
      noAutoFocus = config.noAutoFocus,
      overlay = config.overlay,
      textSize = config.textSize,
      skin = config.skin,
      highContrast = config.highContrast,
      disableFullscreen = config.disableFullscreen; // Apply classes depending on screen type (overlay / fullscreen)

  var bgClassName = (0, _classnames["default"])(_defineProperty({
    'enact-fit': !disableFullscreen
  }, _MoonstoneDecoratorModule["default"].bg, !overlay));
  var App = Wrapped;
  if (_float) App = (0, _FloatingLayer.FloatingLayerDecorator)({
    wrappedClassName: bgClassName
  }, App);
  if (ri) App = (0, _resolution.ResolutionDecorator)(ri, App);

  if (i18n) {
    // Apply the @enact/i18n decorator around the font decorator so the latter will update the
    // font stylesheet when the locale changes
    App = (0, _I18nDecorator["default"])(_objectSpread({}, i18n, {
      // We use the latin fonts (with non-Latin fallback) for these languages (even though
      // their scripts are non-latin)
      latinLanguageOverrides: ['ko', 'ha'],
      // We use the non-latin fonts for these languages (even though their scripts are
      // technically considered latin)
      nonLatinLanguageOverrides: ['vi', 'en-JP']
    }), (0, _I18nFontDecorator["default"])(App));
  }

  if (spotlight) App = (0, _SpotlightRootDecorator["default"])({
    noAutoFocus: noAutoFocus
  }, App);
  if (skin) App = (0, _Skinnable["default"])({
    defaultSkin: 'dark'
  }, App);
  if (textSize || highContrast) App = (0, _AccessibilityDecorator["default"])(App); // add webOS-specific key maps

  (0, _keymap.addAll)({
    cancel: 461,
    nonModal: [461, 415, // play
    19, // pause
    403, // red
    404, // green
    405, // yellow
    406, // blue
    33, // channel up
    34 // channel down
    ],
    red: 403,
    green: 404,
    yellow: 405,
    blue: 406,
    play: 415,
    pause: 19,
    rewind: 412,
    fastForward: 417,
    pointerHide: 1537,
    pointerShow: 1536
  }); // configure the default hold time

  (0, _Touchable.configure)({
    hold: {
      events: [{
        name: 'hold',
        time: 400
      }]
    }
  });
  var Decorator = (_temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(Decorator, _React$Component);

    function Decorator() {
      _classCallCheck(this, Decorator);

      return _possibleConstructorReturn(this, _getPrototypeOf(Decorator).apply(this, arguments));
    }

    _createClass(Decorator, [{
      key: "render",
      value: function render() {
        var _classNames2;

        var className = (0, _classnames["default"])(_MoonstoneDecoratorModule["default"].root, this.props.className, 'enact-unselectable', (_classNames2 = {}, _defineProperty(_classNames2, bgClassName, !_float), _defineProperty(_classNames2, 'enact-fit', !disableFullscreen), _classNames2));
        return _react["default"].createElement(App, Object.assign({}, this.props, {
          className: className
        }));
      }
    }]);

    return Decorator;
  }(_react["default"].Component), _class.displayName = 'MoonstoneDecorator', _temp);
  return Decorator;
});
exports.MoonstoneDecorator = MoonstoneDecorator;
var _default = MoonstoneDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/MoonstoneDecorator/MoonstoneDecorator.module.css":
/*!****************************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/MoonstoneDecorator/MoonstoneDecorator.module.css ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"root":"MoonstoneDecorator_root__qgfLY","bg":"MoonstoneDecorator_bg__3IseZ"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/MoonstoneDecorator/fontGenerator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/MoonstoneDecorator/fontGenerator.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
 * This module loads Moonstone specific fonts. It only includes one function,
 * {@link moonstone/MoonstoneDecorator.fontGenerator} and is not intended to be directly
 * included by external developers.
 */
// eslint-disable-next-line no-var

var _require = __webpack_require__(/*! @enact/ui/internal/localized-fonts */ "./node_modules/@enact/ui/internal/localized-fonts/localized-fonts.js"),
    addLocalizedFont = _require.addLocalizedFont,
    generateFontRules = _require.generateFontRules,
    generateFontOverrideRules = _require.generateFontOverrideRules;

var fontName = 'Moonstone LG Display'; // Locale Configuration Block

var fonts = {
  'NonLatin': {
    regular: 'LG Display-Light',
    bold: 'LG Display-Regular'
  },
  'am': {
    regular: 'LG Display_Amharic'
  },
  // 'bn': {
  // 	regular: 'LG Display_Bengali'
  // },
  'en-JP': {
    regular: 'LG Display_JP'
  },
  // 'gu': {
  // 	regular: 'LG Display_Gujarati'
  // },
  'ja': {
    regular: 'LG Display_JP'
  },
  // 'kn': {
  // 	regular: 'LG Display_Kannada'
  // },
  // 'ks': {
  // 	regular: 'LG Display_Devanagari'
  // },
  'or': {
    regular: 'LG Display_Oriya'
  },
  'ml': {
    regular: 'LG Display_ML'
  },
  // 'ta': {
  // 	regular: 'LG Display_Tamil'
  // },
  // 'te': {
  // 	regular: 'LG Display_Telugu'
  // },
  'ur': {
    regular: 'LG Display_Urdu',
    unicodeRange: 'U+600-6FF,' + 'U+FE70-FEFE,' + 'U+FB50-FDFF'
  },
  'zh-HK': {
    regular: 'LG Display GP4_HK',
    bold: 'LG Display GP4_HK',
    unicodeRange: 'U+0-FF,' + 'U+2E80-2EFF,' + 'U+3000-303F,' + 'U+3200-33FF,' + 'U+3400-4DBF,' + 'U+4E00-9FFF,' + 'U+E000-FAFF,' + 'U+FF00-FFEF'
  }
}; // Duplications and alternate locale names

fonts['zh-TW'] = fonts['zh-HK'];
addLocalizedFont(fontName, fonts);
module.exports = generateFontRules;
module.exports.fontGenerator = generateFontRules;
module.exports.fontOverrideGenerator = generateFontOverrideRules;
module.exports.generateFontRules = generateFontRules;

/***/ }),

/***/ "./node_modules/@enact/moonstone/MoonstoneDecorator/screenTypes.json":
/*!***************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/MoonstoneDecorator/screenTypes.json ***!
  \***************************************************************************/
/*! exports provided: 0, 1, 2, 3, 4, default */
/***/ (function(module) {

module.exports = [{"name":"hd","pxPerRem":16,"width":1280,"height":720,"aspectRatioName":"hdtv"},{"name":"fhd","pxPerRem":24,"width":1920,"height":1080,"aspectRatioName":"hdtv","base":true},{"name":"uw-uxga","pxPerRem":24,"width":2560,"height":1080,"aspectRatioName":"cinema"},{"name":"uhd","pxPerRem":48,"width":3840,"height":2160,"aspectRatioName":"hdtv"},{"name":"uhd2","pxPerRem":96,"width":7680,"height":4320,"aspectRatioName":"hdtv"}];

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/ActivityPanels.js":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/ActivityPanels.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActivityPanels = exports["default"] = void 0;

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _Arrangers = __webpack_require__(/*! ./Arrangers */ "./node_modules/@enact/moonstone/Panels/Arrangers.js");

var _BreadcrumbDecorator = _interopRequireDefault(__webpack_require__(/*! ./BreadcrumbDecorator */ "./node_modules/@enact/moonstone/Panels/BreadcrumbDecorator.js"));

var _Panels = __webpack_require__(/*! ./Panels */ "./node_modules/@enact/moonstone/Panels/Panels.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * An instance of Panels in which the Panel uses the entire viewable screen with a single breadcrumb
 * for the previous panel when viewing any panel beyond the first.
 *
 * **Note** ActivityPanels requires that the `data-index` property that all panels variations add to
 * its children be applied to the root DOM node of each child in order to manage layout correctly.
 * It is recommended that you spread any extra props on the root node but you may also handle this
 * property explicitly if necessary.
 *
 * @class ActivityPanels
 * @memberof moonstone/Panels
 * @ui
 * @public
 */


var ActivityPanels = (0, _Skinnable["default"])((0, _BreadcrumbDecorator["default"])({
  className: 'panels activity enact-fit',
  max: 1,
  panelArranger: _Arrangers.ActivityArranger
}, _Panels.PanelsBase));
exports.ActivityPanels = ActivityPanels;
var _default = ActivityPanels;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/AlwaysViewingPanels.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/AlwaysViewingPanels.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlwaysViewingPanels = exports["default"] = void 0;

var _resolution = __webpack_require__(/*! @enact/ui/resolution */ "./node_modules/@enact/ui/resolution/index.js");

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _Arrangers = __webpack_require__(/*! ./Arrangers */ "./node_modules/@enact/moonstone/Panels/Arrangers.js");

var _Breadcrumb = __webpack_require__(/*! ./Breadcrumb */ "./node_modules/@enact/moonstone/Panels/Breadcrumb.js");

var _BreadcrumbDecorator = _interopRequireDefault(__webpack_require__(/*! ./BreadcrumbDecorator */ "./node_modules/@enact/moonstone/Panels/BreadcrumbDecorator.js"));

var _Viewport = _interopRequireDefault(__webpack_require__(/*! ./Viewport */ "./node_modules/@enact/moonstone/Panels/Viewport.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/*
 * Calculates the number of breadcrumbs that would fit in half of the viewport
 *
 * @param {Number} viewportWidth inner width of the viewport (usually the window)
 * @param {Number} width         width of a breadcrumb
 *
 * @returns {Number} Number of breadcrumbs that can completely fit in that space
 * @private
 */


var calcMax = function calcMax() {
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
    return Math.floor(window.innerWidth / 2 / (0, _resolution.scale)(_Breadcrumb.breadcrumbWidth));
  }
};
/**
 * An instance of [`Panels`]{@link moonstone/Panels.Panels} which restricts the `Panel` to the right
 * half of the screen with the left half used for breadcrumbs that allow navigating to previous
 * panels. Typically used for overlaying panels over a screen.
 *
 * @class AlwaysViewingPanels
 * @memberof moonstone/Panels
 * @ui
 * @public
 */


var AlwaysViewingPanels = (0, _Skinnable["default"])((0, _BreadcrumbDecorator["default"])({
  className: 'panels alwaysViewing enact-fit',
  max: calcMax,
  panelArranger: _Arrangers.AlwaysViewingArranger
}, _Viewport["default"]));
exports.AlwaysViewingPanels = AlwaysViewingPanels;
var _default = AlwaysViewingPanels;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/ApplicationCloseButton.js":
/*!************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/ApplicationCloseButton.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _$L = _interopRequireDefault(__webpack_require__(/*! ../internal/$L */ "./node_modules/@enact/moonstone/internal/$L/$L.js"));

var _IconButton = _interopRequireDefault(__webpack_require__(/*! ../IconButton */ "./node_modules/@enact/moonstone/IconButton/IconButton.js"));

var _ApplicationCloseButtonModule = _interopRequireDefault(__webpack_require__(/*! ./ApplicationCloseButton.module.css */ "./node_modules/@enact/moonstone/Panels/ApplicationCloseButton.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * An {@link moonstone/ApplicationCloseButton.ApplicationCloseButton} with `closex` icon. It is used in
 * {@link moonstone/Panels.Panels} positioned at the top right corner.
 * `onApplicationClose` callback function should be specified to close your app. The recommended
 * action to take with the event is `window.close()`, but you may also want to also do operations
 * like save user work or close database connections.
 *
 * @class ApplicationCloseButton
 * @memberof moonstone/Panels
 * @private
 */


var ApplicationCloseButton = (0, _kind["default"])({
  name: 'ApplicationCloseButton',
  propTypes:
  /** @lends moonstone/Panels.ApplicationCloseButton.prototype */
  {
    /**
    * Sets the hint string read when focusing the application close button.
    *
    * @type {String}
    * @default 'Exit app'
    * @memberof moonstone/Panels.ApplicationCloseButton.prototype
    * @public
    */
    'aria-label': _propTypes["default"].string,

    /**
     * The background-color opacity of this button; valid values are 'translucent'`,
     * `'lightTranslucent'` and `'transparent'`.
     *
     * @type {String}
     * @default 'transparent'
     * @public
     */
    backgroundOpacity: _propTypes["default"].oneOf(['translucent', 'lightTranslucent', 'transparent']),

    /**
     * A function to run when app close button is clicked
     *
     * @type {Function}
     */
    onApplicationClose: _propTypes["default"].func
  },
  defaultProps: {
    backgroundOpacity: 'transparent'
  },
  styles: {
    css: _ApplicationCloseButtonModule["default"],
    className: 'applicationCloseButton'
  },
  computed: {
    'aria-label': function ariaLabel(_ref) {
      var _ariaLabel = _ref['aria-label'];
      return _ariaLabel == null ? (0, _$L["default"])('Exit app') : _ariaLabel;
    }
  },
  render: function render(_ref2) {
    var backgroundOpacity = _ref2.backgroundOpacity,
        onApplicationClose = _ref2.onApplicationClose,
        rest = _objectWithoutProperties(_ref2, ["backgroundOpacity", "onApplicationClose"]);

    return _react["default"].createElement(_IconButton["default"], Object.assign({}, rest, {
      backgroundOpacity: backgroundOpacity,
      onTap: onApplicationClose,
      small: true
    }), "closex");
  }
});
var _default = ApplicationCloseButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/ApplicationCloseButton.module.css":
/*!********************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/ApplicationCloseButton.module.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"applicationCloseButton":"ApplicationCloseButton_applicationCloseButton__2t9tL"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Arrangers.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Arrangers.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActivityArranger = exports.AlwaysViewingArranger = void 0;

var _arrange = __webpack_require__(/*! @enact/ui/ViewManager/arrange */ "./node_modules/@enact/ui/ViewManager/arrange.js");

var _quadInOut = _interopRequireDefault(__webpack_require__(/*! eases/quad-in-out */ "./node_modules/eases/quad-in-out.js"));

var _resolution = __webpack_require__(/*! @enact/ui/resolution */ "./node_modules/@enact/ui/resolution/index.js");

var _Breadcrumb = __webpack_require__(/*! ./Breadcrumb */ "./node_modules/@enact/moonstone/Panels/Breadcrumb.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/*
 * Panel arrangers have a unique design requirement that varies their transition depending on the
 * direction (reverse) of the transition. This takes the two arrangement functions and returns
 * another function that picks which to call based on the value of `reverseTransition`.
 *
 * @param {Function} f forward function
 * @param {Function} b backward function
 * @returns {Function} Arrangement function
 * @private
 */


var forwardBackward = function forwardBackward(f, b) {
  return function (config) {
    var f2 = config.reverseTransition ? b : f;
    f2(config);
  };
};
/*
 * Utility method to apply the same easing and reset the transform before applying `fn`
 *
 * @param   {Function} fn Arrangement function
 * @returns {Function}    Composed arrangement function
 * @private
 */


var base = function base(fn) {
  return (0, _arrange.reverse)((0, _arrange.ease)(_quadInOut["default"], (0, _arrange.compose)(_arrange.clearTransform, fn)));
}; // Creating these here since they're composed below in forwardBackward


var slideInRight = base((0, _arrange.slideIn)('right'));
var slideOutLeft = base((0, _arrange.slideOut)('left')); // These are the arrangers for AlwaysViewing but also composed in Activity

var panelEnter = forwardBackward(slideInRight, (0, _arrange.endBy)(0.75, slideInRight));
var panelLeave = forwardBackward(slideOutLeft, (0, _arrange.endBy)(0.75, slideOutLeft)); // Always-Viewing Arranger

/**
 * Arranger that slides panels in from the right and out to the left
 *
 * @type {Arranger}
 * @private
 */

var AlwaysViewingArranger = {
  enter: panelEnter,
  leave: panelLeave
}; // Actvity Arranger

/*
 * Appends a transform that accounts for a single breadcrumb
 *
 * @param  {Node} node      DOM Node
 *
 * @returns {undefined}
 * @private
 */

exports.AlwaysViewingArranger = AlwaysViewingArranger;

var offsetForBreadcrumbs = function offsetForBreadcrumbs(_ref) {
  var node = _ref.node;
  var isFirst = node && node.dataset && node.dataset.index === '0';

  if (!isFirst) {
    var x = (0, _resolution.unit)((0, _resolution.scale)(_Breadcrumb.breadcrumbWidth), 'rem');
    (0, _arrange.appendTransform)("translateX(".concat(x, ")"), {
      node: node
    });
  }
}; // Adds the data-clip attribute to allow clipping when transitioning between non-zero panels
// CSS is enforced by Panels.module.less


var clipForBreadcrumbs = function clipForBreadcrumbs(_ref2) {
  var from = _ref2.from,
      node = _ref2.node,
      percent = _ref2.percent,
      to = _ref2.to;
  var viewport = node.parentNode;

  if (to === 0 || from === 0 || percent === 0 || percent === 1) {
    // remove clip when moving to or from the first panel and when a transition is completing
    delete viewport.dataset.clip;
  } else {
    viewport.dataset.clip = 'true';
  }
};
/**
 * Arranger that slides panels in from the right and out to the left allowing space for the single
 * breadcrumb when `to` index is greater than zero.
 *
 * @type {Arranger}
 * @private
 */


var ActivityArranger = {
  enter: (0, _arrange.compose)(panelEnter, (0, _arrange.reverse)(offsetForBreadcrumbs), clipForBreadcrumbs),
  leave: (0, _arrange.compose)(panelLeave, offsetForBreadcrumbs),
  // Need a stay arrangement in case the initial index for ActivityPanels is > 0 so the panel is
  // correctly offset for the breadcrumbs.
  stay: (0, _arrange.compose)(_arrange.clearTransform, offsetForBreadcrumbs)
};
exports.ActivityArranger = ActivityArranger;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Breadcrumb.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Breadcrumb.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BreadcrumbBase = exports.Breadcrumb = exports["default"] = exports.breadcrumbWidth = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _Spottable = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight/Spottable */ "./node_modules/@enact/spotlight/Spottable/Spottable.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _$L = _interopRequireDefault(__webpack_require__(/*! ../internal/$L */ "./node_modules/@enact/moonstone/internal/$L/$L.js"));

var _PanelsModule = _interopRequireDefault(__webpack_require__(/*! ./Panels.module.css */ "./node_modules/@enact/moonstone/Panels/Panels.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
} // Since we expose `onSelect` to handle breadcrumb selection, we need that handler to be set on a
// component that proxies mouse events for key events so we create a spottable div that will
// get the right classes as well as handle events correctly.


var SpottableDiv = (0, _Spottable["default"])('div');
/**
 * The width of a breadcrumb which may be used to allocate space for it in a panels layout.
 *
 * @type {Number}
 * @default 96;
 * @private
 * @memberof moonstone/Panels
 */

var breadcrumbWidth = 96;
/**
 * Vertical, transparent bar used to navigate to a prior Panel.
 *
 * [`ActivityPanels`]{@link moonstone/Panels.ActivityPanels} has one breadcrumb, and
 * [`AlwaysViewingPanels`]{@link moonstone/Panels.AlwaysViewingPanels} can have multiple stacked
 * horizontally.
 *
 * @class Breadcrumb
 * @memberof moonstone/Panels
 * @ui
 * @public
 */

exports.breadcrumbWidth = breadcrumbWidth;
var BreadcrumbBase = (0, _kind["default"])({
  name: 'Breadcrumb',
  propTypes:
  /** @lends moonstone/Panels.Breadcrumb.prototype */
  {
    /**
     * Index of the associated panel.
     *
     * @type {Number}
     * @required
     */
    index: _propTypes["default"].number.isRequired,

    /**
     * Called when the breadcrumb is clicked.
     *
     * @private
     * @type {Function}
     */
    onClick: _propTypes["default"].func,

    /**
     * Called when the breadcrumb is clicked.
     *
     * The index of the clicked breadcrumb is passed in the event data.
     *
     * @type {Function}
     */
    onSelect: _propTypes["default"].func
  },
  styles: {
    css: _PanelsModule["default"],
    className: 'breadcrumb'
  },
  handlers: {
    onSelect: (0, _handle.handle)((0, _handle.forward)('onClick'), (0, _handle.adaptEvent)(function (ev, _ref) {
      var index = _ref.index;
      return {
        type: 'onSelect',
        index: index
      };
    }, (0, _handle.forward)('onSelect')))
  },
  render: function render(_ref2) {
    var children = _ref2.children,
        index = _ref2.index,
        onSelect = _ref2.onSelect,
        rest = _objectWithoutProperties(_ref2, ["children", "index", "onSelect"]);

    return _react["default"].createElement(SpottableDiv, Object.assign({}, rest, {
      "aria-label": (0, _$L["default"])('GO TO PREVIOUS'),
      "data-index": index,
      onClick: onSelect
    }), _react["default"].createElement("div", {
      className: _PanelsModule["default"].breadcrumbHeader
    }, children));
  }
});
exports.BreadcrumbBase = exports.Breadcrumb = BreadcrumbBase;
var _default = BreadcrumbBase;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/BreadcrumbArranger.js":
/*!********************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/BreadcrumbArranger.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BreadcrumbArranger = exports["default"] = void 0;

var _cubicOut = _interopRequireDefault(__webpack_require__(/*! eases/cubic-out */ "./node_modules/eases/cubic-out.js"));

var _arrange = __webpack_require__(/*! @enact/ui/ViewManager/arrange */ "./node_modules/@enact/ui/ViewManager/arrange.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Panel arrangers have a unique design requirement that varies their transition depending on the
 * direction (reverse) of the transition. This takes the two arrangement functions and returns
 * another function that picks which to call based on the value of `reverseTransition`.
 *
 * @param {Function} f forward function
 * @param {Function} b backward function
 * @returns {Function} Arrangement function
 * @method
 * @private
 */


var forwardBackward = function forwardBackward(f, b) {
  return function (config) {
    var f2 = config.reverseTransition ? b : f;
    f2(config);
  };
};
/**
 * Positions a breadcrumb based on its `data-index` and the current index, `to`
 *
 * @param  {Object} config  Arrangement configuration object
 * @returns {undefined}
 * @method
 * @private
 */


var positionBreadcrumb = (0, _arrange.ease)(_cubicOut["default"], function (config) {
  var _config$from = config.from,
      from = _config$from === void 0 ? 0 : _config$from,
      node = config.node,
      percent = config.percent,
      to = config.to;
  var crumbIndex = node.dataset.index;
  var dx = (to - from) * percent;
  var x = from - crumbIndex;
  var percentX = (x + dx) * -100;
  (0, _arrange.replaceTransform)("translateX(".concat(percentX, "%)"), config);
});
/**
 * Arrangement function for breadcrumbs
 *
 * @param  {Object} config  Arrangement configuration object
 * @returns {undefined}
 * @method
 * @private
 */

var enter = forwardBackward((0, _arrange.startAfter)(0.75, positionBreadcrumb), (0, _arrange.startAfter)(0.5, positionBreadcrumb));
/**
 * Arranger for panel breadcrumbs
 *
 * @type {Arranger}
 * @private
 */

var BreadcrumbArranger = {
  enter: enter,
  stay: enter,
  leave: enter
};
exports.BreadcrumbArranger = BreadcrumbArranger;
var _default = BreadcrumbArranger;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/BreadcrumbDecorator.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/BreadcrumbDecorator.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BreadcrumbDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _ViewManager = _interopRequireDefault(__webpack_require__(/*! @enact/ui/ViewManager */ "./node_modules/@enact/ui/ViewManager/ViewManager.js"));

var _spotlight = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js"));

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _IdProvider = _interopRequireDefault(__webpack_require__(/*! ../internal/IdProvider */ "./node_modules/@enact/moonstone/internal/IdProvider/IdProvider.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _Breadcrumb = _interopRequireDefault(__webpack_require__(/*! ./Breadcrumb */ "./node_modules/@enact/moonstone/Panels/Breadcrumb.js"));

var _BreadcrumbArranger = _interopRequireDefault(__webpack_require__(/*! ./BreadcrumbArranger */ "./node_modules/@enact/moonstone/Panels/BreadcrumbArranger.js"));

var _CancelDecorator = _interopRequireDefault(__webpack_require__(/*! ./CancelDecorator */ "./node_modules/@enact/moonstone/Panels/CancelDecorator.js"));

var _IndexedBreadcrumbs = _interopRequireDefault(__webpack_require__(/*! ./IndexedBreadcrumbs */ "./node_modules/@enact/moonstone/Panels/IndexedBreadcrumbs.js"));

var _PanelsModule = _interopRequireDefault(__webpack_require__(/*! ./Panels.module.css */ "./node_modules/@enact/moonstone/Panels/Panels.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
} // TODO: Figure out how to document private sub-module members

/**
 * Default config for {@link moonstone/Panels.BreadcrumbDecorator}
 * @hocconfig
 * @memberof moonstone/Panels.BreadcrumbDecorator
 */


var defaultConfig = {
  /**
   * Classes to be added to the root node
   *
   * @type {String}
   * @default null
   * @memberof moonstone/Panels.BreadcrumbDecorator.defaultConfig
   */
  className: null,

  /**
   * Maximum number of breadcrumbs to display. If a function, it will be called on render to
   * calculate the number of breadcrumbs
   *
   * @type {Number|Function}
   * @default 0
   * @memberof moonstone/Panels.BreadcrumbDecorator.defaultConfig
   */
  max: 0,

  /**
   * Arranger for Panels
   *
   * @type {Object}
   * @default null
   * @memberof moonstone/Panels.BreadcrumbDecorator.defaultConfig
   */
  panelArranger: null
};
/**
 * A higher-order component that adds breadcrumbs to a Panels component
 *
 * @class BreadcrumbDecorator
 * @type {Function}
 * @hoc
 * @private
 * @memberof moonstone/Panels
 */

var BreadcrumbDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var max = config.max,
      panelArranger = config.panelArranger,
      cfgClassName = config.className;
  var calcMax = (0, _util.coerceFunction)(max);
  var Decorator = (0, _kind["default"])({
    name: 'BreadcrumbDecorator',
    propTypes:
    /** @lends moonstone/Panels.BreadcrumbDecorator.prototype */
    {
      /**
       * Array of breadcrumbs or a function that generates an array of breadcrumbs
       *
       * @type {Function|Node[]}
       * @default IndexedBreadcrumbs
       */
      breadcrumbs: _propTypes["default"].oneOfType([_propTypes["default"].func, // generator
      _propTypes["default"].arrayOf(_propTypes["default"].node) // static array of breadcrumbs
      ]),

      /**
       * An object containing properties to be passed to each child. `aria-owns` will be added
       * or updated to this object to add the breadcrumbs to the accessibility tree of each
       * panel.
       *
       * @type {Object}
       * @public
       */
      childProps: _propTypes["default"].object,

      /**
       * Panels to be rendered
       *
       * @type {Node}
       */
      children: _propTypes["default"].node,

      /**
       * Function that generates unique identifiers for Panel instances
       *
       * @type {Function}
       * @required
       * @private
       */
      generateId: _propTypes["default"].func,

      /**
       * Unique identifier for the Panels instance
       *
       * @type {String}
       * @public
       */
      id: _propTypes["default"].string,

      /**
       * Index of the active panel
       *
       * @type {Number}
       * @default 0
       */
      index: _propTypes["default"].number,

      /**
       * Disable breadcrumb transitions.
       *
       * @type {Boolean}
       * @default false
       */
      noAnimation: _propTypes["default"].bool,

      /**
       * Called when a breadcrumb is clicked. The payload includes the `index` of the selected
       * breadcrumb
       *
       * @type {Function}
       */
      onSelectBreadcrumb: _propTypes["default"].func
    },
    defaultProps: {
      breadcrumbs: _IndexedBreadcrumbs["default"],
      index: 0,
      noAnimation: false
    },
    styles: {
      css: _PanelsModule["default"],
      className: cfgClassName
    },
    handlers: {
      handleBreadcrumbWillTransition: function handleBreadcrumbWillTransition(ev, _ref) {
        var id = _ref.id;

        var current = _spotlight["default"].getCurrent();

        if (!current) return;
        var breadcrumbs = document.querySelector("#".concat(id, " .").concat(_PanelsModule["default"].breadcrumbs));

        if (breadcrumbs && breadcrumbs.contains(current)) {
          current.blur();
        }
      }
    },
    computed: {
      // Invokes the breadcrumb generator, if provided
      breadcrumbs: function breadcrumbs(_ref2) {
        var _breadcrumbs = _ref2.breadcrumbs,
            id = _ref2.id,
            index = _ref2.index,
            onSelectBreadcrumb = _ref2.onSelectBreadcrumb;
        var x = calcMax(index);

        if (Array.isArray(_breadcrumbs)) {
          // limit the number of breadcrumbs based on the index and config.max
          var start = Math.max(index - x, 0);

          var children = _react["default"].Children.toArray(_breadcrumbs).slice(start, start + x); // map over the children to either clone it with the appropriate props or to
          // create a Breadcrumb if passed an array of renderable primitives


          return _react["default"].Children.map(children, function (child, i) {
            var props = {
              id: "".concat(id, "_bc_").concat(i),
              index: i,
              onSelect: onSelectBreadcrumb
            };

            if (_react["default"].isValidElement(child)) {
              return _react["default"].cloneElement(child, props);
            } else {
              return _react["default"].createElement(_Breadcrumb["default"], props, child);
            }
          });
        } else {
          return _breadcrumbs(id, index, x, onSelectBreadcrumb);
        }
      },
      childProps: function childProps(_ref3) {
        var _childProps = _ref3.childProps,
            id = _ref3.id,
            index = _ref3.index;

        if (!id || index === 0) {
          return _childProps;
        }

        var start = Math.max(index - calcMax(index), 0);
        var updatedChildProps = Object.assign({}, _childProps);
        var ariaOwns = [];

        for (var i = start; i < index; i++) {
          ariaOwns.push("".concat(id, "_bc_").concat(i));
        }

        if (updatedChildProps['aria-owns']) {
          ariaOwns.unshift(updatedChildProps['aria-owns']);
        }

        updatedChildProps['aria-owns'] = ariaOwns.join(' ');
        return updatedChildProps;
      }
    },
    render: function render(_ref4) {
      var breadcrumbs = _ref4.breadcrumbs,
          childProps = _ref4.childProps,
          children = _ref4.children,
          className = _ref4.className,
          generateId = _ref4.generateId,
          handleBreadcrumbWillTransition = _ref4.handleBreadcrumbWillTransition,
          id = _ref4.id,
          index = _ref4.index,
          noAnimation = _ref4.noAnimation,
          rest = _objectWithoutProperties(_ref4, ["breadcrumbs", "childProps", "children", "className", "generateId", "handleBreadcrumbWillTransition", "id", "index", "noAnimation"]);

      delete rest.onSelectBreadcrumb;

      var count = _react["default"].Children.count(children);

      !(index === 0 && count === 0 || index < count) ?  true ? (0, _invariant["default"])(false, "Panels index, ".concat(index, ", is invalid for number of children, ").concat(count)) : undefined : void 0;
      return _react["default"].createElement("div", {
        className: className,
        "data-index": index,
        id: id
      }, _react["default"].createElement(_ViewManager["default"], {
        arranger: _BreadcrumbArranger["default"],
        className: _PanelsModule["default"].breadcrumbs,
        duration: 300,
        end: calcMax(),
        index: index - 1,
        noAnimation: noAnimation,
        onWillTransition: handleBreadcrumbWillTransition,
        start: 0
      }, breadcrumbs), _react["default"].createElement(Wrapped, Object.assign({}, rest, {
        arranger: panelArranger,
        childProps: childProps,
        generateId: generateId,
        id: "".concat(id, "_panels"),
        index: index,
        noAnimation: noAnimation
      }), children));
    }
  });
  return (0, _CancelDecorator["default"])({
    cancel: 'onSelectBreadcrumb'
  }, (0, _IdProvider["default"])((0, _Skinnable["default"])(Decorator)));
});
exports.BreadcrumbDecorator = BreadcrumbDecorator;
var _default = BreadcrumbDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/CancelDecorator.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/CancelDecorator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CancelDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _Cancelable = _interopRequireDefault(__webpack_require__(/*! @enact/ui/Cancelable */ "./node_modules/@enact/ui/Cancelable/Cancelable.js"));

var _spotlight = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js"));

var _PanelsModule = _interopRequireDefault(__webpack_require__(/*! ./Panels.module.css */ "./node_modules/@enact/moonstone/Panels/Panels.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var defaultConfig = {
  cancel: null
};
var CancelDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var cancel = config.cancel;

  function handleCancel(ev, props) {
    var index = props.index,
        handler = props[cancel];

    if (index > 0 && handler && !document.querySelector(".".concat(_PanelsModule["default"].transitioning))) {
      // clear Spotlight focus
      var current = _spotlight["default"].getCurrent();

      if (current) {
        current.blur();
      }

      handler({
        index: index - 1
      });
      ev.stopPropagation();
    }
  }

  return (0, _Cancelable["default"])({
    modal: true,
    onCancel: handleCancel
  }, Wrapped);
});
exports.CancelDecorator = CancelDecorator;
var _default = CancelDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Header.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Header.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HeaderBase = exports.Header = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _Uppercase = _interopRequireDefault(__webpack_require__(/*! @enact/i18n/Uppercase */ "./node_modules/@enact/i18n/Uppercase/Uppercase.js"));

var _util = __webpack_require__(/*! @enact/i18n/util */ "./node_modules/@enact/i18n/util/util.js");

var _Layout = __webpack_require__(/*! @enact/ui/Layout */ "./node_modules/@enact/ui/Layout/Layout.js");

var _Slottable = _interopRequireDefault(__webpack_require__(/*! @enact/ui/Slottable */ "./node_modules/@enact/ui/Slottable/Slottable.js"));

var _ComponentOverride = _interopRequireDefault(__webpack_require__(/*! @enact/ui/ComponentOverride */ "./node_modules/@enact/ui/ComponentOverride/ComponentOverride.js"));

var _Marquee = __webpack_require__(/*! ../Marquee */ "./node_modules/@enact/moonstone/Marquee/Marquee.js");

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _HeaderModule = _interopRequireDefault(__webpack_require__(/*! ./Header.module.css */ "./node_modules/@enact/moonstone/Panels/Header.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
} // Create a <h1> and Marquee component that support the uppercase attribute


var UppercaseH1 = (0, _Uppercase["default"])('h1'); // Used by compact header, which provides its own inline strings and tags for marqueeing

var MarqueeH2 = (0, _Marquee.MarqueeDecorator)('h2');
var HeaderH1 = (0, _Uppercase["default"])((0, _Marquee.MarqueeDecorator)('h1'));
var CompactTitleBase = (0, _kind["default"])({
  name: 'CompactTitle',
  render: function render(props) {
    delete props.title;
    delete props.titleBelow;
    return _react["default"].createElement("div", props);
  }
}); // Marquee decorated container with title and titleBelow as invalidateProps

var CompactTitle = (0, _Marquee.MarqueeDecorator)({
  invalidateProps: ['title', 'titleBelow']
}, CompactTitleBase);
/**
 * A header component for a Panel with a `title`, `titleBelow`, and `subTitleBelow`
 *
 * @class Header
 * @memberof moonstone/Panels
 * @see i18n/Uppercase.Uppercase
 * @ui
 * @public
 */

var HeaderBase = (0, _kind["default"])({
  name: 'Header',
  propTypes:
  /** @lends moonstone/Panels.Header.prototype */
  {
    /**
     * Configures the mode of uppercasing for the `title`.
     *
     * * Values: `'upper'`, `'preserve'`, `'word'`, `'sentence'`
     *
     * @see i18n/Uppercase#Uppercase.casing
     * @type {String}
     * @default 'upper'
     * @public
     */
    casing: _propTypes["default"].oneOf(['upper', 'preserve', 'word', 'sentence']),

    /**
     * Children provided are added to the header-components area.
     *
     * A space for controls which live in the header, apart from the body of the panel view.
     *
     * @type {Element|Element[]}
     */
    children: _propTypes["default"].oneOfType([_propTypes["default"].element, _propTypes["default"].arrayOf(_propTypes["default"].element)]),

    /**
     * Indents then content and removes separator lines.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    fullBleed: _propTypes["default"].bool,

    /**
     * [`Input`]{@link moonstone/Input} element that will replace the `title`.
     *
     * This is also a [slot]{@link ui/Slottable.Slottable}, so it can be referred
     * to as if it were JSX.
     *
     * Example
     * ```
     *  <Header>
     *  	<title>Example Header Title</title>
     *  	<headerInput>
     *  		<Input dismissOnEnter />
     *  	</headerInput>
     *  	<titleBelow>The Adventure Continues</titleBelow>
     *  	<subTitleBelow>The rebels face attack by imperial forces on the ice planet</subTitleBelow>
     *  </Header>
     * ```
     *
     * @type {Node}
     */
    headerInput: _propTypes["default"].node,

    /**
     * Determines what triggers the header content to start its animation.
     *
     * * Values: `'focus'`, `'hover'` and `'render'`.
     *
     * @type {String}
     * @default 'hover'
     * @public
     */
    marqueeOn: _propTypes["default"].oneOf(['focus', 'hover', 'render']),

    /**
     * Sub-title displayed at the bottom of the panel.
     *
     * This is a [`slot`]{@link ui/Slottable.Slottable}, so it can be used as a tag-name inside
     * this component.
     *
     * @type {String}
     */
    subTitleBelow: _propTypes["default"].string,

    /**
     * Title of the header.
     *
     * This is a [`slot`]{@link ui/Slottable.Slottable}, so it can be used as a tag-name inside
     * this component.
     *
     * Example:
     * ```
     *  <Header>
     *  	<title>Example Header Title</title>
     *  	<titleBelow>The Adventure Continues</titleBelow>
     *  	<subTitleBelow>The rebels face attack by imperial forces on the ice planet</subTitleBelow>
     *  </Header>
     * ```
     *
     * @type {String}
     */
    title: _propTypes["default"].string,

    /**
     * Text displayed below the title.
     *
     * This is a [`slot`]{@link ui/Slottable.Slottable}, so it can be used as a tag-name inside
     * this component.
     *
     * @type {String}
     */
    titleBelow: _propTypes["default"].string,

    /**
     * Set the type of header to be used.
     *
     * * Values: `'standard'` or `'compact'`.
     *
     * @type {String}
     * @default 'standard'
     */
    type: _propTypes["default"].oneOf(['compact', 'standard'])
  },
  defaultProps: {
    casing: 'upper',
    fullBleed: false,
    marqueeOn: 'hover',
    // titleAbove: '00',
    type: 'standard'
  },
  styles: {
    css: _HeaderModule["default"],
    className: 'header'
  },
  computed: {
    className: function className(_ref) {
      var fullBleed = _ref.fullBleed,
          type = _ref.type,
          styler = _ref.styler;
      return styler.append({
        fullBleed: fullBleed
      }, type);
    },
    direction: function direction(_ref2) {
      var title = _ref2.title,
          titleBelow = _ref2.titleBelow;
      return (0, _util.isRtlText)(title) || (0, _util.isRtlText)(titleBelow) ? 'rtl' : 'ltr';
    },
    titleBelowComponent: function titleBelowComponent(_ref3) {
      var marqueeOn = _ref3.marqueeOn,
          titleBelow = _ref3.titleBelow,
          type = _ref3.type;

      switch (type) {
        case 'compact':
          return titleBelow ? _react["default"].createElement("h2", {
            className: _HeaderModule["default"].titleBelow
          }, "   ", titleBelow) : null;

        case 'standard':
          return _react["default"].createElement(MarqueeH2, {
            className: _HeaderModule["default"].titleBelow,
            marqueeOn: marqueeOn
          }, titleBelow != null && titleBelow !== '' ? titleBelow : ' ');
      }
    },
    subTitleBelowComponent: function subTitleBelowComponent(_ref4) {
      var marqueeOn = _ref4.marqueeOn,
          subTitleBelow = _ref4.subTitleBelow;
      return _react["default"].createElement(MarqueeH2, {
        className: _HeaderModule["default"].subTitleBelow,
        marqueeOn: marqueeOn
      }, subTitleBelow != null && subTitleBelow !== '' ? subTitleBelow : ' ');
    },
    titleOrInput: function titleOrInput(_ref5) {
      var casing = _ref5.casing,
          headerInput = _ref5.headerInput,
          marqueeOn = _ref5.marqueeOn,
          title = _ref5.title;

      if (headerInput) {
        return _react["default"].createElement(_Layout.Cell, null, _react["default"].createElement(_ComponentOverride["default"], {
          component: headerInput,
          css: _HeaderModule["default"]
        }));
      } else {
        return _react["default"].createElement(_Layout.Cell, {
          component: HeaderH1,
          casing: casing,
          className: _HeaderModule["default"].title,
          marqueeOn: marqueeOn
        }, title);
      }
    }
  },
  render: function render(_ref6) {
    var casing = _ref6.casing,
        children = _ref6.children,
        direction = _ref6.direction,
        marqueeOn = _ref6.marqueeOn,
        subTitleBelowComponent = _ref6.subTitleBelowComponent,
        title = _ref6.title,
        titleOrInput = _ref6.titleOrInput,
        titleBelowComponent = _ref6.titleBelowComponent,
        type = _ref6.type,
        rest = _objectWithoutProperties(_ref6, ["casing", "children", "direction", "marqueeOn", "subTitleBelowComponent", "title", "titleOrInput", "titleBelowComponent", "type"]);

    delete rest.fullBleed;
    delete rest.headerInput;
    delete rest.subTitleBelow;
    delete rest.titleBelow;

    switch (type) {
      case 'compact':
        return _react["default"].createElement(_Layout.Layout, Object.assign({
          component: "header",
          "aria-label": title
        }, rest, {
          align: "end"
        }), _react["default"].createElement(_Layout.Cell, {
          component: CompactTitle,
          title: title,
          titleBelow: titleBelowComponent,
          marqueeOn: marqueeOn,
          forceDirection: direction
        }, _react["default"].createElement(UppercaseH1, {
          casing: casing,
          className: _HeaderModule["default"].title
        }, title), titleBelowComponent), _react["default"].createElement(_Layout.Cell, {
          shrink: true,
          component: "nav",
          className: _HeaderModule["default"].headerComponents
        }, children));
      // Keeping this block in case we need to add it back after discussing with UX and GUI about future plans.
      // case 'large': return (
      // 	<header {...rest}>
      // 		<div className={css.titleAbove}>{titleAbove}</div>
      // 		<h1 className={css.title}><UppercaseMarquee>{title}</UppercaseMarquee></h1>
      // 		<h2 className={css.titleBelow}><Marquee>{titleBelow}</Marquee></h2>
      // 		<h2 className={css.subTitleBelow}><Marquee>{subTitleBelow}</Marquee></h2>
      // 		<nav className={css.headerComponents}>{children}</nav>
      // 	</header>
      // );

      case 'standard':
        return _react["default"].createElement(_Layout.Layout, Object.assign({
          component: "header",
          "aria-label": title
        }, rest, {
          orientation: "vertical"
        }), titleOrInput, _react["default"].createElement(_Layout.Cell, {
          shrink: true,
          size: 96
        }, _react["default"].createElement(_Layout.Layout, {
          align: "end"
        }, _react["default"].createElement(_Layout.Cell, null, titleBelowComponent, subTitleBelowComponent), _react["default"].createElement(_Layout.Cell, {
          shrink: true,
          component: "nav",
          className: _HeaderModule["default"].headerComponents
        }, children))));
    }
  }
}); // Note that we only export this (even as HeaderBase). HeaderBase is not useful on its own.

exports.HeaderBase = HeaderBase;
var Header = (0, _Slottable["default"])({
  slots: ['headerInput', 'subTitleBelow', 'title', 'titleBelow']
}, (0, _Skinnable["default"])(HeaderBase)); // Set up Header so when it's used in a slottable layout (like Panel), it is automatically
// recognized as this specific slot.

exports.Header = Header;
Header.defaultSlot = 'header';
var _default = Header;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Header.module.css":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Header.module.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"header":"Header_header__3-gVK","decorator":"Header_decorator__1xK8i","input":"Header_input__3ye0m","title":"Header_title__1_Ob1","titleBelow":"Header_titleBelow__2bgz1","subTitleBelow":"Header_subTitleBelow__Wrmhm","moon-small-header":"Header_moon-small-header__P76GI","headerComponents":"Header_headerComponents__2sYTM","standard":"Header_standard__DXgg0","compact":"Header_compact__1PN6O","fullBleed":"Header_fullBleed__KqA4T"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/IndexedBreadcrumbs.js":
/*!********************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/IndexedBreadcrumbs.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IndexedBreadcrumbs = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _Breadcrumb = _interopRequireDefault(__webpack_require__(/*! ./Breadcrumb */ "./node_modules/@enact/moonstone/Panels/Breadcrumb.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Generates an array of at most `max` breadcrumbs with zero-padded labels prefixed by <
 *
 * @param {Number} index      Index of active breadcrumb
 * @param {Number} max        Maximum number of breadcrumbs to dispaly
 * @param {Function} onSelect Handler for selecting a breadcrumb
 * @returns {React.element[]} Array of breadcrumbs
 * @private
 */


var IndexedBreadcrumbs = function IndexedBreadcrumbs(id, index, max, onSelect) {
  var breadcrumbs = new Array(index < max ? index : max);
  var start = Math.max(index - max, 0);

  for (var i = start; i < index; i++) {
    var label = (i < 9 ? '0' : '') + (i + 1);
    breadcrumbs[index - i - 1] = _react["default"].createElement(_Breadcrumb["default"], {
      onSelect: onSelect,
      id: "".concat(id, "_bc_").concat(i),
      index: i,
      key: i
    }, "< ", label);
  }

  return breadcrumbs;
};

exports.IndexedBreadcrumbs = IndexedBreadcrumbs;
var _default = IndexedBreadcrumbs;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Panel.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Panel.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PanelBase = exports.Panel = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _Slottable = _interopRequireDefault(__webpack_require__(/*! @enact/ui/Slottable */ "./node_modules/@enact/ui/Slottable/Slottable.js"));

var _spotlight = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js"));

var _SpotlightContainerDecorator = _interopRequireWildcard(__webpack_require__(/*! @enact/spotlight/SpotlightContainerDecorator */ "./node_modules/@enact/spotlight/SpotlightContainerDecorator/SpotlightContainerDecorator.js"));

var _PanelModule = _interopRequireDefault(__webpack_require__(/*! ./Panel.module.css */ "./node_modules/@enact/moonstone/Panels/Panel.module.css"));

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var panelId = 0;
/**
 * A Panel is the standard view container used inside a [Panels]{@link moonstone/Panels.Panels} view
 * manager instance.
 *
 * [Panels]{@link moonstone/Panels.Panels} will typically contain several instances of these and
 * transition between them.
 *
 * @class Panel
 * @memberof moonstone/Panels
 * @ui
 * @public
 */

var PanelBase = (0, _kind["default"])({
  name: 'Panel',
  propTypes:
  /** @lends moonstone/Panels.Panel.prototype */
  {
    /**
    	 * The "aria-label" for the Panel.
     *
     * By default, the panel will be labeled by its [Header]{@link moonstone/Panels.Header}.
     * When `aria-label` is set, it will be used instead to provide an accessibility label for
     * the panel.
     *
     * @memberof moonstone/Panels.Panel.prototype
     * @type {String}
     * @public
     */
    'aria-label': _propTypes["default"].string,

    /**
     * Sets the strategy used to automatically focus an element within the panel upon render.
     *
     * * "none" - Automatic focus is disabled
     * * "last-focused" - The element last focused in the panel with be restored
     * * "default-element" - The first spottable component within the body will be focused
     * * Custom Selector - A custom CSS selector may also be provided which will be used to find
     *   the target within the Panel
     *
     * When used within [Panels]{@link moonstone/Panels.Panels}, this prop may be set by
     * `Panels` to "default-element" when navigating "forward" to a higher index. This behavior
     * may be overridden by setting `autoFocus` on the `Panel` instance as a child of `Panels`
     * or by wrapping `Panel` with a custom component and overriding the value passed by
     * `Panels`.
     *
     * ```
     * // Panel within CustomPanel will always receive "last-focused"
     * const CustomPanel = (props) => <Panel {...props} autoFocus="last-focused" />;
     *
     * // The first panel will always receive "last-focused". The second panel will receive
     * // "default-element" when navigating from the first panel but `autoFocus` will be unset
     * // when navigating from the third panel and as a result will default to "last-focused".
     * const MyPanels = () => (
     *   <Panels>
     *     <Panel autoFocus="last-focused" />
     *     <Panel />
     *     <Panel />
     *   </Panels>
     * );
     * ```
     *
     * @type {String}
     * @default 'last-focused'
     * @public
     */
    autoFocus: _propTypes["default"].string,

    /**
     * Header for the panel.
     *
     * This is usually passed by the [Slottable]{@link ui/Slottable.Slottable} API by using a
     * [Header]{@link moonstone/Panels.Header} component as a child of the Panel.
     *
     * @type {Header}
     * @public
     */
    header: _propTypes["default"].node,

    /**
     * Hides the body components.
     *
     * When a Panel is used within [`Panels`]{@link moonstone/Panels.Panels},
     * [`ActivityPanels`]{@link moonstone/Panels.ActivityPanels}, or
     * [`AlwaysViewingPanels`]{@link moonstone/Panels.AlwaysViewingPanels},
     * this property will be set automatically to `true` on render and `false` after animating
     * into view.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    hideChildren: _propTypes["default"].bool
  },
  defaultProps: {
    autoFocus: 'last-focused',
    hideChildren: false
  },
  styles: {
    css: _PanelModule["default"],
    className: 'panel'
  },
  handlers: {
    onScroll: (0, _handle.handle)((0, _handle.forward)('onScroll'), function (_ref) {
      var currentTarget = _ref.currentTarget;
      currentTarget.scrollTop = 0;
      currentTarget.scrollLeft = 0;
    }),
    spotOnRender: function spotOnRender(node, _ref2) {
      var autoFocus = _ref2.autoFocus;

      if (node && !_spotlight["default"].getCurrent()) {
        var spotlightId = node.dataset.spotlightId;
        var config = {
          enterTo: 'last-focused'
        };

        if (autoFocus !== 'last-focused') {
          config.enterTo = 'default-element';

          if (autoFocus !== 'default-element') {
            config.defaultElement = autoFocus;
          }
        }

        _spotlight["default"].set(spotlightId, config);

        _spotlight["default"].focus(spotlightId);
      }
    }
  },
  computed: {
    spotOnRender: function spotOnRender(_ref3) {
      var autoFocus = _ref3.autoFocus,
          hideChildren = _ref3.hideChildren,
          _spotOnRender = _ref3.spotOnRender; // In order to spot the body components, we defer spotting until !hideChildren. If the
      // Panel opts out of hideChildren support by explicitly setting it to false, it'll spot
      // on first render.

      if (hideChildren || autoFocus === 'none') {
        return null;
      }

      return _spotOnRender;
    },
    children: function children(_ref4) {
      var _children = _ref4.children,
          hideChildren = _ref4.hideChildren;
      return hideChildren ? null : _children;
    },
    bodyClassName: function bodyClassName(_ref5) {
      var header = _ref5.header,
          hideChildren = _ref5.hideChildren,
          styler = _ref5.styler;
      return styler.join({
        body: true,
        noHeader: !header,
        visible: !hideChildren
      });
    },
    // nulling headerId prevents the aria-labelledby relationship which is necessary to allow
    // aria-label to take precedence
    // (see https://www.w3.org/TR/wai-aria/states_and_properties#aria-labelledby)
    headerId: function headerId(_ref6) {
      var label = _ref6['aria-label'];
      return label ? null : "panel_".concat(++panelId, "_header");
    }
  },
  render: function render(_ref7) {
    var bodyClassName = _ref7.bodyClassName,
        children = _ref7.children,
        header = _ref7.header,
        headerId = _ref7.headerId,
        spotOnRender = _ref7.spotOnRender,
        rest = _objectWithoutProperties(_ref7, ["bodyClassName", "children", "header", "headerId", "spotOnRender"]);

    delete rest.autoFocus;
    delete rest.hideChildren;
    return _react["default"].createElement("article", Object.assign({
      role: "region"
    }, rest, {
      "aria-labelledby": headerId,
      ref: spotOnRender
    }), _react["default"].createElement("div", {
      className: _PanelModule["default"].header,
      id: headerId
    }, header), _react["default"].createElement("section", {
      className: bodyClassName
    }, children));
  }
});
exports.PanelBase = PanelBase;
var Panel = (0, _SpotlightContainerDecorator["default"])({
  // prefer any spottable within the panel body for first render
  continue5WayHold: true,
  defaultElement: [".".concat(_SpotlightContainerDecorator.spotlightDefaultClass), ".".concat(_PanelModule["default"].body, " *")],
  enterTo: 'last-focused',
  preserveId: true
}, (0, _Slottable["default"])({
  slots: ['header']
}, PanelBase));
exports.Panel = Panel;
var _default = Panel;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Panel.module.css":
/*!***************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Panel.module.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"panel":"Panel_panel__3aZiy","body":"Panel_body__3vaU5","noHeader":"Panel_noHeader__7i7rP","visible":"Panel_visible__2FyJl"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Panels.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Panels.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PanelsBase = exports.Panels = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _ViewManager = __webpack_require__(/*! @enact/ui/ViewManager */ "./node_modules/@enact/ui/ViewManager/ViewManager.js");

var _IdProvider = _interopRequireDefault(__webpack_require__(/*! ../internal/IdProvider */ "./node_modules/@enact/moonstone/internal/IdProvider/IdProvider.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _ApplicationCloseButton = _interopRequireDefault(__webpack_require__(/*! ./ApplicationCloseButton */ "./node_modules/@enact/moonstone/Panels/ApplicationCloseButton.js"));

var _CancelDecorator = _interopRequireDefault(__webpack_require__(/*! ./CancelDecorator */ "./node_modules/@enact/moonstone/Panels/CancelDecorator.js"));

var _Viewport = _interopRequireDefault(__webpack_require__(/*! ./Viewport */ "./node_modules/@enact/moonstone/Panels/Viewport.js"));

var _PanelsModule = _interopRequireDefault(__webpack_require__(/*! ./Panels.module.css */ "./node_modules/@enact/moonstone/Panels/Panels.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * Basic Panels component without breadcrumbs or default [arranger]{@link ui/ViewManager.Arranger}
 *
 * @class Panels
 * @memberof moonstone/Panels
 * @ui
 * @public
 */


var PanelsBase = (0, _kind["default"])({
  name: 'Panels',
  propTypes:
  /** @lends moonstone/Panels.Panels.prototype */
  {
    /**
     * Function that generates unique identifiers for Panel instances.
     *
     * @type {Function}
     * @required
     * @private
     */
    generateId: _propTypes["default"].func.isRequired,

    /**
     * Set of functions that control how the panels are transitioned into and out of the
     * viewport.
     *
     * @see ui/ViewManager.SlideArranger
     * @type {ui/ViewManager.Arranger}
     * @public
     */
    arranger: _ViewManager.shape,

    /**
     * An object containing properties to be passed to each child.
     *
     *`aria-owns` will be added or updated to this object to add the close button to the
     * accessibility tree of each panel.
     *
     * @type {Object}
     * @public
     */
    childProps: _propTypes["default"].object,

    /**
     * [`Panels`]{@link moonstone/Panels.Panel} to be rendered
     *
     * @type {Node}
     * @public
     */
    children: _propTypes["default"].node,

    /**
     * Sets the hint string read when focusing the application close button.
     *
     * @type {String}
     * @default 'Exit app'
     * @public
     */
    closeButtonAriaLabel: _propTypes["default"].string,

    /**
     * The background opacity of the application close button.
     *
     * * Values: `'translucent'`, `'lightTranslucent'`, `'transparent'`
     *
     * @type {String}
     * @default 'transparent'
     * @public
     */
    closeButtonBackgroundOpacity: _propTypes["default"].oneOf(['translucent', 'lightTranslucent', 'transparent']),

    /**
     * Unique identifier for the Panels instance
     *
     * @type {String}
     * @public
     */
    id: _propTypes["default"].string,

    /**
     * Index of the active panel
     *
     * @type {Number}
     * @default 0
     * @public
     */
    index: _propTypes["default"].number,

    /**
     * Disables panel transitions.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    noAnimation: _propTypes["default"].bool,

    /**
     * Indicates the close button will not be rendered on the top right corner.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    noCloseButton: _propTypes["default"].bool,

    /**
     * Called when the app close button is clicked.
     *
     * @type {Function}
     * @public
     */
    onApplicationClose: _propTypes["default"].func,

    /**
     * Called with cancel/back key events.
     *
     * @type {Function}
     * @public
     */
    onBack: _propTypes["default"].func
  },
  defaultProps: {
    closeButtonBackgroundOpacity: 'transparent',
    index: 0,
    noAnimation: false,
    noCloseButton: false
  },
  styles: {
    css: _PanelsModule["default"],
    className: 'panels enact-fit'
  },
  computed: {
    className: function className(_ref) {
      var noCloseButton = _ref.noCloseButton,
          styler = _ref.styler;
      return styler.append({
        hasCloseButton: !noCloseButton
      });
    },
    applicationCloseButton: function applicationCloseButton(_ref2) {
      var closeButtonAriaLabel = _ref2.closeButtonAriaLabel,
          closeButtonBackgroundOpacity = _ref2.closeButtonBackgroundOpacity,
          id = _ref2.id,
          noCloseButton = _ref2.noCloseButton,
          onApplicationClose = _ref2.onApplicationClose;

      if (!noCloseButton) {
        var closeId = id ? "".concat(id, "_close") : null;
        return _react["default"].createElement(_ApplicationCloseButton["default"], {
          "aria-label": closeButtonAriaLabel,
          backgroundOpacity: closeButtonBackgroundOpacity,
          className: _PanelsModule["default"].close,
          id: closeId,
          onApplicationClose: onApplicationClose
        });
      }
    },
    childProps: function childProps(_ref3) {
      var _childProps = _ref3.childProps,
          id = _ref3.id,
          noCloseButton = _ref3.noCloseButton;

      if (noCloseButton || !id) {
        return _childProps;
      }

      var updatedChildProps = Object.assign({}, _childProps);
      var closeId = "".concat(id, "_close");
      var owns = updatedChildProps['aria-owns'];

      if (owns) {
        updatedChildProps['aria-owns'] = "".concat(owns, " ").concat(closeId);
      } else {
        updatedChildProps['aria-owns'] = closeId;
      }

      return updatedChildProps;
    }
  },
  render: function render(_ref4) {
    var noAnimation = _ref4.noAnimation,
        arranger = _ref4.arranger,
        childProps = _ref4.childProps,
        children = _ref4.children,
        generateId = _ref4.generateId,
        index = _ref4.index,
        applicationCloseButton = _ref4.applicationCloseButton,
        rest = _objectWithoutProperties(_ref4, ["noAnimation", "arranger", "childProps", "children", "generateId", "index", "applicationCloseButton"]);

    delete rest.closeButtonBackgroundOpacity;
    delete rest.closeButtonAriaLabel;
    delete rest.noCloseButton;
    delete rest.onApplicationClose;
    delete rest.onBack;
    return _react["default"].createElement("div", rest, applicationCloseButton, _react["default"].createElement(_Viewport["default"], {
      arranger: arranger,
      childProps: childProps,
      generateId: generateId,
      index: index,
      noAnimation: noAnimation
    }, children));
  }
});
exports.PanelsBase = PanelsBase;
var Panels = (0, _CancelDecorator["default"])({
  cancel: 'onBack'
}, (0, _IdProvider["default"])((0, _Skinnable["default"])(PanelsBase)));
exports.Panels = Panels;
var _default = Panels;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Panels.module.css":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Panels.module.css ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"panels":"Panels_panels__uHf4Y","breadcrumbs":"Panels_breadcrumbs__3LXaW","breadcrumb":"Panels_breadcrumb__A8Q21","breadcrumbHeader":"Panels_breadcrumbHeader__3dmjo","viewport":"Panels_viewport__13ZDG","transitioning":"Panels_transitioning__2X8A9","activity":"Panels_activity__WxyFk","close":"Panels_close__1PUCp","alwaysViewing":"Panels_alwaysViewing__2ixrk"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Routable.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Routable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Routable = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _Router = __webpack_require__(/*! ./Router */ "./node_modules/@enact/moonstone/Panels/Router.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Default config for [`Routable`]{@link moonstone/Panels.Routable}.
 *
 * @memberof moonstone/Panels.Routable
 * @hocconfig
 */


var defaultConfig = {
  /**
   * The event to listen to for path changes.
   *
   * This defines the actual name of the [navigate]{@link moonstone/Panels.Routable#navigate}
   * property.
   *
   * @type {String}
   * @required
   * @memberof moonstone/Panels.Routable.defaultConfig
   */
  navigate: null
};
/**
 * A higher-order component that provides support for Routes as children of Panels which are
 * selected via `path` instead of the usual flat array of Panels.
 *
 * When using `Routable` you must specify the `navigate` config option.
 *
 * @class Routable
 * @memberof moonstone/Panels
 * @hoc
 * @public
 */

var Routable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var navigate = config.navigate;
  !navigate ?  true ? (0, _invariant["default"])(false, 'navigate must be specified with Routable') : undefined : void 0;
  return (0, _kind["default"])({
    name: 'Routable',
    propTypes:
    /** @lends moonstone/Panels.Routable.prototype */
    _defineProperty({
      /**
       * Path to the active panel.
       *
       * May either be a URI-style path (`'/app/home/settings'`) or an array
       * of strings (`['app', 'home', 'settings']`).
       *
       * @type {String|String[]}
       * @required
       * @public
       */
      path: _Router.propTypes.path.isRequired
    }, navigate, _propTypes2["default"].func),
    handlers: _defineProperty({}, navigate, function (_ref, _ref2) {
      var index = _ref.index,
          rest = _objectWithoutProperties(_ref, ["index"]);

      var path = _ref2.path,
          handler = _ref2[navigate];

      if (handler) {
        var p = (0, _Router.toSegments)(path).slice(0, index + 1);
        handler(_objectSpread({}, rest, {
          index: index,
          path: Array.isArray(path) ? p : '/' + p.join('/')
        }));
      }
    }),
    computed: {
      // Determines the `index` as 1 less than the number of segments in the path
      index: function index(_ref3) {
        var path = _ref3.path;
        return (0, _Router.toSegments)(path).length - 1;
      }
    },
    render: function render(_ref4) {
      var children = _ref4.children,
          index = _ref4.index,
          path = _ref4.path,
          rest = _objectWithoutProperties(_ref4, ["children", "index", "path"]);

      return _react["default"].createElement(_Router.Router, Object.assign({}, rest, {
        path: path,
        component: Wrapped,
        index: index
      }), children);
    }
  });
});
exports.Routable = Routable;
var _default = Routable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Router.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Router.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toSegments = exports.RouterBase = exports.Router = exports.Route = exports.propTypes = exports["default"] = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _ForwardRef = _interopRequireDefault(__webpack_require__(/*! @enact/ui/ForwardRef */ "./node_modules/@enact/ui/ForwardRef/ForwardRef.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "./node_modules/warning/browser.js"));

var _class, _temp;

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var toSegments = function toSegments(path) {
  return Array.isArray(path) ? path : path.split('/').slice(1);
};

exports.toSegments = toSegments;

var getPaths = function getPaths(routes, base) {
  var result = [];
  Object.keys(routes).filter(function (s) {
    return s[0] !== '$';
  }).forEach(function (p) {
    var path = base + '/' + p;
    result.push(path);
    result = result.concat(getPaths(routes[p], path));
  });
  return result;
};

var stringifyRoutes = function stringifyRoutes(routes) {
  var pad = '\n\t';
  var paths = getPaths(routes, '');
  return pad + paths.join(pad);
};

var propTypes = {
  path: _propTypes2["default"].oneOfType([_propTypes2["default"].arrayOf(_propTypes2["default"].string), // array of path segments
  _propTypes2["default"].string // URI-style path
  ])
};
/**
 * A Router component for use with [`Panels`]{@link moonstone/Panels.Panels}
 *
 * @class Router
 * @memberof moonstone/Panels
 * @mixes ui/ForwardRef.ForwardRef
 * @ui
 * @private
 */

exports.propTypes = propTypes;
var RouterBase = (_temp = _class =
/*#__PURE__*/
function (_React$Component) {
  _inherits(RouterBase, _React$Component);

  function RouterBase(props) {
    _classCallCheck(this, RouterBase);

    return _possibleConstructorReturn(this, _getPrototypeOf(RouterBase).call(this, props));
  }
  /**
   * Generates a set of routes from `children` and appends them to `routes`.
   *
   * @param  {React.element[]} children Array of children
   * @param  {Object}          routes   Route configuration object
   *
   * @returns {Object}                   Route configuration object
   */


  _createClass(RouterBase, [{
    key: "createRoutes",
    value: function createRoutes(children, routes) {
      var _this = this;

      _react["default"].Children.forEach(children, function (child) {
        var _child$props = child.props,
            path = _child$props.path,
            grandchildren = _child$props.children,
            component = _child$props.component,
            rest = _objectWithoutProperties(_child$props, ["path", "children", "component"]);

        if (path && component) {
          routes[path] = {
            $component: component,
            $props: rest
          };

          if (grandchildren) {
            _this.createRoutes(grandchildren, routes[path]);
          }
        }
      });

      return routes;
    }
    /**
     * Creates an array of React.elements for the current path.
     *
     * @returns {React.element[]} Children to render
     */

  }, {
    key: "createChildren",
    value: function createChildren() {
      var segments = toSegments(this.props.path);
      var _this$props = this.props,
          routes = _this$props.routes,
          children = _this$props.children;
      var computedRoutes = routes || this.createRoutes(children, {});
      var valid = true;
      var route = computedRoutes;
      var childrenElements = segments.map(function (segment, index) {
        var subPath = segments.slice(0, index + 1).join('/');
        route = route && route[segment];

        if (route && route.$component) {
          return _react["default"].createElement(route.$component, _objectSpread({}, route.$props, {
            key: 'view$/' + subPath,
            spotlightId: "panel-".concat(subPath.replace(/\//g, '-'))
          }));
        }

        valid = false;
        return null;
      });
       true ? (0, _warning["default"])(valid, "".concat(this.props.path, " does not match the configured routes: ").concat(stringifyRoutes(computedRoutes))) : undefined;
      return valid ? childrenElements : [];
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          Component = _this$props2.component,
          componentRef = _this$props2.componentRef,
          rest = _objectWithoutProperties(_this$props2, ["component", "componentRef"]);

      var children = this.createChildren();
      delete rest.path;
      delete rest.routes;
      return _react["default"].createElement(Component, Object.assign({
        ref: componentRef
      }, rest), children);
    }
  }]);

  return RouterBase;
}(_react["default"].Component), _class.displayName = 'Router', _class.propTypes =
/** @lends moonstone/Panels.Router.prototype */
{
  /**
   * List of views to render.
   *
   * Will be rendered as a flat array of views suitable for use in
   * Panels and not a hierarchy of views as the path implies.
   *
   * May either be a URI-style path (`'/app/home/settings'`) or an array
   * of strings (`['app', 'home', 'settings']`).
   *
   * @type {String|String[]}
   * @required
   * @public
   */
  path: propTypes.path.isRequired,

  /**
   * The component wrapping the rendered path.
   *
   * @type {String|Component}
   * @default 'div'
   * @public
   */
  component: _propTypes["default"].renderable,

  /**
   * Called with a reference to [component]{@link moonstone/Panels.Router#component}.
   *
   * @private
   */
  componentRef: _propTypes2["default"].func,

  /**
   * Routes defined as an object rather than via JSX.
   *
   * If specified, `routes` will take
   * precendence over a JSX definition.
   *
   * ```JavaScript
   * const routes = {
   *   'first': {
   *     '$props': {
   *       'title': 'About Routable Panels Pattern'
   *     },
   *     '$component': AboutPanel,
   *     'second': {
   *       '$props': {
   *         'next': 'fourth',
   *         'title': 'Second'
   *       },
   *       '$component': MainPanel
   *     },
   *     'third': {
   *       '$props': {
   *         'next': 'first',
   *         'title': 'Third'
   *       },
   *       '$component': MainPanel,
   *       'fourth': {
   *         '$props': {
   *           'next': 'third',
   *           'title': 'Fourth'
   *         },
   *         '$component': MainPanel
   *       }
   *     }
   *   }
   * };
   *
   *	<Panels path="/app/home/settings" routes={routes} />
   * ```
   *
   * @type {Object}
   * @public
   */
  routes: _propTypes2["default"].object
}, _class.defaultProps = {
  component: 'div'
}, _temp);
exports.RouterBase = RouterBase;
var Router = (0, _ForwardRef["default"])({
  prop: 'componentRef'
}, RouterBase);
/**
 * Used with {@link moonstone/Panels.Routable} to define the `path` segment and the
 * `component` to render.
 *
 *`Route` elements can be nested to build multiple level paths.
 *
 * In the below example, `Panels` would render `SettingsPanel` with breadcrumbs to
 * navigate `AppPanel` and `HomePanel`.
 *
 * ```
 *	<Panels path="/app/home/settings" onSelectBreadcrumb={this.handleNavigate}>
 *		<Route path="app" component={AppPanel}>
 *			<Route path="home" component={HomePanel}>
 *				<Route path="settings" component={SettingsPanel} />
 *			</Route>
 *		</Route>
 *		<Route path="admin" component={AdminPanel} />
 *		<Route path="help" component={HelpPanel} />
 *	</Panels>
 * ```
 *
 * @class Route
 * @ui
 * @memberof moonstone/Panels
 * @public
 */

exports.Router = Router;

var Route = function Route() {
  return null;
};

exports.Route = Route;
Route.propTypes = {
  /**
   * The component to render when the `path` for this Route matches the path of the
   * {@link moonstone/Panels.Routable} container.
   *
   * @type {String|Component}
   * @required
   * @public
   * @memberof moonstone/Panels.Route.prototype
   */
  component: _propTypes["default"].renderable.isRequired,

  /**
   * The name of the path segment.
   *
   * @type {String}
   * @required
   * @public
   * @memberof moonstone/Panels.Route.prototype
   */
  path: _propTypes2["default"].string.isRequired
};
var _default = Router;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/Viewport.js":
/*!**********************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/Viewport.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewportBase = exports.Viewport = exports["default"] = void 0;

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _ViewManager = _interopRequireWildcard(__webpack_require__(/*! @enact/ui/ViewManager */ "./node_modules/@enact/ui/ViewManager/ViewManager.js"));

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _spotlight = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js"));

var _Pause = _interopRequireDefault(__webpack_require__(/*! @enact/spotlight/Pause */ "./node_modules/@enact/spotlight/Pause/Pause.js"));

var _PanelsModule = _interopRequireDefault(__webpack_require__(/*! ./Panels.module.css */ "./node_modules/@enact/moonstone/Panels/Panels.module.css"));

var _class, _temp;

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * The container for a set of Panels
 *
 * @class Viewport
 * @memberof moonstone/Panels
 * @private
 */


var ViewportBase = (_temp = _class =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ViewportBase, _React$Component);

  function ViewportBase() {
    var _this;

    _classCallCheck(this, ViewportBase);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewportBase).call(this));

    _this.addTransitioningClass = function () {
      if (_this.node) {
        _this.node.classList.add(_PanelsModule["default"].transitioning);
      }

      return true;
    };

    _this.removeTransitioningClass = function () {
      if (_this.node) {
        _this.node.classList.remove(_PanelsModule["default"].transitioning);
      }

      return true;
    };

    _this.pause = function () {
      return _this.paused.pause();
    };

    _this.resume = function () {
      return _this.paused.resume();
    };

    _this.handle = _handle.handle.bind(_assertThisInitialized(_this));
    _this.handleTransition = _this.handle((0, _handle.forward)('onTransition'), _this.removeTransitioningClass, _this.resume);
    _this.handleWillTransition = _this.handle((0, _handle.forward)('onWillTransition'), _this.addTransitioningClass, _this.pause);

    _this.mapChildren = function (children, generateId) {
      return _react["default"].Children.map(children, function (child, index) {
        if (child) {
          var _child$props$spotligh = child.props.spotlightId,
              spotlightId = _child$props$spotligh === void 0 ? generateId(index, 'panel-container', _spotlight["default"].remove) : _child$props$spotligh;
          var props = {
            spotlightId: spotlightId,
            'data-index': index
          };

          if (child.props.autoFocus == null && _this.state.direction === 'forward') {
            props.autoFocus = 'default-element';
          }

          return _react["default"].cloneElement(child, props);
        } else {
          return null;
        }
      });
    };

    _this.getEnteringProp = function (noAnimation) {
      return noAnimation ? null : 'hideChildren';
    };

    _this.paused = new _Pause["default"]('Viewport');
    _this.state = {
      prevIndex: -1,
      direction: 'forward'
    };
    return _this;
  }

  _createClass(ViewportBase, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // eslint-disable-next-line react/no-find-dom-node
      this.node = _reactDom["default"].findDOMNode(this);
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.paused.resume();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props = this.props,
          arranger = _this$props.arranger,
          children = _this$props.children,
          generateId = _this$props.generateId,
          index = _this$props.index,
          noAnimation = _this$props.noAnimation,
          rest = _objectWithoutProperties(_this$props, ["arranger", "children", "generateId", "index", "noAnimation"]);

      var enteringProp = this.getEnteringProp(noAnimation);
      var mappedChildren = this.mapChildren(children, generateId);
      var className = (0, _classnames["default"])(_PanelsModule["default"].viewport, rest.className);

      var count = _react["default"].Children.count(mappedChildren);

      !(index === 0 && count === 0 || index < count) ?  true ? (0, _invariant["default"])(false, "Panels index, ".concat(index, ", is invalid for number of children, ").concat(count)) : undefined : void 0;
      return _react["default"].createElement(_ViewManager["default"], Object.assign({}, rest, {
        arranger: arranger,
        className: className,
        component: "main",
        duration: 250,
        enteringDelay: 100 // TODO: Can we remove this?
        ,
        enteringProp: enteringProp,
        index: index,
        noAnimation: noAnimation,
        onTransition: this.handleTransition,
        onWillTransition: this.handleWillTransition
      }), mappedChildren);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      return {
        prevIndex: props.index,
        direction: state.prevIndex > props.index ? 'backward' : 'forward'
      };
    }
  }]);

  return ViewportBase;
}(_react["default"].Component), _class.displayName = 'Viewport', _class.propTypes =
/** @lends moonstone/Panels.Viewport.prototype */
{
  /**
   * A function that generates a globally-unique identifier for a panel index
   *
   * @type {Function}
   * @required
   */
  generateId: _propTypes["default"].func.isRequired,

  /**
   * Set of functions that control how the panels are transitioned into and out of the
   * viewport
   *
   * @type {Arranger}
   */
  arranger: _ViewManager.shape,

  /**
   * Panels to be rendered
   *
   * @type {Panel}
   */
  children: _propTypes["default"].node,

  /**
   * Index of the active panel
   *
   * @type {Number}
   * @default 0
   */
  index: _propTypes["default"].number,

  /**
   * Disable panel transitions
   *
   * @type {Boolean}
   * @default false
   */
  noAnimation: _propTypes["default"].bool
}, _class.defaultProps = {
  index: 0,
  noAnimation: false
}, _temp);
exports.ViewportBase = exports.Viewport = ViewportBase;
var _default = ViewportBase;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Panels/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/moonstone/Panels/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ActivityPanels", {
  enumerable: true,
  get: function get() {
    return _ActivityPanels["default"];
  }
});
Object.defineProperty(exports, "AlwaysViewingPanels", {
  enumerable: true,
  get: function get() {
    return _AlwaysViewingPanels["default"];
  }
});
Object.defineProperty(exports, "Breadcrumb", {
  enumerable: true,
  get: function get() {
    return _Breadcrumb["default"];
  }
});
Object.defineProperty(exports, "Header", {
  enumerable: true,
  get: function get() {
    return _Header["default"];
  }
});
Object.defineProperty(exports, "HeaderBase", {
  enumerable: true,
  get: function get() {
    return _Header.HeaderBase;
  }
});
Object.defineProperty(exports, "Panel", {
  enumerable: true,
  get: function get() {
    return _Panel["default"];
  }
});
Object.defineProperty(exports, "Panels", {
  enumerable: true,
  get: function get() {
    return _Panels["default"];
  }
});
Object.defineProperty(exports, "PanelsBase", {
  enumerable: true,
  get: function get() {
    return _Panels["default"];
  }
});
Object.defineProperty(exports, "Routable", {
  enumerable: true,
  get: function get() {
    return _Routable["default"];
  }
});
Object.defineProperty(exports, "Route", {
  enumerable: true,
  get: function get() {
    return _Router.Route;
  }
});
exports["default"] = void 0;

var _ActivityPanels = _interopRequireDefault(__webpack_require__(/*! ./ActivityPanels */ "./node_modules/@enact/moonstone/Panels/ActivityPanels.js"));

var _AlwaysViewingPanels = _interopRequireDefault(__webpack_require__(/*! ./AlwaysViewingPanels */ "./node_modules/@enact/moonstone/Panels/AlwaysViewingPanels.js"));

var _Breadcrumb = _interopRequireDefault(__webpack_require__(/*! ./Breadcrumb */ "./node_modules/@enact/moonstone/Panels/Breadcrumb.js"));

var _Header = _interopRequireWildcard(__webpack_require__(/*! ./Header */ "./node_modules/@enact/moonstone/Panels/Header.js"));

var _Panel = _interopRequireDefault(__webpack_require__(/*! ./Panel */ "./node_modules/@enact/moonstone/Panels/Panel.js"));

var _Panels = _interopRequireDefault(__webpack_require__(/*! ./Panels */ "./node_modules/@enact/moonstone/Panels/Panels.js"));

var _Routable = _interopRequireDefault(__webpack_require__(/*! ./Routable */ "./node_modules/@enact/moonstone/Panels/Routable.js"));

var _Router = __webpack_require__(/*! ./Router */ "./node_modules/@enact/moonstone/Panels/Router.js");

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Panels provides a way to manage different screens of an app.
 *
 * @module moonstone/Panels
 * @exports ActivityPanels
 * @exports AlwaysViewingPanels
 * @exports Breadcrumb
 * @exports Header
 * @exports Panel
 * @exports Panels
 * @exports PanelsBase
 * @exports Routable
 * @exports Route
 */


var _default = _Panels["default"];
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js":
/*!**************************************************************!*\
  !*** ./node_modules/@enact/moonstone/Skinnable/Skinnable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Skinnable = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! @enact/ui/Skinnable */ "./node_modules/@enact/ui/Skinnable/Skinnable.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * Exports the {@link moonstone/Skinnable.Skinnable} higher-order component (HOC).
 *
 * @module moonstone/Skinnable
 * @public
 */


var defaultConfig = {
  skins: {
    dark: 'moonstone',
    light: 'moonstone-light'
  },
  defaultVariants: ['highContrast'],
  allowedVariants: ['highContrast', 'largeText', 'grayscale']
};
/**
 * This higher-order component is based on [ui/Skinnable]{@link ui/Skinnable.Skinnable}.
 *
 * `Skinnable` comes pre-configured for Moonstone's supported skins: "dark" (default) and "light".
 * It is used to apply the relevant skinning classes to each component and has been used to
 * pre-select specific skins for some components.
 *
 * @class Skinnable
 * @memberof moonstone/Skinnable
 * @extends ui/Skinnable.Skinnable
 * @hoc
 * @public
 */

var Skinnable = (0, _hoc["default"])(defaultConfig, _Skinnable["default"]);
/**
 * Select a skin by name by specifying this property.
 *
 * Available Moonstone skins are `"dark"` (default) and `"light"`. This may be changed at runtime.
 * All components already use their defaults, but a skin may be changed via this prop or by using
 * `Skinnable` directly and a config object.
 *
 * Example:
 * ```
 * <Button skin="light">
 * ```
 *
 * @name skin
 * @type {String}
 * @default 'dark'
 * @memberof moonstone/Skinnable.Skinnable
 * @instance
 * @public
 */

exports.Skinnable = Skinnable;
var _default = Skinnable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipBase = exports.Tooltip = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _Uppercase = _interopRequireDefault(__webpack_require__(/*! @enact/i18n/Uppercase */ "./node_modules/@enact/i18n/Uppercase/Uppercase.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _Skinnable = _interopRequireDefault(__webpack_require__(/*! ../Skinnable */ "./node_modules/@enact/moonstone/Skinnable/Skinnable.js"));

var _TooltipLabel = _interopRequireDefault(__webpack_require__(/*! ./TooltipLabel */ "./node_modules/@enact/moonstone/TooltipDecorator/TooltipLabel.js"));

var _TooltipModule = _interopRequireDefault(__webpack_require__(/*! ./Tooltip.module.css */ "./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * A stateless tooltip component with Moonstone styling applied.
 *
 * @class TooltipBase
 * @memberof moonstone/TooltipDecorator
 * @ui
 * @public
 */


var TooltipBase = (0, _kind["default"])({
  name: 'Tooltip',
  propTypes:
  /** @lends moonstone/TooltipDecorator.TooltipBase.prototype */
  {
    /**
     * The node to be displayed as the main content of the tooltip.
     *
     * @type {Node}
     * @required
     */
    children: _propTypes["default"].node.isRequired,

    /**
     * Position of tooltip arrow in relation to the activator.
     *
     * * Values: `'left'`, `'center'`, `'right'`, `'top'`, `'middle'`, `'bottom'`
     *
     * Note that `'left'`, `'center'`, `'right'` are applicable when direction is in vertical
     * orientation (i.e. `'above'`, `'below'`), and `'top'`, `'middle'`, and `'bottom'` are
     * applicable when direction is in horizontal orientation (i.e. `'left'`, `'right'`)
     *
     * @type {String}
     * @default 'right'
     * @public
     */
    arrowAnchor: _propTypes["default"].oneOf(['left', 'center', 'right', 'top', 'middle', 'bottom']),

    /**
     * Position of the arrow anchor. Takes values between 0 and 1.
     * This will be the left position percentage relative to the tooltip.
     *
     * @type {Number}
     * @public
     */
    arrowPosition: _propTypes["default"].number,

    /**
     * Direction of label in relation to the activator.
     *
     * * Values: `'above'`, `'below'`, `'left'`, and `'right'`
     *
     * @type {String}
     * @default 'above'
     * @public
     */
    direction: _propTypes["default"].oneOf(['above', 'below', 'left', 'right']),

    /**
     * Style object for tooltip position.
     *
     * @type {Object}
     * @public
     */
    position: _propTypes["default"].shape({
      bottom: _propTypes["default"].number,
      left: _propTypes["default"].number,
      right: _propTypes["default"].number,
      top: _propTypes["default"].number
    }),

    /**
     * Called when the tooltip mounts/unmounts, giving a reference to the DOM.
     *
     * @type {Function}
     * @public
     */
    tooltipRef: _propTypes["default"].func,

    /**
     * The width of tooltip content in pixels (px).
     *
     * If the content goes over the given width, then it will automatically wrap. When `null`,
     * content does not wrap.
     *
     * @type {Number|null}
     * @public
     */
    width: _propTypes["default"].number
  },
  defaultProps: {
    arrowAnchor: 'right',
    direction: 'above'
  },
  styles: {
    css: _TooltipModule["default"],
    className: 'tooltip'
  },
  computed: {
    arrowPosition: function arrowPosition(_ref) {
      var _arrowPosition = _ref.arrowPosition;
      return _arrowPosition ? {
        left: "".concat(_arrowPosition * 100, "%")
      } : null;
    },
    arrowType: function arrowType(_ref2) {
      var arrowAnchor = _ref2.arrowAnchor;
      return arrowAnchor === 'center' || arrowAnchor === 'middle' ? 'M0,5C0,4,1,3,3,2.5C1,2,0,1,0,0V5Z' : 'M0,5C0,3,1,0,3,0H0V5Z';
    },
    className: function className(_ref3) {
      var direction = _ref3.direction,
          arrowAnchor = _ref3.arrowAnchor,
          styler = _ref3.styler;
      return styler.append(direction, "".concat(arrowAnchor, "Arrow"));
    },
    style: function style(_ref4) {
      var position = _ref4.position,
          _style = _ref4.style;
      return _objectSpread({}, _style, position);
    }
  },
  render: function render(_ref5) {
    var children = _ref5.children,
        tooltipRef = _ref5.tooltipRef,
        arrowType = _ref5.arrowType,
        width = _ref5.width,
        arrowPosition = _ref5.arrowPosition,
        rest = _objectWithoutProperties(_ref5, ["children", "tooltipRef", "arrowType", "width", "arrowPosition"]);

    delete rest.arrowAnchor;
    delete rest.direction;
    delete rest.position;
    return _react["default"].createElement("div", rest, _react["default"].createElement("svg", {
      style: arrowPosition,
      className: _TooltipModule["default"].tooltipArrow,
      viewBox: "0 0 3 5"
    }, _react["default"].createElement("path", {
      d: arrowType
    })), _react["default"].createElement(_TooltipLabel["default"], {
      tooltipRef: tooltipRef,
      width: width
    }, children));
  }
});
/**
 * A tooltip component with Moonstone styling applied. If the Tooltip's child component is text, it
 * will be uppercased unless `casing` is set.
 *
 * @class Tooltip
 * @memberof moonstone/TooltipDecorator
 * @mixes i18n/Uppercase.Uppercase
 * @ui
 * @public
 */

exports.TooltipBase = TooltipBase;
var Tooltip = (0, _Skinnable["default"])((0, _Uppercase["default"])(TooltipBase));
exports.Tooltip = Tooltip;
var _default = Tooltip;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.module.css":
/*!***************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.module.css ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"tooltip":"Tooltip_tooltip__Y1Sxa","tooltipArrow":"Tooltip_tooltipArrow__Y-KGZ","tooltipLabel":"Tooltip_tooltipLabel__1x9LE","multi":"Tooltip_multi__397as","below":"Tooltip_below__1JWM9","rightArrow":"Tooltip_rightArrow__1fX3u","leftArrow":"Tooltip_leftArrow__31BVY","centerArrow":"Tooltip_centerArrow__2pMug","above":"Tooltip_above__2RIfR","left":"Tooltip_left__1tQxk","topArrow":"Tooltip_topArrow__3fhXs","bottomArrow":"Tooltip_bottomArrow__3GV2m","middleArrow":"Tooltip_middleArrow__3qBQV","right":"Tooltip_right__3UzQj"};

/***/ }),

/***/ "./node_modules/@enact/moonstone/TooltipDecorator/TooltipDecorator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/TooltipDecorator/TooltipDecorator.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Tooltip", {
  enumerable: true,
  get: function get() {
    return _Tooltip.Tooltip;
  }
});
Object.defineProperty(exports, "TooltipBase", {
  enumerable: true,
  get: function get() {
    return _Tooltip.TooltipBase;
  }
});
exports.TooltipDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _I18nDecorator = __webpack_require__(/*! @enact/i18n/I18nDecorator */ "./node_modules/@enact/i18n/I18nDecorator/I18nDecorator.js");

var _FloatingLayer = __webpack_require__(/*! @enact/ui/FloatingLayer */ "./node_modules/@enact/ui/FloatingLayer/index.js");

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js");

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _resolution = _interopRequireDefault(__webpack_require__(/*! @enact/ui/resolution */ "./node_modules/@enact/ui/resolution/index.js"));

var _Tooltip = __webpack_require__(/*! ./Tooltip */ "./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.js");

var _util2 = __webpack_require__(/*! ./util */ "./node_modules/@enact/moonstone/TooltipDecorator/util.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var currentTooltip; // needed to know whether or not we should stop a showing job when unmounting

/**
 * Default config for [TooltipDecorator]{@link moonstone/TooltipDecorator.TooltipDecorator}
 *
 * @memberof moonstone/TooltipDecorator.TooltipDecorator
 * @hocconfig
 */

var defaultConfig = {
  /**
   * The name of the property which will receive the tooltip node.
   *
   * By default, `TooltipDecorator` will add a new child to the wrapped component, following any
   * other children passed in. If a component needs to, it can specify another property to receive
   * the tooltip and the `children` property will not be modified.
   *
   * @type {String}
   * @default 'children'
   * @memberof moonstone/TooltipDecorator.TooltipDecorator.defaultConfig
   */
  tooltipDestinationProp: 'children'
};
/**
 * A higher-order component which positions [Tooltip]{@link moonstone/TooltipDecorator.Tooltip} in
 * relation to the wrapped component.
 *
 * The tooltip is automatically displayed when the decoratorated component is focused after a set
 * period of time.
 *
 * The tooltip is positioned around the decorator where there is available window space.
 *
 * Note that the direction of tooltip will be flipped horizontally in RTL locales.
 *
 * @class TooltipDecorator
 * @memberof moonstone/TooltipDecorator
 * @hoc
 * @public
 */

var TooltipDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var tooltipDestinationProp = config.tooltipDestinationProp;
  var Decorator = (_temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(Decorator, _React$Component);

    function Decorator(props) {
      var _this;

      _classCallCheck(this, Decorator);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(Decorator).call(this, props));
      _this.showTooltipJob = new _util.Job(function () {
        if (!_this.state.showing) {
          _this.setState({
            showing: true
          });
        }
      });
      _this.setTooltipLayoutJob = new _util.Job(function () {
        _this.setTooltipLayout();
      }, 400);

      _this.showTooltip = function (client) {
        var _this$props = _this.props,
            tooltipDelay = _this$props.tooltipDelay,
            tooltipText = _this$props.tooltipText;

        if (tooltipText) {
          _this.clientRef = client;
          currentTooltip = _assertThisInitialized(_this);

          _this.showTooltipJob.startAfter(tooltipDelay);

          if (_this.mutationObserver) {
            _this.mutationObserver.observe(_this.clientRef, {
              attributes: true,
              childList: true
            });
          }

          if (_this.resizeObserver) {
            _this.resizeObserver.observe(_this.clientRef);
          }
        }
      };

      _this.hideTooltip = function () {
        if (_this.props.tooltipText) {
          if (_this.mutationObserver) {
            _this.mutationObserver.disconnect();
          }

          if (_this.resizeObserver) {
            _this.resizeObserver.disconnect();
          }

          _this.clientRef = null;
          currentTooltip = null;

          _this.showTooltipJob.stop();

          _this.setTooltipLayoutJob.stop();

          if (_this.state.showing) {
            _this.setState({
              showing: false
            });
          }
        }
      };

      _this.handle = _handle.handle.bind(_assertThisInitialized(_this));
      _this.handleKeyDown = _this.handle((0, _handle.forward)('onKeyDown'), (0, _handle.forProp)('disabled', false), function () {
        _this.setTooltipLayoutJob.start();
      });
      _this.handleGlobalKeyDown = _this.handle((0, _handle.forProp)('disabled', true), function () {
        _this.hideTooltip();

        (0, _dispatcher.off)('keydown', _this.handleGlobalKeyDown);
      });
      _this.handleMouseOver = _this.handle((0, _handle.forward)('onMouseOver'), (0, _handle.forProp)('disabled', true), function (ev) {
        _this.showTooltip(ev.target);

        (0, _dispatcher.on)('keydown', _this.handleGlobalKeyDown);
      });
      _this.handleMouseOut = _this.handle((0, _handle.forward)('onMouseOut'), (0, _handle.forProp)('disabled', true), function () {
        _this.hideTooltip();

        (0, _dispatcher.off)('keydown', _this.handleGlobalKeyDown);
      });
      _this.handleFocus = _this.handle((0, _handle.forward)('onFocus'), function (_ref) {
        var target = _ref.target;
        return _this.showTooltip(target);
      });
      _this.handleBlur = _this.handle((0, _handle.forward)('onBlur'), _this.hideTooltip);

      _this.getTooltipRef = function (node) {
        _this.tooltipRef = node;

        if (node) {
          _this.setTooltipLayout();
        }
      };

      _this.TOOLTIP_HEIGHT = _resolution["default"].scale(18); // distance between client and tooltip's label

      _this.state = {
        showing: false,
        tooltipDirection: null,
        arrowAnchor: null,
        position: {
          top: 0,
          left: 0
        }
      };
      return _this;
    }

    _createClass(Decorator, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (window.MutationObserver) {
          this.mutationObserver = new MutationObserver(this.setTooltipLayoutJob.start);
        }

        if (window.ResizeObserver) {
          this.resizeObserver = new ResizeObserver(this.setTooltipLayoutJob.start);
        }
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.state.showing && prevProps.tooltipText !== this.props.tooltipText) {
          this.setTooltipLayout();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (currentTooltip === this) {
          currentTooltip = null;

          if (this.mutationObserver) {
            this.mutationObserver.disconnect();
          }

          if (this.resizeObserver) {
            this.resizeObserver.disconnect();
          }

          this.showTooltipJob.stop();
          this.setTooltipLayoutJob.stop();
        }

        if (this.props.disabled) {
          (0, _dispatcher.off)('keydown', this.handleKeyDown);
        }
      }
    }, {
      key: "setTooltipLayout",
      value: function setTooltipLayout() {
        if (!this.tooltipRef || !this.clientRef) return;
        var position = this.props.tooltipPosition;
        var arr = position.split(' ');
        var tooltipDirection = null;
        var arrowAnchor = null;

        if (arr.length === 2) {
          var _arr2 = _slicedToArray(arr, 2);

          tooltipDirection = _arr2[0];
          arrowAnchor = _arr2[1];
        } else if (position === 'above' || position === 'below') {
          tooltipDirection = position;
          arrowAnchor = 'right';
        } else {
          tooltipDirection = 'above';
          arrowAnchor = 'right';
        }

        var tooltipNode = this.tooltipRef.getBoundingClientRect(); // label bound

        var clientNode = this.clientRef.getBoundingClientRect(); // client bound

        var overflow = (0, _util2.calcOverflow)(tooltipNode, clientNode, tooltipDirection, this.TOOLTIP_HEIGHT);
        tooltipDirection = (0, _util2.adjustDirection)(tooltipDirection, overflow, this.props.rtl);
        arrowAnchor = (0, _util2.adjustAnchor)(arrowAnchor, tooltipDirection, overflow, this.props.rtl);
        var tooltipPosition = (0, _util2.getPosition)(tooltipNode, clientNode, arrowAnchor, tooltipDirection, this.TOOLTIP_HEIGHT, overflow, this.props.rtl);
        var arrowPosition = (0, _util2.getArrowPosition)(tooltipNode, clientNode, tooltipDirection, overflow, this.props.rtl);
        var _this$state$position = this.state.position,
            top = _this$state$position.top,
            left = _this$state$position.left;

        if (tooltipPosition.top !== top || tooltipPosition.left !== left || arrowPosition !== this.state.arrowPosition) {
          this.setState({
            tooltipDirection: tooltipDirection,
            arrowAnchor: arrowAnchor,
            arrowPosition: arrowPosition,
            position: tooltipPosition
          });
        }
      }
    }, {
      key: "renderTooltip",

      /**
       * Conditionally creates the FloatingLayer and Tooltip based on the presence of
       * `tooltipText` and returns a property bag to pass onto the Wrapped component
       *
       * @returns {Object} Prop object
       * @private
       */
      value: function renderTooltip() {
        var _this$props2 = this.props,
            children = _this$props2.children,
            tooltipCasing = _this$props2.tooltipCasing,
            tooltipProps = _this$props2.tooltipProps,
            tooltipText = _this$props2.tooltipText,
            tooltipWidth = _this$props2.tooltipWidth;

        if (tooltipText) {
          var renderedTooltip = _react["default"].createElement(_FloatingLayer.FloatingLayerBase, {
            open: this.state.showing,
            noAutoDismiss: true,
            onDismiss: this.hideTooltip,
            scrimType: "none",
            key: "tooltipFloatingLayer"
          }, _react["default"].createElement(_Tooltip.Tooltip, Object.assign({
            "aria-live": "off",
            role: "alert"
          }, tooltipProps, {
            arrowAnchor: this.state.arrowAnchor,
            arrowPosition: this.state.arrowPosition,
            casing: tooltipCasing,
            direction: this.state.tooltipDirection,
            position: this.state.position,
            tooltipRef: this.getTooltipRef,
            width: tooltipWidth
          }), tooltipText));

          if (tooltipDestinationProp === 'children') {
            return {
              children: [children, renderedTooltip]
            };
          } else {
            return _defineProperty({}, tooltipDestinationProp, renderedTooltip);
          }
        }

        return {
          children: children
        };
      }
    }, {
      key: "render",
      value: function render() {
        // minor optimization to merge all the props together once since we also have to delete
        // invalid props before passing downstream
        var props = Object.assign({}, this.props, this.renderTooltip(), {
          onBlur: this.handleBlur,
          onFocus: this.handleFocus,
          onMouseOut: this.handleMouseOut,
          onMouseOver: this.handleMouseOver,
          onKeyDown: this.handleKeyDown
        });
        delete props.rtl;
        delete props.tooltipDelay;
        delete props.tooltipPosition;
        delete props.tooltipCasing;
        delete props.tooltipProps;
        delete props.tooltipText;
        delete props.tooltipWidth;
        return _react["default"].createElement(Wrapped, props);
      }
    }]);

    return Decorator;
  }(_react["default"].Component), _class.displayName = 'TooltipDecorator', _class.propTypes =
  /** @lends moonstone/TooltipDecorator.TooltipDecorator.prototype */
  {
    /**
     * Disables the component but does not affect tooltip operation.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes["default"].bool,

    /**
     * Indicates the tooltip text direction is right-to-left.
     *
     * @type {Boolean}
     * @private
     */
    rtl: _propTypes["default"].bool,

    /**
     * The casing of `tooltipText`.
     *
     * @see i18n/Uppercase#casing
     * @type {String}
     * @default 'upper'
     * @public
     */
    tooltipCasing: _propTypes["default"].oneOf(['upper', 'preserve', 'word', 'sentence']),

    /**
     * Time to wait (in milliseconds) before showing tooltip on hover.
     *
     * @type {Number}
     * @default 500
     * @public
     */
    tooltipDelay: _propTypes["default"].number,

    /**
     * Position of the tooltip with respect to the wrapped component.
     *
     * | *Value* | *Tooltip Direction* |
     * |---|---|
     * | `'above'` | Above component, flowing to the right |
     * | `'above center'` | Above component, centered |
     * | `'above left'` | Above component, flowing to the left |
     * | `'above right'` | Above component, flowing to the right |
     * | `'below'` | Below component, flowing to the right |
     * | `'below center'` | Below component, centered |
     * | `'below left'` | Below component, flowing to the right |
     * | `'below right'` | Below component, flowing to the right |
     * | `'left bottom'` | Left of the component, contents at the bottom |
     * | `'left middle'` | Left of the component, contents middle aligned |
     * | `'left top'` | Left of the component, contents at the top |
     * | `'right bottom'` | Right of the component, contents at the bottom |
     * | `'right middle'` | Right of the component, contents middle aligned |
     * | `'right top'` | Right of the component, contents at the top |
     *
     * `TooltipDectorator` attempts to choose the best direction to meet layout and language
     * requirements. Left and right directions will reverse for RTL languages. Additionally,
     * the tooltip will reverse direction if it will prevent overflowing off the viewport
     *
     * @type {String}
     * @default 'above'
     * @public
     */
    tooltipPosition: _propTypes["default"].oneOf(['above', 'above center', 'above left', 'above right', 'below', 'below center', 'below left', 'below right', 'left bottom', 'left middle', 'left top', 'right bottom', 'right middle', 'right top']),

    /**
     * Properties to be passed to tooltip component.
     *
     * @type {Object}
     * @public
     */
    tooltipProps: _propTypes["default"].object,

    /**
     * Tooltip content.
     *
     * @type {Node}
     * @public
     */
    tooltipText: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

    /**
     * The width of tooltip content in pixels (px).
     *
     * If the content goes over the given width, it will automatically wrap. When `null`,
     * content does not wrap.
     *
     * @type {Number|null}
     * @public
     */
    tooltipWidth: _propTypes["default"].number
  }, _class.defaultProps = {
    disabled: false,
    tooltipCasing: 'upper',
    tooltipDelay: 500,
    tooltipPosition: 'above'
  }, _temp);
  return (0, _I18nDecorator.I18nContextDecorator)({
    rtlProp: 'rtl'
  }, Decorator);
});
exports.TooltipDecorator = TooltipDecorator;
var _default = TooltipDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/TooltipDecorator/TooltipLabel.js":
/*!************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/TooltipDecorator/TooltipLabel.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipLabel = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _util = __webpack_require__(/*! @enact/i18n/util */ "./node_modules/@enact/i18n/util/util.js");

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _TooltipModule = _interopRequireDefault(__webpack_require__(/*! ./Tooltip.module.css */ "./node_modules/@enact/moonstone/TooltipDecorator/Tooltip.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * {@link moonstone/TooltipDecorator.TooltipLabel} is a stateless tooltip component with
 * Moonston styling applied.
 *
 * @class TooltipLabel
 * @memberof moonstone/TooltipDecorator
 * @ui
 * @private
 */


var TooltipLabel = (0, _kind["default"])({
  name: 'TooltipLabel',
  propTypes:
  /** @lends moonstone/TooltipDecorator.TooltipLabel.prototype */
  {
    /**
     * The node to be displayed as the main content of the tooltip.
     *
     * @type {Node}
     * @required
     */
    children: _propTypes["default"].node.isRequired,

    /**
     * The method to run when the tooltip mounts/unmounts, giving a reference to the DOM.
     *
     * @type {Function}
     * @public
     */
    tooltipRef: _propTypes["default"].func,

    /**
     * The width of tooltip content in pixels (px). If the content goes over the given width,
     * then it will automatically wrap. When `null`, content does not wrap.
     *
     * @type {Number}
     * @public
     */
    width: _propTypes["default"].number
  },
  styles: {
    css: _TooltipModule["default"],
    className: 'tooltipLabel'
  },
  computed: {
    className: function className(_ref) {
      var width = _ref.width,
          styler = _ref.styler;
      return styler.append({
        multi: !!width
      });
    },
    style: function style(_ref2) {
      var children = _ref2.children,
          width = _ref2.width,
          _style = _ref2.style;
      return _objectSpread({}, _style, {
        direction: (0, _util.isRtlText)(children) ? 'rtl' : 'ltr',
        width: width
      });
    }
  },
  render: function render(_ref3) {
    var children = _ref3.children,
        tooltipRef = _ref3.tooltipRef,
        rest = _objectWithoutProperties(_ref3, ["children", "tooltipRef"]);

    delete rest.width;
    return _react["default"].createElement("div", Object.assign({}, rest, {
      ref: tooltipRef
    }), children);
  }
});
exports.TooltipLabel = TooltipLabel;
var _default = TooltipLabel;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/TooltipDecorator/util.js":
/*!****************************************************************!*\
  !*** ./node_modules/@enact/moonstone/TooltipDecorator/util.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPosition = exports.getArrowPosition = exports.calcOverflow = exports.adjustAnchor = exports.adjustDirection = void 0;

var _resolution = _interopRequireDefault(__webpack_require__(/*! @enact/ui/resolution */ "./node_modules/@enact/ui/resolution/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
} // TooltipDecorator util.js
//

/**
 * Adjust anchor position for `Tooltip` based on overflow and rtl.
 * Takes the output of `adjustDirection`, and `calcOverflow`.
 *
 * @method
 * @memberof moonstone/TooltipDecorator
 * @param   {String}  arrowAnchor       Initial anchor position
 * @param   {String}  tooltipDirection  Direction of tooltip; value from `adjustDirection`
 * @param   {Object}  overflow          Tooltip's calculated overflow from `calcOverflow`
 * @param   {Boolean} rtl               RTL mode
 * @returns {String}                    Adjusted anchor position
 * @private
 */


var adjustAnchor = function adjustAnchor(arrowAnchor, tooltipDirection, overflow, rtl) {
  if (tooltipDirection === 'above' || tooltipDirection === 'below') {
    if (rtl && arrowAnchor !== 'center') {
      arrowAnchor = arrowAnchor === 'left' ? 'right' : 'left';
    } // Flip sideways if it overflows to the sides


    if (overflow.isOverRight) {
      arrowAnchor = 'left';
    } else if (overflow.isOverLeft) {
      arrowAnchor = 'right';
    }

    if (overflow.isOverWide && tooltipDirection !== 'left' && tooltipDirection !== 'right') {
      arrowAnchor = 'center';
    }
  }

  return arrowAnchor;
};
/**
 * Adjust direction for `Tooltip` based on overflow and rtl.
 * Takes the output from `calcOverflow`.
 *
 * @method
 * @memberof moonstone/TooltipDecorator
 * @param   {String}  tooltipDirection  Direction of tooltip
 * @param   {Object}  overflow          Tooltip's calculated overflow from `calcOverflow`
 * @param   {Boolean} rtl               RTL mode
 * @returns {String}                    Adjusted tooltip direction
 * @private
 */


exports.adjustAnchor = adjustAnchor;

var adjustDirection = function adjustDirection(tooltipDirection, overflow, rtl) {
  if (rtl && (tooltipDirection === 'left' || tooltipDirection === 'right')) {
    tooltipDirection = tooltipDirection === 'left' ? 'right' : 'left';
  } // Flip tooltip if it overflows towards the tooltip direction


  if (overflow.isOverTop && tooltipDirection === 'above') {
    tooltipDirection = 'below';
  } else if (overflow.isOverBottom && tooltipDirection === 'below') {
    tooltipDirection = 'above';
  } else if (overflow.isOverLeft && tooltipDirection === 'left' && !overflow.isOverWide) {
    tooltipDirection = 'right';
  } else if (overflow.isOverRight && tooltipDirection === 'right' && !overflow.isOverWide) {
    tooltipDirection = 'left';
  }

  return tooltipDirection;
};
/**
 * Calculates the overflow of `Tooltip` — if `Tooltip` is at the edge of the viewport.
 *
 * @method
 * @memberof moonstone/TooltipDecorator
 * @param   {Object} tooltipNode        The `getBoundingClientRect` values for tooltip node
 * @param   {Object} clientNode         The `getBoundingClientRect` values for client node
 * @param   {String} tooltipDirection   Direction of tooltip
 * @param   {Number} tooltipHeight      Tooltip height
 * @returns {Object}                    Tooltip's calculated overflow
 * @private
 */


exports.adjustDirection = adjustDirection;

var calcOverflow = function calcOverflow(tooltipNode, clientNode, tooltipDirection, tooltipHeight) {
  // get the distance of space on both the right and left side of the client node. `clientNode.width / 2` because we want the tooltip to be positioned horizontally in middle of the client node.
  var rightDelta = tooltipNode.width > clientNode.left + clientNode.width / 2;
  var leftDelta = tooltipNode.width > window.innerWidth - clientNode.right - clientNode.width / 2;
  var isTooltipWide = tooltipNode.width > window.innerWidth || leftDelta && rightDelta;

  if (tooltipDirection === 'above' || tooltipDirection === 'below') {
    return {
      isOverTop: clientNode.top - tooltipNode.height - tooltipHeight < 0,
      isOverBottom: clientNode.bottom + tooltipNode.height + tooltipHeight > window.innerHeight,
      isOverLeft: clientNode.left - tooltipNode.width + clientNode.width / 2 < 0,
      isOverRight: clientNode.right + tooltipNode.width - clientNode.width / 2 > window.innerWidth,
      isOverWide: isTooltipWide
    };
  } else if (tooltipDirection === 'left' || tooltipDirection === 'right') {
    return {
      isOverTop: clientNode.top - tooltipNode.height + clientNode.height / 2 < 0,
      isOverBottom: clientNode.bottom + tooltipNode.height - clientNode.height / 2 > window.innerHeight,
      isOverLeft: clientNode.left - tooltipNode.width < 0,
      isOverRight: clientNode.right + tooltipNode.width > window.innerWidth,
      isOverWide: isTooltipWide
    };
  }
};
/**
 * Calculates the top and left position for `Tooltip`.
 * Takes the output of `adjustAnchor`, `adjustDirection`, and `calcOverflow`.
 *
 * @method
 * @memberof moonstone/TooltipDecorator
 * @param   {Object} tooltipNode        The `getBoundingClientRect` values for tooltip node
 * @param   {Object} clientNode         The `getBoundingClientRect` values for client node
 * @param   {String} arrowAnchor        Anchor position from `adjustAnchor`
 * @param   {String} tooltipDirection   Direction of tooltip
 * @param   {Number} tooltipHeight      Tooltip height
 * @param   {Object} overflow           Tooltip's calculated overflow from `calcOverflow`
 * @param   {Boolean} rtl               RTL mode
 * @returns {Object}                    Tooltip top and left position
 * @private
 */


exports.calcOverflow = calcOverflow;

var getPosition = function getPosition(tooltipNode, clientNode, arrowAnchor, tooltipDirection, tooltipHeight, overflow, rtl) {
  var position = {};

  switch (tooltipDirection) {
    case 'above':
      position.top = clientNode.top - tooltipNode.height - tooltipHeight;
      break;

    case 'below':
      position.top = clientNode.bottom + tooltipHeight;
      break;

    case 'right':
      position.left = clientNode.right + tooltipHeight;
      break;

    case 'left':
      position.left = clientNode.left - tooltipNode.width - tooltipHeight;
      break;

    default:
      position = {};
  }

  if (tooltipDirection === 'above' || tooltipDirection === 'below') {
    position.left = clientNode.left + clientNode.width / 2;

    if (arrowAnchor === 'left') {
      position.left -= tooltipNode.width;
    } else if (arrowAnchor === 'center') {
      position.left -= tooltipNode.width / 2;
    }
  } else if (tooltipDirection === 'left' || tooltipDirection === 'right') {
    position.top = clientNode.top + clientNode.height / 2;

    if (arrowAnchor === 'top') {
      position.top -= tooltipNode.height;
    } else if (arrowAnchor === 'middle') {
      position.top -= tooltipNode.height / 2;
    }
  } // When tooltip is too wide, shift the tooltip so that the first part of the tooltip is always visible. Does not affect tooltips with `tooltipDirection` of `left` and `right`


  if (overflow.isOverWide && !(tooltipDirection === 'left' || tooltipDirection === 'right') && arrowAnchor !== 'right') {
    position.left = rtl ? window.innerWidth - tooltipNode.width : 0;
  }

  return position;
};
/**
 * Adjusts the `Tooltip` arrow anchor when the tooltip is too wide.
 * Takes the output of `calcOverflow`.
 *
 * @method
 * @memberof moonstone/TooltipDecorator
 * @param   {Object} tooltipNode        The `getBoundingClientRect` values for tooltip node
 * @param   {Object}  clientNode        The `getBoundingClientRect` values for client node
 * @param   {Object}  overflow          Tooltip's calculated overflow from `calcOverflow`
 * @param   {Boolean} rtl               RTL mode
 * @returns {Number}                    Tooltip anchor's left position in percentage between 0 and 1 relative to the tooltip
 * @private
 */


exports.getPosition = getPosition;

var getArrowPosition = function getArrowPosition(tooltipNode, clientNode, tooltipDirection, overflow, rtl) {
  if (overflow.isOverWide && tooltipDirection !== 'left' && tooltipDirection !== 'right') {
    var tooltipWidth = tooltipNode.width; // finding out where the middle of the clientNode is and figuring out where that is in relation to the tooltip node in percentage between 0 and 1

    var arrowPosition = rtl ? 1 - (window.innerWidth - clientNode.right + clientNode.width / 2) / tooltipWidth : (clientNode.left + clientNode.width / 2) / tooltipWidth;

    var borderRadius = _resolution["default"].scale(33); // based on @moon-tooltip-border-radius
    // max arrow position before the arrow is detached because of border radius


    var maxArrowPosition = 1 - borderRadius / tooltipWidth; // if arrow position is above the max arrow position, use max arrow position instead

    var adjustedArrowPosition = arrowPosition > maxArrowPosition ? maxArrowPosition : arrowPosition;
    return adjustedArrowPosition;
  }

  return null;
};

exports.getArrowPosition = getArrowPosition;

/***/ }),

/***/ "./node_modules/@enact/moonstone/internal/$L/$L.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/moonstone/internal/$L/$L.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.$L = $L;
exports.clearResBundle = clearResBundle;
exports.createResBundle = createResBundle;
exports.setResBundle = setResBundle;
exports["default"] = void 0;

var _resBundle = __webpack_require__(/*! @enact/i18n/src/resBundle */ "./node_modules/@enact/i18n/src/resBundle.js");

var _ResBundle = _interopRequireDefault(__webpack_require__(/*! @enact/i18n/ilib/lib/ResBundle */ "./node_modules/@enact/i18n/ilib/lib/ResBundle.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // The ilib.ResBundle for the active locale used by $L


var resBundle;
/**
 * Returns the current ilib.ResBundle
 *
 * @returns {ilib.ResBundle} Current ResBundle
 */

function getResBundle() {
  return resBundle;
}
/**
 * Creates a new ilib.ResBundle for string translation
 *
 * @param  {ilib.Locale} locale Locale for ResBundle
 *
 * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle
 */


function createResBundle(options) {
  var opts = options;

  if (true) {
    opts = _objectSpread({
      loadParams: {
        root: __webpack_require__.p + "node_modules/@enact/moonstone/resources"
      }
    }, options);
  }

  if (!opts.onLoad) return; // eslint-disable-next-line no-new

  new _ResBundle["default"](_objectSpread({}, opts, {
    onLoad: function onLoad(bundle) {
      opts.onLoad(bundle || null);
    }
  }));
}
/**
 * Deletes the current bundle object of strings and clears the cache.
 * @returns {undefined}
 */


function clearResBundle() {
  delete _ResBundle["default"].strings;
  delete _ResBundle["default"].sysres;
  resBundle = null;
}
/**
 * Set the locale for the strings that $L loads. This may reload the
 * string resources if necessary.
 *
 * @param {string} spec the locale specifier
 * @returns {ilib.ResBundle} Current ResBundle
 */


function setResBundle(bundle) {
  return resBundle = bundle;
}

function toIString(str) {
  var rb = getResBundle();

  if (!rb) {
    createResBundle({
      sync: true,
      onLoad: setResBundle
    });
  }

  return (0, _resBundle.getIStringFromBundle)(str, rb);
}
/**
 * Maps a string or key/value object to a translated string for the current locale.
 *
 * @function
 * @memberof i18n/$L
 * @param  {String|Object} str Source string
 *
 * @returns {String} The translated string
 */


function $L(str) {
  return String(toIString(str));
}

var _default = $L;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/moonstone/internal/IdProvider/IdProvider.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@enact/moonstone/internal/IdProvider/IdProvider.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IdProvider = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var GlobalId = 0;
var ID_KEY = '$$ID$$';
/**
 * Default config for {@link moonstone/Panels.IdProvider}
 *
 * @hocconfig
 * @memberof moonstone/Panels.IdProvider
 */

var defaultConfig = {
  /**
   * Prop to pass the identifier generation function
   *
   * @type {String}
   * @default generateId
   * @memberof moonstone/Panels.IdProvider.defaultConfig
   */
  generateProp: 'generateId',

  /**
   * Prop to pass the identifier
   *
   * @type {String}
   * @default id
   * @memberof moonstone/Panels.IdProvider.defaultConfig
   */
  idProp: 'id',

  /**
   * Optional prefix for the identifier
   *
   * @type {String}
   * @default 'c_'
   * @memberof moonstone/Panels.IdProvider.defaultConfig
   */
  prefix: 'c_'
};
/**
 * A higher-order component that generates globally-unique identifiers
 *
 * @class IdProvider
 * @hoc
 * @private
 * @memberof moonstone/Panels
 */

var IdProvider = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var generateProp = config.generateProp,
      idProp = config.idProp,
      prefix = config.prefix;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this));

      _this.generateId = function (key) {
        var idPrefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : prefix;
        var onUnmount = arguments.length > 2 ? arguments[2] : undefined; // if an id has been generated for the key, return it

        if (key in _this.ids) {
          return _this.ids[key].id;
        } // otherwise generate a new id (with an optional prefix), cache it, and return it


        var id = "".concat(idPrefix).concat(++GlobalId);
        _this.ids[typeof key === 'undefined' ? "generated-".concat(id) : key] = {
          id: id,
          onUnmount: onUnmount
        };
        return id;
      };

      _this.ids = {};
      return _this;
    }

    _createClass(_class, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        // Call the onUnmount handler for each generated id (note: not the key)
        for (var key in this.ids) {
          var _this$ids$key = this.ids[key],
              id = _this$ids$key.id,
              onUnmount = _this$ids$key.onUnmount;

          if (typeof onUnmount === 'function') {
            onUnmount(id);
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var props = Object.assign({}, this.props);

        if (generateProp) {
          props[generateProp] = this.generateId;
        }

        if (idProp && !props[idProp]) {
          props[idProp] = this.generateId(ID_KEY);
        }

        return _react["default"].createElement(Wrapped, props);
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'IdProvider', _temp;
});
exports.IdProvider = IdProvider;
var _default = IdProvider;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/Accelerator/Accelerator.js":
/*!******************************************************************!*\
  !*** ./node_modules/@enact/spotlight/Accelerator/Accelerator.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Accelerator = exports["default"] = void 0;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
/**
 * Provides the {@link spotlight/Accelerator.Accelerator} class.
 *
 * @module spotlight/Accelerator
 */

/**
 * @class Accelerator
 * @memberof spotlight/Accelerator
 */


var Accelerator =
/**
 * @constructor
 * @param {Number[]} frequency - Controls the frequency with which the acceleration will
 *	"freeze". While frozen, the current target item cannot change, and all events are directed
 *	to it.
 * @memberof spotlight/Accelerator.Accelerator.prototype
 */
function Accelerator() {
  var _this = this;

  var frequency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [3, 3, 3, 2, 2, 2, 1];

  _classCallCheck(this, Accelerator);

  this.processKey = function (event, callback) {
    switch (event.type) {
      case 'keydown':
        if (event.keyCode !== _this.keyCode) {
          _this.reset();

          _this.time = Date.now();
          _this.keyCode = event.keyCode;
          return callback(event);
        } else if (_this.canceled) {
          // Prevent skipped keydown events from bubbling
          event.preventDefault();
          return true;
        } else {
          var elapsedTime = Date.now() - _this.time,
              seconds = Math.floor(elapsedTime / 1000),
              toSkip = 0;

          seconds = seconds > _this.frequency.length - 1 ? _this.frequency.length - 1 : seconds;
          toSkip = _this.frequency[seconds] - 1;

          if (toSkip < 0) {
            toSkip = 0;
          }

          _this.accelerating = !(seconds === 0 && _this.skipped === 0);

          if (_this.skipped >= toSkip) {
            _this.skipped = 0;
            return callback(event);
          } else {
            _this.skipped++; // Prevent skipped keydown events from bubbling

            event.preventDefault();
            return true;
          }
        }

      case 'keyup':
        _this.reset();

        return callback(event);
    }
  };

  this.reset = function () {
    _this.skipped = 0;
    _this.time = 0;
    _this.keyCode = 0;
    _this.canceled = false;
    _this.accelerating = false;
  };

  this.cancel = function () {
    _this.canceled = true;
  };

  this.isAccelerating = function () {
    return _this.accelerating;
  };
  /*
   * Whether the instance is currently in an accelerating state.
   *
   * @type {Boolean}
   * @default false
   */


  this.accelerating = false;
  /*
   * The current count of skipped events.
   *
   * @type {Number}
   * @default 0
   */

  this.skipped = 0;
  /*
   * The timestamp of the last evaluated event.
   *
   * @type {Number}
   * @default 0
   */

  this.time = 0;
  /*
   * The keyCode of the last evaluated event.
   *
   * @type {Number}
   * @default 0
   */

  this.keyCode = 0;
  /*
   * Whether the instance is in a state of being canceled.
   *
   * @type {Boolean}
   * @default false
   */

  this.canceled = false;
  /*
   * Controls the frequency with which the acceleration will "freeze". While frozen,
   * the current target item cannot change, and all events are directed to it.
   *
   * @type {Number[]}
   * @default [3, 3, 3, 2, 2, 2, 1]
   * @public
   */

  this.frequency = frequency;
}
/**
 * Called with the current keydown event and callback, which will be called when the event is
 * allowed through.
 *
 * @function
 * @param  {Object} event - The current event to validate.
 * @param  {Function} callback - The callback to execute.
 * @returns {Boolean} `true` if the event was consumed by processKey and callback was not called
 * @public
 * @memberof spotlight/Accelerator.Accelerator.prototype
 */
;

exports.Accelerator = Accelerator;
var _default = Accelerator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/Pause/Pause.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/spotlight/Pause/Pause.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isPaused = isPaused;
exports.pause = pause;
exports.resume = _resume;
exports.Pause = exports["default"] = void 0;

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}
/**
 * Provides a class which allows consumers to safely pause and resume spotlight without resuming
 * another consumer's pause.
 *
 * When multiple components attempt to pause and resume spotlight at overlapping times using
 * [Spotlight.pause()]{@link spotlight.Spotlight.pause} and
 * [Spotlight.resume()]{@link spotlight.Spotlight.resume}, one component might resume spotlight when
 * another expected it to still be paused.
 *
 * `Pause` helps to address this by setting a "soft lock" on the pause which informs other instances
 * that the spotlight pause state is being controlled. When pause is locked, it can only be resumed
 * by the instance that locked it. Subsequent calls to `pause` and `resume` on another instance of
 * `Pause` have no effect.
 *
 * *Note:* The top-level [Spotlight.pause()]{@link spotlight.Spotlight.pause} and
 * [Spotlight.resume()]{@link spotlight.Spotlight.resume} do not respect the pause locks and act as
 * a user-space escape hatch.
 *
 * ```
 * import Pause from '@enact/spotlight/Pause';
 *
 * const paused1 = new Pause('paused 1');
 * const paused2 = new Pause('paused 2');
 *
 * // pauses spotlight
 * paused1.pause();
 *
 * // has no effect because pause1 is in control
 * paused2.pause();
 *
 * // has no effect because pause1 is in control
 * paused2.resume();
 *
 * // resumes spotlight
 * paused1.resume();
 *
 * ```
 *
 * @module spotlight/Pause
 */


var paused = false; // Private, exported methods used by Spotlight to set and query the pause state from its public API

function pause() {
  paused = true;
}

function _resume() {
  paused = false;
}

function isPaused() {
  return paused !== false;
}
/**
 * Acts as a semaphore for Spotlight pause state ensuring that only the last Pause instance can
 * resume Spotlight.
 *
 * *Note* {@link spotlight/Spotlight.resume} will always resume spotlight regardless of what last
 * paused spotlight and can be used as an escape hatch to force resumption.
 *
 * @class Pause
 * @memberof spotlight/Pause
 * @public
 */


var Pause =
/*#__PURE__*/
function () {
  /**
   * Accepts a name for the instance
   *
   * The `name` is not used but may be useful for debugging which instance has currently paused
   * Spotlight.
   *
   * @param {String} name The name of the pause instance
   * @memberof spotlight/Pause.Pause.prototype
   * @constructor
   * @public
   */
  function Pause(name) {
    _classCallCheck(this, Pause);

    this.name = name;
  }

  _createClass(Pause, [{
    key: "toString",
    value: function toString() {
      return "Pause<".concat(this.name, ">");
    }
    /**
     * Returns `true` when Spotlight is paused by this instance
     *
     * @returns {Boolean}
     * @memberof spotlight/Pause.Pause.prototype
     * @public
     */

  }, {
    key: "isPaused",
    value: function isPaused() {
      return paused === this;
    }
    /**
     * Pauses spotlight if not currently paused
     *
     * @returns {undefined}
     * @memberof spotlight/Pause.Pause.prototype
     * @public
     */

  }, {
    key: "pause",
    value: function pause() {
      if (!isPaused()) {
        paused = this;
      }
    }
    /**
     * Resumes spotlight if this instance was the last to pause spotlight
     *
     * @returns {Boolean} `true` if spotlight was resumed
     * @memberof spotlight/Pause.Pause.prototype
     * @public
     */

  }, {
    key: "resume",
    value: function resume() {
      if (this.isPaused()) {
        _resume();

        return true;
      }

      return false;
    }
  }]);

  return Pause;
}();

exports.Pause = Pause;
var _default = Pause;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/SpotlightContainerDecorator/SpotlightContainerDecorator.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@enact/spotlight/SpotlightContainerDecorator/SpotlightContainerDecorator.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spotlightDefaultClass = exports.SpotlightContainerDecorator = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _pointer = __webpack_require__(/*! ../src/pointer */ "./node_modules/@enact/spotlight/src/pointer.js");

var _spotlight = _interopRequireDefault(__webpack_require__(/*! ../src/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * The class name to apply to the default component to focus in a container.
 *
 * @memberof spotlight/SpotlightContainerDecorator
 * @public
 */


var spotlightDefaultClass = 'spottable-default';
exports.spotlightDefaultClass = spotlightDefaultClass;

var isNewPointerPosition = function isNewPointerPosition(ev) {
  return (0, _pointer.hasPointerMoved)(ev.clientX, ev.clientY);
};

var not = function not(fn) {
  return function () {
    return !fn.apply(this, arguments);
  };
};
/**
 * Default config for {@link spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator}
 *
 * @memberof spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator
 * @hocconfig
 */


var defaultConfig = {
  /**
   * When `true`, allows focus to move outside the container to the next spottable element when
   * holding 5 way keys.
   *
   * @type {Boolean}
   * @default false
   * @memberof spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator.defaultConfig
   * @public
   */
  continue5WayHold: false,

  /**
   * The selector for the default spottable element within the container.
   *
   * @type {String}
   * @default '.spottable-default'
   * @memberof spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator.defaultConfig
   * @public
   */
  defaultElement: ".".concat(spotlightDefaultClass),

  /**
   * Directs which element receives focus when gaining focus from another container. If
   * `'default-element'`, the default focused item will be selected. If `'last-focused'`, the
   * container will focus the last focused item; if the container has never had focus, the default
   * element will receive focus. If `null`, the default 5-way behavior will be applied.
   *
   * @type {String}
   * @default null
   * @memberof spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator.defaultConfig
   * @public
   */
  enterTo: null,

  /**
   * Whether the container will preserve the id when it unmounts.
   *
   * @type {Boolean}
   * @default false
   * @memberof spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator.defaultConfig
   * @public
   */
  preserveId: false
};
/**
 * Constructs a higher-order component that allows Spotlight focus to be passed to
 * its own configurable hierarchy of spottable child controls.
 *
 * Example:
 * ```
 *	const DefaultContainer = SpotlightContainerDecorator(Component);
 *	const FocusDefaultContainer = SpotlightContainerDecorator({enterTo: 'default-element'}, Component);
 * ```
 *
 * To specify a default element to spot in a container, utilize the `spotlightDefaultClass`.
 *
 * Example:
 * ```
 *	import Spotlight from '@enact/spotlight';
 *	import SpotlightContainerDecorator from '@enact/spotlight/SpotlightContainerDecorator';
 *	const ContainerComponent = SpotlightContainerDecorator(Component);
 *	const View = kind({
 *		render: () => {
 *			<ContainerComponent>
 *				<SpottableComponent>foo</SpottableComponent>
 *				<SpottableComponent className={spotlightDefaultClass}>spot me first</SpottableComponent>
 *			</ContainerComponent>
 *		}
 *	});
 * ```
 * @param  {Object}    defaultConfig  Set of default configuration parameters. Additional parameters
 *                                    are passed as configuration to {@link spotlight/Spotlight.set}
 * @param  {Function} higher-order component
 *
 * @returns {Function} SpotlightContainerDecorator
 * @class SpotlightContainerDecorator
 * @memberof spotlight/SpotlightContainerDecorator
 * @hoc
 */

var SpotlightContainerDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var navigableFilter = config.navigableFilter,
      preserveId = config.preserveId,
      containerConfig = _objectWithoutProperties(config, ["navigableFilter", "preserveId"]);

  var stateFromProps = function stateFromProps(_ref) {
    var spotlightId = _ref.spotlightId,
        spotlightRestrict = _ref.spotlightRestrict;
    var options = {
      restrict: spotlightRestrict
    };

    var id = _spotlight["default"].add(spotlightId || options, options);

    return {
      id: id,
      preserveId: preserveId && id === spotlightId,
      spotlightRestrict: spotlightRestrict
    };
  };

  var releaseContainer = function releaseContainer(_ref2) {
    var preserve = _ref2.preserveId,
        id = _ref2.id;

    if (preserve) {
      _spotlight["default"].unmount(id);
    } else {
      _spotlight["default"].remove(id);
    }
  };

  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));

      _this.navigableFilter = function (elem) {
        // If the component to which this was applied specified a navigableFilter, run it
        if (typeof navigableFilter === 'function') {
          if (navigableFilter(elem, _this.props, _this.context) === false) {
            return false;
          }
        }

        return true;
      };

      _this.silentBlur = function (_ref3) {
        var target = _ref3.target;
        _this.shouldPreventBlur = true;
        target.blur();
        _this.shouldPreventBlur = false;
      };

      _this.handle = _handle.handle.bind(_assertThisInitialized(_this));
      _this.handleBlur = _this.handle(function () {
        return _this.shouldPreventBlur;
      }, _handle.stop);
      _this.handleFocus = _this.handle((0, _handle.forProp)('spotlightDisabled', true), _handle.stop, _this.silentBlur);
      _this.handleMouseEnter = _this.handle((0, _handle.forward)('onMouseEnter'), isNewPointerPosition, function () {
        return _spotlight["default"].setActiveContainer(_this.state.id);
      });
      _this.handleMouseLeave = _this.handle((0, _handle.forward)('onMouseLeave'), not((0, _handle.forProp)('spotlightRestrict', 'self-only')), isNewPointerPosition, function (ev) {
        var parentContainer = ev.currentTarget.parentNode.closest('[data-spotlight-container]');

        var activeContainer = _spotlight["default"].getActiveContainer(); // if this container is wrapped by another and this is the currently active
        // container, move the active container to the parent


        if (parentContainer && activeContainer === _this.state.id) {
          activeContainer = parentContainer.dataset.spotlightId;

          _spotlight["default"].setActiveContainer(activeContainer);
        }
      });
      _this.state = stateFromProps(props); // Used to indicate that we want to stop propagation on blur events that occur as a
      // result of this component imperatively blurring itself on focus when spotlightDisabled

      _this.shouldPreventBlur = false;

      var cfg = _objectSpread({}, containerConfig, {
        navigableFilter: _this.navigableFilter
      });

      _spotlight["default"].set(_this.state.id, cfg);

      return _this;
    }

    _createClass(_class, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        releaseContainer(this.state);
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            spotlightDisabled = _this$props.spotlightDisabled,
            spotlightMuted = _this$props.spotlightMuted,
            rest = _objectWithoutProperties(_this$props, ["spotlightDisabled", "spotlightMuted"]);

        delete rest.containerId;
        delete rest.spotlightId;
        delete rest.spotlightRestrict;
        rest['data-spotlight-container'] = true;
        rest['data-spotlight-id'] = this.state.id;
        rest.onBlurCapture = this.handleBlur;
        rest.onFocusCapture = this.handleFocus;
        rest.onMouseEnter = this.handleMouseEnter;
        rest.onMouseLeave = this.handleMouseLeave;

        if (spotlightDisabled) {
          rest['data-spotlight-container-disabled'] = spotlightDisabled;
        }

        if (spotlightMuted) {
          rest['data-spotlight-container-muted'] = spotlightMuted;
        }

        return _react["default"].createElement(Wrapped, rest);
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props, state) {
        var id = props.spotlightId,
            spotlightRestrict = props.spotlightRestrict;
        var prevId = state.id,
            prevSpotlightRestrict = state.spotlightRestrict; // prevId will only be undefined the first render so this prevents releasing the
        // container after initially creating it

        var isIdChanged = prevId && id && prevId !== id;

        if (isIdChanged) {
          releaseContainer(state);
        }

        if (isIdChanged || spotlightRestrict !== prevSpotlightRestrict) {
          return stateFromProps(_objectSpread({
            spotlightId: prevId,
            spotlightRestrict: prevSpotlightRestrict
          }, props));
        } else {
          return null;
        }
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'SpotlightContainerDecorator', _class.propTypes =
  /** @lends spotlight/SpotlightContainerDecorator.SpotlightContainerDecorator.prototype */
  {
    /**
     * When `true`, controls in the container cannot be navigated.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    spotlightDisabled: _propTypes["default"].bool,

    /**
     * Used to identify this component within the Spotlight system.
     *
     * If the value is `null`, an id will be generated.
     *
     * @type {String}
     * @public
     */
    spotlightId: _propTypes["default"].string,

    /**
     * Whether or not the container is in muted mode.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    spotlightMuted: _propTypes["default"].bool,

    /**
     * Restricts or prioritizes navigation when focus attempts to leave the container. It
     * can be either 'none', 'self-first', or 'self-only'. Specifying 'self-first' indicates that
     * elements within the container will have a higher likelihood to be chosen as the next
     * navigable element. Specifying 'self-only' indicates that elements in other containers
     * cannot be navigated to by using 5-way navigation - however, elements in other containers
     * can still receive focus by calling `Spotlight.focus(elem)` explicitly. Specying 'none'
     * indicates there should be no restrictions when 5-way navigating the container.
     *
     * @type {String}
     * @public
     */
    spotlightRestrict: _propTypes["default"].oneOf(['none', 'self-first', 'self-only'])
  }, _class.defaultProps = {
    spotlightDisabled: false,
    spotlightMuted: false,
    spotlightRestrict: 'self-first'
  }, _temp;
});
exports.SpotlightContainerDecorator = SpotlightContainerDecorator;
var _default = SpotlightContainerDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/SpotlightRootDecorator/SpotlightRootDecorator.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@enact/spotlight/SpotlightRootDecorator/SpotlightRootDecorator.js ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpotlightRootDecorator = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _spotlight = _interopRequireDefault(__webpack_require__(/*! ../src/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js"));

var _Spottable = __webpack_require__(/*! ../Spottable */ "./node_modules/@enact/spotlight/Spottable/Spottable.js");

var _container = __webpack_require__(/*! ../src/container */ "./node_modules/@enact/spotlight/src/container.js");

__webpack_require__(/*! ../styles/debug.less */ "./node_modules/@enact/spotlight/styles/debug.less");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Default configuration for SpotlightRootDecorator
 *
 * @hocconfig
 * @memberof spotlight/SpotlightRootDecorator.SpotlightRootDecorator
 */


var defaultConfig = {
  /**
   * When `true`, the contents of the component will not receive spotlight focus after being rendered.
   *
   * @type {Boolean}
   * @default false
   * @public
   * @memberof spotlight/SpotlightRootDecorator.SpotlightRootDecorator.defaultConfig
   */
  noAutoFocus: false
};
/**
 * Constructs a higher-order component that initializes and enables Spotlight
 * 5-way navigation within an application.
 *
 * Example:
 * ```
 *	const App = SpotlightRootDecorator(ApplicationView);
 * ```
 * @param  {Object} defaultConfig Set of default configuration parameters
 * @param  {Function} higher-order component
 *
 * @returns {Function} SpotlightRootDecorator
 * @memberof spotlight/SpotlightRootDecorator
 * @hoc
 */

var SpotlightRootDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var noAutoFocus = config.noAutoFocus;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));

      _this.navigableFilter = function (elem) {
        while (elem && elem !== document && elem.nodeType === 1) {
          if (elem.getAttribute('data-spotlight-container-disabled') === 'true') return false;
          elem = elem.parentNode;
        }
      };

      if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
        _spotlight["default"].initialize({
          selector: '.' + _Spottable.spottableClass,
          restrict: 'none'
        });

        _spotlight["default"].set(_container.rootContainerId, {
          overflow: true
        });
      }

      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (!noAutoFocus) {
          _spotlight["default"].focus();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        _spotlight["default"].terminate();
      }
    }, {
      key: "render",
      value: function render() {
        return _react["default"].createElement(Wrapped, this.props);
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'SpotlightRootDecorator', _temp;
});
exports.SpotlightRootDecorator = SpotlightRootDecorator;
var _default = SpotlightRootDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/Spottable/Spottable.js":
/*!**************************************************************!*\
  !*** ./node_modules/@enact/spotlight/Spottable/Spottable.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spottableClass = exports.Spottable = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _keymap = __webpack_require__(/*! @enact/core/keymap */ "./node_modules/@enact/core/keymap/index.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));

var _container = __webpack_require__(/*! ../src/container */ "./node_modules/@enact/spotlight/src/container.js");

var _pointer = __webpack_require__(/*! ../src/pointer */ "./node_modules/@enact/spotlight/src/pointer.js");

var _spotlight = __webpack_require__(/*! ../src/spotlight */ "./node_modules/@enact/spotlight/src/spotlight.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * The class name for spottable components. In general, you do not need to directly access this class
 *
 * @memberof spotlight/Spottable
 * @public
 */


var spottableClass = 'spottable';
exports.spottableClass = spottableClass;
var ENTER_KEY = 13;
var REMOTE_OK_KEY = 16777221;

var isKeyboardAccessible = function isKeyboardAccessible(node) {
  if (!node) return false;
  var name = node.nodeName.toUpperCase();
  var type = node.type ? node.type.toUpperCase() : null;
  return name === 'BUTTON' || name === 'A' || name === 'INPUT' && (type === 'BUTTON' || type === 'CHECKBOX' || type === 'IMAGE' || type === 'RADIO' || type === 'RESET' || type === 'SUBMIT');
};

var isSpottable = function isSpottable(props) {
  return !props.disabled && !props.spotlightDisabled;
}; // Last instance of spottable to be focused


var lastSelectTarget = null; // Should we prevent select being passed through

var selectCancelled = false;
/**
 * Default configuration for Spottable
 *
 * @hocconfig
 * @memberof spotlight/Spottable.Spottable
 */

var defaultConfig = {
  /**
   * Whether or not the component should emulate mouse events as a response
   * to Spotlight 5-way events.
   *
   * @type {Boolean}
   * @default false
   * @public
   * @memberof spotlight/Spottable.Spottable.defaultConfig
   */
  emulateMouse: true
};
/**
 * Constructs a Spotlight 5-way navigation-enabled higher-order component.
 *
 * Example:
 * ```
 *	const SpottableComponent = Spottable(Component);
 * ```
 * @class Spottable
 * @memberof spotlight/Spottable
 * @param  {Object} defaultConfig Set of default configuration parameters
 * @param  {Function} Wrapped Component to wrap
 *
 * @hoc
 * @returns {Function} Spottable
 */

var Spottable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var emulateMouse = config.emulateMouse;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(_props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, _props));

      _this.shouldEmulateMouse = function (ev, props) {
        if (!emulateMouse) {
          return;
        }

        var currentTarget = ev.currentTarget,
            repeat = ev.repeat,
            type = ev.type,
            which = ev.which;
        var selectionKeys = props.selectionKeys;
        var keyboardAccessible = isKeyboardAccessible(currentTarget);
        var keyCode = selectionKeys.find(function (value) {
          return (// emulate mouse events for any remote okay button event
            which === REMOTE_OK_KEY || // or a non-keypress selection event or any selection event on a non-keyboard accessible
            // control
            which === value && (type !== 'keypress' || !keyboardAccessible)
          );
        });

        if ((0, _spotlight.getDirection)(keyCode)) {
          (0, _handle.preventDefault)(ev);
          (0, _handle.stop)(ev);
        } else if (keyCode && keyboardAccessible) {
          (0, _handle.preventDefault)(ev);
        }

        return keyCode && !repeat;
      };

      _this.forwardSpotlightEvents = function (ev, _ref) {
        var onSpotlightDown = _ref.onSpotlightDown,
            onSpotlightLeft = _ref.onSpotlightLeft,
            onSpotlightRight = _ref.onSpotlightRight,
            onSpotlightUp = _ref.onSpotlightUp;
        var keyCode = ev.keyCode;

        if (onSpotlightDown && (0, _keymap.is)('down', keyCode)) {
          onSpotlightDown(ev);
        } else if (onSpotlightLeft && (0, _keymap.is)('left', keyCode)) {
          onSpotlightLeft(ev);
        } else if (onSpotlightRight && (0, _keymap.is)('right', keyCode)) {
          onSpotlightRight(ev);
        } else if (onSpotlightUp && (0, _keymap.is)('up', keyCode)) {
          onSpotlightUp(ev);
        }

        return true;
      };

      _this.handleSelect = function (_ref2, props) {
        var which = _ref2.which;
        var selectionKeys = props.selectionKeys; // Only apply accelerator if handling a selection key

        if (selectionKeys.find(function (value) {
          return which === value;
        })) {
          if (selectCancelled || lastSelectTarget && lastSelectTarget !== _assertThisInitialized(_this)) {
            return false;
          }

          lastSelectTarget = _assertThisInitialized(_this);
        }

        return true;
      };

      _this.forwardAndResetLastSelectTarget = function (ev, props) {
        var keyCode = ev.keyCode;
        var selectionKeys = props.selectionKeys;
        var key = selectionKeys.find(function (value) {
          return keyCode === value;
        });
        var notPrevented = (0, _handle.forwardWithPrevent)('onKeyUp', ev, props); // bail early for non-selection keyup to avoid clearing lastSelectTarget prematurely

        if (!key && (!(0, _keymap.is)('enter', keyCode) || !(0, _spotlight.getDirection)(keyCode))) {
          return notPrevented;
        }

        var allow = lastSelectTarget === _assertThisInitialized(_this);

        selectCancelled = false;
        lastSelectTarget = null;
        return notPrevented && allow;
      };

      _this.isActionable = function (ev, props) {
        return isSpottable(props);
      };

      _this.handle = _handle.handle.bind(_assertThisInitialized(_this));
      _this.handleKeyDown = _this.handle((0, _handle.forwardWithPrevent)('onKeyDown'), _this.forwardSpotlightEvents, _this.isActionable, _this.handleSelect, _this.shouldEmulateMouse, (0, _handle.forward)('onMouseDown'));
      _this.handleKeyUp = _this.handle(_this.forwardAndResetLastSelectTarget, _this.isActionable, _this.shouldEmulateMouse, (0, _handle.forward)('onMouseUp'), (0, _handle.forward)('onClick'));

      _this.handleBlur = function (ev) {
        if (_this.shouldPreventBlur) return;

        if (ev.currentTarget === ev.target) {
          _this.isFocused = false;

          if (_this.focusedWhenDisabled) {
            _this.focusedWhenDisabled = false; // We only need to trigger a rerender if a focused item becomes disabled and still needs its focus.
            // Once it blurs we need to rerender to remove the spottable class so it will not spot again.
            // The reason we don't use state is for performance reasons to avoid updates.

            _this.forceUpdate();
          }
        }

        if (_spotlight.Spotlight.isMuted(ev.target)) {
          ev.stopPropagation();
        } else {
          (0, _handle.forward)('onBlur', ev, _this.props);
        }
      };

      _this.handleFocus = function (ev) {
        if (_this.props.disabled || _this.props.spotlightDisabled) {
          _this.shouldPreventBlur = true;
          ev.target.blur();
          _this.shouldPreventBlur = false;
          return;
        }

        if (ev.currentTarget === ev.target) {
          _this.isFocused = true;
        }

        if (_spotlight.Spotlight.isMuted(ev.target)) {
          ev.stopPropagation();
        } else {
          (0, _handle.forward)('onFocus', ev, _this.props);
        }
      };

      _this.handleEnter = function (ev) {
        (0, _handle.forward)('onMouseEnter', ev, _this.props);

        if ((0, _pointer.hasPointerMoved)(ev.clientX, ev.clientY)) {
          _this.isHovered = true;
        }
      };

      _this.handleLeave = function (ev) {
        (0, _handle.forward)('onMouseLeave', ev, _this.props);

        if ((0, _pointer.hasPointerMoved)(ev.clientX, ev.clientY)) {
          _this.isHovered = false;
        }
      };

      _this.isHovered = false; // Used to indicate that we want to stop propagation on blur events that occur as a
      // result of this component imperatively blurring itself on focus when spotlightDisabled

      _this.shouldPreventBlur = false;
      _this.isFocused = false;
      _this.focusedWhenDisabled = false;
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        // eslint-disable-next-line react/no-find-dom-node
        this.node = _reactDom["default"].findDOMNode(this);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        this.isFocused = this.node && _spotlight.Spotlight.getCurrent() === this.node; // if the component is focused and became disabled

        if (this.isFocused && this.props.disabled && lastSelectTarget === this && !selectCancelled) {
          selectCancelled = true;
          (0, _handle.forward)('onMouseUp', null, this.props);
        } // if the component became enabled, notify spotlight to enable restoring "lost" focus


        if (isSpottable(this.props) && !isSpottable(prevProps) && !_spotlight.Spotlight.isPaused()) {
          if (_spotlight.Spotlight.getPointerMode()) {
            if (this.isHovered) {
              _spotlight.Spotlight.setPointerMode(false);

              _spotlight.Spotlight.focus(this.node);

              _spotlight.Spotlight.setPointerMode(true);
            }
          } else if (!_spotlight.Spotlight.getCurrent()) {
            var containers = (0, _container.getContainersForNode)(this.node);

            var containerId = _spotlight.Spotlight.getActiveContainer();

            if (containers.indexOf(containerId) >= 0) {
              _spotlight.Spotlight.focus(containerId);
            }
          }
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.isFocused) {
          (0, _handle.forward)('onSpotlightDisappear', null, this.props);
        }

        if (lastSelectTarget === this) {
          lastSelectTarget = null;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            disabled = _this$props.disabled,
            spotlightId = _this$props.spotlightId,
            spotlightDisabled = _this$props.spotlightDisabled,
            rest = _objectWithoutProperties(_this$props, ["disabled", "spotlightId", "spotlightDisabled"]);

        this.focusedWhenDisabled = this.isFocused && (disabled || spotlightDisabled);
        var spottable = this.focusedWhenDisabled || isSpottable(this.props);
        var tabIndex = rest.tabIndex;
        delete rest.onSpotlightDisappear;
        delete rest.onSpotlightDown;
        delete rest.onSpotlightLeft;
        delete rest.onSpotlightRight;
        delete rest.onSpotlightUp;
        delete rest.selectionKeys;
        delete rest.spotlightDisabled;

        if (tabIndex == null) {
          tabIndex = -1;
        }

        if (spottable) {
          if (rest.className) {
            rest.className += ' ' + spottableClass;
          } else {
            rest.className = spottableClass;
          }
        }

        if (spotlightId) {
          rest['data-spotlight-id'] = spotlightId;
        }

        return _react["default"].createElement(Wrapped, Object.assign({}, rest, {
          onBlur: this.handleBlur,
          onFocus: this.handleFocus,
          onMouseEnter: this.handleEnter,
          onMouseLeave: this.handleLeave,
          onKeyDown: this.handleKeyDown,
          onKeyUp: this.handleKeyUp,
          disabled: disabled,
          tabIndex: tabIndex
        }));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'Spottable', _class.propTypes =
  /** @lends spotlight/Spottable.Spottable.prototype */
  {
    /**
     * Whether or not the component is in a disabled state.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes["default"].bool,

    /**
     * The handler to run when the component is removed while retaining focus.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightDisappear: _propTypes["default"].func,

    /**
     * The handler to run when the 5-way down key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightDown: _propTypes["default"].func,

    /**
     * The handler to run when the 5-way left key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightLeft: _propTypes["default"].func,

    /**
     * The handler to run when the 5-way right key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightRight: _propTypes["default"].func,

    /**
     * The handler to run when the 5-way up key is pressed.
     *
     * @type {Function}
     * @param {Object} event
     * @public
     */
    onSpotlightUp: _propTypes["default"].func,

    /**
     * An array of numbers representing keyCodes that should trigger mouse event
     * emulation when `emulateMouse` is `true`. If a keyCode equals a directional
     * key, then default 5-way navigation will be prevented when that key is pressed.
     *
     * @type {Number[]}
     * @default [13, 16777221]
     * @public
     */
    selectionKeys: _propTypes["default"].arrayOf(_propTypes["default"].number),

    /**
     * When `true`, the component cannot be navigated using spotlight.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    spotlightDisabled: _propTypes["default"].bool,

    /**
     * Used to identify this component within the Spotlight system
     *
     * @type {String}
     * @public
     */
    spotlightId: _propTypes["default"].string,

    /**
     * The tabIndex of the component. This value will default to -1 if left
     * unset and the control is spottable.
     *
     * @type {Number}
     * @public
     */
    tabIndex: _propTypes["default"].number
  }, _class.defaultProps = {
    selectionKeys: [ENTER_KEY, REMOTE_OK_KEY]
  }, _temp;
});
exports.Spottable = Spottable;
var _default = Spottable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/src/container.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/spotlight/src/container.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getContainerDefaultElement = getContainerDefaultElement;
exports.getContainerLastFocusedElement = getContainerLastFocusedElement;
exports.getContainerNavigableElements = getContainerNavigableElements;
exports.getContainersForNode = getContainersForNode;
exports.setContainerLastFocusedElement = setContainerLastFocusedElement;
exports.getContainerFocusTarget = getContainerFocusTarget;
exports.getContainerPreviousTarget = getContainerPreviousTarget;
exports.getDefaultContainer = getDefaultContainer;
exports.getLastContainer = getLastContainer;
exports.getNavigableContainersForNode = getNavigableContainersForNode;
exports.isWithinOverflowContainer = isWithinOverflowContainer;
exports.mayActivateContainer = mayActivateContainer;
exports.notifyLeaveContainer = notifyLeaveContainer;
exports.notifyLeaveContainerFail = notifyLeaveContainerFail;
exports.notifyEnterContainer = notifyEnterContainer;
exports.setContainerPreviousTarget = setContainerPreviousTarget;
exports.setDefaultContainer = setDefaultContainer;
exports.setLastContainer = setLastContainer;
exports.setLastContainerFromTarget = setLastContainerFromTarget;
exports.unmountContainer = unmountContainer;
exports.rootContainerId = exports.removeContainer = exports.removeAllContainers = exports.isNavigable = exports.isContainer = exports.getSpottableDescendants = exports.configureContainer = exports.configureDefaults = exports.containerAttribute = exports.addContainer = exports.isContainer5WayHoldable = exports.getContainerConfig = exports.getContainerNode = exports.getAllContainerIds = void 0;

var _and = _interopRequireDefault(__webpack_require__(/*! ramda/src/and */ "./node_modules/ramda/src/and.js"));

var _concat = _interopRequireDefault(__webpack_require__(/*! ramda/src/concat */ "./node_modules/ramda/src/concat.js"));

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _intersection = _interopRequireDefault(__webpack_require__(/*! ramda/src/intersection */ "./node_modules/ramda/src/intersection.js"));

var _last = _interopRequireDefault(__webpack_require__(/*! ramda/src/last */ "./node_modules/ramda/src/last.js"));

var _utils = __webpack_require__(/*! ./utils */ "./node_modules/@enact/spotlight/src/utils.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var containerAttribute = 'data-spotlight-id';
exports.containerAttribute = containerAttribute;
var containerConfigs = new Map();
var containerKey = 'spotlightId';
var disabledKey = 'spotlightContainerDisabled';
var containerPrefix = 'container-';
var containerSelector = '[data-spotlight-container]';
var rootContainerId = 'spotlightRootDecorator';
exports.rootContainerId = rootContainerId;
var reverseDirections = {
  'left': 'right',
  'up': 'down',
  'right': 'left',
  'down': 'up'
}; // Incrementer for container IDs

var _ids = 0;
var _defaultContainerId = '';
var _lastContainerId = ''; // Note: an <extSelector> can be one of following types:
// - a valid selector string for "querySelectorAll"
// - a NodeList or an array containing DOM elements
// - a single DOM element
// - a string "@<containerId>" to indicate the specified container
// - a string "@" to indicate the default container

var GlobalConfig = {
  // set to false for unmounted containers to omit them from searches
  active: true,
  continue5WayHold: false,
  defaultElement: '',
  // <extSelector> except "@" syntax.
  enterTo: '',
  // '', 'last-focused', 'default-element'
  lastFocusedElement: null,
  lastFocusedKey: null,
  lastFocusedPersist: function lastFocusedPersist(node, all) {
    var container = typeof node === 'string';
    return {
      container: container,
      element: !container,
      key: container ? node : all.indexOf(node)
    };
  },
  lastFocusedRestore: function lastFocusedRestore(_ref, all) {
    var container = _ref.container,
        key = _ref.key;
    return container ? key : all[key];
  },
  leaveFor: null,
  // {left: <extSelector>, right: <extSelector>, up: <extSelector>, down: <extSelector>}
  navigableFilter: null,
  obliqueMultiplier: 5,
  onEnterContainer: null,
  // @private - notify the container when entering via 5-way
  onLeaveContainer: null,
  // @private - notify the container when leaving via 5-way
  onLeaveContainerFail: null,
  // @private - notify the container when failing to leave via 5-way
  overflow: false,
  rememberSource: false,
  restrict: 'self-first',
  // 'self-first', 'self-only', 'none'
  selector: '',
  // can be a valid <extSelector> except "@" syntax.
  selectorDisabled: false,
  straightMultiplier: 1,
  straightOnly: false,
  straightOverlapThreshold: 0.5,
  tabIndexIgnoreList: 'a, input, select, textarea, button, iframe, [contentEditable=true]'
};
/**
 * Calculates nodes within `node` that match `includeSelector` and do not match `excludeSelector`
 *
 * @param   {Node}    node             DOM Node to query
 * @param   {String}  includeSelector  CSS selector of nodes to include
 * @param   {String}  excludeSelector  CSS selector for nodes to exclude
 *
 * @returns {Node[]}                   Array of nodes
 * @memberof spotlight/container
 * @private
 */

var querySelector = function querySelector(node, includeSelector, excludeSelector) {
  var include = Array.prototype.slice.call(node.querySelectorAll(includeSelector));
  var exclude = node.querySelectorAll(excludeSelector);

  for (var i = 0; i < exclude.length; i++) {
    var index = include.indexOf(exclude.item(i));

    if (index >= 0) {
      include.splice(index, 1);
    }
  }

  return include;
};
/**
 * Determines if `node` is a spotlight container
 *
 * @param   {Node}     node   Node to check
 *
 * @returns {Boolean}        `true` if `node` is a spotlight container
 * @memberof spotlight/container
 * @private
 */


var isContainerNode = function isContainerNode(node) {
  return node && node.dataset && 'spotlightContainer' in node.dataset;
};
/**
 * Walks up the node hierarchy calling `fn` on each node that is a container
 *
 * @param   {Node}     node  Node from which to start the search
 * @param   {Function} fn    Called once for each container with the container node as the first
 *                           argument. The return value is accumulated in the array returned by
 *                           `mapContainers`
 *
 * @returns {Array}          Array of values returned by `fn` in order of outermost container to
 *                           innermost container
 * @memberof spotlight/container
 * @private
 */


var mapContainers = function mapContainers(node, fn) {
  var result = [];

  while (node && node !== document) {
    if (isContainerNode(node)) {
      result.unshift(fn(node));
    }

    node = node.parentNode;
  }

  return result;
};
/**
 * Returns the container config for `containerId`
 *
 * @param   {String}  id  Container ID
 *
 * @returns {Object}      Container config
 * @memberof spotlight/container
 * @private
 */


var getContainerConfig = function getContainerConfig(id) {
  return containerConfigs.get(id);
};
/**
 * Determines if node or a container id represents a spotlight container
 *
 * @param   {Node|String}  nodeOrId  Node or container ID
 *
 * @returns {Boolean}                `true` if `nodeOrId` represents a spotlight container
 * @memberof spotlight/container
 * @private
 */


exports.getContainerConfig = getContainerConfig;

var isContainer = function isContainer(nodeOrId) {
  if (typeof nodeOrId === 'string') {
    return containerConfigs.has(nodeOrId);
  }

  return isContainerNode(nodeOrId);
};
/**
 * Determines if any of the containers at or above `node` are disabled and, if so, returns `false`.
 *
 * @param   {Node}     node  Spottable node or spotlight container
 *
 * @returns {Boolean}        `true` if all container ancestors are enabled
 * @memberof spotlight/container
 * @private
 */


exports.isContainer = isContainer;

var isContainerEnabled = function isContainerEnabled(node) {
  return mapContainers(node, function (container) {
    return container.dataset[disabledKey] !== 'true';
  }).reduce(_and["default"], true);
};
/**
 * Returns the container ID for `node`
 *
 * @param   {Node}    node  Container Node
 *
 * @returns {String}        Container ID
 * @memberof spotlight/container
 * @private
 */


var getContainerId = function getContainerId(node) {
  return node.dataset[containerKey];
};
/**
 * Generates a CSS selector string for a current container if `node` is a container
 *
 * @param   {Node}    node  Container Node
 *
 * @returns {String}        CSS selector
 * @memberof spotlight/container
 * @private
 */


var getContainerSelector = function getContainerSelector(node) {
  if (isContainerNode(node)) {
    return "[".concat(containerAttribute, "=\"").concat(getContainerId(node), "\"]");
  }

  return '';
};
/**
 * Generates a CSS selector string for containers within `node` if it is a container
 *
 * @param   {Node}    node  Container Node
 *
 * @returns {String}        CSS selector
 * @memberof spotlight/container
 * @private
 */


var getSubContainerSelector = function getSubContainerSelector(node) {
  if (isContainerNode(node)) {
    return "".concat(getContainerSelector(node), " ").concat(containerSelector);
  }

  return containerSelector;
};
/**
 * Returns the node for a container
 *
 * @param   {String}  containerId  ID of container
 *
 * @returns {Node}                 DOM node of the container
 * @memberof spotlight/container
 * @private
 */


var getContainerNode = function getContainerNode(containerId) {
  if (!containerId) {
    return null;
  } else if (containerId === rootContainerId) {
    return document;
  }

  return document.querySelector("[".concat(containerAttribute, "=\"").concat(containerId, "\"]"));
};
/**
 * Calls the `navigableFilter` function for the container if defined.
 *
 * @param   {Node}    node         DOM node to check if it is navigable
 * @param   {String}  containerId  ID of container
 *
 * @returns {Boolean}              `true` if it passes the `navigableFilter` method or if that
 *                                  method is not defined for the container
 * @memberof spotlight/container
 * @private
 */


exports.getContainerNode = getContainerNode;

var navigableFilter = function navigableFilter(node, containerId) {
  var config = getContainerConfig(containerId);

  if (config && typeof config.navigableFilter === 'function') {
    if (config.navigableFilter(node, containerId) === false) {
      return false;
    }
  }

  return true;
};
/**
 * Determines all spottable elements and containers that are directly contained by the container
 * identified by `containerId` and no other subcontainers.
 *
 * @param   {String}  containerId  ID of container
 *
 * @returns {Node[]}               Array of spottable elements and containers.
 * @memberof spotlight/container
 * @public
 */


var getSpottableDescendants = function getSpottableDescendants(containerId) {
  var node = getContainerNode(containerId); // if it's falsy or is a disabled container, return an empty set

  if (!node || isContainerNode(node) && !isContainerEnabled(node)) {
    return [];
  }

  var _ref2 = getContainerConfig(containerId) || {},
      selector = _ref2.selector,
      selectorDisabled = _ref2.selectorDisabled;

  if (!selector || selectorDisabled) {
    return [];
  }

  var spottableSelector = selector;
  var subContainerSelector = getSubContainerSelector(node);
  var candidates = querySelector(node, "".concat(spottableSelector, ", ").concat(getContainerSelector(node), " ").concat(containerSelector, ":not([data-spotlight-container-disabled=\"true\"])"), "".concat(subContainerSelector, " ").concat(spottableSelector, ", ").concat(subContainerSelector, " ").concat(containerSelector));
  return candidates.filter(function (n) {
    return navigableFilter(n, containerId);
  });
};
/**
 * Recursively get spottable descendants by including elements within sub-containers that do not
 * have `enterTo` configured
 *
 * @param   {String}    containerId          ID of container
 * @param   {String[]}  [excludedContainers] IDs of containers to exclude from result set
 *
 * @returns {Node[]}                         Array of spottable elements and containers
 * @memberof spotlight/container
 * @private
 */


exports.getSpottableDescendants = getSpottableDescendants;

var getDeepSpottableDescendants = function getDeepSpottableDescendants(containerId, excludedContainers) {
  return getSpottableDescendants(containerId).map(function (n) {
    if (isContainer(n)) {
      var id = getContainerId(n);
      var config = getContainerConfig(id);

      if (excludedContainers && excludedContainers.indexOf(id) >= 0) {
        return [];
      } else if (config && !config.enterTo) {
        return getDeepSpottableDescendants(id, excludedContainers);
      }
    }

    return [n];
  }).reduce(_concat["default"], []);
};
/**
 * Determines if a container allows 5-way key hold to be preserved or not.
 *
 * @param {String} containerId Container Id
 * @returns {Boolean} `true` if a container is 5 way holdable
 * @memberof spotlight/container
 * @private
 */


var isContainer5WayHoldable = function isContainer5WayHoldable(containerId) {
  var config = getContainerConfig(containerId);
  return config && config.continue5WayHold || false;
};
/**
 * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with
 * the last array item being the immediate container id of the element.
 *
 * @param   {Node}      node  Node from which to start the search
 *
 * @returns {String[]}        Array on container IDs
 * @memberof spotlight/container
 * @private
 */


exports.isContainer5WayHoldable = isContainer5WayHoldable;

function getContainersForNode(node) {
  var containers = mapContainers(node, getContainerId);
  containers.unshift(rootContainerId);
  return containers;
}
/**
 * Returns an array of ids for containers that wrap the element, in order of outer-to-inner, with
 * the last array item being the immediate container id of the element. The container ids are
 * limited to only those between `node` and the first restrict="self-only" container.
 *
 * @param   {Node}      node  Node from which to start the search
 *
 * @returns {String[]}        Array on container IDs
 * @memberof spotlight/container
 * @private
 */


function getNavigableContainersForNode(node) {
  var containerIds = getContainersForNode(node); // find first self-only container id

  var selfOnlyIndex = containerIds.map(getContainerConfig).filter(function (config) {
    return config != null;
  }).reduceRight(function (index, config, i) {
    if (index === -1 && config.restrict === 'self-only') {
      return i;
    }

    return index;
  }, -1); // if we found one (and it's not the root), slice those off and return

  if (selfOnlyIndex > 0) {
    return containerIds.slice(selfOnlyIndex);
  }

  return containerIds;
}
/**
 * Generates a new unique identifier for a container
 *
 * @returns {String} Container ID
 * @memberof spotlight/container
 * @private
 */


function generateId() {
  var id;
  /* eslint no-constant-condition: ["error", { "checkLoops": false }] */

  while (true) {
    id = containerPrefix + String(++_ids);

    if (!isContainer(id)) {
      break;
    }
  }

  return id;
}
/**
 * Merges two container configurations while only allowing keys from `updated` which are defined in
 * `GlobalConfig`
 *
 * @param   {Object}  current  Current container configuration
 * @param   {Object}  updated  Updated configuration which may only be a partial configuration
 *
 * @returns {Object}           Merged configuration
 * @memberof spotlight/container
 * @private
 */


var mergeConfig = function mergeConfig(current, updated) {
  if (!updated) return current;
  var cfg = null;
  Object.keys(updated).forEach(function (key) {
    if (key in GlobalConfig && current[key] !== updated[key]) {
      if (cfg == null) {
        cfg = Object.assign({}, current);
      }

      cfg[key] = updated[key];
    }
  });
  return cfg || current;
};
/**
 * Adds or updates a container. When a container id is not specified, it will be generated.
 *
 * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration
 *                                                object.
 * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`
 *                                                is a string. When omitted, the container will have
 *                                                the default `GlobalConfig`.
 *
 * @returns {String}                              The container id
 * @memberof spotlight/container
 * @public
 */


var configureContainer = function configureContainer() {
  var containerId, config;

  if (_typeof(arguments.length <= 0 ? undefined : arguments[0]) === 'object') {
    config = arguments.length <= 0 ? undefined : arguments[0];
    containerId = config.id;
  } else if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {
    containerId = arguments.length <= 0 ? undefined : arguments[0];

    if (_typeof(arguments.length <= 1 ? undefined : arguments[1]) === 'object') {
      config = arguments.length <= 1 ? undefined : arguments[1];
    }
  }

  if (!containerId) {
    containerId = generateId();
  }

  config = mergeConfig(containerConfigs.get(containerId) || _objectSpread({}, GlobalConfig), config);
  containerConfigs.set(containerId, config);
  return containerId;
};
/**
 * Adds a container and marks it active. When a container id is not specified, it will be generated.
 *
 * @param   {String|Object}  containerIdOrConfig  Either a string container id or a configuration
 *                                                object.
 * @param   {Object}         [config]             Container configuration when `containerIdOrConfig`
 *                                                is a string. When omitted, the container will have
 *                                                the default `GlobalConfig`.
 *
 * @returns {String}                              The container id
 * @memberof spotlight/container
 * @public
 */


exports.configureContainer = configureContainer;

var addContainer = function addContainer() {
  var containerId = configureContainer.apply(void 0, arguments);
  var config = getContainerConfig(containerId);
  config.active = true;
  return containerId;
};
/**
 * Removes a container
 *
 * @param   {String}     containerId  ID of the container to remove
 *
 * @returns {undefined}
 * @memberof spotlight/container
 * @public
 */


exports.addContainer = addContainer;

var removeContainer = function removeContainer(containerId) {
  containerConfigs["delete"](containerId);
};
/**
 * Removes all containers
 *
 * @returns {undefined}
 * @memberof spotlight/container
 * @public
 */


exports.removeContainer = removeContainer;

var removeAllContainers = function removeAllContainers() {
  containerConfigs.clear();
};
/**
 * Configures the `GlobalConfig` for containers
 *
 * @param   {Object}  config  New global configuration. Cannot introduce new keys
 *
 * @returns {undefined}
 * @memberof spotlight/container
 * @public
 */


exports.removeAllContainers = removeAllContainers;

var configureDefaults = function configureDefaults(config) {
  GlobalConfig = mergeConfig(GlobalConfig, config);
};
/**
 * Determines if `node` is a navigable element within the container identified by `containerId`.
 *
 * @param   {Node}     node         DOM node to check if it is navigable
 * @param   {String}   containerId  ID of the container containing `node`
 * @param   {Boolean}  verify       `true` to verify the node matches the container's `selector`
 *
 * @returns {Boolean}               `true` if `node` is navigable
 * @memberof spotlight/container
 * @public
 */


exports.configureDefaults = configureDefaults;

var isNavigable = function isNavigable(node, containerId, verify) {
  if (!node || // jsdom reports all nodes as having no size so we must skip this condition in our tests
   true && node.offsetWidth <= 0 && node.offsetHeight <= 0) {
    return false;
  }

  var containerNode = getContainerNode(containerId);

  if (containerNode !== document && containerNode.dataset[disabledKey] === 'true') {
    return false;
  }

  var config = getContainerConfig(containerId);

  if (verify && config && config.selector && !isContainer(node) && !(0, _utils.matchSelector)(config.selector, node)) {
    return false;
  }

  return navigableFilter(node, containerId);
};
/**
 * Returns the IDs of all containers
 *
 * @returns {String[]}  Array of container IDs
 * @memberof spotlight/container
 * @private
 */


exports.isNavigable = isNavigable;

var getAllContainerIds = function getAllContainerIds() {
  var ids = [];
  var keys = containerConfigs.keys(); // PhantomJS-friendly iterator->array conversion

  var id;

  while ((id = keys.next()) && !id.done) {
    if (isActiveContainer(id.value)) {
      ids.push(id.value);
    }
  }

  return ids;
};
/**
 * Returns the default focus element for a container
 *
 * @param   {String}  containerId  ID of container
 *
 * @returns {Node|null}                 Default focus element
 * @memberof spotlight/container
 * @public
 */


exports.getAllContainerIds = getAllContainerIds;

function getContainerDefaultElement(containerId) {
  var config = getContainerConfig(containerId);
  var defaultElementSelector = config && config.defaultElement;

  if (!defaultElementSelector) {
    return null;
  }

  defaultElementSelector = (0, _util.coerceArray)(defaultElementSelector);
  var spottables = getDeepSpottableDescendants(containerId);
  return defaultElementSelector.reduce(function (result, selector) {
    if (result) {
      return result;
    }

    if (typeof selector === 'string') {
      return spottables.filter(function (elem) {
        return (0, _utils.matchSelector)(selector, elem) && isNavigable(elem, containerId, true);
      })[0];
    } // FIXME: There is some prior implicit support for `defaultElement` to be an element rather
    // than a selector. This continues that support but should eventually be removed.


    return selector;
  }, null);
}
/**
 * Gets the element last focused within the container.
 *
 * @param   {String}       containerId  ID of container
 *
 * @returns {Node|String|null}               DOM Node last focused
 * @memberof spotlight/container
 * @public
 */


function getContainerLastFocusedElement(containerId) {
  var config = getContainerConfig(containerId);

  if (!config || !config.lastFocusedElement) {
    return null;
  } // lastFocusedElement may be a container ID so try to convert it to a node to test navigability


  var lastFocusedElement = config.lastFocusedElement;
  var node = lastFocusedElement;

  if (typeof node === 'string') {
    node = getContainerNode(lastFocusedElement);
  }

  return isNavigable(node, containerId, true) ? lastFocusedElement : null;
}
/**
 * Sets the element last focused within the container
 *
 * @param   {Node}      node         DOM node last focused
 * @param   {String[]}  containerId  ID of container
 *
 * @returns {undefined}
 * @memberof spotlight/container
 * @public
 */


function setContainerLastFocusedElement(node, containerIds) {
  var lastFocusedElement = node;

  for (var i = containerIds.length - 1; i > -1; i--) {
    var id = containerIds[i];
    configureContainer(id, {
      lastFocusedElement: lastFocusedElement
    }); // If any container in the stack is controlling entering focus, use its container id as the
    // lastFocusedElement instead of the node

    var config = getContainerConfig(id);

    if (config.enterTo) {
      lastFocusedElement = id;
    }
  }
}
/**
 * Returns all navigable nodes (spottable nodes or containers) visible from outside the container.
 * If the container is restricting navigation into itself via `enterTo`, this method will attempt to
 * return that element as the only element in an array. If that fails or if navigation is not restricted, it will return an
 * array of all possible navigable nodes.
 *
 * @param   {String} containerId Container ID
 *
 * @returns {Node[]}             Navigable elements within container
 * @memberof spotlight/container
 * @public
 */


function getContainerNavigableElements(containerId) {
  if (!isContainer(containerId)) {
    return [];
  }

  var config = getContainerConfig(containerId);
  var enterTo = config.enterTo,
      overflow = config.overflow;
  var enterLast = enterTo === 'last-focused';
  var next; // if the container has a preferred entry point, try to find it first

  if (enterLast) {
    next = getContainerLastFocusedElement(containerId);
  } // try default element if last focused can't be focused


  if (!next) {
    next = getContainerDefaultElement(containerId);
  }

  if (!next) {
    var spottables = overflow ? // overflow requires deep recursion to handle selecting the children of unrestricted
    // containers or restricted containers larger than the container
    getDeepSpottableDescendants(containerId) : getSpottableDescendants(containerId); // if there isn't a preferred entry on an overflow container, filter the visible elements

    if (overflow) {
      var containerRect = (0, _utils.getContainerRect)(containerId);
      next = containerRect && spottables.filter(function (element) {
        var elementRect = (0, _utils.getRect)(element);

        if (isContainer(element)) {
          return (0, _utils.intersects)(containerRect, elementRect);
        }

        return (0, _utils.contains)(containerRect, (0, _utils.getRect)(element));
      });
    } // otherwise, return all spottables within the container


    if (!next) {
      next = spottables;
    }
  }

  return next ? (0, _util.coerceArray)(next) : [];
}
/**
 * Determines the preferred focus target, traversing any sub-containers as necessary, for the given
 * container.
 *
 * @param   {String}  containerId  ID of container
 *
 * @returns {Node}                 Preferred target as either a DOM node or container-id
 * @memberof spotlight/container
 * @public
 */


function getContainerFocusTarget(containerId) {
  // deferring restoration until it's requested to allow containers to prepare first
  restoreLastFocusedElement(containerId);
  var next = getContainerNavigableElements(containerId); // If multiple candidates returned, we need to find the first viable target since some may
  // be empty containers which should be skipped.

  return next.reduce(function (result, element) {
    if (result) {
      return result;
    } else if (isContainer(element)) {
      var nextId = isContainerNode(element) ? getContainerId(element) : element;
      return getContainerFocusTarget(nextId);
    }

    return element;
  }, null) || null;
}

function getContainerPreviousTarget(containerId, direction, destination) {
  var config = getContainerConfig(containerId);

  if (config && config.rememberSource && config.previous && config.previous.reverse === direction && config.previous.destination === destination) {
    return config.previous.target;
  }
}

function setContainerPreviousTarget(containerId, direction, destination, target) {
  var config = getContainerConfig(containerId);

  if (config && config.rememberSource) {
    configureContainer(containerId, {
      previous: {
        target: target,
        destination: destination,
        reverse: reverseDirections[direction]
      }
    });
  }
}
/**
 * Saves the last focused element into `lastFocusedKey` using a container-defined serialization
 * method configured in `lastFocusedPersist`.
 *
 * @param   {String}     containerId  ID of container
 *
 * @returns {undefined}
 * @memberof spotlight/container
 * @public
 */


function persistLastFocusedElement(containerId) {
  var cfg = getContainerConfig(containerId);

  if (cfg) {
    var lastFocusedElement = cfg.lastFocusedElement;

    if (lastFocusedElement) {
      var all = getDeepSpottableDescendants(containerId);
      var lastFocusedKey = cfg.lastFocusedPersist(lastFocusedElement, all); // store lastFocusedKey and release node reference to lastFocusedElement

      cfg.lastFocusedKey = lastFocusedKey;
      cfg.lastFocusedElement = null;
    }
  }
}
/**
 * Restores the last focused element from `lastFocusedKey` using a container-defined deserialization
 * method configured in `lastFocusedRestore`.
 *
 * @param   {String}     containerId  ID of container
 *
 * @returns {undefined}
 * @memberof spotlight/container
 * @public
 */


function restoreLastFocusedElement(containerId) {
  var cfg = getContainerConfig(containerId);

  if (cfg && cfg.lastFocusedKey) {
    var all = getDeepSpottableDescendants(containerId);
    var lastFocusedElement = cfg.lastFocusedRestore(cfg.lastFocusedKey, all); // restore lastFocusedElement and release lastFocusedKey

    cfg.lastFocusedKey = null;
    cfg.lastFocusedElement = lastFocusedElement;
  }
}

function unmountContainer(containerId) {
  var config = getContainerConfig(containerId);

  if (config) {
    config.active = false;
    persistLastFocusedElement(containerId);

    if (typeof config.defaultElement !== 'string') {
      config.defaultElement = null;
    }
  }
}

function isActiveContainer(containerId) {
  var config = getContainerConfig(containerId);
  return config && config.active;
}
/**
 * Determines if the provided container has a configured restriction.
 *
 * By default, returns `true` for `'self-only'` restrictions but the type of restriction can be
 * passed as well.
 *
 * @param {String} containerId The container id
 * @param {String} [restrict] The container restriction defaulted to `'self-only'`
 * @returns {Boolean} `true` if the container has the specified restriction
 * @private
 */


function isRestrictedContainer(containerId) {
  var restrict = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'self-only';
  var config = getContainerConfig(containerId);
  return Boolean(config && config.restrict === restrict);
}
/**
 * Determines if `innerContainerId` is inside `outerContainerId`.
 *
 * @param {String} outerContainerId The outer container id
 * @param {String} innerContainerId The inner container id
 * @returns {Boolean} `true` if both containers exist and `innerContainerId` is within
 *                    `outerContainerId`
 * @private
 */


function containsContainer(outerContainerId, innerContainerId) {
  var outer = getContainerNode(outerContainerId);
  var inner = getContainerNode(innerContainerId);
  return Boolean(outer && inner && outer.contains(inner));
}
/**
 * Determines if `containerId` may become the active container.
 *
 * @param {String} containerId Spotlight container to which focus is leaving
 * @returns	{Boolean} `true` if the active container can change to `containerId`
 * @private
 */


function mayActivateContainer(containerId) {
  var currentContainerId = getLastContainer(); // If the current container is restricted to 'self-only' and if the next container to be
  // activated is not inside the currently activated container, the next container should not be
  // activated.

  return !isRestrictedContainer(currentContainerId) || containsContainer(currentContainerId, containerId);
}

function getDefaultContainer() {
  return isActiveContainer(_defaultContainerId) ? _defaultContainerId : '';
}

function setDefaultContainer(containerId) {
  if (!containerId) {
    _defaultContainerId = '';
  } else if (!getContainerConfig(containerId)) {
    throw new Error('Container "' + containerId + '" doesn\'t exist!');
  } else {
    _defaultContainerId = containerId;
  }
}

function getLastContainer() {
  return isActiveContainer(_lastContainerId) ? _lastContainerId : '';
}

function setLastContainer(containerId) {
  _lastContainerId = containerId || '';
}
/**
 * Updates the last container based on the current focus and target focus.
 *
 * @param {Node} current Currently focused node
 * @param {Node} target  Target node. May or may not be focusable
 * @memberof spotlight/container
 * @public
 */


function setLastContainerFromTarget(current, target) {
  var currentContainers = getNavigableContainersForNode(current);
  var currentOuterContainerId = currentContainers[0];
  var currentContainerConfig = getContainerConfig(currentOuterContainerId);
  var targetContainers = getContainersForNode(target);
  var targetInnerContainer = (0, _last["default"])(targetContainers);
  var sharedContainer = (0, _last["default"])((0, _intersection["default"])(currentContainers, targetContainers));

  if (sharedContainer || !currentContainerConfig || currentContainerConfig.restrict !== 'self-only') {
    // If the target shares a container with the current container stack or the current
    // element isn't within a self-only container, use the target's nearest container
    setLastContainer(targetInnerContainer);
  } else {
    // Otherwise, the target is not within the current container stack and the current
    // element was within a 'self-only' container, use the current's outer container
    setLastContainer(currentOuterContainerId);
  }
}

function isWithinOverflowContainer(target) {
  var containerIds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getContainersForNode(target);
  return containerIds // ignore the root container id which is set to overflow by the root decorator
  .filter(function (id) {
    return id !== rootContainerId;
  }) // get the config for each container
  .map(getContainerConfig) // and check if any are set to overflow
  .some(function (config) {
    return config && config.overflow;
  });
}
/**
 * Notifies any affected containers that focus has left one of their children for another container
 *
 * @param {String} direction up/down/left/right
 * @param {Node} current currently focused element
 * @param {String[]} currentContainerIds Containers for current
 * @param {Node} next To be focused element
 * @param {String[]} nextContainerIds Containers for next
 * @private
 */


function notifyLeaveContainer(direction, current, currentContainerIds, next, nextContainerIds) {
  currentContainerIds.forEach(function (containerId) {
    if (!nextContainerIds.includes(containerId)) {
      var config = getContainerConfig(containerId);

      if (config && config.onLeaveContainer) {
        config.onLeaveContainer({
          type: 'onLeaveContainer',
          direction: direction,
          target: current,
          relatedTarget: next
        });
      }
    }
  });
}
/**
 * Notifies any containers that focus attempted to move but failed to find a target
 *
 * @param {String} direction up/down/left/right
 * @param {Node} current currently focused element
 * @param {String[]} currentContainerIds Containers for current
 * @private
 */


function notifyLeaveContainerFail(direction, current, currentContainerIds) {
  currentContainerIds.forEach(function (containerId) {
    var config = getContainerConfig(containerId);

    if (config && config.onLeaveContainerFail) {
      config.onLeaveContainerFail({
        type: 'onLeaveContainerFail',
        direction: direction,
        target: current
      });
    }
  });
}
/**
 * Notifies any affected containers that one of their children has received focus.
 *
 * @param {String} direction up/down/left/right
 * @param {Node} previous Previously focused element
 * @param {String[]} previousContainerIds Containers for previous
 * @param {Node} current Currently focused element
 * @param {String[]} currentContainerIds Containers for current
 * @private
 */


function notifyEnterContainer(direction, previous, previousContainerIds, current, currentContainerIds) {
  currentContainerIds.forEach(function (containerId) {
    if (!previousContainerIds.includes(containerId)) {
      var config = getContainerConfig(containerId);

      if (config && config.onEnterContainer) {
        config.onEnterContainer({
          type: 'onEnterContainer',
          direction: direction,
          target: current,
          relatedTarget: previous
        });
      }
    }
  });
}

/***/ }),

/***/ "./node_modules/@enact/spotlight/src/navigate.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/spotlight/src/navigate.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.navigate = navigate;
exports["default"] = void 0;
var obliqueMinDistance = 1;
var straightMinDistance = 0;

var calcGroupId = function calcGroupId(_ref) {
  var x = _ref.x,
      y = _ref.y;
  return y * 3 + x;
};

var calcNextGridPosition = function calcNextGridPosition(current, next) {
  var center = current.center;
  var x, y;

  if (center.x < next.left) {
    x = 0;
  } else if (center.x <= next.right) {
    x = 1;
  } else {
    x = 2;
  }

  if (center.y < next.top) {
    y = 0;
  } else if (center.y <= next.bottom) {
    y = 1;
  } else {
    y = 2;
  }

  return {
    x: x,
    y: y
  };
};

var calcNextExtendedGridPosition = function calcNextExtendedGridPosition(current, next) {
  var x, y;

  if (current.right <= next.left) {
    x = 0;
  } else if (current.left < next.right) {
    x = 1;
  } else {
    x = 2;
  }

  if (current.bottom <= next.top) {
    y = 0;
  } else if (current.top < next.bottom) {
    y = 1;
  } else {
    y = 2;
  }

  return {
    x: x,
    y: y
  };
};

function prioritize(priorities, targetEdge) {
  var destGroup = [];

  for (var index = 0; index < priorities.length; index++) {
    var destPriority = priorities[index];

    if (destPriority.group.length) {
      (function () {
        var destDistance = destPriority.distance;
        var destDifference = destPriority.difference;
        var distance = 0;
        var target = void 0;
        destPriority.group.sort(function (a, b) {
          for (var i = 0; i < destDistance.length; i++) {
            var calcDistance = destDistance[i];
            var delta = calcDistance(a) - calcDistance(b);

            if (delta) {
              return delta;
            }
          }

          return 0;
        });
        target = destPriority.group[0];

        for (var i = 0; i < destDifference.length; i++) {
          distance += destDifference[i](target);
        }

        destGroup.push({
          distance: Math.pow(destPriority.multiplier * (distance || destPriority.minDistance) / targetEdge, 2) + targetEdge,
          target: target
        });
      })();
    }
  }

  if (!destGroup.length) {
    return null;
  }

  destGroup.sort(function (a, b) {
    return a.distance - b.distance;
  });
  return destGroup;
}

function partition(rects, targetRect, straightOverlapThreshold, getGroupId) {
  // a matrix of elements where the center of the element in relation to targetRect is:
  var groups = [[
    /* [0] => above/left */
  ], [
    /* [1] => above/within */
  ], [
    /* [2] => above/right */
  ], [
    /* [3] => within/left */
  ], [
    /* [4] => within */
  ], [
    /* [5] => within/right */
  ], [
    /* [6] => below/left */
  ], [
    /* [7] => below and within */
  ], [
    /* [8] => below/right */
  ]];

  for (var i = 0; i < rects.length; i++) {
    var rect = rects[i];
    var groupId = getGroupId(rect, targetRect);
    groups[groupId].push(rect);

    if ([0, 2, 6, 8].indexOf(groupId) !== -1) {
      if (rect.left <= targetRect.right - targetRect.width * straightOverlapThreshold) {
        if (groupId === 2) {
          groups[1].push(rect);
        } else if (groupId === 8) {
          groups[7].push(rect);
        }
      }

      if (rect.right >= targetRect.left + targetRect.width * straightOverlapThreshold) {
        if (groupId === 0) {
          groups[1].push(rect);
        } else if (groupId === 6) {
          groups[7].push(rect);
        }
      }

      if (rect.top <= targetRect.bottom - targetRect.height * straightOverlapThreshold) {
        if (groupId === 6) {
          groups[3].push(rect);
        } else if (groupId === 8) {
          groups[5].push(rect);
        }
      }

      if (rect.bottom >= targetRect.top + targetRect.height * straightOverlapThreshold) {
        if (groupId === 0) {
          groups[3].push(rect);
        } else if (groupId === 2) {
          groups[5].push(rect);
        }
      }
    }
  }

  return groups;
}

function generateDistancefunction(targetRect) {
  return {
    nearPlumbLineIsBetter: function nearPlumbLineIsBetter(rect) {
      var d;

      if (rect.center.x < targetRect.center.x) {
        d = targetRect.center.x - rect.right;
      } else {
        d = rect.left - targetRect.center.x;
      }

      return d < 0 ? 0 : d;
    },
    nearHorizonIsBetter: function nearHorizonIsBetter(rect) {
      var d;

      if (rect.center.y < targetRect.center.y) {
        d = targetRect.center.y - rect.bottom;
      } else {
        d = rect.top - targetRect.center.y;
      }

      return d < 0 ? 0 : d;
    },
    nearTargetBottomIsBetter: function nearTargetBottomIsBetter(rect) {
      var d;

      if (rect.center.y < targetRect.center.y) {
        d = targetRect.bottom - rect.top;
      } else {
        d = rect.top - targetRect.bottom;
      }

      return d < 0 ? 0 : d;
    },
    nearTargetLeftIsBetter: function nearTargetLeftIsBetter(rect) {
      var d;

      if (rect.center.x < targetRect.center.x) {
        d = targetRect.left - rect.right;
      } else {
        d = rect.left - targetRect.left;
      }

      return d < 0 ? 0 : d;
    },
    nearTargetRightIsBetter: function nearTargetRightIsBetter(rect) {
      var d;

      if (rect.center.x < targetRect.center.x) {
        d = targetRect.right - rect.left;
      } else {
        d = rect.left - targetRect.right;
      }

      return d < 0 ? 0 : d;
    },
    nearTargetTopIsBetter: function nearTargetTopIsBetter(rect) {
      var d;

      if (rect.center.y < targetRect.center.y) {
        d = targetRect.top - rect.bottom;
      } else {
        d = rect.top - targetRect.top;
      }

      return d < 0 ? 0 : d;
    },
    topIsBetter: function topIsBetter(rect) {
      return rect.top;
    },
    bottomIsBetter: function bottomIsBetter(rect) {
      return -1 * rect.bottom;
    },
    leftIsBetter: function leftIsBetter(rect) {
      return rect.left;
    },
    rightIsBetter: function rightIsBetter(rect) {
      return -1 * rect.right;
    }
  };
}

function navigate(targetRect, direction, rects, config) {
  if (!targetRect || !direction || !rects || !rects.length || !config) {
    return null;
  }

  var distanceFunction = generateDistancefunction(targetRect);
  var obliqueMultiplier = config.obliqueMultiplier,
      straightMultiplier = config.straightMultiplier,
      straightOnly = config.straightOnly,
      straightOverlapThreshold = config.straightOverlapThreshold;
  var groups = partition(rects, targetRect, straightOverlapThreshold, function (rect, destRect) {
    return calcGroupId(direction === 'up' || direction === 'down' ? calcNextExtendedGridPosition(rect, destRect) : calcNextGridPosition(rect, destRect));
  });
  var internalGroups = partition(groups[4], targetRect.center, straightOverlapThreshold, function (rect, destRect) {
    return calcGroupId(calcNextGridPosition(rect, destRect));
  });
  var priorities, targetEdge;

  switch (direction) {
    case 'left':
      targetEdge = direction;
      priorities = [{
        group: internalGroups[0].concat(internalGroups[3]).concat(internalGroups[6]),
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.nearHorizonIsBetter, distanceFunction.topIsBetter],
        difference: [distanceFunction.nearTargetLeftIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[3],
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.nearHorizonIsBetter, distanceFunction.topIsBetter],
        difference: [distanceFunction.nearTargetLeftIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[0],
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.rightIsBetter, distanceFunction.nearTargetTopIsBetter],
        difference: [distanceFunction.nearTargetLeftIsBetter, distanceFunction.nearTargetTopIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }, {
        group: groups[6],
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.rightIsBetter, distanceFunction.nearTargetTopIsBetter],
        difference: [distanceFunction.nearTargetLeftIsBetter, distanceFunction.nearTargetBottomIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }];
      break;

    case 'right':
      targetEdge = direction;
      priorities = [{
        group: internalGroups[2].concat(internalGroups[5]).concat(internalGroups[8]),
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.nearHorizonIsBetter, distanceFunction.topIsBetter],
        difference: [distanceFunction.nearTargetRightIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[5],
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.nearHorizonIsBetter, distanceFunction.topIsBetter],
        difference: [distanceFunction.nearTargetRightIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[2],
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.leftIsBetter, distanceFunction.nearTargetTopIsBetter],
        difference: [distanceFunction.nearTargetRightIsBetter, distanceFunction.nearTargetTopIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }, {
        group: groups[8],
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.leftIsBetter, distanceFunction.nearTargetTopIsBetter],
        difference: [distanceFunction.nearTargetRightIsBetter, distanceFunction.nearTargetBottomIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }];
      break;

    case 'up':
      targetEdge = 'top';
      priorities = [{
        group: internalGroups[0].concat(internalGroups[1]).concat(internalGroups[2]),
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.nearPlumbLineIsBetter, distanceFunction.leftIsBetter],
        difference: [distanceFunction.nearTargetTopIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[1],
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.nearPlumbLineIsBetter, distanceFunction.leftIsBetter],
        difference: [distanceFunction.nearTargetTopIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[0],
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.bottomIsBetter, distanceFunction.nearTargetLeftIsBetter],
        difference: [distanceFunction.nearTargetTopIsBetter, distanceFunction.nearTargetLeftIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }, {
        group: groups[2],
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.bottomIsBetter, distanceFunction.nearTargetLeftIsBetter],
        difference: [distanceFunction.nearTargetTopIsBetter, distanceFunction.nearTargetRightIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }];
      break;

    case 'down':
      targetEdge = 'bottom';
      priorities = [{
        group: internalGroups[6].concat(internalGroups[7]).concat(internalGroups[8]),
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.nearPlumbLineIsBetter, distanceFunction.leftIsBetter],
        difference: [distanceFunction.nearTargetBottomIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[7],
        distance: [distanceFunction.nearHorizonIsBetter, distanceFunction.nearPlumbLineIsBetter, distanceFunction.leftIsBetter],
        difference: [distanceFunction.nearTargetBottomIsBetter],
        minDistance: straightMinDistance,
        multiplier: straightMultiplier
      }, {
        group: groups[6],
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.topIsBetter, distanceFunction.nearTargetLeftIsBetter],
        difference: [distanceFunction.nearTargetBottomIsBetter, distanceFunction.nearTargetLeftIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }, {
        group: groups[8],
        distance: [distanceFunction.nearPlumbLineIsBetter, distanceFunction.topIsBetter, distanceFunction.nearTargetLeftIsBetter],
        difference: [distanceFunction.nearTargetBottomIsBetter, distanceFunction.nearTargetRightIsBetter],
        minDistance: obliqueMinDistance,
        multiplier: obliqueMultiplier
      }];
      break;

    default:
      return null;
  }

  if (straightOnly) {
    priorities.splice(2, 2);
  }

  var destGroup = prioritize(priorities, targetRect[targetEdge]);

  if (!destGroup) {
    return null;
  }

  return destGroup[0].target.element;
}

var _default = navigate;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/src/pointer.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/spotlight/src/pointer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updatePointerPosition = exports.setPointerMode = exports.notifyPointerMove = exports.notifyKeyDown = exports.hasPointerMoved = exports.getPointerMode = exports.getLastPointerPosition = void 0;

var _keymap = __webpack_require__(/*! @enact/core/keymap */ "./node_modules/@enact/core/keymap/index.js");

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");
/**
 * Exports methods and members for working with pointer events in spotlight
 *
 * @module spotlight/pointer
 * @private
 */

/*
 * Whether Spotlight is in pointer mode (as opposed to 5-way mode).
 *
 * @type {Boolean}
 * @default true
 * @private
 */


var _pointerMode = true;
/**
 * Sets the current pointer mode
 *
 * @param   {Boolean} pointerMode `true` to enable pointer mode; `false` to disable pointer mode
 * @memberof spotlight/pointer
 * @private
 */

var setPointerMode = function setPointerMode(pointerMode) {
  _pointerMode = pointerMode;
};
/**
 * Gets the current pointer mode
 *
 * @returns {Boolean} The current state of pointer mode
 * @memberof spotlight/pointer
 * @private
 */


exports.setPointerMode = setPointerMode;

var getPointerMode = function getPointerMode() {
  return _pointerMode;
}; // Cached pointer position


exports.getPointerMode = getPointerMode;
var _pointerX = null;
var _pointerY = null;
/**
 * Returns whether or not the current pointer position matches the provided coordinates
 *
 * @param   {Number} x Pointer position relative to the left side of the viewport
 * @param   {Number} y Pointer position relative to the top side of the viewport
 *
 * @returns {Boolean}   `true` if the position was changed
 * @memberof spotlight/pointer
 * @private
 */

var hasPointerMoved = function hasPointerMoved(x, y) {
  return x !== _pointerX || y !== _pointerY;
};
/**
 * Updates the cached pointer position, updating the current pointer mode when the position has
 * changed.
 *
 * @param   {Number} x Pointer position relative to the left side of the viewport
 * @param   {Number} y Pointer position relative to the top side of the viewport
 *
 * @returns {Boolean}   `true` if the position was updated
 * @memberof spotlight/pointer
 * @private
 */


exports.hasPointerMoved = hasPointerMoved;

var updatePointerPosition = function updatePointerPosition(x, y) {
  // Chrome emits mousemove on scroll, but client coordinates do not change.
  if (hasPointerMoved(x, y)) {
    setPointerMode(true);
    _pointerX = x;
    _pointerY = y;
    return true;
  }

  return false;
};
/**
 * Returns the last known position of the pointer
 *
 * @returns {Object} Contains `x` and `y` coordinates for the pointer
 * @memberof spotlight/pointer
 * @private
 */


exports.updatePointerPosition = updatePointerPosition;

var getLastPointerPosition = function getLastPointerPosition() {
  return {
    x: _pointerX,
    y: _pointerY
  };
}; // 30ms (_pointerHiddenToKeyTimeout) is semi-arbitrary, to account for the time it takes for the
// following directional key event to fire, and to prevent momentary spotting of the last
// focused item - needs to be a value large enough to account for the potentially-trailing
// event, but not too large that another unrelated event can be fired inside the window


exports.getLastPointerPosition = getLastPointerPosition;
var hidePointerJob = new _util.Job(function (callback) {
  setPointerMode(false);

  if (callback) {
    callback();
  }
}, 30);
/**
 * Notifies spotlight of a change in the pointer position
 *
 * @param   {Node}     target   Node under the pointer
 * @param   {Number}   x        Horizontal position relative to the left side of the viewport
 * @param   {Number}   y        Vertical position relative to the top side of the viewport
 *
 * @returns {Boolean}           `true` if the change in position results in a change in focus
 * @memberof spotlight/pointer
 * @private
 */

var notifyPointerMove = function notifyPointerMove(current, target, x, y) {
  var priorPointerMode = getPointerMode();

  if (updatePointerPosition(x, y)) {
    // if we're entering pointer mode and the target element isn't within the currently
    // focused element, there may be a new navigable target
    return !priorPointerMode || !current || !current.contains(target);
  } // the pointer hasn't actually moved (surprise!)


  return false;
};
/**
 * Notifies the pointer module of key events. If the pointer should be hidden, a timer is set and
 * `callback` is invoked after the timer has expired and pointer mode has been disabled. For any
 * other type of key event, pointer mode is disabled and `false` is returned.
 *
 * @param   {Number}    keyCode     Key event key code
 * @param   {Function}  [callback]  Optional callback to invoke upon hiding the pointer.
 *
 * @returns {Boolean}               `true` for pointer hide or show key events
 * @memberof spotlight/pointer
 * @private
 */


exports.notifyPointerMove = notifyPointerMove;

var notifyKeyDown = function notifyKeyDown(keyCode, callback) {
  // for hide/show pointer events, handle them and return true
  if ((0, _keymap.is)('pointerHide', keyCode)) {
    hidePointerJob.start(callback);
    return true;
  } else if ((0, _keymap.is)('pointerShow', keyCode)) {
    setPointerMode(true);
    return true;
  } else if (!(0, _keymap.is)('nonModal', keyCode) && !(0, _keymap.is)('cancel', keyCode)) {
    setPointerMode(false);
  }

  return false;
};

exports.notifyKeyDown = notifyKeyDown;

/***/ }),

/***/ "./node_modules/@enact/spotlight/src/spotlight.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/spotlight/src/spotlight.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Spotlight = exports.getDirection = exports["default"] = void 0;

var _keymap = __webpack_require__(/*! @enact/core/keymap */ "./node_modules/@enact/core/keymap/index.js");

var _snapshot = __webpack_require__(/*! @enact/core/snapshot */ "./node_modules/@enact/core/snapshot/snapshot.js");

var _platform = _interopRequireDefault(__webpack_require__(/*! @enact/core/platform */ "./node_modules/@enact/core/platform/platform.js"));

var _last = _interopRequireDefault(__webpack_require__(/*! ramda/src/last */ "./node_modules/ramda/src/last.js"));

var _Accelerator = _interopRequireDefault(__webpack_require__(/*! ../Accelerator */ "./node_modules/@enact/spotlight/Accelerator/Accelerator.js"));

var _Spottable = __webpack_require__(/*! ../Spottable */ "./node_modules/@enact/spotlight/Spottable/Spottable.js");

var _Pause = __webpack_require__(/*! ../Pause */ "./node_modules/@enact/spotlight/Pause/Pause.js");

var _container = __webpack_require__(/*! ./container */ "./node_modules/@enact/spotlight/src/container.js");

var _pointer = __webpack_require__(/*! ./pointer */ "./node_modules/@enact/spotlight/src/pointer.js");

var _target = __webpack_require__(/*! ./target */ "./node_modules/@enact/spotlight/src/target.js");

var _utils = __webpack_require__(/*! ./utils */ "./node_modules/@enact/spotlight/src/utils.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/*
 * A javascript-based implementation of Spatial Navigation.
 *
 * Copyright (c) 2016 Luke Chang.
 * https://github.com/luke-chang/js-spatial-navigation
 *
 * Licensed under the MPL license.
 */

/**
 * Exports the {@link spotlight.Spotlight} object used for controlling spotlight behavior and the
 * {@link spotlight.Spotlight.getDirection} function for mapping a keycode to a spotlight direction.
 *
 * The default export is {@link spotlight.Spotlight}.
 *
 * @module spotlight
 */


var isDown = (0, _keymap.is)('down');
var isEnter = (0, _keymap.is)('enter');
var isLeft = (0, _keymap.is)('left');
var isRight = (0, _keymap.is)('right');
var isUp = (0, _keymap.is)('up');
/**
 * Translates keyCodes into 5-way direction descriptions (e.g. `'down'`)
 *
 * @function
 * @memberof spotlight
 * @param {Number} keyCode - Key code to analyze
 * @returns {String|false} - One of `'up'`, `'down'`, `'left'`, `'right'` or `false` if not a direction key
 * @public
 */

var getDirection = function getDirection(keyCode) {
  return isDown(keyCode) && 'down' || isLeft(keyCode) && 'left' || isRight(keyCode) && 'right' || isUp(keyCode) && 'up';
};

exports.getDirection = getDirection;
var SpotlightAccelerator = new _Accelerator["default"]();
/**
 * Provides 5-way navigation and focus support
 *
 * ```
 * import Spotlight from '@enact/Spotlight';
 *
 * // get the currently focused component
 * const current = Spotlight.getCurrent();
 *
 * // focus an element by CSS selector
 * Spotlight.focus('.my-custom-class');
 *
 * // is `current` focusable?
 * const isFocused = Spotlight.isSpottable(current);
 * ```
 *
 * @type {Object}
 * @memberof spotlight
 * @public
 */

var Spotlight = function () {
  'use strict';
  /*
  /* private vars
  */

  var _initialized = false;
  var _duringFocusChange = false;
  /*
   * Whether a 5-way directional key is being held.
   *
   * @type {Boolean}
   * @default false
   */

  var _5WayKeyHold = false;
  /*
   * Whether to set focus during the next window focus event
   *
   * @type {Boolean}
   * @default false
   */

  var _spotOnWindowFocus = false;
  /*
   * `true` when a pointer move event occurs during a keypress. Used to short circuit key down
   * handling until the next keyup occurs.
   *
   * @type {Boolean}
   * @default false
   */

  var _pointerMoveDuringKeyPress = false;
  /*
  * protected methods
  */

  function preventDefault(evt) {
    evt.preventDefault();
    evt.stopPropagation();
    return false;
  }

  function shouldPreventNavigation() {
    return (0, _Pause.isPaused)() || (0, _container.getAllContainerIds)().length === 0;
  }

  function _getCurrent() {
    if (!(0, _snapshot.isWindowReady)()) return;
    var activeElement = document.activeElement;

    if (activeElement && activeElement !== document.body) {
      return activeElement;
    }
  } // An extension point for updating pointer mode based on the current platform.
  // Currently only webOS


  function setPlatformPointerMode() {
    var palmSystem = window.PalmSystem;

    if (palmSystem && palmSystem.cursor) {
      (0, _pointer.setPointerMode)(palmSystem.cursor.visibility);
    }
  }

  function focusElement(elem, containerIds, fromPointer) {
    if (!elem) {
      return false;
    }

    if ((0, _pointer.getPointerMode)() && !fromPointer) {
      (0, _container.setContainerLastFocusedElement)(elem, containerIds);
      return false;
    }

    var currentFocusedElement = _getCurrent();

    if (elem === currentFocusedElement) {
      return true;
    }

    var focusOptions = (0, _container.isWithinOverflowContainer)(elem, containerIds) ? {
      preventScroll: true
    } : null;

    var silentFocus = function silentFocus() {
      elem.focus(focusOptions);
      focusChanged(elem, containerIds);
    };

    if (_duringFocusChange) {
      silentFocus();
      return true;
    }

    _duringFocusChange = true;

    if ((0, _Pause.isPaused)()) {
      silentFocus();
      _duringFocusChange = false;
      return true;
    }

    elem.focus(focusOptions);
    _duringFocusChange = false;
    focusChanged(elem, containerIds);
    return true;
  }

  function focusChanged(elem, containerIds) {
    if (!containerIds || !containerIds.length) {
      containerIds = (0, _container.getContainersForNode)(elem);
    }

    var containerId = (0, _last["default"])(containerIds);

    if (containerId) {
      (0, _container.setContainerLastFocusedElement)(elem, containerIds);
      (0, _container.setLastContainer)(containerId);
    }

    if (true) {
      assignFocusPreview(elem);
    }
  }

  function restoreFocus() {
    var lastContainerId = (0, _container.getLastContainer)();
    var next = [_container.rootContainerId];

    if (lastContainerId) {
      next.unshift(lastContainerId); // only prepend last focused if it exists so that Spotlight.focus() doesn't receive
      // a falsy target

      var lastFocused = (0, _container.getContainerLastFocusedElement)(lastContainerId);

      if (lastFocused) {
        next.unshift(lastFocused);
      }
    } // attempt to find a target starting with the last focused element in the last
    // container, followed by the last container, and finally the root container


    return next.reduce(function (focused, target) {
      return focused || Spotlight.focus(target);
    }, false);
  } // The below should be gated on non-production environment only.


  function assignFocusPreview(elem) {
    var directions = ['up', 'right', 'down', 'left'],
        nextClassBase = _Spottable.spottableClass + '-next-'; // Remove all previous targets

    directions.forEach(function (dir) {
      var nextClass = nextClassBase + dir,
          prevElems = (0, _utils.parseSelector)('.' + nextClass);

      if (prevElems && prevElems.length !== 0) {
        prevElems.forEach(function (prevElem) {
          return prevElem.classList.remove(nextClass);
        });
      }
    }); // Find all next targets and identify them

    directions.forEach(function (dir) {
      var nextElem = (0, _target.getTargetByDirectionFromElement)(dir, elem);

      if (nextElem) {
        nextElem.classList.add(nextClassBase + dir);
      }
    });
  }

  function spotNextFromPoint(direction, position) {
    var containerId = Spotlight.getActiveContainer();
    var next = (0, _target.getTargetByDirectionFromPosition)(direction, position, containerId);

    if (next) {
      (0, _container.setContainerPreviousTarget)(containerId, direction, next, (0, _container.getContainerLastFocusedElement)(containerId));
      return focusElement(next, (0, _container.getContainersForNode)(next));
    }

    return false;
  }

  function spotNext(direction, currentFocusedElement, currentContainerIds) {
    var next = (0, _target.getTargetByDirectionFromElement)(direction, currentFocusedElement);

    if (next) {
      var currentContainerId = (0, _last["default"])(currentContainerIds);
      var nextContainerIds = (0, _container.getContainersForNode)(next); // prevent focus if 5-way is being held and the next element isn't wrapped by
      // the current element's immediate container

      if (_5WayKeyHold && nextContainerIds.indexOf(currentContainerId) < 0 && !(0, _container.isContainer5WayHoldable)(currentContainerId)) {
        return false;
      }

      (0, _container.notifyLeaveContainer)(direction, currentFocusedElement, currentContainerIds, next, nextContainerIds);
      (0, _container.setContainerPreviousTarget)(currentContainerId, direction, next, currentFocusedElement);
      var focused = focusElement(next, nextContainerIds);
      (0, _container.notifyEnterContainer)(direction, currentFocusedElement, currentContainerIds, next, nextContainerIds);
      return focused;
    }

    (0, _container.notifyLeaveContainerFail)(direction, currentFocusedElement, currentContainerIds);
    return false;
  }

  function onAcceleratedKeyDown(evt) {
    var direction = getDirection(evt.keyCode);
    if (!direction) return;

    var currentFocusedElement = _getCurrent();

    var currentContainerIds = (0, _container.getContainersForNode)(currentFocusedElement);
    spotNext(direction, currentFocusedElement, currentContainerIds);
  }

  function onBlur() {
    var current = _getCurrent();

    if (current) {
      current.blur();
    }

    Spotlight.setPointerMode(false);
    _spotOnWindowFocus = true;
    _pointerMoveDuringKeyPress = false;
  }

  function handleWebOSMouseEvent(ev) {
    if (!(0, _Pause.isPaused)() && ev && ev.detail && ev.detail.type === 'Leave') {
      onBlur();
    }
  }

  function handleKeyboardStateChangeEvent(_ref) {
    var visibility = _ref.visibility;

    if (!visibility) {
      setPlatformPointerMode();
    }
  }

  function onFocus() {
    // Normally, there isn't focus here unless the window has been blurred above. On webOS, the
    // platform may focus the window after the app has already focused a component so we prevent
    // trying to focus something else (potentially) unless the window was previously blurred
    if (_spotOnWindowFocus) {
      setPlatformPointerMode(); // If the window was previously blurred while in pointer mode, the last active containerId may
      // not have yet set focus to its spottable elements. For this reason we can't rely on setting focus
      // to the last focused element of the last active containerId, so we use rootContainerId instead

      var lastFocusedElement = (0, _container.getContainerLastFocusedElement)(_container.rootContainerId);

      while ((0, _container.isContainer)(lastFocusedElement)) {
        var _getContainerConfig = (0, _container.getContainerConfig)(lastFocusedElement);

        lastFocusedElement = _getContainerConfig.lastFocusedElement;
      }

      if (!Spotlight.focus(lastFocusedElement)) {
        // If the last focused element was previously also disabled (or no longer exists), we
        // need to set focus somewhere
        Spotlight.focus();
      }

      _spotOnWindowFocus = false;
    }
  }

  function onKeyUp(evt) {
    _pointerMoveDuringKeyPress = false;
    var keyCode = evt.keyCode;

    if (getDirection(keyCode) || isEnter(keyCode)) {
      SpotlightAccelerator.reset();
      _5WayKeyHold = false;
    }
  }

  function handlePointerHide() {
    if (!_getCurrent()) {
      restoreFocus();
    }
  }

  function onKeyDown(evt) {
    if (shouldPreventNavigation()) {
      (0, _pointer.notifyKeyDown)(evt.keyCode);
      return;
    }

    var keyCode = evt.keyCode;
    var direction = getDirection(keyCode);
    var pointerHandled = (0, _pointer.notifyKeyDown)(keyCode, handlePointerHide);

    if (pointerHandled || !(direction || isEnter(keyCode))) {
      return;
    }

    if (!(0, _Pause.isPaused)() && !_pointerMoveDuringKeyPress) {
      if (_getCurrent()) {
        SpotlightAccelerator.processKey(evt, onAcceleratedKeyDown);
      } else if (!spotNextFromPoint(direction, (0, _pointer.getLastPointerPosition)())) {
        restoreFocus();
      }

      _5WayKeyHold = true;
    }

    if (direction) {
      preventDefault(evt);
    }
  }

  function onMouseMove(_ref2) {
    var target = _ref2.target,
        clientX = _ref2.clientX,
        clientY = _ref2.clientY;

    if (shouldPreventNavigation()) {
      (0, _pointer.notifyPointerMove)(null, target, clientX, clientY);
      return;
    }

    var current = _getCurrent();

    var update = (0, _pointer.notifyPointerMove)(current, target, clientX, clientY);

    if (update) {
      if (_5WayKeyHold) {
        _pointerMoveDuringKeyPress = true;
      }

      var next = (0, _target.getNavigableTarget)(target); // TODO: Consider encapsulating this work within focusElement

      if (next !== current) {
        if (next) {
          focusElement(next, (0, _container.getContainersForNode)(next), true);
          return true;
        } else if (current) {
          current.blur();
          (0, _container.setLastContainerFromTarget)(current, target);
        }
      }
    }
  }

  function onMouseOver(evt) {
    if (shouldPreventNavigation()) return;
    var target = evt.target;

    if ((0, _pointer.getPointerMode)() && (0, _pointer.hasPointerMoved)(evt.clientX, evt.clientY)) {
      var next = (0, _target.getNavigableTarget)(target); // account for child controls

      if (next && next !== _getCurrent()) {
        focusElement(next, (0, _container.getContainersForNode)(next), true);
        return true;
      }

      preventDefault(evt);
    }
  }

  function onTouchEnd(evt) {
    var current = _getCurrent();

    if (current && !current.contains(evt.target)) {
      current.blur();
    }
  }
  /*
   * public methods
   */


  var exports =
  /** @lends spotlight.Spotlight */
  {
    // eslint-disable-line no-shadow

    /**
     * Initializes Spotlight. This is generally handled by
     * {@link spotlight/SpotlightRootDecorator.SpotlightRootDecorator}.
     *
     * @param {Object} containerDefaults Default configuration for new spotlight containers
     * @returns {undefined}
     * @public
     */
    initialize: function initialize(containerDefaults) {
      if (!_initialized) {
        window.addEventListener('blur', onBlur);
        window.addEventListener('focus', onFocus);
        window.addEventListener('keydown', onKeyDown);
        window.addEventListener('keyup', onKeyUp);
        window.addEventListener('mouseover', onMouseOver);
        window.addEventListener('mousemove', onMouseMove);

        if (_platform["default"].touch) {
          window.addEventListener('touchend', onTouchEnd);
        }

        if (_platform["default"].webos) {
          window.top.document.addEventListener('webOSMouse', handleWebOSMouseEvent);
          window.top.document.addEventListener('keyboardStateChange', handleKeyboardStateChangeEvent);
        }

        (0, _container.setLastContainer)(_container.rootContainerId);
        (0, _container.configureDefaults)(containerDefaults);
        (0, _container.configureContainer)(_container.rootContainerId); // by default, pointer mode is off but the platform's current state will override that

        (0, _pointer.setPointerMode)(false);
        setPlatformPointerMode();
        _initialized = true;
      }
    },

    /**
     * Terminates Spotlight. This is generally handled by {@link spotlight.SpotlightRootDecorator}.
     *
     * @public
     */
    terminate: function terminate() {
      window.removeEventListener('blur', onBlur);
      window.removeEventListener('focus', onFocus);
      window.removeEventListener('keydown', onKeyDown);
      window.removeEventListener('keyup', onKeyUp);
      window.removeEventListener('mouseover', onMouseOver);
      window.removeEventListener('mousemove', onMouseMove);

      if (_platform["default"].touch) {
        window.removeEventListener('touchend', onTouchEnd);
      }

      if (_platform["default"].webos) {
        window.top.document.removeEventListener('webOSMouse', handleWebOSMouseEvent);
        window.top.document.removeEventListener('keyboardStateChange', handleKeyboardStateChangeEvent);
      }

      Spotlight.clear();
      _initialized = false;
    },

    /**
     * Resets spotlight container information
     *
     * @private
     */
    clear: function clear() {
      (0, _container.removeAllContainers)();
      (0, _container.setDefaultContainer)();
      (0, _container.setLastContainer)();
      _duringFocusChange = false;
    },
    // set(<config>);
    // set(<containerId>, <config>);

    /**
     * Sets the config for spotlight or the specified containerID
     *
     * @function
     * @param {String|Object} containerIdOrConfig  Configuration object or container ID
     * @param {Object}        [config]             Configuration object if container ID supplied
     *                                             in `containerIdOrConfig`
     * @returns {undefined}
     * @public
     */
    set: _container.configureContainer,
    // add(<config>);
    // add(<containerId>, <config>);

    /**
     * Adds the config for a new container. The container ID may be passed in the configuration
     * object. If no container ID is supplied, a new container ID will be generated.
     *
     * @function
     * @param {String|Object} containerIdOrConfig  Configuration object or container ID
     * @param {Object}        [config]             Configuration object if container ID supplied
     *                                             in `containerIdOrConfig`
     * @returns {String} The container ID of the container
     * @public
     */
    add: _container.addContainer,
    unmount: function unmount(containerId) {
      if (!containerId || typeof containerId !== 'string') {
        throw new Error('Please assign the "containerId"!');
      }

      (0, _container.unmountContainer)(containerId);
    },

    /**
     * Removes a container from Spotlight
     *
     * @param {String} containerId Container ID to remove
     * @returns {Boolean} `true` if container removed, `false` if container does not exist
     * @public
     */
    remove: function remove(containerId) {
      if (!containerId || typeof containerId !== 'string') {
        throw new Error('Please assign the "containerId"!');
      }

      if ((0, _container.getContainerConfig)(containerId)) {
        (0, _container.removeContainer)(containerId);

        if ((0, _container.getLastContainer)() === containerId) {
          Spotlight.setActiveContainer(null);
        }

        return true;
      }

      return false;
    },

    /**
     * Disables the selector rules of the specified container
     *
     * @param {String} containerId Container ID selector rules to disable
     * @returns {Boolean} `true` if container's selector rules are disabled, `false` if container does not exist
     * @public
     */
    disableSelector: function disableSelector(containerId) {
      if ((0, _container.isContainer)(containerId)) {
        (0, _container.configureContainer)(containerId, {
          selectorDisabled: false
        });
        return true;
      }

      return false;
    },

    /**
     * Enables the selector rules of the specified container
     *
     * @param {String} containerId Container ID selector rules to enable
     * @returns {Boolean} `true` if container's selector rules are enabled, `false` if container does not exist
     * @public
     */
    enableSelector: function enableSelector(containerId) {
      if ((0, _container.isContainer)(containerId)) {
        (0, _container.configureContainer)(containerId, {
          selectorDisabled: false
        });
        return true;
      }

      return false;
    },

    /**
     * Pauses Spotlight
     *
     * @function
     * @returns {undefined}
     * @public
     */
    pause: _Pause.pause,

    /**
     * Resumes Spotlight
     *
     * @function
     * @returns {undefined}
     * @public
     */
    resume: _Pause.resume,
    // focus()
    // focus(<containerId>)
    // focus(<extSelector>)

    /**
     * Focuses the specified component ID, container ID, element selector, or the default
     * container.
     *
     * If Spotlight is in pointer mode, focus is not changed but `elem` will be set as the last
     * focused element of its spotlight containers.
     *
     * @param {String|Object|undefined} elem Component ID, container, ID or element selector.
     *	If not supplied, the default container will be focused.
     * @returns {Boolean} `true` if focus successful, `false` if not.
     * @public
     */
    focus: function focus(elem) {
      var target = elem;
      var wasContainerId = false;

      if (!elem) {
        target = (0, _target.getTargetByContainer)();
      } else if (typeof elem === 'string') {
        if ((0, _container.getContainerConfig)(elem)) {
          target = (0, _target.getTargetByContainer)(elem);
          wasContainerId = true;
        } else if (/^[\w\d-]+$/.test(elem)) {
          // support component IDs consisting of alphanumeric, dash, or underscore
          target = (0, _target.getTargetBySelector)("[data-spotlight-id=".concat(elem, "]"));
        } else {
          target = (0, _target.getTargetBySelector)(elem);
        }
      }

      var nextContainerIds = (0, _container.getContainersForNode)(target);
      var nextContainerId = (0, _last["default"])(nextContainerIds);

      if ((0, _container.isNavigable)(target, nextContainerId, true)) {
        var focused = focusElement(target, nextContainerIds);

        if (!focused && wasContainerId) {
          (0, _container.setLastContainer)(elem);
        }

        return focused;
      } else if (wasContainerId) {
        // if we failed to find a spottable target within the provided container, we'll set
        // it as the active container to allow it to focus itself if its contents change
        (0, _container.setLastContainer)(elem);
      }

      return false;
    },
    // move(<direction>)
    // move(<direction>, <selector>)

    /**
     * Moves focus to the next spottable control in the direction specified. Optionally, a source
     * element selector may be supplied as the starting point.
     *
     * @param {String} direction Direction to move, one of `'left'`, `'right'`, `'up'` or `'down'`
     * @param {String|undefined} selector If supplied, the element to move from. If not supplied,
     *	the currently focused item will be used.
     * @returns {Boolean} `true` if focus successful, `false` if not.
     * @public
     */
    move: function move(direction, selector) {
      direction = direction.toLowerCase();

      if (direction !== 'up' && direction !== 'down' && direction !== 'left' && direction !== 'right') {
        return false;
      }

      var elem = selector ? (0, _utils.parseSelector)(selector)[0] : _getCurrent();

      if (!elem) {
        return false;
      }

      var containerIds = (0, _container.getContainersForNode)(elem);

      if (!containerIds.length) {
        return false;
      }

      return spotNext(direction, elem, containerIds);
    },

    /**
     * Sets or clears the default container that will receive focus.
     *
     * @function
     * @param {String} [containerId] The container ID or a falsy value to clear default
     *                               container
     * @returns {undefined}
     * @public
     */
    setDefaultContainer: _container.setDefaultContainer,

    /**
     * Gets the currently active container.
     *
     * @returns {String} The id of the currently active container
     * @public
     */
    getActiveContainer: function getActiveContainer() {
      return (0, _container.getLastContainer)() || _container.rootContainerId;
    },

    /**
     * Sets the currently active container.
     *
     * Note: If the current container is restricted to 'self-only' and `containerId` is not
     * contained within the current container then the active container will not be updated.
     *
     * @param {String} [containerId] The id of the currently active container. If this is not
     *	provided, the root container is set as the currently active container.
     * @public
     */
    setActiveContainer: function setActiveContainer(containerId) {
      if ((0, _container.mayActivateContainer)(containerId)) {
        (0, _container.setLastContainer)(containerId || _container.rootContainerId);
      }
    },

    /**
     * Gets the current pointer mode
     *
     * @function
     * @returns {Boolean} `true` if spotlight is in pointer mode
     * @public
     */
    getPointerMode: _pointer.getPointerMode,

    /**
     * Sets the current pointer mode
     *
     * @function
     * @param {Boolean} pointerMode The value of the pointer mode. This determines how
     *	spotlight manages focus change behaviors.
     * @public
     */
    setPointerMode: _pointer.setPointerMode,

    /**
     * Gets the muted mode value of a spottable element.
     *
     * @param {Object} elem The dom element used to determine the muted status.
     * @returns {Boolean} `true` if the passed-in control is in muted mode.
     * @public
     */
    isMuted: function isMuted(elem) {
      if (!elem) {
        return false;
      }

      return (0, _utils.matchSelector)('[data-spotlight-container-muted="true"] .' + _Spottable.spottableClass, elem);
    },

    /**
     * Determines whether Spotlight is currently paused.
     *
     * @function
     * @returns {Boolean} `true` if Spotlight is currently paused.
     * @public
     */
    isPaused: _Pause.isPaused,

    /**
     * Determines whether an element is spottable.
     *
     * @param {Object} elem The dom element used to determine the spottable status.
     * @returns {Boolean} `true` if the element being evaluated is currently spottable.
     * @public
     */
    isSpottable: function isSpottable(elem) {
      if (!elem) {
        return false;
      }

      return (0, _target.isFocusable)(elem);
    },

    /**
     * Returns the currently spotted control.
     *
     * @returns {Node} The control that currently has focus, if available
     * @public
     */
    getCurrent: function getCurrent() {
      return _getCurrent();
    },

    /**
     * Returns a list of spottable elements wrapped by the supplied container.
     *
     * @param {String} containerId The id of the container used to determine the list of spottable elements
     * @returns {Node[]} The spottable elements that are wrapped by the supplied container
     * @public
     */
    getSpottableDescendants: function getSpottableDescendants(containerId) {
      if (!containerId || typeof containerId !== 'string') {
        throw new Error('Please assign the "containerId"!');
      }

      return (0, _container.getSpottableDescendants)(containerId);
    }
  };
  return exports;
}();

exports.Spotlight = Spotlight;
var _default = Spotlight;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/spotlight/src/target.js":
/*!*****************************************************!*\
  !*** ./node_modules/@enact/spotlight/src/target.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getNavigableTarget = getNavigableTarget;
exports.getTargetByContainer = getTargetByContainer;
exports.getTargetByDirectionFromElement = getTargetByDirectionFromElement;
exports.getTargetByDirectionFromPosition = getTargetByDirectionFromPosition;
exports.getTargetBySelector = getTargetBySelector;
exports.isFocusable = isFocusable;

var _last = _interopRequireDefault(__webpack_require__(/*! ramda/src/last */ "./node_modules/ramda/src/last.js"));

var _container = __webpack_require__(/*! ./container */ "./node_modules/@enact/spotlight/src/container.js");

var _navigate = _interopRequireDefault(__webpack_require__(/*! ./navigate */ "./node_modules/@enact/spotlight/src/navigate.js"));

var _utils = __webpack_require__(/*! ./utils */ "./node_modules/@enact/spotlight/src/utils.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function isFocusable(elem) {
  var containers = (0, _container.getContainersForNode)(elem);
  var verifySelector = true;

  for (var i = containers.length - 1; i >= 0; i--) {
    var containerId = containers[i];

    if (!(0, _container.isNavigable)(elem, containerId, verifySelector)) {
      return false;
    } // only verify selector for the first (immediate ancestor) container


    verifySelector = false;
  }

  return true;
}

function getContainersToSearch(containerId) {
  var range = [];

  var addRange = function addRange(id) {
    var config = (0, _container.getContainerConfig)(id);

    if (id && range.indexOf(id) < 0 && config && !config.selectorDisabled) {
      range.push(id);
    }
  };

  if (containerId) {
    addRange(containerId);
  } else {
    addRange((0, _container.getDefaultContainer)());
    addRange((0, _container.getLastContainer)());

    _toConsumableArray((0, _container.getAllContainerIds)()).map(addRange);
  }

  return range;
}

function getTargetByContainer(containerId) {
  return getContainersToSearch(containerId).reduce(function (next, id) {
    return next || (0, _container.getContainerFocusTarget)(id);
  }, null);
}

function getTargetBySelector(selector) {
  if (!selector) return null;

  if (selector.charAt(0) === '@') {
    var containerId = selector.length === 1 ? null : selector.substr(1);
    return getTargetByContainer(containerId);
  }

  var next = (0, _utils.parseSelector)(selector)[0];

  if (next) {
    var nextContainerIds = (0, _container.getContainersForNode)(next);

    if ((0, _container.isNavigable)(next, (0, _last["default"])(nextContainerIds), true)) {
      return next;
    }
  }

  return null;
}

function isRestrictedContainer(containerId) {
  var config = (0, _container.getContainerConfig)(containerId);
  return config && (config.enterTo === 'last-focused' || config.enterTo === 'default-element');
}

function getSpottableDescendantsWithoutContainers(containerId, containerIds) {
  return (0, _container.getSpottableDescendants)(containerId).filter(function (n) {
    return !(0, _container.isContainer)(n) || containerIds.indexOf(n.dataset.spotlightId) === -1;
  });
}

function filterRects(elementRects, boundingRect) {
  if (!boundingRect) {
    return elementRects;
  } // remove elements that are outside of boundingRect, if specified


  return elementRects.filter(function (rect) {
    if ((0, _container.isContainer)(rect.element)) {
      // For containers, test intersection since they may be larger than the bounding rect
      return (0, _utils.intersects)(boundingRect, rect);
    } else {
      // For elements, use contains with the center to include mostly visible elements
      return (0, _utils.contains)(boundingRect, rect.center);
    }
  }).map(function (rect) {
    var topUpdate = rect.top < boundingRect.top;
    var bottomUpdate = rect.bottom > boundingRect.bottom;
    var leftUpdate = rect.left < boundingRect.left;
    var rightUpdate = rect.right > boundingRect.right; // if the element's rect is larger than the bounding rect, clamp it to the bounding rect and
    // recalculate the center based on the new bounds.

    if (topUpdate || bottomUpdate || leftUpdate || rightUpdate) {
      var updated = _objectSpread({}, rect, {
        center: _objectSpread({}, rect.center)
      });

      if (topUpdate) updated.top = boundingRect.top;
      if (bottomUpdate) updated.bottom = boundingRect.bottom;
      if (leftUpdate) updated.left = boundingRect.left;
      if (rightUpdate) updated.right = boundingRect.right;

      if (leftUpdate || rightUpdate) {
        var centerX = updated.left + (updated.right - updated.left) / 2;
        updated.center.x = updated.center.left = updated.center.right = centerX;
      }

      if (topUpdate || bottomUpdate) {
        var centerY = updated.top + (updated.bottom - updated.top) / 2;
        updated.center.y = updated.center.top = updated.center.bottom = centerY;
      }

      return updated;
    }

    return rect;
  });
}

function getContainerContainingRect(elementRects, elementRect) {
  // find candidates that are containers and *visually* contain element
  var overlapping = elementRects.filter(function (rect) {
    return (0, _container.isContainer)(rect.element) && (0, _utils.contains)(rect, elementRect);
  }); // if the next element is a container AND the current element is *visually* contained within
  // one of the candidate element, we need to ignore container `enterTo` preferences and
  // retrieve its spottable descendants and try to navigate to them.

  if (overlapping.length) {
    return overlapping[0].element.dataset.spotlightId;
  }

  return false;
}

function getOverflowContainerRect(containerId) {
  // if the target container has overflowing content, update the boundingRect to match its
  // bounds to prevent finding elements within the container's hierarchy but not visible.
  // This filter only applies when waterfalling to prevent filtering out elements that share
  // a container tree with `element`
  var nextConfig = (0, _container.getContainerConfig)(containerId);

  if (nextConfig && nextConfig.overflow) {
    return (0, _utils.getContainerRect)(containerId);
  }
}

function getTargetInContainerByDirectionFromPosition(direction, containerId, positionRect, elementContainerIds, boundingRect) {
  var elements = getSpottableDescendantsWithoutContainers(containerId, elementContainerIds);
  var elementRects = filterRects((0, _utils.getRects)(elements), boundingRect);
  var next = null;

  var _loop2 = function _loop2() {
    var overlappingContainerId = getContainerContainingRect(elementRects, positionRect); // if the pointer is within a container that is a candidate element, we need to ignore container
    // `enterTo` preferences and retrieve its spottable descendants and try to navigate to them.

    if (overlappingContainerId) {
      next = getTargetInContainerByDirectionFromPosition(direction, overlappingContainerId, positionRect, elementContainerIds, boundingRect);

      if (!next) {
        // filter out the container and try again
        elementRects = elementRects.filter(function (rect) {
          return rect.element.dataset.spotlightId !== overlappingContainerId;
        });
        return "continue";
      } // found a target so break out and return


      return "break";
    } // try to navigate from position to one of the candidates in containerId


    next = (0, _navigate["default"])(positionRect, direction, elementRects, (0, _container.getContainerConfig)(containerId)); // if we match a container, recurse into it

    if (next && (0, _container.isContainer)(next)) {
      var nextContainerId = next.dataset.spotlightId; // need to cache this reference so we can filter it out later if necessary

      var lastNavigated = next;
      next = getTargetInContainerByDirectionFromPosition(direction, nextContainerId, positionRect, elementContainerIds, getOverflowContainerRect(nextContainerId) || boundingRect);

      if (!next) {
        // filter out the container and try again
        elementRects = elementRects.filter(function (rect) {
          return rect.element !== lastNavigated;
        });
        return "continue";
      }
    } // If we've met every condition and haven't explicitly retried the search via `continue`,
    // break out and return


    return "break";
  };

  _loop: while (elementRects.length > 0) {
    var _ret = _loop2();

    switch (_ret) {
      case "continue":
        continue;

      case "break":
        break _loop;
    }
  }

  return next;
}

function getTargetInContainerByDirectionFromElement(direction, containerId, element, elementRect, elementContainerIds, boundingRect) {
  var elements = getSpottableDescendantsWithoutContainers(containerId, elementContainerIds); // shortcut for previous target from element if it were saved

  var previous = (0, _container.getContainerPreviousTarget)(containerId, direction, element);

  if (previous && elements.indexOf(previous) !== -1) {
    return previous;
  } // `spotlightOverflow` is a private, and likely temporary, API to allow a component within an
  // spotlight container with `overflow: true` to be treated as if it were outside of the
  // container. The result is that the candidates, `elements` are filtered by the bounds of the
  // overflow container effectively hiding those that have overflowed and are visually hidden.
  //
  // Currently only used by moonstone/Scroller.Scrollbar as a means to allow 5-way navigation to
  // escape the Scrollable from paging controls rather than focusing contents that are out of view


  if (element.dataset.spotlightOverflow === 'ignore') {
    boundingRect = getOverflowContainerRect(containerId) || boundingRect;
  }

  var elementRects = filterRects((0, _utils.getRects)(elements), boundingRect);
  var next = null;

  var _loop4 = function _loop4() {
    var overlappingContainerId = getContainerContainingRect(elementRects, elementRect); // if the next element is a container AND the current element is *visually* contained within
    // one of the candidate elements, we need to ignore container `enterTo` preferences and
    // retrieve its spottable descendants and try to navigate to them.

    if (overlappingContainerId) {
      next = getTargetInContainerByDirectionFromElement(direction, overlappingContainerId, element, elementRect, elementContainerIds, boundingRect);

      if (!next) {
        // filter out the container and try again
        elementRects = elementRects.filter(function (rect) {
          return rect.element.dataset.spotlightId !== overlappingContainerId;
        });
        return "continue";
      } // found a target so break out and return


      return "break";
    } // try to navigate from element to one of the candidates in containerId


    next = (0, _navigate["default"])(elementRect, direction, elementRects, (0, _container.getContainerConfig)(containerId)); // if we match a container,

    if (next && (0, _container.isContainer)(next)) {
      var nextContainerId = next.dataset.spotlightId; // need to cache this reference so we can filter it out later if necessary

      var lastNavigated = next; // and it is restricted, return its target

      if (isRestrictedContainer(nextContainerId)) {
        next = getTargetByContainer(nextContainerId);
      } else {
        // otherwise, recurse into it
        next = getTargetInContainerByDirectionFromElement(direction, nextContainerId, element, elementRect, elementContainerIds, getOverflowContainerRect(nextContainerId) || boundingRect);
      }

      if (!next) {
        elementRects = elementRects.filter(function (rect) {
          return rect.element !== lastNavigated;
        });
        return "continue";
      }
    } // If we've met every condition and haven't explicitly retried the search via `continue`,
    // break out and return


    return "break";
  };

  _loop3: while (elementRects.length > 0) {
    var _ret2 = _loop4();

    switch (_ret2) {
      case "continue":
        continue;

      case "break":
        break _loop3;
    }
  }

  return next;
}

function getTargetByDirectionFromElement(direction, element) {
  var extSelector = element.getAttribute('data-spot-' + direction);

  if (typeof extSelector === 'string') {
    return getTargetBySelector(extSelector);
  }

  var elementRect = (0, _utils.getRect)(element);
  return (0, _container.getNavigableContainersForNode)(element).reduceRight(function (result, containerId, index, elementContainerIds) {
    result = result || getTargetInContainerByDirectionFromElement(direction, containerId, element, elementRect, elementContainerIds);

    if (!result) {
      result = getLeaveForTarget(containerId, direction); // To support a `leaveFor` configuration with navigation disallowed in the current
      // `direction`, we return the current element to prevent further searches for a
      // target in this reduction.

      if (result === false) {
        result = element;
      }
    }

    return result;
  }, null);
}

function getTargetByDirectionFromPosition(direction, position, containerId) {
  var pointerRect = (0, _utils.getPointRect)(position);
  return (0, _container.getNavigableContainersForNode)((0, _container.getContainerNode)(containerId)).reduceRight(function (result, id, index, elementContainerIds) {
    return result || getTargetInContainerByDirectionFromPosition(direction, id, pointerRect, elementContainerIds);
  }, null);
}
/**
 * Returns the target identified by the selector configured for the container identified by
 * `containerId` for the given `direction`. If the selector is an empty string, the method returns
 * `false` indicating that navigation isn't allowed out of the container in that direction.
 *
 * @param   {String}        containerId  Identifier for a container
 * @param   {String}        direction    Direction to navigate (up, down, left, right)
 *
 * @returns {Node|Boolean}               Target, if found, or `false` if navigation is disallowed
 * @private
 */


function getLeaveForTarget(containerId, direction) {
  var config = (0, _container.getContainerConfig)(containerId);

  if (config) {
    var target = config.restrict !== 'self-only' && config.leaveFor && config.leaveFor[direction];

    if (typeof target === 'string') {
      if (target === '') {
        return false;
      }

      return getTargetBySelector(target);
    }

    var nextContainerIds = (0, _container.getContainersForNode)(target);

    if ((0, _container.isNavigable)(target, (0, _last["default"])(nextContainerIds))) {
      return target;
    }
  }

  return null;
}

function getNavigableTarget(target) {
  if (target === document) return null;
  var parent;

  while (target && ((0, _container.isContainer)(target) || !isFocusable(target))) {
    parent = target.parentNode;
    target = parent === document ? null : parent; // calling isNavigable on document is problematic
  }

  return target;
}

/***/ }),

/***/ "./node_modules/@enact/spotlight/src/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/spotlight/src/utils.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getContainerRect = getContainerRect;
exports.getPointRect = getPointRect;
exports.getRect = getRect;
exports.getRects = getRects;
exports.parseSelector = parseSelector;
exports.matchSelector = exports.intersects = exports.contains = void 0;

var _curry = _interopRequireDefault(__webpack_require__(/*! ramda/src/curry */ "./node_modules/ramda/src/curry.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "./node_modules/warning/browser.js"));

var _container = __webpack_require__(/*! ./container */ "./node_modules/@enact/spotlight/src/container.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var elementMatchesSelector = function elementMatchesSelector(selector) {
  var matchedNodes = (this.parentNode || this.document).querySelectorAll(selector);
  return [].slice.call(matchedNodes).indexOf(this) >= 0;
};

if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
  elementMatchesSelector = window.Element.prototype.matches || window.Element.prototype.matchesSelector || window.Element.prototype.mozMatchesSelector || window.Element.prototype.webkitMatchesSelector || window.Element.prototype.msMatchesSelector || window.Element.prototype.oMatchesSelector || elementMatchesSelector;
}

var matchSelector = (0, _curry["default"])(function (selector, elem) {
  if (typeof selector === 'string') {
    return elementMatchesSelector.call(elem, selector);
  } else if (_typeof(selector) === 'object' && selector.length) {
    return selector.indexOf(elem) >= 0;
  } else if (_typeof(selector) === 'object' && selector.nodeType === 1) {
    return elem === selector;
  }

  return false;
});
exports.matchSelector = matchSelector;

function parseSelector(selector) {
  var result = [];

  try {
    if (typeof selector === 'string') {
      result = [].slice.call(document.querySelectorAll(selector));
    } else if (_typeof(selector) === 'object' && selector.length) {
      result = [].slice.call(selector);
    } else if (_typeof(selector) === 'object' && selector.nodeType === 1) {
      result = [selector];
    }
  } catch (ex) {
     true ? (0, _warning["default"])(true, "parseSelector failed for selector: ".concat(selector)) : undefined;
  }

  return result;
}

var testIntersection = function testIntersection(type, containerRect, elementRect) {
  var L = containerRect.left,
      R = containerRect.right,
      T = containerRect.top,
      B = containerRect.bottom;
  var l = elementRect.left,
      r = elementRect.right,
      t = elementRect.top,
      b = elementRect.bottom;
  var right = r >= L && r <= R;
  var left = l >= L && l <= R;
  var top = t >= T && t <= B;
  var bottom = b >= T && b <= B;

  if (type === 'intersects') {
    var aroundV = t < T && b > B;
    var aroundH = l < L && r > R;
    return (top || bottom || aroundV) && (left || right || aroundH);
  } else if (type === 'contains') {
    return top && bottom && left && right;
  }

  return true;
};

var intersects = (0, _curry["default"])(function (containerRect, elementRect) {
  return testIntersection('intersects', containerRect, elementRect);
});
exports.intersects = intersects;
var contains = (0, _curry["default"])(function (containerRect, elementRect) {
  return testIntersection('contains', containerRect, elementRect);
});
exports.contains = contains;

function getRect(elem) {
  var cr = elem.getBoundingClientRect();
  var rect = {
    left: cr.left,
    top: cr.top,
    width: cr.width,
    height: cr.height
  };
  rect.element = elem;
  rect.right = rect.left + rect.width;
  rect.bottom = rect.top + rect.height;
  rect.center = {
    x: rect.left + Math.floor(rect.width / 2),
    y: rect.top + Math.floor(rect.height / 2)
  };
  rect.center.left = rect.center.right = rect.center.x;
  rect.center.top = rect.center.bottom = rect.center.y;
  return rect;
}

function getPointRect(position) {
  var x = position.x,
      y = position.y;
  return {
    left: x,
    top: y,
    width: 0,
    height: 0,
    right: x,
    bottom: y,
    center: {
      x: x,
      y: y,
      left: x,
      right: x,
      top: y,
      bottom: y
    }
  };
}

function getRects(candidates) {
  if (candidates && candidates.length > 0) {
    return candidates.map(getRect);
  }

  return [];
}

function getViewportRect() {
  var _window = window,
      width = _window.innerWidth,
      height = _window.innerHeight;
  var x = width / 2;
  var y = height / 2;
  return {
    left: 0,
    top: 0,
    width: width,
    height: height,
    right: width,
    bottom: height,
    center: {
      x: x,
      y: y,
      left: x,
      right: x,
      top: y,
      bottom: y
    }
  };
}

function getContainerRect(containerId) {
  var containerNode = (0, _container.getContainerNode)(containerId);

  if (!containerNode) {
    return null;
  }

  if (containerNode === document) {
    return getViewportRect();
  }

  return getRect(containerNode);
}

/***/ }),

/***/ "./node_modules/@enact/spotlight/styles/debug.less":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/spotlight/styles/debug.less ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin

/***/ }),

/***/ "./node_modules/@enact/ui/Button/Button.js":
/*!*************************************************!*\
  !*** ./node_modules/@enact/ui/Button/Button.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonDecorator = exports.ButtonBase = exports.Button = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _Touchable = _interopRequireDefault(__webpack_require__(/*! ../Touchable */ "./node_modules/@enact/ui/Touchable/Touchable.js"));

var _ButtonModule = _interopRequireDefault(__webpack_require__(/*! ./Button.module.css */ "./node_modules/@enact/ui/Button/Button.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * A basic button component structure without any behaviors applied to it.
 *
 * @class ButtonBase
 * @memberof ui/Button
 * @ui
 * @public
 */


var ButtonBase = (0, _kind["default"])({
  name: 'ui:Button',
  propTypes:
  /** @lends ui/Button.ButtonBase.prototype */
  {
    children: _propTypes2["default"].node.isRequired,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `button` - The root component class
     * * `bg` - The background node of the button
     * * `client` - The content node of the button
     * * `icon` - The icon node, when `icon` is set
     * * `minWidth` - Applied when `minWidth` prop is `true`
     * * `pressed` - Applied when `pressed` prop is `true`
     * * `selected` - Applied when `selected` prop is `true`
     * * `small` - Applied when `small` prop is `true`
     *
     * @type {Object}
     * @public
     */
    css: _propTypes2["default"].object,

    /**
     * Applies the `disabled` class.
     *
     * When `true`, the button is shown as disabled.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes2["default"].bool,

    /**
     * The icon displayed within the Button.
     *
     * The icon will be displayed before the natural reading order of the text, regardless
     * of locale. Any string that is valid for its {@link ui/Button.Button.iconComponent} is
     * valid here. If `icon` is specified as a string and `iconButton` is undefined, the icon is
     * not rendered.
     *
     * This also supports a custom icon, in the form of a DOM node or a Component,
     * with the caveat that if you supply a custom icon, you are responsible for sizing and
     * locale positioning of the custom component.
     *
     * @type {Node}
     * @public
     */
    icon: _propTypes2["default"].node,

    /**
     * The component used to render the [icon]{@link ui/Button.ButtonBase.icon}.
     *
     * This component will receive the `small` property set on the Button as well as the `icon`
     * class to customize its styling. If [icon]{@link ui/Button.ButtonBase.icon} is not a
     * string, this property is not used.
     *
     * @type {Component}
     * @public
     */
    iconComponent: _propTypes["default"].component,

    /**
     * Enforces a minimum width for the component.
     *
     * Applies the `minWidth` CSS class which can be customized by
     * [theming]{@link /docs/developer-guide/theming/}.
     *
     * @type {Boolean}
     * @default true
     * @public
     */
    minWidth: _propTypes2["default"].bool,

    /**
     * Indicates the component is depressed.
     *
     * Applies the `pressed` CSS class which can be customized by
     * [theming]{@link /docs/developer-guide/theming/}.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    pressed: _propTypes2["default"].bool,

    /**
     * Indicates the component is selected.
     *
     * Applies the `selected` CSS class which can be customized by
     * [theming]{@link /docs/developer-guide/theming/}.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    selected: _propTypes2["default"].bool,

    /**
     * Reduces the size of the component.
     *
     * Applies the `small` CSS class which can be customized by
     * [theming]{@link /docs/developer-guide/theming/}.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    small: _propTypes2["default"].bool
  },
  defaultProps: {
    disabled: false,
    minWidth: true,
    pressed: false,
    selected: false,
    small: false
  },
  styles: {
    css: _ButtonModule["default"],
    className: 'button',
    publicClassNames: true
  },
  computed: {
    className: function className(_ref) {
      var minWidth = _ref.minWidth,
          pressed = _ref.pressed,
          selected = _ref.selected,
          small = _ref.small,
          styler = _ref.styler;
      return styler.append({
        pressed: pressed,
        small: small,
        minWidth: minWidth,
        selected: selected
      });
    },
    icon: function icon(_ref2) {
      var css = _ref2.css,
          _icon = _ref2.icon,
          Icon = _ref2.iconComponent,
          small = _ref2.small;
      return typeof _icon === 'string' && Icon ? _react["default"].createElement(Icon, {
        small: small,
        className: css.icon
      }, _icon) : _icon;
    }
  },
  render: function render(_ref3) {
    var children = _ref3.children,
        css = _ref3.css,
        disabled = _ref3.disabled,
        icon = _ref3.icon,
        rest = _objectWithoutProperties(_ref3, ["children", "css", "disabled", "icon"]);

    delete rest.iconComponent;
    delete rest.minWidth;
    delete rest.pressed;
    delete rest.selected;
    delete rest.small;
    return _react["default"].createElement("div", Object.assign({
      role: "button"
    }, rest, {
      "aria-disabled": disabled,
      disabled: disabled
    }), _react["default"].createElement("div", {
      className: css.bg
    }), _react["default"].createElement("div", {
      className: css.client
    }, icon, children));
  }
});
/**
 * A higher-order component that adds touch support to a [ButtonBase]{@link ui/Button.ButtonBase}.
 *
 * @hoc
 * @memberof ui/Button
 * @mixes ui/Touchable.Touchable
 * @public
 */

exports.ButtonBase = ButtonBase;
var ButtonDecorator = (0, _Touchable["default"])({
  activeProp: 'pressed'
});
/**
 * A minimally-styled button component with touch support.
 *
 * @class Button
 * @extends ui/Button.ButtonBase
 * @memberof ui/Button
 * @mixes ui/Button.ButtonDecorator
 * @ui
 * @public
 */

exports.ButtonDecorator = ButtonDecorator;
var Button = ButtonDecorator(ButtonBase);
exports.Button = Button;
var _default = Button;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Button/Button.module.css":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/ui/Button/Button.module.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"button":"Button_button__1qfFh","bg":"Button_bg__3ldMN","client":"Button_client__OaRAg","icon":"Button_icon__1VCME","minWidth":"Button_minWidth__2NxO7","small":"Button_small__351qc","selected":"Button_selected__l4EKQ","pressed":"Button_pressed__1Wnu8"};

/***/ }),

/***/ "./node_modules/@enact/ui/Cancelable/Cancelable.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/ui/Cancelable/Cancelable.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "addCancelHandler", {
  enumerable: true,
  get: function get() {
    return _cancelHandler.addCancelHandler;
  }
});
Object.defineProperty(exports, "removeCancelHandler", {
  enumerable: true,
  get: function get() {
    return _cancelHandler.removeCancelHandler;
  }
});
exports.Cancelable = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _keymap = __webpack_require__(/*! @enact/core/keymap */ "./node_modules/@enact/core/keymap/index.js");

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _cancelHandler = __webpack_require__(/*! ./cancelHandler */ "./node_modules/@enact/ui/Cancelable/cancelHandler.js");

var _modalHandler = __webpack_require__(/*! ./modalHandler */ "./node_modules/@enact/ui/Cancelable/modalHandler.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Default config for {@link ui/Cancelable.Cancelable}
 *
 * @memberof ui/Cancelable.Cancelable
 * @hocconfig
 */


var defaultConfig = {
  /**
   * Called when a cancel action is invoked by the user.
   *
   * If it is a string, the cancel handler will attempt to invoke a function passed as a prop of
   * that name. If it is a function, that function will be called with the current props as the
   * only argument.
   *
   * If the function handles the cancel action, it should call `stopPropagation()` on the provided
   * event object prevent container or `modal` Cancelable instances from also handling the action.
   *
   * @type {String|Function}
   * @required
   * @memberof ui/Cancelable.Cancelable.defaultConfig
   */
  onCancel: null,

  /**
   * Subscribes to cancel events globally for this instance.
   *
   * When `true`, the `Cancelable` instance will handle cancel events globally that successfully
   * bubble up to `window` regardless of which component is focused.
   *
   * `modal` cancel handlers are processed in reverse of the order they are created such that the
   * innermost instance (in terms of the component hierarchy) have the first opportunity to handle
   * the event before its container components.
   *
   * @type {String}
   * @default false
   * @memberof ui/Cancelable.Cancelable.defaultConfig
   */
  modal: false,

  /**
   * The component that will contain the wrapped component.
   *
   * When set, the wrapped component will be contained within an instance of `component`. This may
   * be necessary if the props passed to the wrapped component are not placed on the root element.
   *
   * @type {Component}
   * @default null
   * @memberof ui/Cancelable.Cancelable.defaultConfig
   */
  component: null
}; // Add keymap for escape key

(0, _keymap.add)('cancel', 27);
/**
 * A higher-order component that adds support to a component to handle cancel actions.
 *
 * The cancel event may be handled either by a design-time config function or a run-time prop
 * function. If the component handles the event and wants to prevent upstream components from also
 * handling the event, the callback should invoke `stopPropagation()` on the event object.
 *
 * Usage of config function:
 * ```
 * import Cancelable from '@enact/ui/Cancelable';
 *
 * const CancelableComponent = Cancelable(
 *   {cancel: function (ev, props) {
 *     // Can inspect either the `onCancel` event, `ev`, and/or the `props` to determine how
 *     // to handle the event (e.g. invoking an event handler from `props`).
 *
 *     // Stop upstream instances of Cancelable from handling the event
 *     ev.stopPropagaion();
 *   }},
 *   MyComponent
 * );
 * ```
 *
 * Usage of prop function:
 * ```
 * import Cancelable from '@enact/ui/Cancelable';
 *
 * const CancelableComponent = Cancelable(
 *   // When a cancel action is received and a handler function exists for the prop
 *   // `onCancel`, it will be invoked and passed the `onCancel` event object.
 *   {cancel: 'onCancel'},
 *   MyComponent
 * );
 * ```
 *
 * @class Cancelable
 * @memberof ui/Cancelable
 * @hoc
 * @public
 */

var Cancelable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var onCancel = config.onCancel,
      modal = config.modal,
      Component = config.component;
  !onCancel ?  true ? (0, _invariant["default"])(false, 'onCancel must be specified with Cancelable') : undefined : void 0;
  var onCancelIsString = typeof onCancel === 'string';
  var onCancelIsFunction = typeof onCancel === 'function';

  var dispatchCancelToConfig = function dispatchCancelToConfig(ev, props) {
    // by default, we return false which allows event propagation because it will "break" the
    // handler chain and not call `stop` and `stopImmediate` below
    var stopped = false;
    var cancelEvent = {
      type: 'onCancel',
      stopPropagation: function stopPropagation() {
        stopped = true;
      }
    };

    if (onCancelIsString && typeof props[onCancel] === 'function') {
      // use the custom event name from the config
      cancelEvent.type = onCancel;
      props[onCancel](cancelEvent);
    } else if (onCancelIsFunction) {
      onCancel(cancelEvent, props);
    }

    return stopped;
  };

  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));
      _this.handle = _handle.handle.bind(_assertThisInitialized(_this));
      _this.handleCancel = _this.handle(_cancelHandler.forCancel, (0, _handle.forward)('onCancel'), dispatchCancelToConfig, _handle.stop, _handle.stopImmediate);
      _this.handleKeyUp = _this.handle((0, _handle.forward)('onKeyUp'), // nesting handlers for DRYness. note that if any conditions return false in
      // this.handleCancel(), this handler chain will stop too
      _this.handleCancel);
      _this.isFirstRender = true;
      return _this;
    }

    _createClass(_class, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (modal) {
          (0, _modalHandler.removeModal)(this);
        }
      }
    }, {
      key: "renderWrapped",
      value: function renderWrapped(props) {
        return _react["default"].createElement(Component, {
          onKeyUp: this.handleKeyUp
        }, _react["default"].createElement(Wrapped, props));
      }
    }, {
      key: "renderUnwrapped",
      value: function renderUnwrapped(props) {
        return _react["default"].createElement(Wrapped, Object.assign({}, props, {
          onKeyUp: this.handleKeyUp
        }));
      }
    }, {
      key: "renderModal",
      value: function renderModal(props) {
        return _react["default"].createElement(Wrapped, props);
      }
    }, {
      key: "render",
      value: function render() {
        var props = Object.assign({}, this.props);
        delete props.onCancel;
        delete props[onCancel];

        if (this.isFirstRender && modal) {
          (0, _modalHandler.addModal)(this);
          this.isFirstRender = false;
        }

        return modal && this.renderModal(props) || Component && this.renderWrapped(props) || this.renderUnwrapped(props);
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'Cancelable', _class.propTypes =
  /** @lends ui/Cancelable.Cancelable.prototype */
  {
    /**
     * Called when a cancel action is received.
     *
     * This callback is invoked for every cancel action before the config or prop handler is
     * invoked.
     *
     * @type {Function}
     * @public
     */
    onCancel: _propTypes["default"].func
  }, _temp;
});
exports.Cancelable = Cancelable;
var _default = Cancelable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Cancelable/cancelHandler.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/ui/Cancelable/cancelHandler.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeCancelHandler = exports.forCancel = exports.addCancelHandler = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");
/**
 * Array of cancel handlers. If any of these returns `false`, `forCancel` will return `false`;
 *
 * @type {Function[]}
 * @private
 */


var cancelHandlers = [// always support the Escape key
(0, _handle.forKey)('cancel')];
/**
 * Event handler compatible with {@link core/handle} that allows the handler chain to
 * continue for any cancel event. A cancel event is an Escape key press by default but can be
 * extended adding additional handlers using
 * {@link ui/Cancelable/cancelHandler.addCancelHandler}.
 *
 * @function
 * @memberof ui/Cancelable
 * @param  {Object} ev Event object
 * @returns {Boolean} `true` to stop the handler chain
 * @private
 */

var forCancel = function forCancel(ev) {
  var ok = false;
  cancelHandlers.forEach(function (fn) {
    // if any handler returns true, we don't need to call any more
    ok = ok || fn(ev);
  });
  return ok;
};
/**
 * Adds an event handler to filter cancel events.
 *
 * @function
 * @memberof ui/Cancelable
 * @param {Function} handler	Function that will receive the event and should return `true` if
 *								the event is a cancel event.
 * @returns {undefined}
 * @public
 */


exports.forCancel = forCancel;

var addCancelHandler = function addCancelHandler(handler) {
  if (cancelHandlers.indexOf(handler) < 0) {
    cancelHandlers.push(handler);
  }
};
/**
 * Removes an event handler to filter cancel events
 *
 * @function
 * @memberof ui/Cancelable
 * @param {Function} handler A previously added filter function
 * @returns {undefined}
 * @public
 */


exports.addCancelHandler = addCancelHandler;

var removeCancelHandler = function removeCancelHandler(handler) {
  var index = cancelHandlers.indexOf(handler);

  if (index >= 0) {
    cancelHandlers.splice(index, 1);
  }
};

exports.removeCancelHandler = removeCancelHandler;

/***/ }),

/***/ "./node_modules/@enact/ui/Cancelable/modalHandler.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/ui/Cancelable/modalHandler.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeModal = exports.addModal = void 0;

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js"); // Contains references to modal Cancelable instances in LIFO order to allow multiple modals to be
// displayed with the last having the first priority to handle the cancel.


var modals = [];
/**
 * Dispatches the cancel event to each modal `Cancelable` instance. Consistent with
 * {@link core/handle.handle}, returning a `true` value means the event was handled and anything
 * falsy allows the event to pass to the next handler.
 *
 * @param	{Object}	ev	Event payload
 *
 * @returns	{undefined}
 * @private
 */

var dispatchToModals = function dispatchToModals(ev) {
  for (var i = modals.length - 1, handled = false; !handled && i >= 0; i--) {
    handled = modals[i].handleCancel(ev);
  }
};
/**
 * Adds a modal `Cancelable` instance to the list of modals.
 *
 * @param	{ui/Cancelable.Cancelable}	obj	Cancelable instance
 *
 * @returns	{undefined}
 * @private
 */


var addModal = function addModal(obj) {
  if (modals.push(obj) === 1 && typeof window !== 'undefined') {
    (0, _dispatcher.on)('keyup', dispatchToModals, window);
  }
};
/**
 * Removes a modal `Cancelable` instance from the list of modals.
 *
 * @param	{ui/Cancelable.Cancelable}	obj	Cancelable instance
 *
 * @returns	{undefined}
 * @private
 */


exports.addModal = addModal;

var removeModal = function removeModal(obj) {
  var index = modals.indexOf(obj);

  if (index >= 0) {
    modals.splice(index, 1);
  }

  if (modals.length === 0 && typeof window !== 'undefined') {
    (0, _dispatcher.off)('keyup', dispatchToModals, window);
  }
};

exports.removeModal = removeModal;

/***/ }),

/***/ "./node_modules/@enact/ui/ComponentOverride/ComponentOverride.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@enact/ui/ComponentOverride/ComponentOverride.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComponentOverride = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * Utility to either create or clone a component instance with the given set of props.
 *
 * `ComponentOverride` can be used to support props that either accept a type, (e.g. `Button`) or an
 * element (e.g. `<Button customProp="value" />`) and return a new element which includes the
 * remaining props specified.
 *
 * Example:
 * ```
 * const LabeledIconButton = ({iconComponent, label, ...rest}) => {
 *   return (
 *     <div {...rest}>
 *       <ComponentOverride
 *         component={iconComponent}
 *         icon="house"
 *       />
 *       <span>{label}</span>
 *     </div>
 *   );
 * };
 *
 * // Usage
 *
 * // Only the props defined by LabeledIconButton will be passed to CustomIcon
 * <LabeledIconButton
 *   label="Home"
 *   iconComponent={CustomIcon}
 * />
 *
 * // The color prop along with props defined by LabeledIconButton will be passed to CustomIcon
 * <LabeledIconButton
 *   label="Home"
 *   iconComponent={
 *     <CustomIcon color="green" />
 *   }
 * />
 * ```
 *
 * @class
 * @memberof ui/ComponentOverride
 * @ui
 * @public
 */


var ComponentOverride = function ComponentOverride(_ref) {
  var Component = _ref.component,
      props = _objectWithoutProperties(_ref, ["component"]);

  return Component && ((typeof Component === 'function' || typeof Component === 'string') && _react["default"].createElement(Component, props) || _react["default"].isValidElement(Component) && _react["default"].cloneElement(Component, props)) || null;
};

exports.ComponentOverride = ComponentOverride;
var _default = ComponentOverride;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/FloatingLayer/FloatingLayer.js":
/*!***************************************************************!*\
  !*** ./node_modules/@enact/ui/FloatingLayer/FloatingLayer.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FloatingLayerBase = exports.FloatingLayer = exports["default"] = void 0;

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js");

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));

var _Cancelable = _interopRequireDefault(__webpack_require__(/*! ../Cancelable */ "./node_modules/@enact/ui/Cancelable/Cancelable.js"));

var _FloatingLayerDecorator = __webpack_require__(/*! ./FloatingLayerDecorator */ "./node_modules/@enact/ui/FloatingLayer/FloatingLayerDecorator.js");

var _Scrim = _interopRequireDefault(__webpack_require__(/*! ./Scrim */ "./node_modules/@enact/ui/FloatingLayer/Scrim.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var forwardWithType = function forwardWithType(type) {
  return (0, _handle.adaptEvent)(function () {
    return {
      type: type
    };
  }, (0, _handle.forward)(type));
};

var forwardDismiss = forwardWithType('onDismiss');
var forwardClose = forwardWithType('onClose');
var forwardOpen = forwardWithType('onOpen');
/**
 * A component that creates an entry point to the new render tree.
 *
 * This is used for modal components such as popups.
 *
 * @class FloatingLayerBase
 * @memberof ui/FloatingLayer
 * @ui
 * @public
 */

var FloatingLayerBase =
/*#__PURE__*/
function (_React$Component) {
  _inherits(FloatingLayerBase, _React$Component);

  function FloatingLayerBase(props) {
    var _this;

    _classCallCheck(this, FloatingLayerBase);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(FloatingLayerBase).call(this, props));
    _this.handleNotify = (0, _handle.oneOf)([(0, _handle.forEventProp)('action', 'close'), (0, _handle.call)('handleClose')], [(0, _handle.forEventProp)('action', 'mount'), (0, _handle.call)('setFloatingLayer')]).bind(_assertThisInitialized(_this));
    _this.handleClose = (0, _handle.handle)((0, _handle.forProp)('open', true), forwardDismiss).bind(_assertThisInitialized(_this));
    _this.handleClick = (0, _handle.handle)((0, _handle.forProp)('noAutoDismiss', false), (0, _handle.forProp)('open', true), (0, _handle.forward)('onDismiss')).bind(_assertThisInitialized(_this));

    _this.handleScroll = function (ev) {
      var currentTarget = ev.currentTarget;
      currentTarget.scrollTop = 0;
      currentTarget.scrollLeft = 0;
    };

    _this.stopPropagation = function (ev) {
      ev.nativeEvent.stopImmediatePropagation();

      if (_this.props.children.props.onClick) {
        _this.props.children.props.onClick();
      }
    };

    _this.node = null;
    _this.state = {
      nodeRendered: false
    };
    return _this;
  }

  _createClass(FloatingLayerBase, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      // Must register first in order to obtain the floating layer node reference before tryinging
      // to render into it
      if (this.context && typeof this.context === 'function') {
        this.controller = this.context(this.handleNotify.bind(this));
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      var _this$props = this.props,
          open = _this$props.open,
          scrimType = _this$props.scrimType;

      if (prevProps.open && !open) {
        // when open changes to false, forward close
        forwardClose(null, this.props);
      } else if (!prevProps.open && open && !this.state.nodeRendered) {
        // when open changes to true and node hasn't rendered, render it
        this.renderNode();
      } else if (this.state.nodeRendered && (!prevState.nodeRendered || prevState.nodeRendered && open && !prevProps.open)) {
        // when node has been rendered and either it was just rendered in this update cycle or
        // the open prop changed in this cycle, forward open
        forwardOpen(null, this.props);
      }

      if (scrimType === 'none') {
        if (!prevProps.open && open) {
          (0, _dispatcher.on)('click', this.handleClick);
        } else if (prevProps.open && !open) {
          (0, _dispatcher.off)('click', this.handleClick);
        }
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.node && this.floatingLayer) {
        this.floatingLayer.removeChild(this.node);
        this.node = null;
        this.floatingLayer = null;
      }

      (0, _dispatcher.off)('click', this.handleClick);

      if (this.controller) {
        this.controller.unregister();
      }
    }
  }, {
    key: "setFloatingLayer",
    value: function setFloatingLayer(_ref) {
      var floatingLayer = _ref.floatingLayer;
      var isNewLayer = !this.floatingLayer && floatingLayer;
      this.floatingLayer = floatingLayer; // the first time we have a valid floating layer container and this instance is set to open,
      // we need to render the layer.

      if (isNewLayer && this.props.open && !this.state.nodeRendered) {
        this.renderNode();
      }
    }
  }, {
    key: "renderNode",
    value: function renderNode() {
      var floatLayerClassName = this.props.floatLayerClassName;
      if (this.node) return;
      !this.floatingLayer ?  true ? (0, _invariant["default"])(false, 'FloatingLayer cannot be used outside the subtree of a FloatingLayerDecorator') : undefined : void 0;
      this.node = document.createElement('div');
      this.node.className = floatLayerClassName;
      this.node.style.zIndex = 100;
      this.floatingLayer.appendChild(this.node);
      (0, _dispatcher.on)('scroll', this.handleScroll, this.node); // render children when this.node is inserted in the DOM tree.

      this.setState({
        nodeRendered: true
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          children = _this$props2.children,
          open = _this$props2.open,
          scrimType = _this$props2.scrimType,
          rest = _objectWithoutProperties(_this$props2, ["children", "open", "scrimType"]);

      delete rest.floatLayerClassName;
      delete rest.floatLayerId;
      delete rest.noAutoDismiss;
      delete rest.onClose;
      delete rest.onDismiss;
      delete rest.onOpen;

      if (open && this.state.nodeRendered) {
        return _reactDom["default"].createPortal(_react["default"].createElement("div", rest, scrimType !== 'none' ? _react["default"].createElement(_Scrim["default"], {
          type: scrimType,
          onClick: this.handleClick
        }) : null, _react["default"].cloneElement(children, {
          onClick: this.stopPropagation
        })), this.node);
      }

      return null;
    }
  }]);

  return FloatingLayerBase;
}(_react["default"].Component);

exports.FloatingLayerBase = FloatingLayerBase;
FloatingLayerBase.displayName = 'FloatingLayer';
FloatingLayerBase.propTypes =
/** @lends ui/FloatingLayer.FloatingLayerBase.prototype */
{
  /**
   * CSS classes for FloatingLayer.
   *
   * @type {String}
   * @default 'enact-fit enact-clip enact-untouchable'
   * @public
   */
  floatLayerClassName: _propTypes["default"].string,

  /**
   * Element id for floating layer.
   *
   * @type {String}
   * @default 'floatLayer'
   * @public
   */
  floatLayerId: _propTypes["default"].string,

  /**
   * Prevents FloatingLayer from hiding when the user presses `ESC` key.
   *
   * @type {Boolean}
   * @default false
   * @public
   */
  noAutoDismiss: _propTypes["default"].bool,

  /**
   * Called when floating layer is closed.
   *
   * @type {Function}
   * @public
   */
  onClose: _propTypes["default"].func,

  /**
   * Called when a closing action is invoked.
   *
   * These actions may include pressing cancel/back (e.g. `ESC`) key or programmatically closing
   * by `FloatingLayerDecorator`. When cancel key is pressed, the function will only invoke if
   * `noAutoDismiss` is set to `false`.
   *
   * @type {Function}
   * @public
   */
  onDismiss: _propTypes["default"].func,

  /**
   * Called when floating layer is opened. It will only be invoked for the first render.
   *
   * @type {Function}
   * @public
   */
  onOpen: _propTypes["default"].func,

  /**
   * Renders the floating layer and its components.
   *
   * @type {Boolean}
   * @default false
   * @public
   */
  open: _propTypes["default"].bool,

  /**
   * The scrim type that overlays FloatingLayer.
   *
   * It can be either `'transparent'`, `'translucent'`, or `'none'`.
   *
   * @type {String}
   * @default 'translucent'
   * @public
   */
  scrimType: _propTypes["default"].oneOf(['transparent', 'translucent', 'none'])
};
FloatingLayerBase.contextType = _FloatingLayerDecorator.FloatingLayerContext;
FloatingLayerBase.defaultProps = {
  floatLayerClassName: 'enact-fit enact-clip enact-untouchable',
  floatLayerId: 'floatLayer',
  noAutoDismiss: false,
  open: false,
  scrimType: 'translucent'
};
var handleCancel = (0, _handle.handle)( // can't use forProp safely since either could be undefined ~= false
function (ev, _ref2) {
  var open = _ref2.open,
      noAutoDismiss = _ref2.noAutoDismiss,
      onDismiss = _ref2.onDismiss;
  return open && !noAutoDismiss && onDismiss;
}, forwardDismiss, _handle.stop);
/**
 * FloatingLayer that mixes {@link ui/Cancelable.Cancelable} to handle FloatingLayer dismissal.
 *
 * This is used for modal components such as popups.
 *
 * @class FloatingLayer
 * @memberof ui/FloatingLayer
 * @ui
 * @extends ui/FloatingLayer.FloatingLayerBase
 * @mixes ui/Cancelable.Cancelable
 * @public
 */

var FloatingLayer = (0, _Cancelable["default"])({
  modal: true,
  onCancel: handleCancel
}, FloatingLayerBase);
exports.FloatingLayer = FloatingLayer;
var _default = FloatingLayer;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/FloatingLayer/FloatingLayerDecorator.js":
/*!************************************************************************!*\
  !*** ./node_modules/@enact/ui/FloatingLayer/FloatingLayerDecorator.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FloatingLayerDecorator = exports.FloatingLayerContext = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _Registry = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/Registry */ "./node_modules/@enact/core/internal/Registry/Registry.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var forAction = (0, _handle.forEventProp)('action');

var FloatingLayerContext = _react["default"].createContext();
/**
 * Default config for {@link ui/FloatingLayer.FloatingLayerDecorator}.
 *
 * @memberof ui/FloatingLayer.FloatingLayerDecorator
 * @hocconfig
 */


exports.FloatingLayerContext = FloatingLayerContext;
var defaultConfig = {
  /**
   * Element Id of the floatLayer
   *
   * @type {String}
   * @default 'floatLayer'
   * @public
   * @memberof ui/FloatingLayer.FloatingLayerDecorator.defaultConfig
   */
  floatLayerId: 'floatLayer',

  /**
   * Class name to be applied to wrapped component.
  	 * It can be used when you want to only apply
   * certain styles to the wrapped component and not to the float layer.
   *
   * @type {String}
   * @default ''
   * @public
   * @memberof ui/FloatingLayer.FloatingLayerDecorator.defaultConfig
   */
  wrappedClassName: ''
};
/**
 * A higher-order component that adds a FloatingLayer adjacent to wrapped component.
 *
 * @class FloatingLayerDecorator
 * @memberof ui/FloatingLayer
 * @hoc
 * @public
 */

var FloatingLayerDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var floatLayerId = config.floatLayerId,
      wrappedClassName = config.wrappedClassName;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));

      _this.getFloatingLayer = function () {
        // FIXME: if a component that resides in the floating layer is rendered at the same time
        // as the floating layer, this.floatingLayer may not have been initialized yet since
        // componentDidMount runs inside-out. As a fallback, we search by id but this could
        // introduce issues (e.g. for duplicate layer ids).
        return _this.floatingLayer || typeof document !== 'undefined' && document.getElementById(floatLayerId) || null;
      };

      _this.handleNotify = (0, _handle.oneOf)([forAction('register'), (0, _handle.call)('notifyMount')], [forAction('closeAll'), (0, _handle.call)('handleCloseAll')]).bind(_assertThisInitialized(_this));

      _this.setFloatingLayer = function (node) {
        _this.floatingLayer = node;
      };

      _this.registry = _Registry["default"].create(_this.handleNotify);
      _this.floatingLayer = null;
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.notifyMount();
      }
    }, {
      key: "handleCloseAll",
      value: function handleCloseAll() {
        this.registry.notify({
          action: 'close'
        });
      }
    }, {
      key: "notifyMount",
      value: function notifyMount() {
        this.registry.notify({
          action: 'mount',
          floatingLayer: this.getFloatingLayer()
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            className = _this$props.className,
            rest = _objectWithoutProperties(_this$props, ["className"]);

        return _react["default"].createElement(FloatingLayerContext.Provider, {
          value: this.registry.register
        }, _react["default"].createElement("div", {
          className: className
        }, _react["default"].createElement(Wrapped, Object.assign({
          key: "floatWrapped"
        }, rest, {
          className: wrappedClassName
        })), _react["default"].createElement("div", {
          id: floatLayerId,
          key: "floatLayer",
          ref: this.setFloatingLayer
        })));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'FloatingLayerDecorator', _temp;
});
exports.FloatingLayerDecorator = FloatingLayerDecorator;
var _default = FloatingLayerDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/FloatingLayer/Scrim.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/FloatingLayer/Scrim.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Scrim = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _ScrimModule = _interopRequireDefault(__webpack_require__(/*! ./Scrim.module.css */ "./node_modules/@enact/ui/FloatingLayer/Scrim.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var transparentClassName = _ScrimModule["default"].scrim + ' enact-fit ' + _ScrimModule["default"].transparent;
var translucentClassName = _ScrimModule["default"].scrim + ' enact-fit ' + _ScrimModule["default"].translucent; // Stores references to any Scrim instances whose type is translucent to ensure that only the top-
// most Scrim is visible to avoid stacking scrims.

var scrimStack = [];
/**
 * Pushes a translucent scrim to the top of the stack and hiding the previously top
 *
 * @param {ui/FloatingLayer.Scrim} scrim A scrim instance to add
 * @returns {undefined}
 * @private
 */

function pushTranslucentScrim(scrim) {
  var last = scrimStack.length - 1;

  if (last >= 0) {
    // if there are other translucent scrims, hide the topmost one assuming the others have been
    // hidden correctly by previous calls
    scrimStack[last].hide();
  }

  scrimStack.push(scrim);
}
/**
 * Removes a translucent scrim from the stack. If the scrim was the top-most, removing it will show
 * the next scrim. If not, it will just be removed
 *
 * @param {ui/FloatingLayer.Scrim} scrim A scrim instance to remove
 * @returns {undefined}
 * @private
 */


function removeTranslucentScrim(scrim) {
  var index = scrimStack.indexOf(scrim);
  var last = scrimStack.length - 1;

  if (index === last) {
    // if scrim is the top of the stack (most likely case), show the one below it then pop it
    scrimStack.pop();

    if (scrimStack.length) {
      scrimStack[scrimStack.length - 1].show();
    }
  } else {
    // if it's in the middle of the stack, just remove it
    scrimStack.splice(index, 1);
  }
}
/**
 * {@link ui/FloatingLayer.Scrim} provides an overlay that will prevent taps from propagating
 * to the controls that it covers.
 *
 * @class Scrim
 * @memberof ui/FloatingLayer
 * @ui
 * @private
 */


var Scrim =
/*#__PURE__*/
function (_React$Component) {
  _inherits(Scrim, _React$Component);

  function Scrim(props) {
    var _this;

    _classCallCheck(this, Scrim);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Scrim).call(this, props));

    _this.show = function () {
      return _this.setState({
        visible: true
      });
    };

    _this.hide = function () {
      return _this.setState({
        visible: false
      });
    };

    _this.state = {
      visible: true
    };

    if (props.type === 'translucent') {
      pushTranslucentScrim(_assertThisInitialized(_this));
    }

    return _this;
  }

  _createClass(Scrim, [{
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.type === 'translucent' && this.props.type !== 'translucent') {
        removeTranslucentScrim(this);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.type === 'translucent') {
        removeTranslucentScrim(this);
      }
    }
  }, {
    key: "render",
    value: function render() {
      if (this.state.visible) {
        var _this$props = this.props,
            type = _this$props.type,
            rest = _objectWithoutProperties(_this$props, ["type"]);

        var className = type === 'transparent' ? transparentClassName : translucentClassName;
        return _react["default"].createElement("div", Object.assign({}, rest, {
          className: className
        }));
      }

      return null;
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props) {
      if (props.type !== 'translucent') {
        return {
          visible: true
        };
      }

      return null;
    }
  }]);

  return Scrim;
}(_react["default"].Component);

exports.Scrim = Scrim;
Scrim.propTypes =
/** @lends ui/FloatingLayer.Scrim.prototype */
{
  /**
   * Types of scrim. It can be either `'transparent'` or `'translucent'`.
   *
   * @type {String}
   * @default `translucent`
   * @public
   */
  type: _propTypes["default"].oneOf(['transparent', 'translucent'])
};
Scrim.defaultProps = {
  type: 'translucent'
};
var _default = Scrim;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/FloatingLayer/Scrim.module.css":
/*!***************************************************************!*\
  !*** ./node_modules/@enact/ui/FloatingLayer/Scrim.module.css ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"scrim":"Scrim_scrim__3k5Hp","translucent":"Scrim_translucent__3-BWJ"};

/***/ }),

/***/ "./node_modules/@enact/ui/FloatingLayer/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/FloatingLayer/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "FloatingLayer", {
  enumerable: true,
  get: function get() {
    return _FloatingLayer.FloatingLayer;
  }
});
Object.defineProperty(exports, "FloatingLayerBase", {
  enumerable: true,
  get: function get() {
    return _FloatingLayer.FloatingLayerBase;
  }
});
Object.defineProperty(exports, "FloatingLayerDecorator", {
  enumerable: true,
  get: function get() {
    return _FloatingLayerDecorator.FloatingLayerDecorator;
  }
});
exports["default"] = void 0;

var _FloatingLayer = __webpack_require__(/*! ./FloatingLayer */ "./node_modules/@enact/ui/FloatingLayer/FloatingLayer.js");

var _FloatingLayerDecorator = __webpack_require__(/*! ./FloatingLayerDecorator */ "./node_modules/@enact/ui/FloatingLayer/FloatingLayerDecorator.js");
/**
 * FloatingLayer provides a way to render a component into a node outside of its parent component.
 *
 * This is used for modal components such as popups.
 *
 * @module ui/FloatingLayer
 * @exports FloatingLayer
 * @exports FloatingLayerBase
 * @exports FloatingLayerDecorator
 */


var _default = _FloatingLayer.FloatingLayer;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/ForwardRef/ForwardRef.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/ui/ForwardRef/ForwardRef.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ForwardRef = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * Default config for {@link ui/ForwardRef.ForwardRef}.
 *
 * @memberof ui/ForwardRef.ForwardRef
 * @hocconfig
 */


var defaultConfig = {
  /**
   * The prop name to pass the ref callback
   *
   * @type {String}
   * @default 'forwardRef'
   * @memberof ui/ForwardRef.ForwardRef.defaultConfig
   */
  prop: 'forwardRef'
};
/**
 * A higher-order component that adapts [`React.forwardRef`](https://reactjs.org/docs/forwarding-refs.html)
 * to be chainable with other HOCs.
 *
 * The following examples are equivalent:
 *
 * ```
 * import ForwardRef from '@enact/ui/ForwardRef';
 * import Component from './Component';
 *
 * React.forwardRef((props, ref) => (
 * 	<Component {...props} setMyRef={ref} />
 * ));
 * ForwardRef({prop: 'setMyRef'}, Component);
 * ```
 *
 * @class ForwardRef
 * @memberof ui/ForwardRef
 * @hoc
 * @public
 */

var ForwardRef = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var prop = config.prop;
  return _react["default"].forwardRef(function (props, ref) {
    var withRef = _objectSpread({}, props, _defineProperty({}, prop, ref));

    return _react["default"].createElement(Wrapped, withRef);
  });
});
exports.ForwardRef = ForwardRef;
var _default = ForwardRef;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Icon/Icon.js":
/*!*********************************************!*\
  !*** ./node_modules/@enact/ui/Icon/Icon.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Icon = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _resolution = _interopRequireDefault(__webpack_require__(/*! ../resolution */ "./node_modules/@enact/ui/resolution/index.js"));

var _IconModule = _interopRequireDefault(__webpack_require__(/*! ./Icon.module.css */ "./node_modules/@enact/ui/Icon/Icon.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}
/**
 * Merges consumer styles with the image `src` resolved through the resolution independence module.
 *
 * @function
 * @param	{Object}		style	Style object
 * @param	{String|Object}	src		URI to image or object of URIs
 *
 * @returns	{Object}				Original style object with backgroundImage updated
 * @private
 */


var mergeStyle = function mergeStyle(style, src) {
  var updated = Object.assign({}, style);

  var source = _resolution["default"].selectSrc(src);

  if (src && src !== 'none' && src !== 'inherit' && src !== 'initial') {
    source = "url(".concat(source, ")");
  }

  updated.backgroundImage = source;
  return updated;
};
/**
 * Tests if a character is a single printable character
 *
 * @function
 * @param	{String}	c	Character to test
 *
 * @returns	{Boolean}		`true` if c is a single character
 * @private
 */


var isSingleCharacter = function isSingleCharacter(c) {
  return c.length === 1 || // check for 4-byte Unicode character
  c.length === 2 && c.charCodeAt() !== c.codePointAt();
};
/**
 * A basic icon component structure without any behaviors applied to it.
 *
 * @class Icon
 * @memberof ui/Icon
 * @ui
 * @public
 */


var Icon = (0, _kind["default"])({
  name: 'ui:Icon',
  propTypes:
  /** @lends ui/Icon.Icon.prototype */
  {
    /**
     * The icon content.
     *
     * May be specified as either:
     *
     * * A string that represents an icon from the [iconList]{@link ui/Icon.Icon.iconList},
     * * An HTML entity string, Unicode reference or hex value (in the form '0x...'),
     * * A URL specifying path to an icon image, or
     * * An object representing a resolution independent resource (See {@link ui/resolution}).
     *
     * @type {String|Object}
     * @public
     */
    children: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].object]),

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `icon` - The root component class
     * * `dingbat` - Applied when the value of [`icon`]{@link ui/Icon.Icon.icon} is not
     *   found in [iconList]{@link ui/Icon.Icon.iconList}
     * * `small` - Applied when `small` prop is `true`
     * * `pressed` - Applied when `pressed` prop is `true`
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object,

    /**
     * The full list (hash) of supported icons.
     *
     * The keys of this hash are the unique names of each icon. The values are the unicode
     * characters to insert in the icon. These will typically map to glyphs in your icon-font.
     * The format of the keys can be character, glyph, or entity reference that correctly
     * renders in a React + JSX string.
     *
     * @type {Object}
     * @default {}
     * @public
     */
    iconList: _propTypes["default"].object,

    /**
     * Applies the `pressed` CSS class.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    pressed: _propTypes["default"].bool,

    /**
     * Applies the `small` CSS class.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    small: _propTypes["default"].bool
  },
  defaultProps: {
    iconList: {},
    pressed: false,
    small: false
  },
  styles: {
    css: _IconModule["default"],
    className: 'icon',
    publicClassNames: true
  },
  computed: {
    className: function className(_ref) {
      var icon = _ref.children,
          iconList = _ref.iconList,
          pressed = _ref.pressed,
          small = _ref.small,
          styler = _ref.styler;
      return styler.append({
        // If the icon isn't in our known set, apply our custom font class
        dingbat: !(icon in iconList),
        pressed: pressed,
        small: small
      });
    },
    iconProps: function iconProps(_ref2) {
      var iconProp = _ref2.children,
          iconList = _ref2.iconList,
          style = _ref2.style;
      var icon = iconList[iconProp];

      if (!icon) {
        if (typeof iconProp == 'string') {
          if (iconProp.indexOf('&#x') === 0) {
            // Converts a hex reference in HTML entity form: &#x99999;
            icon = parseInt(iconProp.slice(3, -1), 16);
          } else if (iconProp.indexOf('&#') === 0) {
            // Convert an HTML entity: &#99999;
            icon = parseInt(iconProp.slice(2, -1));
          } else if (iconProp.indexOf("\\u") === 0) {
            // Convert a unicode reference: \u99999;
            icon = parseInt(iconProp.slice(2), 16);
          } else if (iconProp.indexOf('0x') === 0) {
            // Converts a hex reference in string form
            icon = String.fromCodePoint(iconProp);
          } else if (isSingleCharacter(iconProp)) {
            // A single character is assumed to be an explicit icon string
            icon = iconProp;
          } else {
            // for a path or URI, add it to style
            style = mergeStyle(style, iconProp);
          }
        } else if (_typeof(iconProp) === 'object') {
          style = mergeStyle(style, iconProp);
        }
      }

      if (typeof icon == 'number') {
        // Converts a hex reference in number form
        icon = String.fromCodePoint(icon);
      }

      return {
        children: icon,
        style: style
      };
    }
  },
  render: function render(_ref3) {
    var iconProps = _ref3.iconProps,
        rest = _objectWithoutProperties(_ref3, ["iconProps"]);

    delete rest.iconList;
    delete rest.pressed;
    delete rest.small;
    return _react["default"].createElement("div", Object.assign({
      "aria-hidden": true
    }, rest, iconProps));
  }
});
exports.Icon = Icon;
var _default = Icon;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Icon/Icon.module.css":
/*!*****************************************************!*\
  !*** ./node_modules/@enact/ui/Icon/Icon.module.css ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"icon":"Icon_icon__3eguj","dingbat":"Icon_dingbat__2cfSM","pressed":"Icon_pressed__2KWDw","small":"Icon_small__7qRdF"};

/***/ }),

/***/ "./node_modules/@enact/ui/IconButton/IconButton.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/ui/IconButton/IconButton.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconButtonDecorator = exports.IconButtonBase = exports.IconButton = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _ComponentOverride = _interopRequireDefault(__webpack_require__(/*! ../ComponentOverride */ "./node_modules/@enact/ui/ComponentOverride/ComponentOverride.js"));

var _Touchable = _interopRequireDefault(__webpack_require__(/*! ../Touchable */ "./node_modules/@enact/ui/Touchable/Touchable.js"));

var _IconButtonModule = _interopRequireDefault(__webpack_require__(/*! ./IconButton.module.css */ "./node_modules/@enact/ui/IconButton/IconButton.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance");
}

function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }

    return arr2;
  }
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * A ui-styled button without any behavior.
 *
 * @class IconButtonBase
 * @memberof ui/IconButton
 * @ui
 * @public
 */


var IconButtonBase = (0, _kind["default"])({
  name: 'ui:IconButton',
  propTypes:
  /** @lends ui/IconButton.IconButtonBase.prototype */
  {
    /**
     * This is the root component used to render the button and will receive all props except
     * `icon`.
     *
     * @type {Component|Element}
     * @required
     * @public
     */
    buttonComponent: _propTypes["default"].componentOverride.isRequired,

    /**
     * The component used to render the [icon]{@link ui/IconButton.IconButtonBase.icon}.
     *
     * This component will receive the `small` property set on the `IconButton` as well as the
     * `icon` class to customize its styling.
     *
     * @type {Component}
     * @required
     * @public
     */
    iconComponent: _propTypes["default"].component.isRequired,

    /**
     * Additional children that follow the icon.
     *
     * If `icon` isn't specified but `children` is, `children` is used as the icon's value.
     *
     * @see {@link ui/Icon.Icon#children}
     * @type {Node}
     * @public
     */
    children: _propTypes2["default"].node,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `iconButton` - The root component class
     * * `icon` - The [icon component]{@link ui/IconButton.IconButtonBase.iconComponent} class
     * * `small` - Applied when `small` prop is `true`
     * * `pressed` - Applied when `pressed` prop is `true`
     *
     * @type {Object}
     * @public
     */
    css: _propTypes2["default"].object,

    /**
     * Disables IconButton.
     *
     * When `true`, the button is shown as disabled and does not generate
     * `onClick` [events]{@link /docs/developer-guide/glossary/#event}.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes2["default"].bool,

    /**
     * The icon displayed within the IconButton.
     *
     * If not specified, `children` is used as the icon value instead.
     *
     * @type {String}
     * @public
     */
    icon: _propTypes2["default"].string,

    /**
     * Applies the `pressed` CSS class.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    pressed: _propTypes2["default"].bool,

    /**
     * Applies the `selected` CSS class.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    selected: _propTypes2["default"].bool,

    /**
     * Applies the `small` CSS class.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    small: _propTypes2["default"].bool
  },
  defaultProps: {
    disabled: false,
    pressed: false,
    selected: false,
    small: false
  },
  styles: {
    css: _IconButtonModule["default"],
    className: 'iconButton',
    publicClassNames: true
  },
  computed: {
    className: function className(_ref) {
      var small = _ref.small,
          styler = _ref.styler;
      return styler.append({
        small: small
      });
    }
  },
  render: function render(_ref2) {
    var buttonComponent = _ref2.buttonComponent,
        children = _ref2.children,
        css = _ref2.css,
        icon = _ref2.icon,
        Icon = _ref2.iconComponent,
        small = _ref2.small,
        rest = _objectWithoutProperties(_ref2, ["buttonComponent", "children", "css", "icon", "iconComponent", "small"]); // To support the simpler use case of only specifying the icon as the children within
    // <IconButton>, this falls back on using children if icon isn't specified.


    if (!icon && children) {
      icon = children;
      children = null;
    }

    return (0, _ComponentOverride["default"])(_objectSpread({}, rest, {
      component: buttonComponent,
      small: small,
      minWidth: false,
      children: [_react["default"].createElement(Icon, {
        key: "icon",
        small: small,
        className: css.icon
      }, icon)].concat(_toConsumableArray(_react["default"].Children.toArray(children)))
    }));
  }
});
/**
 * A higher-order component that adds universal button behaviors to an [IconButtonBase]{@link ui/IconButton.IconButtonBase}.
 *
 * @hoc
 * @memberof ui/IconButton
 * @mixes ui/Touchable.Touchable
 * @public
 */

exports.IconButtonBase = IconButtonBase;
var IconButtonDecorator = (0, _Touchable["default"])({
  activeProp: 'pressed'
});
/**
 * A minimally styled, but interactive, Button ready for customization by a theme.
 *
 * Example:
 * ```
 * <IconButton small>
 *     plus
 * </IconButton>
 * ```
 *
 * @class IconButton
 * @memberof ui/IconButton
 * @extends ui/IconButton.IconButtonBase
 * @mixes ui/IconButton.IconButtonDecorator
 * @ui
 * @public
 */

exports.IconButtonDecorator = IconButtonDecorator;
var IconButton = IconButtonDecorator(IconButtonBase);
exports.IconButton = IconButton;
var _default = IconButton;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/IconButton/IconButton.module.css":
/*!*****************************************************************!*\
  !*** ./node_modules/@enact/ui/IconButton/IconButton.module.css ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"iconButton":"IconButton_iconButton__1wSMj","icon":"IconButton_icon__2OjD4","small":"IconButton_small__3GuJI"};

/***/ }),

/***/ "./node_modules/@enact/ui/Layout/Cell.js":
/*!***********************************************!*\
  !*** ./node_modules/@enact/ui/Layout/Cell.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.toFlexAlign = exports.CellDecorator = exports.CellBase = exports.Cell = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _ForwardRef = _interopRequireDefault(__webpack_require__(/*! ../ForwardRef */ "./node_modules/@enact/ui/ForwardRef/ForwardRef.js"));

var _resolution = _interopRequireDefault(__webpack_require__(/*! ../resolution */ "./node_modules/@enact/ui/resolution/index.js"));

var _LayoutModule = _interopRequireDefault(__webpack_require__(/*! ./Layout.module.css */ "./node_modules/@enact/ui/Layout/Layout.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var toFlexAlign = function toFlexAlign(align) {
  return align === 'end' && 'flex-end' || align === 'start' && 'flex-start' || align;
};
/**
 * A stateless component that provides a space for your content in a
 * [Layout]{@link ui/Layout.Layout}, without [CellDecorator](ui/Layout.CellDecorator) applied.
 *
 * @class CellBase
 * @memberof ui/Layout
 * @ui
 * @public
 */


exports.toFlexAlign = toFlexAlign;
var CellBase = (0, _kind["default"])({
  name: 'Cell',
  propTypes:
  /** @lends ui/Layout.CellBase.prototype */
  {
    /**
     * The alignment of `Cell`.
     *
     * Aligns this `Cell` vertically in the case of a horizontal layout or
     * horizontally in the case of a vertical layout. `"start"`, `"center"` and
     * `"end"` are the most commonly used, although all values of `align-self` are supported.
     * `"start"` refers to the top in a horizontal layout, and left in a vertical LTR layout
     * `"end"` refers to the bottom in a horizontal layout, and right in a vertical LTR layout
     * `"start"` and `"end"` reverse places when in a vertical layout in a RTL locale.
     *
     * @type {String}
     * @public
     */
    align: _propTypes2["default"].string,

    /**
     * Any valid [Node]{@link /docs/developer-guide/glossary/#node} that should be positioned in this `Cell`.
     *
     * @type {Any}
     * @public
     */
    children: _propTypes2["default"].any,

    /**
     * The type of component to use to render as the `Cell`. May be a DOM node name (e.g 'div',
     * 'span', etc.) or a custom component.
     *
     * @type {String|Component}
     * @default 'div'
     * @public
     */
    component: _propTypes["default"].renderable,

    /**
     * Called with a reference to [component]{@link ui/Cell.Cell#component}
     *
     * @type {Function}
     * @private
     */
    componentRef: _propTypes2["default"].func,

    /**
     * Sizes `Cell` to its contents.
     *
     * A `shrink`able cell will contract to its minimum size, according to the dimensions of its
     * contents. This is used when you want the size of this Cell's content to influence the
     * dimensions of this cell. `shrink` will not allow the contents of the Layout to be pushed
     * beyond its boundaries (overflowing). See the [size]{@link ui/Layout.Cell#size} property
     * for more details.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    shrink: _propTypes2["default"].bool,

    /**
     * Sets the desired size of the Cell using any valid CSS measurement value.
     *
     * When used in conjunction with [shrink]{@link ui/Layout.Cell#shrink}, the size will be
     * the maximum size, shrinking as necessary, to fit the content.
     *
     * E.g.
     * * `size="400px"` -> cell will be 400px, regardless of the dimensions of your content
     * * `size="400px" shrink` -> cell will be 400px if your content is greater than 400px,
     *   and will match your contents size if it's smaller
     *
     * This accepts any valid CSS measurement value string. If a numeric value is used, it will
     * be treated as a pixel value and converted to a
     * [relative unit]{@link ui/resolution.unit} based on the rules of
     * [resolution independence]{@link ui/resolution}.
     *
     * @type {String|Number}
     * @public
     */
    size: _propTypes2["default"].oneOfType([_propTypes2["default"].string, _propTypes2["default"].number])
  },
  defaultProps: {
    component: 'div',
    shrink: false
  },
  styles: {
    css: _LayoutModule["default"],
    className: 'cell'
  },
  computed: {
    className: function className(_ref) {
      var shrink = _ref.shrink,
          size = _ref.size,
          styler = _ref.styler;
      return styler.append({
        shrink: shrink,
        grow: !shrink && !size
      });
    },
    style: function style(_ref2) {
      var align = _ref2.align,
          shrink = _ref2.shrink,
          size = _ref2.size,
          _style = _ref2.style;
      if (typeof size === 'number') size = _resolution["default"].unit(_resolution["default"].scale(size), 'rem');
      var cellSize = size;

      if (!size) {
        if (shrink) {
          cellSize = '100%';
        } else {
          cellSize = 'none';
        }
      }

      return _objectSpread({}, _style, {
        alignSelf: toFlexAlign(align),
        flexBasis: shrink ? null : size,
        // Setting 100% below in the presence of `shrink`` and absense of `size` prevents overflow
        '--cell-size': cellSize
      });
    }
  },
  render: function render(_ref3) {
    var Component = _ref3.component,
        componentRef = _ref3.componentRef,
        rest = _objectWithoutProperties(_ref3, ["component", "componentRef"]);

    delete rest.align;
    delete rest.shrink;
    delete rest.size;
    return _react["default"].createElement(Component, Object.assign({
      ref: componentRef
    }, rest));
  }
});
/**
 * Applies Cell behaviors.
 *
 * @hoc
 * @memberof ui/Layout
 * @mixes ui/ForwardRef.ForwardRef
 * @public
 */

exports.CellBase = CellBase;
var CellDecorator = (0, _ForwardRef["default"])({
  prop: 'componentRef'
});
/**
 * A stateless component that provides a space for your content in a
 * [Layout]{@link ui/Layout.Layout}.
 *
 * @class Cell
 * @memberof ui/Layout
 * @extends ui/Layout.CellBase
 * @mixes ui/Layout.CellDecorator
 * @ui
 * @public
 */

exports.CellDecorator = CellDecorator;
var Cell = CellDecorator(CellBase);
exports.Cell = Cell;
var _default = Cell;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Layout/Layout.js":
/*!*************************************************!*\
  !*** ./node_modules/@enact/ui/Layout/Layout.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Cell", {
  enumerable: true,
  get: function get() {
    return _Cell.Cell;
  }
});
Object.defineProperty(exports, "CellBase", {
  enumerable: true,
  get: function get() {
    return _Cell.CellBase;
  }
});
Object.defineProperty(exports, "CellDecorator", {
  enumerable: true,
  get: function get() {
    return _Cell.CellDecorator;
  }
});
exports.Row = exports.LayoutDecorator = exports.LayoutBase = exports.Layout = exports.Column = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _ForwardRef = _interopRequireDefault(__webpack_require__(/*! ../ForwardRef */ "./node_modules/@enact/ui/ForwardRef/ForwardRef.js"));

var _Cell = __webpack_require__(/*! ./Cell */ "./node_modules/@enact/ui/Layout/Cell.js");

var _LayoutModule = _interopRequireDefault(__webpack_require__(/*! ./Layout.module.css */ "./node_modules/@enact/ui/Layout/Layout.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}
/**
 * A container for `Cell`s.
 *
 * A stateless component that acts as a containing area for [Cells]{@link ui/Layout.Cell} to be
 * positioned in a row or a column (horizontally or vertically, respectively. It supports an
 * [orientation]{@link ui/Layout.Layout#orientation} property for laying-out its contents
 * (`Cells`) in an organized, readable way.
 *
 * Example:
 * ```
 * import Input from '@enact/moonstone/Input';
 * import css from './LayoutExample.less';
 * ...
 * <fieldset>
 * 	<Layout align="center">
 * 		<Cell component="label" size="40%" className={css.label} shrink>First Name</Cell>
 * 		<Cell component={Input} placeholder="First" className={css.input} />
 * 	</Layout>
 * 	<Layout align="center">
 * 		<Cell component="label" size="40%" className={css.label} shrink>Last Name</Cell>
 * 		<Cell component={Input} placeholder="Last" className={css.input} />
 * 	</Layout>
 * </fieldset>
 * ```
 *
 * @class LayoutBase
 * @ui
 * @memberof ui/Layout
 * @public
 */


var LayoutBase = (0, _kind["default"])({
  name: 'LayoutBase',
  propTypes:
  /** @lends ui/Layout.LayoutBase.prototype */
  {
    /**
     * The alignment of children.
     *
     * Aligns the children [Cells]{@link ui/Layout.Cell} vertically in the case of a horizontal
     * layout or horizontally in the case of a vertical layout. `"start"`, `"center"` and
     * `"end"` are the most commonly used, although all values of `align-items` are supported.
     * `"start"` refers to the top in a horizontal layout, and left in a vertical LTR layout
     * `"end"` refers to the bottom in a horizontal layout, and right in a vertical LTR layout
     * `"start"` and `"end"` reverse places when in a vertical layout in a RTL locale.
     * This includes support for `align-parts` which is shorthand for combining `align-items`
     * and `justify-content` into a single property, separated by a space, in that order.
     * This allows you to specify both the horizontal and vertical alignment in one property,
     * separated by a space.
     *
     * @type {String}
     * @public
     */
    align: _propTypes2["default"].string,

    /**
     * Only [Cell]{@link ui/Layout.Cell} components are supported as children.
     *
     * @type {Any}
     * @public
     */
    children: _propTypes2["default"].any,

    /**
     * The type of component to use to render as the `Layout`. May be a DOM node name (e.g 'div',
     * 'span', etc.) or a custom component.
     *
     * @type {String|Component}
     * @default 'div'
     * @public
     */
    component: _propTypes["default"].renderable,

    /**
     * Called with a reference to [component]{@link ui/Layout.Layout#component}
     *
     * @type {Function}
     * @private
     */
    componentRef: _propTypes2["default"].func,

    /**
     * Allows this `Layout` to have following siblings drawn on the same line as itself
     * instead of carving out the entire horizontal space for itself.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    inline: _propTypes2["default"].bool,

    /**
     * The orientation of the `Layout`, i.e. how the children [Cells]{@link ui/Layout.Cell} are
     * positioned on the screen. Must be either `'horizontal'` or `'vertical'`.
     *
     * @type {String}
     * @default 'horizontal'
     * @public
     */
    orientation: _propTypes2["default"].oneOf(['horizontal', 'vertical']),

    /**
     * Sets the Layout's `flex-wrap` values.
     *
     * Determines how a Layout handles its cells if there are more than fit in the available
     * space. This works like a normal `Boolean` prop, but also accepts strings for customization
     * beyond the basic on/off support. In addition to `true` and `false`, the following strings
     * are supported: 'wrap', 'nowrap', 'reverse'. 'reverse' performs standard line wrapping but
     * additional lines are placed above/before the preceding line instead of below/after.
     *
     * @type {Boolean|String}
     * @public
     */
    wrap: _propTypes2["default"].oneOfType([_propTypes2["default"].bool, _propTypes2["default"].oneOf(['reverse', 'nowrap', 'wrap'])])
  },
  defaultProps: {
    component: 'div',
    inline: false,
    orientation: 'horizontal',
    wrap: false
  },
  styles: {
    css: _LayoutModule["default"],
    className: 'layout'
  },
  computed: {
    className: function className(_ref) {
      var inline = _ref.inline,
          orientation = _ref.orientation,
          wrap = _ref.wrap,
          styler = _ref.styler;
      return styler.append(orientation, {
        inline: inline,
        nowrap: wrap === false || wrap === 'nowrap',
        wrap: wrap === true || wrap === 'wrap',
        wrapReverse: wrap === 'wrapReverse'
      });
    },
    style: function style(_ref2) {
      var align = _ref2.align,
          _style = _ref2.style;
      if (!align) return _style; // This is effectively a polyfill for the upcoming `place-items` prop which is shorthand
      // for align-items and justify-items together

      var alignParts = align.split(' ');
      return _objectSpread({}, _style, {
        alignItems: (0, _Cell.toFlexAlign)(alignParts[0]),
        justifyContent: (0, _Cell.toFlexAlign)(alignParts[1])
      });
    }
  },
  render: function render(_ref3) {
    var Component = _ref3.component,
        componentRef = _ref3.componentRef,
        rest = _objectWithoutProperties(_ref3, ["component", "componentRef"]);

    delete rest.align;
    delete rest.inline;
    delete rest.orientation;
    delete rest.wrap;
    return _react["default"].createElement(Component, Object.assign({
      ref: componentRef
    }, rest));
  }
});
/**
 * Applies Layout behaviors.
 *
 * @hoc
 * @memberof ui/Layout
 * @mixes ui/ForwardRef.ForwardRef
 * @public
 */

exports.LayoutBase = LayoutBase;
var LayoutDecorator = (0, _ForwardRef["default"])({
  prop: 'componentRef'
});
/**
 * A container for `Cell`s.
 *
 * A stateless component that acts as a containing area for [Cells]{@link ui/Layout.Cell} to be
 * positioned in a row or a column (horizontally or vertically, respectively. It supports an
 * [orientation]{@link ui/Layout.Layout#orientation} property for laying-out its contents
 * (`Cells`) in an organized, readable way.
 *
 * Example:
 * ```
 * import Input from '@enact/moonstone/Input';
 * import css from './LayoutExample.less';
 * ...
 * <fieldset>
 * 	<Layout align="center">
 * 		<Cell component="label" size="40%" className={css.label} shrink>First Name</Cell>
 * 		<Cell component={Input} placeholder="First" className={css.input} />
 * 	</Layout>
 * 	<Layout align="center">
 * 		<Cell component="label" size="40%" className={css.label} shrink>Last Name</Cell>
 * 		<Cell component={Input} placeholder="Last" className={css.input} />
 * 	</Layout>
 * </fieldset>
 * ```
 *
 * @class Layout
 * @memberof ui/Layout
 * @extends ui/Layout.LayoutBase
 * @mixes ui/ForwardRef.ForwardRef
 * @ui
 * @public
 */

exports.LayoutDecorator = LayoutDecorator;
var Layout = LayoutDecorator(LayoutBase);
/**
 * A {@link ui/Layout.Layout} that positions its [Cells]{@link ui/Layout.Cell} vertically.
 *
 * @class Column
 * @memberof ui/Layout
 * @extends ui/Layout.Layout
 * @mixes ui/ForwardRef.ForwardRef
 * @ui
 * @public
 */

exports.Layout = Layout;
var Column = LayoutDecorator(function (props) {
  return LayoutBase.inline(_objectSpread({}, props, {
    orientation: 'vertical'
  }));
});
/**
 * A {@link ui/Layout.Layout} that positions its [Cells]{@link ui/Layout.Cell} horizontally.
 *
 * @class Row
 * @memberof ui/Layout
 * @extends ui/Layout.Layout
 * @mixes ui/ForwardRef.ForwardRef
 * @ui
 * @public
 */

exports.Column = Column;
var Row = LayoutDecorator(function (props) {
  return LayoutBase.inline(_objectSpread({}, props, {
    orientation: 'horizontal'
  }));
});
exports.Row = Row;
var _default = LayoutBase;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Layout/Layout.module.css":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/ui/Layout/Layout.module.css ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"layout":"Layout_layout__39BG4","cell":"Layout_cell__m8WMM","grow":"Layout_grow__2Au0I","shrink":"Layout_shrink__2xo-x","horizontal":"Layout_horizontal__2ogYp","vertical":"Layout_vertical__1FXJD","inline":"Layout_inline__2u2Er","wrap":"Layout_wrap__3_GHE","nowrap":"Layout_nowrap__3H8H5","wrapReverse":"Layout_wrapReverse__3Fiif"};

/***/ }),

/***/ "./node_modules/@enact/ui/Marquee/Marquee.module.css":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/ui/Marquee/Marquee.module.css ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"marquee":"Marquee_marquee__2aN8j","text":"Marquee_text__2AHEU","willAnimate":"Marquee_willAnimate__2hxt1","animate":"Marquee_animate___Y8cH"};

/***/ }),

/***/ "./node_modules/@enact/ui/Marquee/MarqueeBase.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/Marquee/MarqueeBase.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarqueeBase = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _MarqueeModule = _interopRequireDefault(__webpack_require__(/*! ./Marquee.module.css */ "./node_modules/@enact/ui/Marquee/Marquee.module.css"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var isEventSource = function isEventSource(ev) {
  return ev.target === ev.currentTarget;
};
/**
 * Marquees the children of the component.
 *
 * For automated marquee calculations use {@link ui/Marquee.Marquee}.
 *
 * @class MarqueeBase
 * @memberof ui/Marquee
 * @ui
 * @public
 */


var MarqueeBase = (0, _kind["default"])({
  name: 'ui:Marquee',
  propTypes:
  /** @lends ui/Marquee.MarqueeBase.prototype */
  {
    /**
     * Text alignment value of the marquee
     *
     * Valid values are:
     *
     * * `'left'`,
     * * `'right'`, and
     * * `'center'`
     *
     * @type {String}
     * @public
     */
    alignment: _propTypes["default"].oneOf(['left', 'right', 'center']),

    /**
     * Applies animating styles such as removing the ellipsis.
     *
     * @type {Boolean}
     * @public
     */
    animating: _propTypes["default"].bool,

    /**
     * The text or a set of components that should be marqueed
     *
     * This prop may be empty in some cases, which is OK.
     *
     * @type {Node}
     * @public
     */
    children: _propTypes["default"].node,

    /**
     * Called when mounting or unmounting with a reference to the client node
     *
     * @type {Function}
     * @public
     */
    clientRef: _propTypes["default"].func,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `marquee` - The root component class
     * * `animate` - Applied to the inner content node when the text is animating
     * * `text` - The inner content node
     * * `willAnimate` - Applied to the inner content node shortly before animation
     *
     * @type {Object}
     * @public
     */
    css: _propTypes["default"].object,

    /**
     * Distance to animate the marquee
     *
     * Usually, the `distance` is the width of the text minus the width of the container
     *
     * @type {Number}
     * @public
     */
    distance: _propTypes["default"].number,

    /**
     * Called when the marquee completes its animation
     *
     * @type {Function}
     * @public
     */
    onMarqueeComplete: _propTypes["default"].func,

    /**
     * Text overflow setting. Either `'clip'` or `'ellipsis'`
     *
     * @type {String}
     * @public
     */
    overflow: _propTypes["default"].oneOf(['clip', 'ellipsis']),

    /**
     * `true` if the directionality of the content is right-to-left
     *
     * @type {Boolean}
     * @public
     * @default false
     */
    rtl: _propTypes["default"].bool,

    /**
     * Speed of marquee animation in pixels/second.
     *
     * @type {Number}
     * @public
     */
    speed: _propTypes["default"].number,

    /**
     * Indicates the marquee will animate soon.
     *
     * Should be used by the component to prepare itself for animation such as promoting
     * composite layers for improved performance.
     *
     * @type {Boolean}
     * @public
     * @default false
     */
    willAnimate: _propTypes["default"].bool
  },
  defaultProps: {
    rtl: false,
    willAnimate: false
  },
  styles: {
    css: _MarqueeModule["default"],
    className: 'marquee',
    publicClassNames: true
  },
  handlers: {
    onMarqueeComplete: (0, _handle.handle)((0, _handle.forProp)('animating', true), isEventSource, _handle.stop, function (ev, props) {
      return (0, _handle.forward)('onMarqueeComplete', {
        type: 'onMarqueeComplete'
      }, props);
    })
  },
  computed: {
    clientClassName: function clientClassName(_ref) {
      var animating = _ref.animating,
          willAnimate = _ref.willAnimate,
          styler = _ref.styler;
      return styler.join({
        animate: animating,
        text: true,
        willAnimate: willAnimate
      });
    },
    clientStyle: function clientStyle(_ref2) {
      var alignment = _ref2.alignment,
          animating = _ref2.animating,
          distance = _ref2.distance,
          overflow = _ref2.overflow,
          rtl = _ref2.rtl,
          speed = _ref2.speed; // If the components content directionality doesn't match the context, we need to set it
      // inline

      var direction = rtl ? 'rtl' : 'ltr';
      var sideProperty = rtl ? 'left' : 'right';
      var style = {
        direction: direction,
        textAlign: alignment,
        textOverflow: overflow
      };

      if (animating) {
        var duration = distance / speed;
        style[sideProperty] = "".concat(distance, "px");
        style.transitionDuration = "".concat(duration, "s");
      } else {
        style[sideProperty] = 0;
      }

      return style;
    }
  },
  render: function render(_ref3) {
    var children = _ref3.children,
        clientClassName = _ref3.clientClassName,
        clientRef = _ref3.clientRef,
        clientStyle = _ref3.clientStyle,
        onMarqueeComplete = _ref3.onMarqueeComplete,
        rest = _objectWithoutProperties(_ref3, ["children", "clientClassName", "clientRef", "clientStyle", "onMarqueeComplete"]);

    delete rest.alignment;
    delete rest.animating;
    delete rest.distance;
    delete rest.onMarqueeComplete;
    delete rest.overflow;
    delete rest.rtl;
    delete rest.speed;
    delete rest.willAnimate;
    return _react["default"].createElement("div", rest, _react["default"].createElement("div", {
      className: clientClassName,
      ref: clientRef,
      style: clientStyle,
      onTransitionEnd: onMarqueeComplete
    }, children));
  }
});
exports.MarqueeBase = MarqueeBase;
var _default = MarqueeBase;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Marquee/MarqueeController.js":
/*!*************************************************************!*\
  !*** ./node_modules/@enact/ui/Marquee/MarqueeController.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarqueeControllerContext = exports.MarqueeController = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var STATE = {
  inactive: 0,
  // Marquee is not necessary (render or focus not happened)
  active: 1,
  // Marquee in progress, awaiting complete
  ready: 2 // Marquee completed or not needed, but state is active

};

var MarqueeControllerContext = _react["default"].createContext(null);
/**
 * Default configuration parameters for {@link ui/Marquee.MarqueeController}.
 *
 * @type {Object}
 * @memberof ui/Marquee.MarqueeController
 * @hocconfig
 */


exports.MarqueeControllerContext = MarqueeControllerContext;
var defaultConfig = {
  /**
   * When `true`, any `onFocus` events that bubble to the controller will start the contained
   * `Marquee` instances. This is useful when a component contains `Marquee` instances that need to be
   * started when sibling components are focused.
   *
   * @type {Boolean}
   * @default false
   * @memberof ui/Marquee.MarqueeController.defaultConfig
   */
  marqueeOnFocus: false
};
/**
 * A higher-order component that synchronizes contained `Marquee`s.
 *
 * @memberof ui/Marquee
 * @hoc
 * @public
 */

var MarqueeController = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var marqueeOnFocus = config.marqueeOnFocus;
  var forwardBlur = (0, _handle.forward)('onBlur');
  var forwardFocus = (0, _handle.forward)('onFocus');
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));
      _this.cancelJob = new _util.Job(function () {
        return _this.doCancel();
      }, 30);

      _this.handleRegister = function (component, handlers) {
        var needsStart = !_this.allInactive() || _this.isFocused;

        _this.controlled.push(_objectSpread({}, handlers, {
          state: STATE.inactive,
          component: component
        }));

        if (needsStart) {
          _this.dispatch('start');
        }
      };

      _this.handleUnregister = function (component) {
        var wasRunning = false;

        for (var i = 0; i < _this.controlled.length; i++) {
          if (_this.controlled[i].component === component) {
            wasRunning = _this.controlled[i].state === STATE.active;

            _this.controlled.splice(i, 1);

            break;
          }
        }

        if (wasRunning && !_this.anyRunning()) {
          _this.dispatch('start');
        }
      };

      _this.handleStart = function (component) {
        _this.cancelJob.stop();

        if (!_this.anyRunning()) {
          _this.markAll(STATE.ready);

          _this.dispatch('start', component);
        }
      };

      _this.handleCancel = function () {
        if (_this.anyRunning()) {
          _this.cancelJob.start();
        }
      };

      _this.doCancel = function () {
        if (_this.isHovered || _this.isFocused) {
          return;
        }

        _this.markAll(STATE.inactive);

        _this.dispatch('stop');
      };

      _this.handleComplete = function (component) {
        var complete = _this.markReady(component);

        if (complete) {
          _this.markAll(STATE.ready);

          _this.dispatch('start');
        }
      };

      _this.handleEnter = function () {
        _this.isHovered = true;

        if (!_this.anyRunning()) {
          _this.dispatch('start');
        }

        _this.cancelJob.stop();
      };

      _this.handleLeave = function () {
        _this.isHovered = false;

        _this.cancelJob.start();
      };

      _this.handleFocus = function (ev) {
        _this.isFocused = true;

        if (!_this.anyRunning()) {
          _this.dispatch('start');
        }

        _this.cancelJob.stop();

        forwardFocus(ev, _this.props);
      };

      _this.handleBlur = function (ev) {
        _this.isFocused = false;

        if (_this.anyRunning()) {
          _this.cancelJob.start();
        }

        forwardBlur(ev, _this.props);
      };

      _this.controlled = [];
      _this.isFocused = false;
      _this.childContext = {
        cancel: _this.handleCancel,
        complete: _this.handleComplete,
        enter: _this.handleEnter,
        leave: _this.handleLeave,
        register: _this.handleRegister,
        start: _this.handleStart,
        unregister: _this.handleUnregister
      };
      return _this;
    }

    _createClass(_class, [{
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.cancelJob.stop();
      }
    }, {
      key: "dispatch",

      /*
       * Invokes the `action` handler for each synchronized component except the invoking
       * `component`.
       *
       * @param	{String}	action		`'start'` or `'stop'`
       * @param	{Object}	component	A previously registered component
       *
       * @returns	{undefined}
       */
      value: function dispatch(action, component) {
        this.controlled.forEach(function (controlled) {
          var controlledComponent = controlled.component,
              handler = controlled[action];

          if (component !== controlledComponent && typeof handler === 'function') {
            var complete = handler.call(controlledComponent); // Returning `true` from a start request means that the marqueeing is
            // unnecessary and is therefore not awaiting a finish

            if (action === 'start' && complete) {
              controlled.state = STATE.ready;
            } else if (action === 'start') {
              controlled.state = STATE.active;
            }
          } else if (action === 'start' && component === controlledComponent) {
            controlled.state = STATE.active;
          }
        });
      }
      /*
       * Marks all components with the passed-in state
       *
       * @param	{Enum}	state	The state to set
       *
       * @returns	{undefined}
       */

    }, {
      key: "markAll",
      value: function markAll(state) {
        this.controlled.forEach(function (c) {
          c.state = state;
        });
      }
      /*
       * Marks `component` as ready for next marquee action
       *
       * @param	{Object}	component	A previously registered component
       *
       * @returns	{Boolean}				`true` if no components are STATE.active
       */

    }, {
      key: "markReady",
      value: function markReady(component) {
        var complete = true;
        this.controlled.forEach(function (c) {
          if (c.component === component) {
            c.state = STATE.ready;
          }

          complete = complete && c.state !== STATE.active;
        });
        return complete;
      }
      /*
       * Checks that all components are inactive
       *
       * @returns {Boolean} `true` if any components should be running
       */

    }, {
      key: "allInactive",
      value: function allInactive() {
        var activeOrReady = this.controlled.reduce(function (res, component) {
          return res || !(component.state === STATE.inactive);
        }, false);
        return !activeOrReady;
      }
      /*
       * Checks for any components currently marqueeing
       *
       * @returns {Boolean} `true` if any component is marqueeing
       */

    }, {
      key: "anyRunning",
      value: function anyRunning() {
        return this.controlled.reduce(function (res, component) {
          return res || component.state === STATE.active;
        }, false);
      }
    }, {
      key: "render",
      value: function render() {
        var props = this.props;

        if (marqueeOnFocus) {
          props = _objectSpread({}, this.props, {
            onBlur: this.handleBlur,
            onFocus: this.handleFocus
          });
        }

        return _react["default"].createElement(MarqueeControllerContext.Provider, {
          value: this.childContext
        }, _react["default"].createElement(Wrapped, props));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'MarqueeController', _temp;
});
exports.MarqueeController = MarqueeController;
var _default = MarqueeController;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Marquee/MarqueeDecorator.js":
/*!************************************************************!*\
  !*** ./node_modules/@enact/ui/Marquee/MarqueeDecorator.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MarqueeDecorator = exports["default"] = void 0;

var _direction = _interopRequireDefault(__webpack_require__(/*! direction */ "./node_modules/direction/index.js"));

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js");

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _keymap = __webpack_require__(/*! @enact/core/keymap */ "./node_modules/@enact/core/keymap/index.js");

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _shallowEqual = _interopRequireDefault(__webpack_require__(/*! recompose/shallowEqual */ "./node_modules/recompose/shallowEqual.js"));

var _Resizable = __webpack_require__(/*! ../Resizable */ "./node_modules/@enact/ui/Resizable/Resizable.js");

var _MarqueeBase = _interopRequireDefault(__webpack_require__(/*! ./MarqueeBase */ "./node_modules/@enact/ui/Marquee/MarqueeBase.js"));

var _MarqueeController = __webpack_require__(/*! ./MarqueeController */ "./node_modules/@enact/ui/Marquee/MarqueeController.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Default configuration parameters for {@link ui/Marquee.MarqueeDecorator}
 *
 * @type {Object}
 * @memberof ui/Marquee.MarqueeDecorator
 * @hocconfig
 */


var defaultConfig = {
  /**
   * Property containing the callback to stop the animation when `marqueeOn` is `'focus'`
   *
   * @type {String}
   * @default 'onBlur'
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  blur: 'onBlur',

  /**
   * Optional CSS class name to customize the marquee `component`
   *
   * @type {String}
   * @default null
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  className: null,

  /**
   * The base marquee component wrapping the content.
   *
   * @type {Component}
   * @default ui/Marquee.Marquee
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  component: _MarqueeBase["default"],

  /**
   * Property containing the callback to start the animation when `marqueeOn` is `'hover'`
   *
   * @type {String}
   * @default 'onMouseEnter'
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  enter: 'onMouseEnter',

  /**
   * Property containing the callback to start the animation when `marqueeOn` is `'focus'`
   *
   * @type {String}
   * @default 'onFocus'
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  focus: 'onFocus',

  /**
  * Invalidate the distance if any property (like 'inline') changes.
  * Expects an array of props which on change trigger invalidateMetrics.
  *
  * @type {String[]}
  * @default ['remeasure']
  * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
  */
  invalidateProps: ['remeasure'],

  /**
   * Property containing the callback to stop the animation when `marqueeOn` is `'hover'`
   *
   * @type {String}
   * @default 'onMouseLeave'
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  leave: 'onMouseLeave',

  /**
   * A function that determines the text directionality of a string.
   *
   * Returns:
   * * `'rtl'` if the text should marquee to the right
   * * `'ltr'` if the text should marquee to the left
   *
   * @type {Function}
   * @kind member
   * @memberof ui/Marquee.MarqueeDecorator.defaultConfig
   */
  marqueeDirection: function marqueeDirection(str) {
    return (0, _direction["default"])(str) === 'rtl' ? 'rtl' : 'ltr';
  }
};
/*
 * Checks whether any of the invalidateProps has changed or not
 *
 * @param {String[]} propList An array of invalidateProps
 * @param {Object} prev Previous props
 * @param {Object} next Next props
 * @returns {Boolean} `true` if any of the props changed
 * @private
 */

var didPropChange = function didPropChange(propList, prev, next) {
  var hasPropsChanged = propList.map(function (i) {
    return prev[i] !== next[i];
  });
  return hasPropsChanged.indexOf(true) !== -1;
};
/*
 * There's only one timer shared for Marquee so we need to keep track of what we may be using it
 * for. We may need to clean up certain things as we move among states.
 */


var TimerState = {
  CLEAR: 0,
  // No timers pending
  START_PENDING: 1,
  // A start request is pending
  RESET_PENDING: 2,
  // Marquee finished, waiting for reset delay
  SYNCSTART_PENDING: 3 // Waiting to alert Controller that we want to start marqueeing

};
/**
 * A higher-order component that provides marquee functionalities.
 *
 * @class MarqueeDecorator
 * @memberof ui/Marquee
 * @hoc
 * @public
 */

var MarqueeDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var blur = config.blur,
      configClassName = config.className,
      MarqueeComponent = config.component,
      enter = config.enter,
      focus = config.focus,
      invalidateProps = config.invalidateProps,
      leave = config.leave,
      marqueeDirection = config.marqueeDirection; // Generate functions to forward events to containers

  var forwardBlur = (0, _handle.forward)(blur);
  var forwardFocus = (0, _handle.forward)(focus);
  var forwardEnter = (0, _handle.forward)(enter);
  var forwardLeave = (0, _handle.forward)(leave);

  var determineTextDirection = function determineTextDirection(node, rtl, forceDirection) {
    // Text directionality is a function of locale direction (rtl), content (node.textContent),
    // and props (forceDirection) in increasing order of significance.
    if (forceDirection) {
      rtl = forceDirection === 'rtl';
    } else if (node) {
      rtl = marqueeDirection(node.textContent) === 'rtl';
    }

    return rtl;
  };

  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));
      _this.promoteJob = new _util.Job(function () {
        _this.setState(function (state) {
          return state.promoted ? null : {
            promoted: true
          };
        });
      });
      _this.demoteJob = new _util.Job(function () {
        _this.setState(function (state) {
          return !state.animating && state.promoted ? {
            promoted: false
          } : null;
        });
      });

      _this.start = function () {
        var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.marqueeDelay;

        if (_this.props.marqueeDisabled) {
          // if marquee isn't necessary, do not set `animating` but return `true` to mark it
          // complete if it's synchronized so it doesn't block other instances.
          return true;
        } else if (!_this.state.animating) {
          // Don't need to worry about this.timerState because if we're sync, we were just
          // told to start, so our state is correct already. If we're not sync, this will
          // restart us anyhow. If we were waiting to tell sync to start us, someone else in
          // our group already did it.
          _this.setTimeout(function () {
            _this.calculateMetrics();

            if (!_this.contentFits) {
              _this.setState({
                promoted: true,
                animating: true
              });
            } else if (_this.sync) {
              _this.context.complete(_assertThisInitialized(_this));
            }
          }, delay, TimerState.START_PENDING);
        }
      };

      _this.stop = function () {
        _this.clearTimeout();

        if (_this.state.animating) {
          _this.setState({
            animating: false
          });
        }

        _this.demote();
      };

      _this.tryStartingAnimation = function (delay) {
        if (_this.state.animating || _this.timerState !== TimerState.CLEAR) return;

        _this.startAnimation(delay);
      };

      _this.startAnimation = function (delay) {
        _this.promote(delay);

        if (_this.sync) {
          // If we're running a timer for anything, we should let that finish, unless it's
          // another syncstart request.  We should probably check to see if the start request
          // is further in the future than we are so we can choose the nearer one. But, we're
          // assuming the condition is we're waiting on render delay and someone just hovered
          // us, so we can start with the (hopefully) faster hover delay.
          if (_this.timerState !== TimerState.CLEAR && _this.timerState !== TimerState.SYNCSTART_PENDING) {
            return;
          }

          _this.setTimeout(function () {
            _this.context.start();
          }, delay, TimerState.SYNCSTART_PENDING);
        } else {
          _this.start(delay);
        }
      };

      _this.restartAnimation = function () {
        _this.setState({
          animating: false
        }); // synchronized Marquees defer to the controller to restart them


        if (_this.sync) {
          _this.context.complete(_assertThisInitialized(_this));
        } else if (!_this.state.animating) {
          _this.startAnimation();
        }
      };

      _this.resetAnimation = function () {
        var marqueeResetDelay = Math.max(40, _this.props.marqueeResetDelay); // If we're already timing a start action, don't reset.  Start actions will clear us if
        // sync.

        if (_this.timerState === TimerState.CLEAR) {
          _this.setTimeout(_this.restartAnimation, marqueeResetDelay, TimerState.RESET_PENDING);
        }
      };

      _this.cancelAnimation = function () {
        if (_this.sync) {
          _this.context.cancel(_assertThisInitialized(_this));

          return;
        }

        _this.stop();
      };

      _this.handleResize = function () {
        if (_this.node && !_this.props.marqueeDisabled) {
          _this.invalidateMetrics();

          if (_this.state.animating) {
            _this.cancelAnimation();

            _this.resetAnimation();
          }
        }
      };

      _this.handleMarqueeComplete = function () {
        _this.resetAnimation();
      };

      _this.handleFocus = function (ev) {
        _this.isFocused = true;

        if (!_this.sync) {
          if (!_this.state.animating) {
            _this.startAnimation();
          }
        }

        forwardFocus(ev, _this.props);
      };

      _this.handleBlur = function (ev) {
        _this.promoteJob.stop();

        forwardBlur(ev, _this.props);

        if (_this.isFocused) {
          _this.isFocused = false;

          if (!_this.sync && !(_this.isHovered && (_this.props.disabled || _this.props.marqueeOn === 'hover'))) {
            _this.cancelAnimation();
          }
        }
      };

      _this.handleEnter = function (ev) {
        _this.isHovered = true;

        if (_this.props.disabled || _this.props.marqueeOn === 'hover') {
          if (_this.sync) {
            _this.context.enter(_assertThisInitialized(_this));
          } else if (!_this.state.animating) {
            _this.startAnimation();
          }
        }

        forwardEnter(ev, _this.props);
      };

      _this.handleLeave = function (ev) {
        _this.promoteJob.stop();

        _this.handleUnhover();

        forwardLeave(ev, _this.props);
      };

      _this.handlePointerHide = function (_ref) {
        var keyCode = _ref.keyCode;

        if ((0, _keymap.is)('pointerHide', keyCode)) {
          _this.handleUnhover();
        }
      };

      _this.cacheNode = function (node) {
        _this.node = node;
      };

      _this.state = {
        animating: false,
        overflow: 'ellipsis',
        promoted: false,
        rtl: determineTextDirection(null, props.rtl, props.forceDirection)
      };
      _this.sync = false;
      _this.timerState = TimerState.CLEAR;
      _this.distance = null;
      _this.contentFits = false;
      _this.resizeRegistry = null;
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.context && this.context.register) {
          this.sync = true;
          this.context.register(this, {
            start: this.start,
            stop: this.stop
          });
        }

        this.validateTextDirection();

        if (this.props.marqueeOn === 'render') {
          this.startAnimation(this.props.marqueeOnRenderDelay);
        }

        (0, _dispatcher.on)('keydown', this.handlePointerHide);
      }
    }, {
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps, nextState) {
        return !(0, _shallowEqual["default"])(this.state, nextState) || !(0, _shallowEqual["default"])(this.props, nextProps);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        var _this$props = this.props,
            children = _this$props.children,
            disabled = _this$props.disabled,
            forceDirection = _this$props.forceDirection,
            locale = _this$props.locale,
            marqueeOn = _this$props.marqueeOn,
            marqueeDisabled = _this$props.marqueeDisabled,
            marqueeSpeed = _this$props.marqueeSpeed,
            rtl = _this$props.rtl;
        var forceRestartMarquee = false;

        if (prevProps.locale !== locale || prevProps.rtl !== rtl || !(0, _shallowEqual["default"])(prevProps.children, children) || invalidateProps && didPropChange(invalidateProps, prevProps, this.props)) {
          // restart marqueeOn="render" marquees or synced marquees that were animating
          forceRestartMarquee = marqueeOn === 'render' || this.sync && (this.state.animating || this.timerState > TimerState.CLEAR);
          this.invalidateMetrics();
          this.cancelAnimation();
        } else if (prevProps.marqueeOn !== marqueeOn || prevProps.marqueeDisabled !== marqueeDisabled || prevProps.marqueeSpeed !== marqueeSpeed || prevProps.forceDirection !== forceDirection) {
          this.cancelAnimation();
        } else if (disabled && this.isHovered && marqueeOn === 'focus' && this.sync) {
          this.context.enter(this);
        }

        this.validateTextDirection();

        if (forceRestartMarquee || this.shouldStartMarquee()) {
          this.tryStartingAnimation(this.props.marqueeOn === 'render' ? this.props.marqueeOnRenderDelay : this.props.marqueeDelay);
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearTimeout();
        this.promoteJob.stop();
        this.demoteJob.stop();

        if (this.sync) {
          this.context.unregister(this);
        }

        if (this.resizeRegistry) {
          this.resizeRegistry.unregister(this.handleResize);
        }

        (0, _dispatcher.off)('keydown', this.handlePointerHide);
      }
    }, {
      key: "demote",
      value: function demote() {
        this.promoteJob.stop();

        if (this.state.promoted) {
          this.demoteJob.idle();
        }
      }
    }, {
      key: "promote",
      value: function promote() {
        var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.marqueeDelay;
        this.demoteJob.stop();
        this.promoteJob.startAfter(Math.max(0, delay - 200));
      }
      /*
       * Clears the timer
       *
       * @returns {undefined}
       */

    }, {
      key: "clearTimeout",
      value: function clearTimeout() {
        if (window && this.timer) {
          window.clearTimeout(this.timer);
          this.timer = null;
        }

        this.timerState = TimerState.CLEAR;
      }
      /*
       * Starts a new timer
       *
       * @param {Function} fn   Callback
       * @param {Number}   time Delay in milliseconds
       * @returns {undefined}
       */

    }, {
      key: "setTimeout",
      value: function setTimeout(fn) {
        var _this2 = this;

        var time = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : TimerState.CLEAR;
        this.clearTimeout();

        if (window) {
          this.timerState = state;
          this.timer = window.setTimeout(function () {
            _this2.timerState = TimerState.CLEAR;
            fn();
          }, time);
        }
      }
      /*
       * Checks to see if the children changed during a condition that should cause us to re-check
       * the animation state
       *
       * @returns {Boolean} - `true` if a possible marquee condition exists
       */

    }, {
      key: "shouldStartMarquee",
      value: function shouldStartMarquee() {
        var _this$props2 = this.props,
            disabled = _this$props2.disabled,
            marqueeDisabled = _this$props2.marqueeDisabled,
            marqueeOn = _this$props2.marqueeOn;
        return !marqueeDisabled && (marqueeOn === 'render' || !this.sync && (this.isFocused && marqueeOn === 'focus' && !disabled || this.isHovered && (marqueeOn === 'hover' || marqueeOn === 'focus' && disabled)));
      }
      /*
       * Invalidates marquee metrics requiring them to be recalculated
       *
       * @returns {undefined}
       */

    }, {
      key: "invalidateMetrics",
      value: function invalidateMetrics() {
        // Null distance is the special value to allow recalculation
        this.distance = null; // Assume the marquee does not fit until calculations show otherwise

        this.contentFits = false;
        this.setState(function (state) {
          return state.overflow === 'ellipsis' ? null : {
            overflow: 'ellipsis'
          };
        });
      }
      /*
      * Determines if the component should marquee and the distance to animate
      *
      * @returns {undefined}
      */

    }, {
      key: "calculateMetrics",
      value: function calculateMetrics() {
        var node = this.node; // TODO: absolute showing check (or assume that it won't be rendered if it isn't showing?)

        if (node && this.distance == null && !this.props.marqueeDisabled) {
          this.distance = this.calculateDistance(node);
          this.contentFits = !this.shouldAnimate(this.distance);
          var overflow = this.calculateTextOverflow(this.distance);
          this.setState(function (state) {
            return state.overflow === overflow ? null : {
              overflow: overflow
            };
          });
        }
      }
      /*
       * Calculates the distance the marquee must travel to reveal all of the content
       *
       * @param	{DOMNode}	node	DOM Node to measure
       * @returns	{Number}			Distance to travel in pixels
       */

    }, {
      key: "calculateDistance",
      value: function calculateDistance(node) {
        var rect = node.getBoundingClientRect();
        var distance = Math.abs(node.scrollWidth - rect.width);
        return distance;
      }
      /*
       * A custom overflow-determining method to reflect real-world truncation/ellipsis
       * calculation. This catches an edge case that the browser typically does not, where the
       * size of the text area is the same size as the container (zero distance difference), but
       * the browser still inserts an ellipsis due to a non-visible part of the last glyph's
       * render box overflowing the parent container size.
       * This scenario should not induce a marquee animation or ellipsis, so we directly set
       * Marquee to not use an ellipsis, and instead just clip the non-visible part of the glyph.
       *
       * @param	{Number}	distance	Amount of overflow in pixels
       * @returns	{String}				text-overflow value
       */

    }, {
      key: "calculateTextOverflow",
      value: function calculateTextOverflow(distance) {
        return distance < 1 ? 'clip' : 'ellipsis';
      }
      /*
       * Calculates if the marquee should animate
       *
       * @param	{Number}	distance	Amount of overflow in pixels
       * @returns	{Boolean}				`true` if it should animated
       */

    }, {
      key: "shouldAnimate",
      value: function shouldAnimate(distance) {
        return distance >= 1;
      }
      /*
       * Starts the animation without synchronizing
       *
       * @param	{Number}	[delay]	Milliseconds to wait before animating
       * @returns	{undefined}
       */

    }, {
      key: "handleUnhover",
      value: function handleUnhover() {
        this.isHovered = false;

        if (this.props.disabled || this.props.marqueeOn === 'hover') {
          if (this.sync) {
            this.context.leave(this);
          } else {
            this.cancelAnimation();
          }
        }
      }
    }, {
      key: "validateTextDirection",
      value: function validateTextDirection() {
        var _this3 = this;

        this.setState(function (state, props) {
          var rtl = determineTextDirection(_this3.node, props.rtl, props.forceDirection);
          return state.rtl === rtl ? null : {
            rtl: rtl
          };
        });
      }
    }, {
      key: "renderMarquee",
      value: function renderMarquee() {
        var _this$props3 = this.props,
            alignment = _this$props3.alignment,
            children = _this$props3.children,
            disabled = _this$props3.disabled,
            marqueeOn = _this$props3.marqueeOn,
            marqueeSpeed = _this$props3.marqueeSpeed,
            rest = _objectWithoutProperties(_this$props3, ["alignment", "children", "disabled", "marqueeOn", "marqueeSpeed"]);

        var marqueeOnFocus = marqueeOn === 'focus';
        var marqueeOnHover = marqueeOn === 'hover';
        var marqueeOnRender = marqueeOn === 'render';

        if (marqueeOnFocus && !disabled) {
          rest[focus] = this.handleFocus;
        } // TODO: cancel others on hover


        if (marqueeOnHover || marqueeOnFocus) {
          rest[enter] = this.handleEnter;
          rest[leave] = this.handleLeave;
        }

        if (marqueeOnRender) {
          rest[enter] = this.handleEnter;
        }

        delete rest.forceDirection;
        delete rest.locale;
        delete rest.marqueeCentered;
        delete rest.marqueeDelay;
        delete rest.marqueeDisabled;
        delete rest.marqueeOnRenderDelay;
        delete rest.marqueeResetDelay;
        delete rest.marqueeSpeed;
        delete rest.remeasure;
        delete rest.rtl;
        return _react["default"].createElement(Wrapped, Object.assign({}, rest, {
          onBlur: this.handleBlur,
          disabled: disabled
        }), _react["default"].createElement(MarqueeComponent, {
          alignment: alignment,
          animating: this.state.animating,
          className: configClassName,
          clientRef: this.cacheNode,
          distance: this.distance,
          onMarqueeComplete: this.handleMarqueeComplete,
          overflow: this.state.overflow,
          rtl: this.state.rtl,
          speed: marqueeSpeed,
          willAnimate: this.state.promoted
        }, children));
      }
    }, {
      key: "renderWrapped",
      value: function renderWrapped() {
        var props = Object.assign({}, this.props);
        delete props.alignment;
        delete props.forceDirection;
        delete props.locale;
        delete props.marqueeCentered;
        delete props.marqueeDelay;
        delete props.marqueeDisabled;
        delete props.marqueeOn;
        delete props.marqueeOnRenderDelay;
        delete props.marqueeResetDelay;
        delete props.marqueeSpeed;
        delete props.remeasure;
        delete props.rtl;
        return _react["default"].createElement(Wrapped, props);
      }
    }, {
      key: "render",
      value: function render() {
        var _this4 = this;

        return _react["default"].createElement(_Resizable.ResizeContext.Consumer, null, function (register) {
          if (!_this4.resizeRegistry && register) {
            _this4.resizeRegistry = register(_this4.handleResize);
          }

          if (_this4.props.marqueeDisabled) {
            return _this4.renderWrapped();
          } else {
            return _this4.renderMarquee();
          }
        });
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'ui:MarqueeDecorator', _class.propTypes =
  /** @lends ui/Marquee.MarqueeDecorator.prototype */
  {
    /**
     * Text alignment value of the marquee. Valid values are `'left'`, `'right'` and `'center'`.
     *
     * @type {String}
     * @public
     */
    alignment: _propTypes["default"].oneOf(['left', 'right', 'center']),

    /**
     * Children to be marqueed
     *
     * @type {Node}
     * @public
     */
    children: _propTypes["default"].node,

    /**
     * Passed through to the wrapped component.
     *
     * Does not affect Marquee behavior except that components that are `marqueeOn="focus"`
     * will be treated as if they were `marqueeOn="hover"`, to allow disabled (and thus,
     * unfocusable) components to marquee.
     *
     * @type {Boolean}
     * @public
     */
    disabled: _propTypes["default"].bool,

    /**
     * Forces the `direction` of the marquee.
     *
     * Valid values are `'rtl'` and `'ltr'`. This includes non-text elements as well.
     * The default behavior, if this prop is unset, is to evaluate the text content for
     * directionality using {@link i18n/util.isRtlText}.
     *
     * @type {String}
     * @public
     */
    forceDirection: _propTypes["default"].oneOf(['rtl', 'ltr']),

    /**
     * The current locale as a
     * {@link https://tools.ietf.org/html/rfc5646|BCP 47 language tag}.
     *
     * @type {String}
     * @public
     */
    locale: _propTypes["default"].string,

    /**
     * Number of milliseconds to wait before starting marquee when `marqueeOn` is `'hover'` or
     * `'focus'` or before restarting any marquee.
     *
     * @type {Number}
     * @default 1000
     * @public
     */
    marqueeDelay: _propTypes["default"].number,

    /**
     * Disables all marquee behavior and removes supporting markup.
     *
     * @type {Boolean}
     */
    marqueeDisabled: _propTypes["default"].bool,

    /**
     * Determines what triggers the marquee to start its animation.
     *
     * Valid values are `'focus'`, `'hover'` and `'render'`. The default is `'focus'`.
     *
     * @type {String}
     * @default 'focus'
     * @public
     */
    marqueeOn: _propTypes["default"].oneOf(['focus', 'hover', 'render']),

    /**
     * Number of milliseconds to wait before starting marquee the first time.
     *
     * Has no effect if `marqueeOn` is not `'render'`
     *
     * @type {Number}
     * @default 1000
     * @public
     */
    marqueeOnRenderDelay: _propTypes["default"].number,

    /**
     * Number of milliseconds to wait before resetting the marquee position after it
     * finishes.
     *
     * A minimum of 40 milliseconds is enforced.
     *
     * @type {Number}
     * @default 1000
     * @public
     */
    marqueeResetDelay: _propTypes["default"].number,

    /**
     * Rate of marquee measured in pixels/second.
     *
     * @type {Number}
     * @default 60
     * @public
     */
    marqueeSpeed: _propTypes["default"].number,

    /**
     * Used to signal for a remeasurement inside of marquee.
     *
     * The value must change for the remeasurement to take place. The value
     * type is `any` because it does not matter. It is only used to check for changes.
     *
     * @private
     */
    remeasure: _propTypes["default"].any,

    /**
     * Indicates the text directionality of the current locale is right-to-left
     *
     * @type {String}
     * @public
     */
    rtl: _propTypes["default"].bool
  }, _class.defaultProps = {
    marqueeDelay: 1000,
    marqueeOn: 'focus',
    marqueeOnRenderDelay: 1000,
    marqueeResetDelay: 1000,
    marqueeSpeed: 60
  }, _class.contextType = _MarqueeController.MarqueeControllerContext, _temp;
});
exports.MarqueeDecorator = MarqueeDecorator;
var _default = MarqueeDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Marquee/index.js":
/*!*************************************************!*\
  !*** ./node_modules/@enact/ui/Marquee/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "MarqueeBase", {
  enumerable: true,
  get: function get() {
    return _MarqueeBase["default"];
  }
});
Object.defineProperty(exports, "MarqueeController", {
  enumerable: true,
  get: function get() {
    return _MarqueeController.MarqueeController;
  }
});
Object.defineProperty(exports, "MarqueeDecorator", {
  enumerable: true,
  get: function get() {
    return _MarqueeDecorator["default"];
  }
});
exports.Marquee = exports["default"] = void 0;

var _MarqueeBase = _interopRequireDefault(__webpack_require__(/*! ./MarqueeBase */ "./node_modules/@enact/ui/Marquee/MarqueeBase.js"));

var _MarqueeController = __webpack_require__(/*! ./MarqueeController */ "./node_modules/@enact/ui/Marquee/MarqueeController.js");

var _MarqueeDecorator = _interopRequireDefault(__webpack_require__(/*! ./MarqueeDecorator */ "./node_modules/@enact/ui/Marquee/MarqueeDecorator.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/**
 * A component that will marquee its overflowing contents.
 *
 * @module ui/Marquee
 * @exports Marquee
 * @exports MarqueeBase
 * @exports MarqueeController
 * @exports MarqueeDecorator
 */
// Marquee is unique in the framework in that its base component, Marquee, is used by its behavioral
// HOC, MarqueeDecorator. In other cases, the behavioral HOC would receive the base component as
// Wrapped but in this case is designed to receive a third-party component instead.
//
// This file avoids circular dependencies between Marquee.js (which would normally import its
// decorator) and MarqueeDecorator (which needs to import Marquee.js).

/**
 * A minimally-styled marquee component.
 *
 * @class Marquee
 * @extends ui/Marquee.MarqueeBase
 * @memberof ui/Marquee
 * @mixes ui/Marquee.MarqueeDecorator
 * @ui
 * @public
 */


var Marquee = (0, _MarqueeDecorator["default"])({
  component: _MarqueeBase["default"]
}, 'div');
exports.Marquee = Marquee;
var _default = Marquee;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Resizable/Resizable.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/Resizable/Resizable.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ResizeContext = exports.Resizable = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _invariant = _interopRequireDefault(__webpack_require__(/*! invariant */ "./node_modules/invariant/browser.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Used internally for things to notify children that they need to resize because of a parent
 * update.
 *
 * @type Object
 * @private
 */


var ResizeContext = _react["default"].createContext();
/**
 * Default config for `Resizable`.
 *
 * @memberof ui/Resizable.Resizable
 * @hocconfig
 */


exports.ResizeContext = ResizeContext;
var defaultConfig = {
  /**
   * Configures the event name that will indicate a resize of a container may be necessary.
   *
   * @type {String}
   * @default null
   * @memberof ui/Resizable.Resizable.defaultConfig
   */
  filter: null,

  /**
   * Configures a function that can filter the event to limit when the container is notified.
   *
   * This function will receive the event payload as its only argument and should return `true` to
   * prevent the resize notification.
   *
   * @type {String}
   * @default null
   * @memberof ui/Resizable.Resizable.defaultConfig
   */
  resize: null
};
/**
 * A higher-order component that notifies a container that the wrapped component has been resized.
 *
 * It may be useful in cases where a component may need to update itself as a result of its children
 * changing in size, such as a [Scroller]{@link ui/Scroller}.
 *
 * Containers must provide an `invalidateBounds` method via React's context in order for `Resizable`
 * instances to notify it of resize.
 *
 * @class Resizable
 * @memberof ui/Resizable
 * @hoc
 * @public
 */

var Resizable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var filter = config.filter,
      resize = config.resize;
  !resize ?  true ? (0, _invariant["default"])(false, "resize is required by Resizable but was omitted when applied to ".concat(Wrapped.displayName)) : undefined : void 0;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, _class);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.handleResize = (0, _handle.handle)((0, _handle.forward)(resize), // optionally filter the event before notifying the container
      filter, (0, _handle.call)('invalidateBounds')).bind(_assertThisInitialized(_this));
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (this.context && typeof this.context === 'function') {
          // Registry requires a callback but (for now at least) Resizable doesn't respond to
          // upstream events so we're initializing a no-op function to "handle" callbacks
          this.resizeRegistry = this.context(function () {});
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.resizeRegistry) {
          this.resizeRegistry.unregister();
        }
      }
      /*
       * Notifies a container that a resize is necessary
       *
       * @returns {undefined}
       * @private
       */

    }, {
      key: "invalidateBounds",
      value: function invalidateBounds() {
        if (this.resizeRegistry) {
          this.resizeRegistry.notify({
            action: 'invalidateBounds'
          });
        }
      }
      /*
       * Handles the event that indicates a resize is necessary
       *
       * @param   {Object}    ev  Event payload
       *
       * @returns {undefined}
       * @private
       */

    }, {
      key: "render",
      value: function render() {
        var props = Object.assign({}, this.props);
        props[resize] = this.handleResize;
        return _react["default"].createElement(Wrapped, props);
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'Resizable', _class.contextType = ResizeContext, _temp;
});
exports.Resizable = Resizable;
var _default = Resizable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Skinnable/Skinnable.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/Skinnable/Skinnable.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Skinnable = exports["default"] = void 0;

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _classnames = _interopRequireDefault(__webpack_require__(/*! classnames */ "./node_modules/classnames/index.js"));

var _util = __webpack_require__(/*! ./util */ "./node_modules/@enact/ui/Skinnable/util.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}
/**
 * Default config for `Skinnable`.
 *
 * @memberof ui/Skinnable.Skinnable
 * @hocconfig
 * @public
 */


var defaultConfig = {
  /**
   * The prop in which to pass the skinVariants value to the wrapped component. The recommended
   * value is "skinVariants".
   *
   * If left unset, the skinVariant will not be passed to the wrapped component.
   *
   * @type {String}
   * @memberof ui/Skinnable.Skinnable.defaultConfig
   */
  variantsProp: null,

  /**
   * The prop in which to pass the effective skin to the wrapped component.
   *
   * If left unset, the current skin will not be passed to the wrapped component.
   *
   * @type {String}
   * @memberof ui/Skinnable.Skinnable.defaultConfig
   */
  prop: null,

  /**
   * A hash mapping the available skin names to their CSS class name.
   *
   * The keys are accepted as the only valid values for the `skin` prop on the wrapped component.
   *
   * @type {Object}
   * @memberof ui/Skinnable.Skinnable.defaultConfig
   */
  skins: null,

  /**
   * Assign a default skin from the `skins` list.
   *
   * This will be used if the instantiator of the wrapped component provides no value to the
   * `skin` prop.
   *
   * @type {String}
   * @memberof ui/Skinnable.Skinnable.defaultConfig
   */
  defaultSkin: null,

  /**
   * Initial collection of applied variants
   *
   * This will be used if the instantiator of the wrapped component provides no value to the
   * `skinVariants` prop.
   *
   * @type {String|String[]}
   * @memberof ui/Skinnable.Skinnable.defaultConfig
   */
  defaultVariants: null,

  /**
   * A complete list of all supported variants.
   *
   * These will translate to CSS class names so should not conflict with any skin names.
   * CamelCase is recommended for the values.
   *
   * @type {String[]}
   * @memberof ui/Skinnable.Skinnable.defaultConfig
   */
  allowedVariants: null
};
/**
 * Allows a component to respond to skin changes via the Context API
 *
 * Example:
 * ```
 * <App skin="dark">
 * 	<Section>
 * 		<Button>Gray Button</Button>
 * 	<Section>
 * 	<Popup skin="light">
 * 		<Button>White Button</Button>
 * 	</Popup>
 * </App>
 * ```
 *
 * @class SkinContext
 * @memberof ui/Skinnable
 * @hoc
 * @public
 */

var SkinContext = _react["default"].createContext(null);
/**
 * A higher-order component that assigns skinning classes for the purposes of styling children components.
 *
 * Use the config options to specify the skins your theme has. Set this up in your theme's decorator
 * component to establish your supported skins.
 *
 * Example:
 * ```
 * App = Skinnable({
 * 	skins: {
 * 		dark: 'moonstone',
 * 		light: 'moonstone-light'
 * 	},
 * 	defaultTheme: 'dark'
 * 	defaultVariants: ['highContrast'],
 * 	allowedVariants: ['highContrast', 'largeText', 'grayscale']
 * }, App);
 * ```
 *
 * @class Skinnable
 * @memberof ui/Skinnable
 * @hoc
 * @public
 */


var Skinnable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var prop = config.prop,
      skins = config.skins,
      defaultSkin = config.defaultSkin,
      allowedVariants = config.allowedVariants,
      variantsProp = config.variantsProp;
  var defaultVariants = (0, _util.objectify)(config.defaultVariants);

  function determineSkin(authorSkin, parentSkin) {
    return authorSkin || defaultSkin || parentSkin;
  }

  function determineVariants(authorVariants, parentVariants) {
    if (!allowedVariants || !(allowedVariants instanceof Array)) {
      // There are no allowed variants, so just return an empty object, indicating that there are no viable determined variants.
      return {};
    }

    authorVariants = (0, _util.objectify)(authorVariants);
    parentVariants = (0, _util.objectify)(parentVariants); // Merge all of the variants objects, preferring values in objects from left to right.

    var mergedObj = [defaultVariants, parentVariants, authorVariants].reduce(function (obj, a) {
      Object.keys(a).forEach(function (key) {
        obj[key] = (0, _util.preferDefined)(a[key], obj[key]);
      });
      return obj;
    }, {}); // Clean up the merged object

    for (var key in mergedObj) {
      // Delete keys that are null or undefined and delete keys that aren't allowed
      if (mergedObj[key] == null || !allowedVariants.includes(key)) {
        delete mergedObj[key];
      }
    }

    return mergedObj;
  }

  function getClassName(effectiveSkin, className, variants) {
    var skin = skins && skins[effectiveSkin]; // only apply the skin class if it's set and different from the "current" skin as
    // defined by the value in context

    if (skin || variants) {
      className = (0, _classnames["default"])(skin, variants, className);
    }

    if (className) return className;
  }

  return (0, _kind["default"])({
    name: 'Skinnable',
    propTypes:
    /** @lends ui/Skinnable.Skinnable.prototype */
    {
      /**
       * The name of the skin a component should use to render itself. Available skins are
       * defined in the "defaultConfig" for this HOC.
       *
       * @type {String}
       * @public
       */
      skin: _propTypes["default"].string,

      /**
       * The variant(s) on a skin that a component should use when rendering. These will
       * typically alter the appearance of a skin's existing definition in a way that does not
       * override that skin's general styling.
       *
       * Multiple data types are supported by this prop, which afford different conveniences
       * and abilities. String and Array are effectively the same, supporting just additions
       * to the variants being applied to a component, and are much more convenient. Objects
       * may also be used, and have the ability to disable variants being passed by their
       * ancestors. Objects take the format of a basic hash, with variants as key names and
       * true/false Booleans as values, depicting their state. If a variant is excluded from
       * any version of data type used to set this prop, that variant will ignored, falling
       * back to the defaultVariant or parent variant, in that order.
       *
       * skinVariants examples:
       * ```
       *  // String
       *  skinVariants="highContrast"
       *
       *  // Array
       *  skinVariants={['highContrast']}
       *
       *  // Object
       *  skinVariants={{
       *  	highContrast: true,
       *  	grayscale: false
       *  }}
       * ```
       *
       * @type {String|String[]|Object}
       * @public
       */
      skinVariants: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].array, _propTypes["default"].object])
    },
    render: function render(_ref) {
      var className = _ref.className,
          skin = _ref.skin,
          skinVariants = _ref.skinVariants,
          rest = _objectWithoutProperties(_ref, ["className", "skin", "skinVariants"]);

      return _react["default"].createElement(SkinContext.Consumer, null, function (value) {
        var _ref2 = value || {},
            parentSkin = _ref2.parentSkin,
            parentVariants = _ref2.parentVariants;

        var effectiveSkin = determineSkin(skin, parentSkin);
        var variants = determineVariants(skinVariants, parentVariants);
        var allClassNames = getClassName(effectiveSkin, className, variants);

        if (allClassNames) {
          rest.className = allClassNames;
        }

        if (prop) {
          rest[prop] = effectiveSkin;
        }

        if (variantsProp) {
          rest[variantsProp] = variants;
        }

        return _react["default"].createElement(SkinContext.Provider, {
          value: {
            parentSkin: effectiveSkin,
            parentVariants: variants
          }
        }, _react["default"].createElement(Wrapped, rest));
      });
    }
  });
});
exports.Skinnable = Skinnable;
var _default = Skinnable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Skinnable/util.js":
/*!**************************************************!*\
  !*** ./node_modules/@enact/ui/Skinnable/util.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.preferDefined = exports.objectify = void 0;

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var objectify = function objectify(arg) {
  // undefined, null, empty string case
  // bail early
  if (!arg) return {};

  if (typeof arg === 'string') {
    // String case, convert to array for processing
    arg = arg.split(' ');
  }

  if (arg instanceof Array) {
    // Convert array values into object properties
    return arg.reduce(function (obj, a) {
      obj[a] = true;
      return obj;
    }, {});
  } else if (_typeof(arg) === 'object') {
    // Can just return objects as-is
    return arg;
  } else {
    // Invalid, return an empty object
    return {};
  }
};

exports.objectify = objectify;

var preferDefined = function preferDefined(a, b) {
  return a != null ? a : b;
};

exports.preferDefined = preferDefined;

/***/ }),

/***/ "./node_modules/@enact/ui/Slottable/Slottable.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/Slottable/Slottable.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slottable = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _kind = _interopRequireDefault(__webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _warning = _interopRequireDefault(__webpack_require__(/*! warning */ "./node_modules/warning/browser.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
} // ** WARNING ** This is an intentional but likely dangerous hack necessary to clone a child while
// omitting the `slot` property. It relies on the black box structure of a React element which could
// change breaking this code. Without it, the slot property will cascade to a DOM node causing a
// React warning.


var cloneElement = function cloneElement(child) {
  var newProps = Object.assign({}, child.props);
  delete newProps.slot;
  return _react["default"].createElement(child.type, newProps);
};

var distributeChild = function distributeChild(child, index, slots, props) {
  var c, slot;

  var hasSlot = function hasSlot(name) {
    return slots.indexOf(name) !== -1;
  };

  if (!_react["default"].isValidElement(child)) {
    return false;
  } else if (child.props.slot) {
    var hasUserSlot = hasSlot(slot = child.props.slot);
     true ? (0, _warning["default"])(hasUserSlot, 'The slot "%s" specified on %s does not exist', child.props.slot, typeof child.type === 'string' ? child.type : child.type.name || child.type.displayName || 'component') : undefined;

    if (hasUserSlot) {
      c = cloneElement(child);
    }
  } else if (hasSlot(slot = child.type.defaultSlot)) {
    c = child;
  } else if (hasSlot(slot = child.type)) {
    var propNames = Object.keys(child.props);

    if (propNames.length === 1 && propNames[0] === 'children') {
      c = child.props.children;
    } else {
      c = child;
    }
  }

  if (c) {
    var prop = props[slot];

    if (prop) {
      if (Array.isArray(prop)) {
        prop.push(c);
      } else {
        prop = [prop, c];
      }
    } else {
      prop = c;
    }

    props[slot] = prop;
    return true;
  }

  return false;
};

var distribute = function distribute(slots, props) {
  if (slots) {
    var children = [];

    var adjusted = _objectSpread({}, props);

    _react["default"].Children.forEach(props.children, function (child, index) {
      if (!distributeChild(child, index, slots, adjusted)) {
        children.push(child);
      }
    });

    adjusted.children = children.length > 0 ? children : null;
    return adjusted;
  }

  return props;
};

var defaultConfig = {
  slots: null
};
/**
 * A higher-order component that allows wrapped components to separate children into pre-designated 'slots'.
 *
 * To use `Slottable`, you must configure it by passing in a config object with the `slots` member set to an
 * array of slot names.  Any children whose `slot` or `defaultSlot` property matches a named slot or whose
 * type matches a named slot will be placed into a property of the same name on the wrapped component.
 *
 * @class Slottable
 * @memberof ui/Slottable
 * @hoc
 * @public
 */

var Slottable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var slots = config.slots;
  return (0, _kind["default"])({
    name: 'Slottable',
    render: function render(props) {
      var adjusted = distribute(slots, props);
      return _react["default"].createElement(Wrapped, adjusted);
    }
  });
});
exports.Slottable = Slottable;
var _default = Slottable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/ClickAllow.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/ClickAllow.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClickAllow = exports["default"] = void 0;

var _platform = __webpack_require__(/*! @enact/core/platform */ "./node_modules/@enact/core/platform/platform.js");

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
} // It's possible that emitting `onTap` will cause a DOM change before the mousedown fires resulting
// in multiple tap/click events for the same user action. To avoid this, we store the last touchend
// target and timestamp to compare against the next mouse down. If the timestamp is different (e.g
// we're on a hybrid device that emitted a touch event but the next was a mouse event) or the target
// is the same (or no previous target was set if no touch events have been emitted), we allow the
// mousedown *across Touchable instances*.


var _lastTouchEnd = {
  target: null,
  timeStamp: 0
};

var shouldAllowMouseDown = function shouldAllowMouseDown(ev) {
  return ev.timeStamp !== _lastTouchEnd.timeStamp || ev.target === _lastTouchEnd.target || _lastTouchEnd.target === null;
};

var ClickAllow =
/*#__PURE__*/
function () {
  function ClickAllow() {
    _classCallCheck(this, ClickAllow);

    this.lastTouchEndTime = 0;
    this.lastMouseUpTime = 0;
  }

  _createClass(ClickAllow, [{
    key: "setLastTouchEnd",
    value: function setLastTouchEnd(ev) {
      if (ev && ev.type === 'touchend') {
        this.lastTouchEndTime = ev.timeStamp;
        _lastTouchEnd.timeStamp = ev.timeStamp;
        _lastTouchEnd.target = ev.target;
      }
    }
  }, {
    key: "setLastMouseUp",
    value: function setLastMouseUp(ev) {
      if (ev && ev.type === 'mouseup') {
        this.lastMouseUpTime = ev.timeStamp;
      }
    }
  }, {
    key: "shouldAllowMouseEvent",
    value: function shouldAllowMouseEvent(ev) {
      var timeStamp = ev.timeStamp; // iOS Safari sends both touch and mouse events (with differing timestamps)

      return !_platform.platform.ios && this.lastTouchEndTime !== timeStamp && shouldAllowMouseDown(ev);
    }
  }, {
    key: "shouldAllowTap",
    value: function shouldAllowTap(ev) {
      var type = ev.type,
          timeStamp = ev.timeStamp; // Allow the custom tap event for a “click” when it’s actually a click and it’s not from the
      // last mouseup event which would have fired the click for us

      return type === 'click' && this.lastMouseUpTime !== timeStamp;
    }
  }]);

  return ClickAllow;
}();

exports.ClickAllow = ClickAllow;
var _default = ClickAllow;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/Drag.js":
/*!**************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/Drag.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dragConfigPropType = exports.Drag = exports.defaultDragConfig = exports["default"] = void 0;

var _clamp = _interopRequireDefault(__webpack_require__(/*! ramda/src/clamp */ "./node_modules/ramda/src/clamp.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

var Tracking = {
  Untracked: 0,
  Active: 1,
  Paused: 2
};

var Drag = function Drag() {
  var _this = this;

  _classCallCheck(this, Drag);

  this.dragConfig = null;

  this.isDragging = function () {
    return _this.dragConfig != null;
  };

  this.setContainerBounds = function (node) {
    var _this$dragConfig = _this.dragConfig,
        isGlobal = _this$dragConfig.global,
        boxSizing = _this$dragConfig.boxSizing;
    var bounds = null;
    if (!node) return;

    if (isGlobal) {
      bounds = {
        minX: 0,
        minY: 0,
        maxX: window.innerWidth,
        maxY: window.innerHeight
      };
    } else {
      bounds = node.getBoundingClientRect(); // adjust for padding when using content-box

      if (boxSizing === 'content-box') {
        var computedStyle = window.getComputedStyle(node);
        bounds = {
          minX: bounds.left + parseInt(computedStyle.paddingLeft),
          minY: bounds.top + parseInt(computedStyle.paddingTop),
          maxX: bounds.right - parseInt(computedStyle.paddingRight),
          maxY: bounds.bottom - parseInt(computedStyle.paddingBottom)
        };
      }
    }

    _this.bounds = bounds;
  };

  this.updatePosition = function (clientX, clientY) {
    var _this$bounds = _this.bounds,
        maxX = _this$bounds.maxX,
        maxY = _this$bounds.maxY,
        minX = _this$bounds.minX,
        minY = _this$bounds.minY;
    var x = (0, _clamp["default"])(minX, maxX, clientX) - minX;
    var y = (0, _clamp["default"])(minY, maxY, clientY) - minY;

    if (x !== _this.x || y !== _this.y) {
      _this.x = x;
      _this.y = y;
      return true;
    }

    return false;
  };

  this.begin = function (config, _ref, coords, node) {
    var noResume = _ref.noResume,
        onDrag = _ref.onDrag,
        onDragEnd = _ref.onDragEnd,
        onDragStart = _ref.onDragStart;
    if (!onDrag && !onDragStart && !onDragEnd) return;
    var x = coords.x,
        y = coords.y;
    _this.tracking = Tracking.Untracked;
    _this.startX = x;
    _this.startY = y;
    _this.dragConfig = _objectSpread({}, config, {
      node: node,
      onDragStart: onDragStart,
      onDragEnd: onDragEnd,
      onDrag: onDrag,
      resume: !noResume
    });

    _this.setContainerBounds(node);

    _this.move(coords);
  };

  this.move = function (coords) {
    if (!_this.isDragging()) return;
    var _this$dragConfig2 = _this.dragConfig,
        moveTolerance = _this$dragConfig2.moveTolerance,
        onDrag = _this$dragConfig2.onDrag,
        onDragStart = _this$dragConfig2.onDragStart;

    if (_this.tracking === Tracking.Untracked) {
      var dx = coords.x - _this.startX;
      var dy = coords.y - _this.startY;

      if (Math.sqrt(dx * dx + dy * dy) >= moveTolerance) {
        _this.tracking = Tracking.Active;

        if (onDragStart) {
          onDragStart(_objectSpread({
            type: 'onDragStart'
          }, coords));
        }
      }
    } else if (onDrag && _this.tracking === Tracking.Active && _this.updatePosition(coords)) {
      onDrag(_objectSpread({
        type: 'onDrag'
      }, coords));
    }
  };

  this.blur = function () {
    if (!_this.isDragging()) return;

    if (!_this.dragConfig.global) {
      _this.end();
    }
  };

  this.end = function () {
    if (!_this.isDragging()) return;
    var onDragEnd = _this.dragConfig.onDragEnd;

    if (onDragEnd && _this.tracking !== Tracking.Untracked) {
      onDragEnd({
        type: 'onDragEnd'
      });
    }

    _this.tracking = Tracking.Untracked;
    _this.dragConfig = null;
  };

  this.enter = function () {
    if (!_this.isDragging()) return;

    if (_this.dragConfig.resume && _this.tracking === Tracking.Paused) {
      _this.tracking = Tracking.Active;
    }
  };

  this.leave = function () {
    if (!_this.isDragging()) return;

    if (!_this.dragConfig.global && _this.tracking === Tracking.Active) {
      _this.tracking = Tracking.Paused;
    }
  };
};

exports.Drag = Drag;
var defaultDragConfig = {
  boxSizing: 'border-box',
  global: false,
  moveTolerance: 16
};
exports.defaultDragConfig = defaultDragConfig;

var dragConfigPropType = _propTypes["default"].shape({
  boxSizing: _propTypes["default"].string,
  global: _propTypes["default"].bool,
  moveTolerance: _propTypes["default"].number
});

exports.dragConfigPropType = dragConfigPropType;
var _default = Drag;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/Flick.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/Flick.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.flickConfigPropType = exports.Flick = exports.defaultFlickConfig = exports["default"] = void 0;

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var Flick =
/*#__PURE__*/
function () {
  function Flick() {
    var _this = this;

    _classCallCheck(this, Flick);

    this.begin = function (config, _ref, coords) {
      var onFlick = _ref.onFlick;
      _this.minVelocity = config.minVelocity;
      _this.maxMoves = config.maxMoves;

      _this.cancelJob.startAfter(config.maxDuration);

      _this.tracking = !!onFlick;
      _this.moves.length = 0;
      _this.onFlick = onFlick;

      _this.move(coords);
    };

    this.move = function (_ref2) {
      var x = _ref2.x,
          y = _ref2.y;
      if (!_this.tracking) return;

      _this.moves.push({
        x: x,
        y: y,
        t: window.performance.now()
      }); // track specified # of points


      if (_this.moves.length > _this.maxMoves) {
        _this.moves.shift();
      }
    };

    this.blur = function () {
      _this.end();
    };

    this.cancel = function () {
      _this.tracking = false;
    };

    this.cancelJob = new _util.Job(this.cancel);

    this.end = function () {
      if (!_this.tracking) return;

      _this.cancelJob.stop();

      var moves = _this.moves;

      if (moves.length > 1) {
        // note: important to use up time to reduce flick
        // velocity based on time between move and up.
        var last = moves[moves.length - 1];
        var t = window.performance.now();
        var x = 0,
            y = 0; // take the greatest of flick between each tracked move and last move

        for (var i = moves.length - 2, m; m = moves[i]; i--) {
          // this flick (this move - last move) / (this time - last time)
          var dt = t - m.t;
          var vx = (last.x - m.x) / dt;
          var vy = (last.y - m.y) / dt; // if either axis is a greater flick than previously recorded use this one

          if (Math.abs(vx) > Math.abs(x) || Math.abs(vy) > Math.abs(y)) {
            x = vx;
            y = vy;
          }
        }

        var v = Math.sqrt(x * x + y * y);

        if (v > _this.minVelocity) {
          var vertical = Math.abs(y) > Math.abs(x); // generate the flick using the start event so it has those coordinates
          // this.sendFlick(ti.startEvent, x, y, v);

          _this.onFlick({
            type: 'onFlick',
            direction: vertical ? 'vertical' : 'horizontal',
            velocityX: x,
            velocityY: y,
            velocity: v
          });
        }
      }

      _this.tracking = false;
    };

    this.tracking = false;
    this.moves = [];
  }

  _createClass(Flick, [{
    key: "isTracking",
    value: function isTracking() {
      return this.tracking;
    }
  }]);

  return Flick;
}();

exports.Flick = Flick;
var defaultFlickConfig = {
  maxDuration: 250,
  maxMoves: 5,
  minVelocity: 0.1
};
exports.defaultFlickConfig = defaultFlickConfig;

var flickConfigPropType = _propTypes["default"].shape({
  maxDuration: _propTypes["default"].number,
  maxMoves: _propTypes["default"].number,
  maxVelocity: _propTypes["default"].number
});

exports.flickConfigPropType = flickConfigPropType;
var _default = Flick;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/Hold.js":
/*!**************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/Hold.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.holdConfigPropType = exports.Hold = exports.defaultHoldConfig = exports["default"] = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

var Hold =
/*#__PURE__*/
function () {
  function Hold() {
    var _this = this;

    _classCallCheck(this, Hold);

    this.isHolding = function () {
      return _this.holdConfig != null;
    };

    this.isWithinTolerance = function (_ref) {
      var x = _ref.x,
          y = _ref.y;
      var moveTolerance = _this.holdConfig.moveTolerance;
      var dx = _this.startX - x;
      var dy = _this.startY - y;
      return Math.sqrt(dx * dx + dy * dy) < moveTolerance;
    };

    this.begin = function (defaultConfig, _ref2, _ref3) {
      var holdConfig = _ref2.holdConfig,
          noResume = _ref2.noResume,
          onHold = _ref2.onHold,
          onHoldEnd = _ref2.onHoldEnd,
          onHoldPulse = _ref2.onHoldPulse;
      var x = _ref3.x,
          y = _ref3.y;
      if (!onHold && !onHoldPulse) return;
      _this.startX = x;
      _this.startY = y;
      _this.holdConfig = _objectSpread({}, defaultConfig, holdConfig, {
        onHold: onHold,
        onHoldEnd: onHoldEnd,
        onHoldPulse: onHoldPulse,
        resume: !noResume
      }); // copy the events array since it is mutated for each hold

      _this.holdConfig.events = _this.holdConfig.events.slice();

      _this.holdConfig.events.sort(function (a, b) {
        if (a.time < b.time) return -1;
        if (a.time > b.time) return 1;
        return 0;
      });

      _this.pulsing = false;
      _this.next = _this.holdConfig.events.shift();

      if (_this.next) {
        _this.holdStart = window.performance.now();

        _this.startJob();
      }
    };

    this.move = function (coords) {
      if (!_this.isHolding()) return;
      var _this$holdConfig = _this.holdConfig,
          cancelOnMove = _this$holdConfig.cancelOnMove,
          resume = _this$holdConfig.resume;

      if (cancelOnMove) {
        var shouldEnd = !_this.isWithinTolerance(coords);

        if (shouldEnd) {
          if (resume) {
            _this.suspend();
          } else {
            _this.end();
          }
        } else if (resume && !shouldEnd) {
          _this.resume();
        }
      }
    };

    this.blur = function () {
      if (!_this.isHolding()) return;

      if (!_this.holdConfig.global) {
        _this.end();
      }
    };

    this.end = function () {
      if (!_this.isHolding()) return;
      var onHoldEnd = _this.holdConfig.onHoldEnd;

      if (_this.pulsing && onHoldEnd) {
        var time = window.performance.now() - _this.holdStart;

        onHoldEnd({
          type: 'onHoldEnd',
          time: time
        });
      }

      _this.suspend();

      _this.pulsing = false;
      _this.holdConfig = null;
    };

    this.enter = function () {
      if (!_this.isHolding()) return;
      var _this$holdConfig2 = _this.holdConfig,
          cancelOnMove = _this$holdConfig2.cancelOnMove,
          resume = _this$holdConfig2.resume;

      if (resume && !cancelOnMove) {
        _this.resume();
      }
    };

    this.leave = function () {
      if (!_this.isHolding()) return;
      var _this$holdConfig3 = _this.holdConfig,
          isGlobal = _this$holdConfig3.global,
          resume = _this$holdConfig3.resume;
      if (isGlobal) return;

      if (resume) {
        _this.suspend();
      } else {
        _this.end();
      }
    };

    this.suspend = function () {
      clearInterval(_this.holdJob);
      _this.holdJob = null;
    };

    this.resume = function () {
      if (_this.holdJob !== null) return;

      _this.handlePulse();

      _this.startJob();
    };

    this.handlePulse = function () {
      var holdTime = window.performance.now() - _this.holdStart;

      var n = _this.next;

      while (n && n.time <= holdTime) {
        var _this$holdConfig4 = _this.holdConfig,
            events = _this$holdConfig4.events,
            onHold = _this$holdConfig4.onHold;
        _this.pulsing = true;

        if (onHold) {
          onHold(_objectSpread({
            type: 'onHold'
          }, n));
        } // if the hold is canceled from the onHold handler, we should bail early and prevent
        // additional hold/pulse events


        if (!_this.isHolding()) {
          _this.pulsing = false;
          break;
        }

        n = _this.next = events && events.shift();
      }

      if (_this.pulsing) {
        var onHoldPulse = _this.holdConfig.onHoldPulse;

        if (onHoldPulse) {
          onHoldPulse({
            type: 'onHoldPulse',
            time: holdTime
          });
        }
      }
    };

    this.holdJob = null;
    this.holdStart = null;
    this.pulsing = false;
    this.next = null;
  }

  _createClass(Hold, [{
    key: "startJob",
    value: function startJob() {
      var frequency = this.holdConfig.frequency;

      if (!this.holdJob) {
        this.holdJob = setInterval(this.handlePulse, frequency);
      }
    }
  }]);

  return Hold;
}();

exports.Hold = Hold;
var defaultHoldConfig = {
  cancelOnMove: false,
  events: [{
    name: 'hold',
    time: 200
  }],
  frequency: 200,
  global: false,
  moveTolerance: 16
};
exports.defaultHoldConfig = defaultHoldConfig;

var holdConfigPropType = _propTypes["default"].shape({
  cancelOnMove: _propTypes["default"].bool,
  events: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    name: _propTypes["default"].string,
    time: _propTypes["default"].number
  })),
  frequency: _propTypes["default"].number,
  global: _propTypes["default"].bool,
  moveTolerance: _propTypes["default"].number
});

exports.holdConfigPropType = holdConfigPropType;
var _default = Hold;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/Touchable.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/Touchable.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "configure", {
  enumerable: true,
  get: function get() {
    return _config.configure;
  }
});
exports.Touchable = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _dispatcher = __webpack_require__(/*! @enact/core/dispatcher */ "./node_modules/@enact/core/dispatcher/dispatcher.js");

var _complement = _interopRequireDefault(__webpack_require__(/*! ramda/src/complement */ "./node_modules/ramda/src/complement.js"));

var _platform = _interopRequireDefault(__webpack_require__(/*! @enact/core/platform */ "./node_modules/@enact/core/platform/platform.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _config = __webpack_require__(/*! ./config */ "./node_modules/@enact/ui/Touchable/config.js");

var _state = __webpack_require__(/*! ./state */ "./node_modules/@enact/ui/Touchable/state.js");

var _ClickAllow = _interopRequireDefault(__webpack_require__(/*! ./ClickAllow */ "./node_modules/@enact/ui/Touchable/ClickAllow.js"));

var _Drag = __webpack_require__(/*! ./Drag */ "./node_modules/@enact/ui/Touchable/Drag.js");

var _Flick = __webpack_require__(/*! ./Flick */ "./node_modules/@enact/ui/Touchable/Flick.js");

var _Hold = __webpack_require__(/*! ./Hold */ "./node_modules/@enact/ui/Touchable/Hold.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

var getEventCoordinates = function getEventCoordinates(ev) {
  var x = ev.clientX,
      y = ev.clientY,
      type = ev.type;

  if (type.indexOf('touch') === 0) {
    x = ev.targetTouches[0].clientX;
    y = ev.targetTouches[0].clientY;
  }

  return {
    x: x,
    y: y
  };
}; // Establish a standard payload for onDown/onUp/onTap events and pass it along to a handler


var makeTouchableEvent = function makeTouchableEvent(type) {
  return function (ev) {
    var target = ev.target,
        currentTarget = ev.currentTarget;
    var clientX = ev.clientX,
        clientY = ev.clientY,
        pageX = ev.pageX,
        pageY = ev.pageY;

    if (ev.changedTouches) {
      clientX = ev.changedTouches[0].clientX;
      clientY = ev.changedTouches[0].clientY;
      pageX = ev.changedTouches[0].pageX;
      pageY = ev.changedTouches[0].pageY;
    }

    return {
      type: type,
      target: target,
      currentTarget: currentTarget,
      clientX: clientX,
      clientY: clientY,
      pageX: pageX,
      pageY: pageY
    };
  };
};

var isEnabled = (0, _handle.forProp)('disabled', false);
var handleDown = (0, _handle.handle)(isEnabled, (0, _handle.adaptEvent)(makeTouchableEvent('onDown'), (0, _handle.forwardWithPrevent)('onDown')), (0, _handle.call)('activate'), (0, _handle.call)('startGesture')).named('handleDown');
var handleUp = (0, _handle.handle)(isEnabled, (0, _handle.call)('endGesture'), (0, _handle.call)('isTracking'), (0, _handle.adaptEvent)(makeTouchableEvent('onUp'), (0, _handle.forwardWithPrevent)('onUp')), (0, _handle.adaptEvent)(makeTouchableEvent('onTap'), (0, _handle.forward)('onTap')))["finally"]((0, _handle.call)('deactivate')).named('handleUp');
var handleEnter = (0, _handle.handle)(isEnabled, (0, _handle.forProp)('noResume', false), (0, _handle.call)('enterGesture'), (0, _handle.call)('isPaused'), (0, _handle.call)('activate')).named('handleEnter');
var handleLeave = (0, _handle.handle)(isEnabled, (0, _handle.call)('leaveGesture'), (0, _handle.oneOf)([(0, _handle.forProp)('noResume', false), (0, _handle.call)('pause')], [_handle.returnsTrue, (0, _handle.call)('deactivate')])).named('handleLeave'); // Mouse event handlers

var handleMouseDown = (0, _handle.handle)((0, _handle.forward)('onMouseDown'), (0, _handle.call)('shouldAllowMouseEvent'), handleDown);
var handleMouseEnter = (0, _handle.handle)((0, _handle.forward)('onMouseEnter'), handleEnter);
var handleMouseMove = (0, _handle.handle)((0, _handle.forward)('onMouseMove'), (0, _handle.call)('moveGesture'));
var handleMouseLeave = (0, _handle.handle)((0, _handle.forward)('onMouseLeave'), handleLeave);
var handleMouseUp = (0, _handle.handle)((0, _handle.returnsTrue)((0, _handle.call)('setLastMouseUp')), (0, _handle.forward)('onMouseUp'), handleUp);
var handleClick = (0, _handle.handle)(isEnabled, // wrapping another handler to always forward onClick but, if onTap should occur, it should
// occur first to keep in sync with the up handler which emits onTap first
(0, _handle.handle)((0, _handle.call)('shouldAllowTap'), (0, _handle.call)('activate'), handleUp)["finally"]((0, _handle.forward)('onClick'))); // Touch event handlers

var handleTouchStart = (0, _handle.handle)((0, _handle.forward)('onTouchStart'), handleDown);
var handleTouchMove = (0, _handle.handle)((0, _handle.forward)('onTouchMove'), (0, _handle.call)('isTracking'), // we don't receive enter/leave events during a touch so we have to simulate them by
// detecting when the touch leaves the boundary. oneOf returns the value of whichever
// branch it follows so we append moveHold to either to handle moves that aren't
// entering or leaving
(0, _handle.adaptEvent)(makeTouchableEvent('onMove'), (0, _handle.forward)('onMove')), (0, _handle.oneOf)([(0, _handle.call)('hasTouchLeftTarget'), handleLeave], [_handle.returnsTrue, handleEnter])["finally"]((0, _handle.call)('moveGesture')));
var handleTouchEnd = (0, _handle.handle)((0, _handle.forward)('onTouchEnd'), // block the next mousedown to prevent duplicate touchable events
(0, _handle.returnsTrue)((0, _handle.call)('setLastTouchEnd')), (0, _handle.call)('isTracking'), (0, _complement["default"])((0, _handle.call)('hasTouchLeftTarget')), handleUp); // Global touchend/mouseup event handler to deactivate the component

var handleGlobalUp = (0, _handle.handle)((0, _handle.call)('isTracking'), (0, _handle.call)('deactivate'))["finally"]((0, _handle.call)('endGesture'));
var handleGlobalMove = (0, _handle.handle)((0, _handle.call)('isTracking'), (0, _handle.call)('containsCurrentTarget'), (0, _handle.call)('moveGesture'));
var handleBlur = (0, _handle.handle)((0, _handle.forward)('onBlur'), (0, _handle.call)('hasFocus'), (0, _handle.call)('blurGesture'));
/**
 * Default config for `Touchable`.
 *
 * @memberof ui/Touchable.Touchable
 * @hocconfig
 */

var defaultConfig = {
  /**
   * Configures the prop name to pass the active state to the wrapped component
   *
   * @type {String}
   * @default null
   * @memberof ui/Touchable.Touchable.defaultConfig
   */
  activeProp: null
};
/**
 * A higher-order component that provides a consistent set of pointer events -- `onDown`, `onUp`,
 * and `onTap` -- across mouse and touch interfaces along with support for common gestures including
 * `onFlick`, `onDrag`, `onHold`, and `onHoldPulse`.
 *
 * @class Touchable
 * @memberof ui/Touchable
 * @hoc
 * @public
 */

var Touchable = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var activeProp = config.activeProp;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));
      _this.state = {
        active: _state.States.Inactive,
        prevDisabled: props.disabled
      };
      _this.config = (0, _config.mergeConfig)({
        drag: props.dragConfig,
        flick: props.flickConfig,
        hold: props.holdConfig
      });
      _this.target = null;
      _this.targetHadFocus = false;
      _this.handle = _handle.handle.bind(_assertThisInitialized(_this));
      _this.drag = new _Drag.Drag();
      _this.flick = new _Flick.Flick();
      _this.hold = new _Hold.Hold();
      _this.clickAllow = new _ClickAllow["default"]();
      handleClick.bindAs(_assertThisInitialized(_this), 'handleClick');
      handleBlur.bindAs(_assertThisInitialized(_this), 'handleBlur');
      handleMouseDown.bindAs(_assertThisInitialized(_this), 'handleMouseDown');
      handleMouseEnter.bindAs(_assertThisInitialized(_this), 'handleMouseEnter');
      handleMouseMove.bindAs(_assertThisInitialized(_this), 'handleMouseMove');
      handleMouseLeave.bindAs(_assertThisInitialized(_this), 'handleMouseLeave');
      handleMouseUp.bindAs(_assertThisInitialized(_this), 'handleMouseUp');
      handleTouchStart.bindAs(_assertThisInitialized(_this), 'handleTouchStart');
      handleTouchMove.bindAs(_assertThisInitialized(_this), 'handleTouchMove');
      handleTouchEnd.bindAs(_assertThisInitialized(_this), 'handleTouchEnd');
      handleGlobalUp.bindAs(_assertThisInitialized(_this), 'handleGlobalUp');
      handleGlobalMove.bindAs(_assertThisInitialized(_this), 'handleGlobalMove');
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        // ensure we clean up our internal state
        if (_platform["default"].touch) {
          (0, _dispatcher.on)('touchend', this.handleGlobalUp, document);
        }

        (0, _dispatcher.on)('mouseup', this.handleGlobalUp, document);
        (0, _dispatcher.on)('mousemove', this.handleGlobalMove, document);
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (!prevProps.disabled && this.props.disabled) {
          this.clearTarget();
          this.hold.end();
        }

        this.config = (0, _config.mergeConfig)({
          drag: this.props.dragConfig,
          flick: this.props.flickConfig,
          hold: this.props.holdConfig
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.clearTarget();
        this.hold.end();

        if (_platform["default"].touch) {
          (0, _dispatcher.off)('touchend', this.handleGlobalUp, document);
        }

        (0, _dispatcher.off)('mouseup', this.handleGlobalUp, document);
        (0, _dispatcher.off)('mousemove', this.handleGlobalMove, document);
      } // State Management

    }, {
      key: "setTarget",
      value: function setTarget(target) {
        this.target = target;

        if (_platform["default"].touch) {
          (0, _dispatcher.on)('contextmenu', _handle.preventDefault);
          this.targetBounds = this.target.getBoundingClientRect();
        }
      }
    }, {
      key: "clearTarget",
      value: function clearTarget() {
        if (_platform["default"].touch) {
          (0, _dispatcher.off)('contextmenu', _handle.preventDefault);
          this.targetBounds = null;
        }

        this.target = null;
      }
    }, {
      key: "activate",
      value: function activate(ev) {
        this.setTarget(ev.currentTarget);

        if (activeProp) {
          this.setState(_state.activate);
        }

        return true;
      }
    }, {
      key: "deactivate",
      value: function deactivate() {
        this.clearTarget();

        if (activeProp) {
          this.setState(_state.deactivate);
        }

        return true;
      }
    }, {
      key: "pause",
      value: function pause() {
        if (activeProp) {
          this.setState(_state.pause);
        }

        return true;
      } // Gesture Support

    }, {
      key: "startGesture",
      value: function startGesture(ev, props) {
        var coords = getEventCoordinates(ev);
        var _this$config = this.config,
            hold = _this$config.hold,
            flick = _this$config.flick,
            drag = _this$config.drag;
        this.hold.begin(hold, props, coords);
        this.flick.begin(flick, props, coords);
        this.drag.begin(drag, props, coords, this.target);
        this.targetHadFocus = this.target === document.activeElement;
        return true;
      }
    }, {
      key: "moveGesture",
      value: function moveGesture(ev) {
        var coords = getEventCoordinates(ev);
        this.hold.move(coords);
        this.flick.move(coords);
        this.drag.move(coords);
        return true;
      }
    }, {
      key: "enterGesture",
      value: function enterGesture() {
        this.drag.enter();
        this.hold.enter();
        return true;
      }
    }, {
      key: "leaveGesture",
      value: function leaveGesture() {
        this.drag.leave();
        this.hold.leave();
        return true;
      }
    }, {
      key: "blurGesture",
      value: function blurGesture() {
        this.targetHadFocus = false;
        this.hold.blur();
        this.flick.blur();
        this.drag.blur();
        return true;
      }
    }, {
      key: "endGesture",
      value: function endGesture() {
        this.targetHadFocus = false;
        this.hold.end();
        this.flick.end();
        this.drag.end();
        return true;
      } // Event handler utilities

    }, {
      key: "isTracking",
      value: function isTracking() {
        // verify we had a target and the up target is still within the current node
        return this.target;
      }
    }, {
      key: "isPaused",
      value: function isPaused() {
        return this.state.active === _state.States.Paused;
      }
    }, {
      key: "hasFocus",
      value: function hasFocus() {
        return this.targetHadFocus;
      }
    }, {
      key: "hasTouchLeftTarget",
      value: function hasTouchLeftTarget(ev) {
        var _this2 = this;

        return Array.from(ev.changedTouches).reduce(function (hasLeft, _ref) {
          var pageX = _ref.pageX,
              pageY = _ref.pageY;
          var _this2$targetBounds = _this2.targetBounds,
              left = _this2$targetBounds.left,
              right = _this2$targetBounds.right,
              top = _this2$targetBounds.top,
              bottom = _this2$targetBounds.bottom;
          return hasLeft && left > pageX || right < pageX || top > pageY || bottom < pageY;
        }, true);
      }
    }, {
      key: "containsCurrentTarget",
      value: function containsCurrentTarget(_ref2) {
        var target = _ref2.target;
        return !this.target.contains(target);
      }
    }, {
      key: "shouldAllowMouseEvent",
      value: function shouldAllowMouseEvent(ev) {
        return this.clickAllow.shouldAllowMouseEvent(ev);
      }
    }, {
      key: "shouldAllowTap",
      value: function shouldAllowTap(ev) {
        return this.clickAllow.shouldAllowTap(ev);
      }
    }, {
      key: "setLastMouseUp",
      value: function setLastMouseUp(ev) {
        this.clickAllow.setLastMouseUp(ev);
      }
    }, {
      key: "setLastTouchEnd",
      value: function setLastTouchEnd(ev) {
        this.clickAllow.setLastTouchEnd(ev);
      }
    }, {
      key: "addHandlers",
      value: function addHandlers(props) {
        props.onClick = this.handleClick;
        props.onMouseDown = this.handleMouseDown;
        props.onMouseLeave = this.handleMouseLeave;
        props.onMouseMove = this.handleMouseMove;
        props.onMouseEnter = this.handleMouseEnter;
        props.onMouseUp = this.handleMouseUp;
        props.onBlur = this.handleBlur;

        if (_platform["default"].touch) {
          props.onTouchStart = this.handleTouchStart;
          props.onTouchMove = this.handleTouchMove;
          props.onTouchEnd = this.handleTouchEnd;
        }
      }
    }, {
      key: "render",
      value: function render() {
        var props = Object.assign({}, this.props);
        this.addHandlers(props);
        delete props.dragConfig;
        delete props.flickConfig;
        delete props.holdConfig;
        delete props.noResume;
        delete props.onDown;
        delete props.onFlick;
        delete props.onHold;
        delete props.onHoldEnd;
        delete props.onHoldPulse;
        delete props.onTap;
        delete props.onUp;

        if (activeProp) {
          props[activeProp] = this.state.active !== _state.States.Inactive;
        }

        return _react["default"].createElement(Wrapped, props);
      }
    }], [{
      key: "getDerivedStateFromProps",
      value: function getDerivedStateFromProps(props, state) {
        var disabled = props.disabled;
        var prevDisabled = state.prevDisabled;

        if (prevDisabled !== disabled) {
          return _objectSpread({}, activeProp && !prevDisabled && disabled && (0, _state.deactivate)(state), {
            prevDisabled: disabled
          });
        }

        return null;
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'Touchable', _class.propTypes =
  /** @lends ui/Touchable.Touchable.prototype */
  {
    /**
     * Disables the component.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    disabled: _propTypes["default"].bool,

    /**
     * Instance-specific overrides of the drag configuration.
     *
     * @see ui/Touchable.configure
     * @type {Object}
     * @public
     */
    dragConfig: _Drag.dragConfigPropType,

    /**
     * Instance-specific overrides of the flick configuration.
     *
     * @see ui/Touchable.configure
     * @type {Object}
     * @public
     */
    flickConfig: _Flick.flickConfigPropType,

    /**
     * Instance-specific overrides of the hold configuration.
     *
     * @see ui/Touchable.configure
     * @type {Object}
     * @public
     */
    holdConfig: _Hold.holdConfigPropType,

    /**
     * Prevents resuming the touch events and gestures when re-entering the component.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    noResume: _propTypes["default"].bool,

    /**
     * Event handler for 'down' pointer events.
     *
     * @type {Function}
     * @public
     */
    onDown: _propTypes["default"].func,

    /**
     * Event handler for a drag gesture.
     *
    	 * Event payload includes:
     *
     * * `type` - Type of event, `'onDrag'`
     * * `x` - Horizontal position of the drag, relative to the viewport
     * * `y` - Vertical position of the drag, relative to the viewport
     *
     * @type {Function}
     * @public
     */
    onDrag: _propTypes["default"].func,

    /**
     * Event handler for the end of a drag gesture.
     *
    	 * Event payload includes:
     *
     * * `type` - Type of event, `'onDragEnd'`
     *
     * @type {Function}
     * @public
     */
    onDragEnd: _propTypes["default"].func,

    /**
     * Event handler for the start of a drag gesture.
     *
    	 * Event payload includes:
     *
     * * `type` - Type of event, `'onDragStart'`
     * * `x` - Horizontal position of the drag, relative to the viewport
     * * `y` - Vertical position of the drag, relative to the viewport
     *
     * @type {Function}
     * @public
     */
    onDragStart: _propTypes["default"].func,

    /**
     * Event handler for a flick gesture.
     *
     * Event payload includes:
     *
     * * `type` - Type of event, `'onFlick'`
     * * `direction` - Primary direction of the flick, either `'horizontal'` or `'vertical'`
     * * `velocity` - Velocity of flick
     * * `velocityX` - Velocity of flick along te horizontal axis
     * * `velocityY` - Velocity of flick along te vertical axis
     *
     * @type {Function}
     * @public
     */
    onFlick: _propTypes["default"].func,

    /**
     * Event handler for hold events.
     *
     * Event payload includes:
     *
     * * `type` - Type of event, `'onHold'`
     * * `name` - The name of the hold as configured in the events list
     * * `time` - Time, in milliseconds, configured for this hold which may vary slightly
     *            from time since the hold began
     *
     * @type {Function}
     * @public
     */
    onHold: _propTypes["default"].func,

    /**
     * Event handler for the end of hold events.
     *
     * Event payload includes:
     *
     * * `type` - Type of event, `'onHoldEnd'`
     * * `time` - Time, in milliseconds, since the hold began
     *
     * @type {Function}
     * @public
     */
    onHoldEnd: _propTypes["default"].func,

    /**
     * Event handler for hold pulse events
     *
     * Event payload includes:
     *
     * * `type` - Type of event, `'onHoldPulse'`
     * * `time` - Time, in milliseconds, since the hold began
     *
     * @type {Function}
     * @public
     */
    onHoldPulse: _propTypes["default"].func,

    /**
     * Event handler for 'tap' pointer events
     *
     * @type {Function}
     * @public
     */
    onTap: _propTypes["default"].func,

    /**
     * Event handler for 'up' pointer events
     *
     * @type {Function}
     * @public
     */
    onUp: _propTypes["default"].func
  }, _class.defaultProps = {
    disabled: false,
    noResume: false
  }, _temp;
});
exports.Touchable = Touchable;
var _default = Touchable;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/config.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/config.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resetDefaultConfig = exports.mergeConfig = exports.getConfig = exports.configure = exports["default"] = void 0;

var _Drag = __webpack_require__(/*! ./Drag.js */ "./node_modules/@enact/ui/Touchable/Drag.js");

var _Flick = __webpack_require__(/*! ./Flick.js */ "./node_modules/@enact/ui/Touchable/Flick.js");

var _Hold = __webpack_require__(/*! ./Hold.js */ "./node_modules/@enact/ui/Touchable/Hold.js");

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

var allowedDragKeys = Object.keys(_Drag.defaultDragConfig);
var allowedFlickKeys = Object.keys(_Flick.defaultFlickConfig);
var allowedHoldKeys = Object.keys(_Hold.defaultHoldConfig);
/**
 * The Global Gesture Configuration Object
 *
 * @private
 * @memberof ui/Touchable
 */

var config = {}; // map-friendly clone method

var clone = function clone(o) {
  return Object.assign({}, o);
}; // Merges two configuation objects while retaining only the allowed keys


var mergeGestureConfig = function mergeGestureConfig(current, update, allowed) {
  var cfg = _objectSpread({}, current, update);

  Object.keys(cfg).forEach(function (key) {
    if (allowed.indexOf(key) === -1) {
      delete cfg[key];
    }
  });
  return cfg;
}; // Merges the current global config with the provided `cfg` and returns the result


var mergeConfig = function mergeConfig(cfg) {
  var merged = {
    drag: mergeGestureConfig(config.drag, cfg.drag, allowedDragKeys),
    flick: mergeGestureConfig(config.flick, cfg.flick, allowedFlickKeys),
    hold: mergeGestureConfig(config.hold, cfg.hold, allowedHoldKeys)
  };
  merged.hold.events = merged.hold.events.map(clone);
  return merged;
};
/**
 * Configures the global gesture configuration for the application.
 *
 * Example:
 * ```
 * // Updates the `maxMoves`, `moveTolerance`, and `frequency` configurations while retaining the
 * // current value of all other configurations
 * configure({
 *     flick: {
 *         maxMoves: 10
 *     },
 *     hold: {
 *         moveTolerance: 32,
 *         frequency: 400
 *     }
 * });
 * ```
 *
 * Each type of gesture has its own set of configuration properties grouped within a separate object
 * keyed by the name of the gesture. Partial configurations may be passed and will be merged with
 * the current configuration.
 *
 * `drag`
 *
 *   * `boxSizing` - The part of the component's box model is used as the bounds of the constraint.
 *     Only applies when `global` is `false`.
 *     * `'border-box'` - the default, includes the padding and border but excludes the margin.
 *     * `'content-box'` - excludes the padding, border, and margin.
 *   * `global` - When `true`, drag gestures will continue when leaving the bounds of the component
 *      or blurring the component.
 *   * `moveTolerance` - The number of pixels from the start position of the drag that the pointer
 *     may move before cancelling the drag. Defaults to `16`.
 *
 * `flick`
 *
 *   * `maxDuration` - The amount of time, in milliseconds, to complete a flick gesture before it
 *     is cancelled. Defaults to 250.
 *   * `maxMoves` - The number of moves tracked to determine if a flick occurred. Defaults to `5`.
 *   * `minVelocity` - The minimum threshold, measured as the change in pixels over the change in
 *     time per move, that must be exceeded to generate a `onFlick` event.
 *
 * `hold`
 *
 *   * `cancelOnMove` - When `true`, the hold is cancelled when moving beyond the `moveTolerance`.
 *     Defaults to `false`
 *   * `global` - When `true`, hold gestures will continue when leaving the bounds of the component
 *      or blurring the component.
 *   * `moveTolerance` - The number of pixels from the start position of the hold that the pointer
 *     may move before cancelling the hold. Ignored when `cancelOnMove` is `false`. Defaults to
 *     `16`.
 *   * `frequency` - The time, in milliseconds, to poll for hold events. Defaults to `200`.
 *   * `events` - An array of `onHold` events which each contain a `name` and `time`. The `time`
 *     controls the amount of time that must pass before this `onHold` event is fired and should
 *     be a multiple of `frequency`.
 *
 * @function
 * @param   {Object}     cfg  A partial or complete configuration object
 *
 * @returns {undefined}
 * @public
 * @memberof ui/Touchable
 */


exports.mergeConfig = mergeConfig;

var configure = function configure(cfg) {
  config = mergeConfig(cfg);
};

exports.configure = configure;

var getConfig = function getConfig() {
  return config;
};

exports.getConfig = getConfig;

var resetDefaultConfig = function resetDefaultConfig() {
  return configure({
    drag: _Drag.defaultDragConfig,
    hold: _Hold.defaultHoldConfig,
    flick: _Flick.defaultFlickConfig
  });
};

exports.resetDefaultConfig = resetDefaultConfig;
resetDefaultConfig();
var _default = configure;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/Touchable/state.js":
/*!***************************************************!*\
  !*** ./node_modules/@enact/ui/Touchable/state.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.States = exports.pause = exports.deactivate = exports.activate = void 0;
var States = {
  Inactive: 0,
  Paused: 1,
  Active: 2
};
exports.States = States;

var setActive = function setActive(state) {
  return function (_ref) {
    var active = _ref.active;
    return active !== state ? {
      active: state
    } : null;
  };
}; // State management functions


var activate = setActive(States.Active);
exports.activate = activate;
var deactivate = setActive(States.Inactive);
exports.deactivate = deactivate;

var pause = function pause(_ref2) {
  var active = _ref2.active;
  return active === States.Active ? {
    active: States.Paused
  } : null;
};

exports.pause = pause;

/***/ }),

/***/ "./node_modules/@enact/ui/ViewManager/Arranger.js":
/*!********************************************************!*\
  !*** ./node_modules/@enact/ui/ViewManager/Arranger.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shape = exports.SlideBottomArranger = exports.SlideTopArranger = exports.SlideLeftArranger = exports.SlideRightArranger = exports.SlideArranger = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _arrange = __webpack_require__(/*! ./arrange */ "./node_modules/@enact/ui/ViewManager/arrange.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
/*
 * Exports a number of pre-defined arrangers for use with {@link ui/ViewManager}.
 * note: not jsdoc on purpose
 */

/**
 * An object with callback functions to arrange views within {@link ui/ViewManager.ViewManager}.
 *
 * @typedef {Object} Arranger
 * @property {Function} enter
 * @property {Function} leave
 * @property {Function} stay
 * @memberof ui/ViewManager
 */

/**
 * A basic arranger that must be configured with `enter` and `leave` direction
 *
 * @function
 * @memberof ui/ViewManager
 * @param {Object}    config    Configuration object including `amount`, `enter` and `leave` properties
 * @returns {Object}            An arranger
 * @public
 */


var SlideArranger = function SlideArranger(_ref) {
  var _ref$amount = _ref.amount,
      amount = _ref$amount === void 0 ? 100 : _ref$amount,
      enter = _ref.enter,
      leave = _ref.leave;
  return {
    enter: (0, _arrange.reverse)((0, _arrange.compose)(_arrange.clearTransform, (0, _arrange.slideInPartial)(amount, enter), _arrange.accelerate)),
    leave: (0, _arrange.reverse)((0, _arrange.compose)(_arrange.clearTransform, (0, _arrange.slideOutPartial)(amount, leave), _arrange.accelerate))
  };
};
/**
 * An arranger that enters from the left and leaves to the right.
 *
 * @type {Arranger}
 * @memberof ui/ViewManager
 * @public
 */


exports.SlideArranger = SlideArranger;
var SlideRightArranger = SlideArranger({
  enter: 'left',
  leave: 'right'
});
/**
 * An arranger that enters from the right and leaves to the left..
 *
 * @type {Arranger}
 * @memberof ui/ViewManager
 * @public
 */

exports.SlideRightArranger = SlideRightArranger;
var SlideLeftArranger = SlideArranger({
  enter: 'right',
  leave: 'left'
});
/**
 * An arranger that enters from the bottom and leaves to the top..
 *
 * @type {Arranger}
 * @memberof ui/ViewManager
 * @public
 */

exports.SlideLeftArranger = SlideLeftArranger;
var SlideTopArranger = SlideArranger({
  enter: 'bottom',
  leave: 'top'
});
/**
 * An arranger that enters from the top and leaves to the bottom..
 *
 * @type {Arranger}
 * @memberof ui/ViewManager
 * @public
 */

exports.SlideTopArranger = SlideTopArranger;
var SlideBottomArranger = SlideArranger({
  enter: 'top',
  leave: 'bottom'
});
/**
 * propType validation for Arranger transitions
 * @memberof ui/ViewManager
 * @private
 */

exports.SlideBottomArranger = SlideBottomArranger;

var shape = _propTypes["default"].shape({
  enter: _propTypes["default"].func,
  leave: _propTypes["default"].func
});

exports.shape = shape;

/***/ }),

/***/ "./node_modules/@enact/ui/ViewManager/TransitionGroup.js":
/*!***************************************************************!*\
  !*** ./node_modules/@enact/ui/ViewManager/TransitionGroup.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TransitionGroup = exports["default"] = void 0;

var _handle = __webpack_require__(/*! @enact/core/handle */ "./node_modules/@enact/core/handle/handle.js");

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _eqBy = _interopRequireDefault(__webpack_require__(/*! ramda/src/eqBy */ "./node_modules/ramda/src/eqBy.js"));

var _findIndex = _interopRequireDefault(__webpack_require__(/*! ramda/src/findIndex */ "./node_modules/ramda/src/findIndex.js"));

var _identity = _interopRequireDefault(__webpack_require__(/*! ramda/src/identity */ "./node_modules/ramda/src/identity.js"));

var _prop = _interopRequireDefault(__webpack_require__(/*! ramda/src/prop */ "./node_modules/ramda/src/prop.js"));

var _propEq = _interopRequireDefault(__webpack_require__(/*! ramda/src/propEq */ "./node_modules/ramda/src/propEq.js"));

var _remove = _interopRequireDefault(__webpack_require__(/*! ramda/src/remove */ "./node_modules/ramda/src/remove.js"));

var _unionWith = _interopRequireDefault(__webpack_require__(/*! ramda/src/unionWith */ "./node_modules/ramda/src/unionWith.js"));

var _useWith = _interopRequireDefault(__webpack_require__(/*! ramda/src/useWith */ "./node_modules/ramda/src/useWith.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Returns the index of a child in an array found by `key` matching
 *
 * @param {Object} child React element to find
 * @param {Object[]} children Array of React elements
 * @returns {Number} Index of child
 * @method
 * @private
 */


var indexOfChild = (0, _useWith["default"])(_findIndex["default"], [(0, _propEq["default"])('key'), _identity["default"]]);
/**
 * Returns an array of non-null children
 *
 * @param  {Object[]} children Array of React children
 *
 * @returns {Object[]}          Array of children
 * @private
 */

var mapChildren = function mapChildren(children) {
  var result = children && _react["default"].Children.toArray(children);

  return result ? result.filter(function (c) {
    return !!c;
  }) : [];
};
/**
 * Merges two arrays of children without any duplicates (by `key`)
 *
 * @param {Object[]} a Set of children
 * @param {Object[]} b Set of children
 * @returns {Object[]} Merged set of children
 * @method
 * @private
 */


var mergeChildren = (0, _unionWith["default"])((0, _eqBy["default"])((0, _prop["default"])('key'))); // Cached event forwarders

var forwardOnAppear = (0, _handle.forward)('onAppear');
var forwardOnEnter = (0, _handle.forward)('onEnter');
var forwardOnLeave = (0, _handle.forward)('onLeave');
var forwardOnStay = (0, _handle.forward)('onStay');
var forwardOnTransition = (0, _handle.forward)('onTransition');
var forwardOnWillTransition = (0, _handle.forward)('onWillTransition');
/**
 * Manages the transition of added and removed child components. Children that are added are
 * transitioned in and those removed are transition out via optional callbacks on the child.
 *
 * Ported from [ReactTransitionGroup]
 * (https://facebook.github.io/react/docs/animation.html#low-level-api-reacttransitiongroup).
 * Currently somewhat specialized for the purposes of ViewManager.
 *
 * @class TransitionGroup
 * @memberof ui/ViewManager
 * @private
 */

var TransitionGroup =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TransitionGroup, _React$Component);

  function TransitionGroup(props) {
    var _this;

    _classCallCheck(this, TransitionGroup);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransitionGroup).call(this, props));

    _this.performAppear = function (key) {
      _this.currentlyTransitioningKeys[key] = true;
      var component = _this.groupRefs[key];

      if (component.componentWillAppear) {
        component.componentWillAppear(_this._handleDoneAppearing.bind(_assertThisInitialized(_this), key));
      } else {
        _this._handleDoneAppearing(key);
      }
    };

    _this._handleDoneAppearing = function (key) {
      var component = _this.groupRefs[key];

      if (component.componentDidAppear) {
        component.componentDidAppear();
      }

      forwardOnAppear({
        view: component
      }, _this.props);

      _this.completeTransition(key);

      var currentChildMapping = mapChildren(_this.props.children);

      if (!currentChildMapping || !currentChildMapping.find(function (child) {
        return child.key === key;
      })) {
        // This was removed before it had fully appeared. Remove it.
        _this.performLeave(key);
      }
    };

    _this.performEnter = function (key) {
      _this.currentlyTransitioningKeys[key] = true;
      var component = _this.groupRefs[key];

      if (component.componentWillEnter) {
        component.componentWillEnter(_this._handleDoneEntering.bind(_assertThisInitialized(_this), key));
      } else {
        _this._handleDoneEntering(key);
      }
    };

    _this._handleDoneEntering = function (key) {
      var component = _this.groupRefs[key];

      if (component.componentDidEnter) {
        component.componentDidEnter();
      }

      forwardOnEnter({
        view: component
      }, _this.props);

      _this.completeTransition(key);
    };

    _this.performStay = function (key) {
      var component = _this.groupRefs[key];

      if (component.componentWillStay) {
        component.componentWillStay(_this._handleDoneStaying.bind(_assertThisInitialized(_this), key));
      } else {
        _this._handleDoneStaying(key);
      }
    };

    _this._handleDoneStaying = function (key) {
      var component = _this.groupRefs[key];

      if (component.componentDidStay) {
        component.componentDidStay();
      }

      forwardOnStay({
        view: component
      }, _this.props);
    };

    _this.performLeave = function (key) {
      _this.currentlyTransitioningKeys[key] = true;
      var component = _this.groupRefs[key];

      if (component.componentWillLeave) {
        component.componentWillLeave(_this._handleDoneLeaving.bind(_assertThisInitialized(_this), key));
      } else {
        // Note that this is somewhat dangerous b/c it calls setState()
        // again, effectively mutating the component before all the work
        // is done.
        _this._handleDoneLeaving(key);
      }
    };

    _this._handleDoneLeaving = function (key) {
      var component = _this.groupRefs[key];

      if (component.componentDidLeave) {
        component.componentDidLeave();
      }

      forwardOnLeave({
        view: component
      }, _this.props);

      _this.completeTransition(key);

      _this.setState(function (state) {
        var index = indexOfChild(key, state.children);
        return {
          children: (0, _remove["default"])(index, 1, state.children)
        };
      });
    };

    _this.storeRefs = function (key) {
      return function (node) {
        _this.groupRefs[key] = node;
      };
    };

    _this.state = {
      firstRender: true,
      children: []
    };
    _this.hasMounted = false;
    _this.currentlyTransitioningKeys = {};
    _this.keysToEnter = [];
    _this.keysToLeave = [];
    _this.keysToStay = [];
    _this.groupRefs = {};
    return _this;
  }

  _createClass(TransitionGroup, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      var _this2 = this;

      this.hasMounted = true; // this isn't used by ViewManager or View at the moment but leaving it around for future
      // flexibility

      this.state.children.forEach(function (child) {
        return _this2.performAppear(child.key);
      });
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps, prevState) {
      this.reconcileUnmountedChildren(prevState.children, this.state.children);
      this.reconcileChildren(prevState.activeChildren, this.state.activeChildren);
    }
  }, {
    key: "reconcileUnmountedChildren",
    value: function reconcileUnmountedChildren(prevChildMapping, nextChildMapping) {
      var _this3 = this;

      var nextChildKeys = nextChildMapping.map(function (c) {
        return c.key;
      });
      var prevChildKeys = prevChildMapping.map(function (c) {
        return c.key;
      }); // `state.children` represents the mounted children. if a view change happens during a
      // transition causing the View to be unmounted before it fires its callback, the
      // currentlyTransitioningKeys map will be out of sync. To manage that, we check for keys
      // that have fallen out of the `children` array and manually clean them up from the map.

      prevChildKeys.filter(function (key) {
        return !nextChildKeys.includes(key);
      }).forEach(function (key) {
        return _this3.completeTransition(key);
      });
    }
  }, {
    key: "reconcileChildren",
    value: function reconcileChildren(prevActiveChildMapping, nextActiveChildMapping) {
      var _this4 = this;

      var size = this.props.size;
      var nextChildKeys = nextActiveChildMapping.map(function (c) {
        return c.key;
      });
      var prevChildKeys = prevActiveChildMapping.map(function (c) {
        return c.key;
      });
      var droppedKeys = prevChildKeys.filter(function (key) {
        return !nextChildKeys.includes(key);
      }); // if children haven't changed, there's nothing to reconcile

      if (prevActiveChildMapping.length === nextActiveChildMapping.length && droppedKeys.length === 0) {
        return;
      } // remove any "dropped" children from the list of transitioning children


      droppedKeys.forEach(function (key) {
        return _this4.completeTransition(key);
      }); // mark any new child as entering

      nextChildKeys.forEach(function (key, index) {
        var hasPrev = prevChildKeys.includes(key);

        if (!hasPrev || _this4.currentlyTransitioningKeys[key]) {
          // flag a view to enter if it's new (!hasPrev), or if it's not new (hasPrev) but is
          // re-entering (is currently transitioning)
          _this4.keysToEnter.push(key);
        } else if (index < size - 1) {
          // keep views that are less than size minus the "transition out" buffer
          _this4.keysToStay.push(key);
        } else {
          // everything else is leaving
          _this4.keysToLeave.push(key);
        }
      }); // mark any previous child not remaining as leaving

      prevChildKeys.forEach(function (key) {
        var hasNext = nextChildKeys.includes(key);
        var isRendered = Boolean(_this4.groupRefs[key]); // flag a view to leave if it isn't in the new set (!hasNext) and it exists (isRendered)

        if (!hasNext && isRendered) {
          _this4.keysToLeave.push(key);
        }
      });

      if (this.keysToEnter.length || this.keysToLeave.length) {
        forwardOnWillTransition(null, this.props);
      } // once the component has been updated, start the enter transition for new children,


      var keysToEnter = this.keysToEnter;
      this.keysToEnter = [];
      keysToEnter.forEach(this.performEnter); // ... the stay transition for any children remaining,

      var keysToStay = this.keysToStay;
      this.keysToStay = [];
      keysToStay.forEach(this.performStay); // ... and the leave transition for departing children

      var keysToLeave = this.keysToLeave;
      this.keysToLeave = [];
      keysToLeave.forEach(this.performLeave);
    }
  }, {
    key: "completeTransition",
    value: function completeTransition(key) {
      delete this.currentlyTransitioningKeys[key];

      if (Object.keys(this.currentlyTransitioningKeys).length === 0) {
        forwardOnTransition(null, this.props);
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this5 = this; // support wrapping arbitrary children with a component that supports the necessary
      // lifecycle methods to animate transitions


      var childrenToRender = this.state.children.map(function (child) {
        var isLeaving = child.props['data-index'] !== _this5.props.currentIndex && typeof child.props['data-index'] !== 'undefined';
        return _react["default"].cloneElement(_this5.props.childFactory(child), {
          key: child.key,
          ref: _this5.storeRefs(child.key),
          leaving: isLeaving,
          appearing: !_this5.hasMounted
        });
      }); // Do not forward TransitionGroup props to primitive DOM nodes

      var props = Object.assign({}, this.props);
      props.ref = this.props.componentRef;
      delete props.childFactory;
      delete props.component;
      delete props.componentRef;
      delete props.currentIndex;
      delete props.onAppear;
      delete props.onAppear;
      delete props.onEnter;
      delete props.onLeave;
      delete props.onStay;
      delete props.onTransition;
      delete props.onWillTransition;
      delete props.size;
      return _react["default"].createElement(this.props.component, props, childrenToRender);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      var children = mapChildren(props.children).slice(0, props.size);

      if (state.firstRender) {
        return {
          activeChildren: children,
          children: children,
          firstRender: false
        };
      }

      return {
        activeChildren: children,
        children: mergeChildren(children, state.children).slice(0, props.size)
      };
    }
  }]);

  return TransitionGroup;
}(_react["default"].Component);

exports.TransitionGroup = TransitionGroup;
TransitionGroup.propTypes =
/** @lends ui/ViewManager.TransitionGroup.prototype */
{
  children: _propTypes2["default"].node.isRequired,

  /**
   * Adapts children to be compatible with TransitionGroup
   *
   * @type {Function}
   */
  childFactory: _propTypes2["default"].func,

  /**
   * Type of component wrapping the children.
   *
   * May be a DOM node or a custom React component.
   *
   * @type {String|Component}
   * @default 'div'
   */
  component: _propTypes["default"].renderable,

  /**
   * Called with a reference to [component]{@link ui/ViewManager.TransitionGroup#component}
   *
   * @type {Function}
   * @private
   */
  componentRef: _propTypes2["default"].func,

  /**
   * Current Index the ViewManager is on
   *
   * @type {Number}
   */
  currentIndex: _propTypes2["default"].number,

  /**
   * Called when each view is rendered during initial construction.
   *
   * @type {Function}
   */
  onAppear: _propTypes2["default"].func,

  /**
   * Called when each view completes its transition into the viewport.
   *
   * @type {Function}
   */
  onEnter: _propTypes2["default"].func,

  /**
   * Called when each view completes its transition out of the viewport.
   *
   * @type {Function}
   */
  onLeave: _propTypes2["default"].func,

  /**
   * Called when each view completes its transition within the viewport.
   *
   * @type {Function}
   */
  onStay: _propTypes2["default"].func,

  /**
   * Called once when all views have completed their transition.
   *
   * @type {Function}
   */
  onTransition: _propTypes2["default"].func,

  /**
   * Called once before views begin their transition.
   *
   * @type {Function}
   */
  onWillTransition: _propTypes2["default"].func,

  /**
   * Maximum number of rendered children.
   *
   * Used to limit how many visible transitions are active at any time.
   * A value of 1 would prevent any exit transitions whereas a value of 2,
   * the default, would ensure that only 1 view is transitioning on and 1 view is
   * transitioning off at a time.
   *
   * @type {Number}
   * @default 2
   */
  size: _propTypes2["default"].number
};
TransitionGroup.defaultProps = {
  childFactory: _identity["default"],
  component: 'div',
  size: 2
};
var _default = TransitionGroup;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/ViewManager/View.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/ui/ViewManager/View.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapWithView = exports.View = exports["default"] = void 0;

var _util = __webpack_require__(/*! @enact/core/util */ "./node_modules/@enact/core/util/util.js");

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));

var _Arranger = __webpack_require__(/*! ./Arranger */ "./node_modules/@enact/ui/ViewManager/Arranger.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
} // If the View was "appearing", then entering will always be false and this will not result in a
// re-render. If the view should enter, state.enter will be true and this will toggle it to false
// causing a re-render.


var clearEntering = function clearEntering(_ref) {
  var entering = _ref.entering;
  return entering ? {
    entering: false
  } : null;
};
/**
 * A `View` wraps a set of children for {@link ui/ViewManager.ViewManager}.
 * It is not intended to be used directly
 *
 * @class View
 * @memberof ui/ViewManager
 * @private
 */


var View =
/*#__PURE__*/
function (_React$Component) {
  _inherits(View, _React$Component);

  function View(props) {
    var _this;

    _classCallCheck(this, View);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(View).call(this, props));
    _this.enteringJob = new _util.Job(function () {
      _this.setState(clearEntering);
    });

    _this.prepareTransition = function (arranger, callback, noAnimation) {
      var _this$props = _this.props,
          duration = _this$props.duration,
          index = _this$props.index,
          previousIndex = _this$props.previousIndex,
          reverseTransition = _this$props.reverseTransition;
      /* eslint react/no-find-dom-node: "off" */

      var node = _reactDom["default"].findDOMNode(_assertThisInitialized(_this));

      var currentTime = (0, _util.perfNow)();
      var startTime = currentTime;
      var endTime = startTime + duration; // disable animation when the instance or props flag is true

      noAnimation = noAnimation || _this.props.noAnimation; // Arranges the control each tick and calls the provided callback on complete

      var fn = function fn(start, end, time) {
        _this.cancelAnimationFrame(); // percent is the ratio (between 0 and 1) of the current step to the total steps


        var percent = (time - start) / (end - start);

        if (!noAnimation && percent < 1) {
          // the transition is still in progress so call the arranger
          arranger({
            node: node,
            percent: percent,
            reverseTransition: reverseTransition,
            from: previousIndex,
            to: index
          });
          return true;
        } else {
          // the transition is complete so clean up and ensure we fire a final arrange with
          // a value of 1.
          _this.animation = null;
          arranger({
            node: node,
            percent: 1,
            reverseTransition: reverseTransition,
            from: previousIndex,
            to: index
          });
          callback();
          return false;
        }
      }; // When a new transition is initiated mid-transition, adjust time to account for the current
      // percent complete.


      if (_this.animation && _this.changeDirection) {
        var a = _this.animation;
        var percentComplete = (a.time - a.start) / (a.end - a.start);
        var delta = (endTime - startTime) * (1 - percentComplete);
        startTime -= delta;
        endTime -= delta;
      }

      _this.transition(startTime, endTime, currentTime, fn);
    };

    _this.transition = function (start, end, time, callback) {
      var a = _this.animation = _this.animation || {};
      a.start = start;
      a.end = end;
      a.time = time;

      if (callback(start, end, time) && typeof window !== 'undefined') {
        _this._raf = window.requestAnimationFrame(function () {
          var current = (0, _util.perfNow)();

          _this.transition(start, end, current, callback);
        });
      } else {
        _this._raf = null;
      }
    };

    _this.animation = null;
    _this._raf = null;
    _this.state = {
      entering: !props.appearing
    };
    return _this;
  }

  _createClass(View, [{
    key: "shouldComponentUpdate",
    value: function shouldComponentUpdate(nextProps) {
      if (nextProps.leaving) {
        return false;
      }

      return true;
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      this.changeDirection = this.animation ? this.props.reverseTransition !== prevProps.reverseTransition : false;
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.cancelAnimationFrame();
      this.enteringJob.stop();
    }
  }, {
    key: "cancelAnimationFrame",
    value: function cancelAnimationFrame() {
      if (this._raf) {
        if (typeof window !== 'undefined') window.cancelAnimationFrame(this._raf);
        this._raf = null;
      }
    }
  }, {
    key: "componentWillAppear",
    value: function componentWillAppear(callback) {
      var arranger = this.props.arranger;

      if (arranger && arranger.stay) {
        this.prepareTransition(arranger.stay, callback, true);
      } else {
        callback();
      }
    }
  }, {
    key: "componentDidAppear",
    value: function componentDidAppear() {
      this.setState(clearEntering);
    } // This is called at the same time as componentDidMount() for components added to an existing
    // TransitionGroup. It will block other animations from occurring until callback is called. It
    // will not be called on the initial render of a TransitionGroup.

  }, {
    key: "componentWillEnter",
    value: function componentWillEnter(callback) {
      var _this$props2 = this.props,
          arranger = _this$props2.arranger,
          reverseTransition = _this$props2.reverseTransition;

      if (arranger) {
        this.prepareTransition(reverseTransition ? arranger.leave : arranger.enter, callback);
      } else {
        callback();
      }
    }
  }, {
    key: "componentDidEnter",
    value: function componentDidEnter() {
      var _this$props3 = this.props,
          enteringDelay = _this$props3.enteringDelay,
          enteringProp = _this$props3.enteringProp;

      if (enteringProp) {
        // FIXME: `startRafAfter` is a temporary solution using rAF. We need a better way to handle
        // transition cycle and component life cycle to be in sync. See ENYO-4835.
        this.enteringJob.startRafAfter(enteringDelay);
      }
    }
  }, {
    key: "componentWillStay",
    value: function componentWillStay(callback) {
      var arranger = this.props.arranger;

      if (arranger && arranger.stay) {
        this.prepareTransition(arranger.stay, callback);
      } else {
        callback();
      }
    } // This is called when the child has been removed from the ReactTransitionGroup. Though the
    // child has been removed, ReactTransitionGroup will keep it in the DOM until callback is
    // called.

  }, {
    key: "componentWillLeave",
    value: function componentWillLeave(callback) {
      var _this$props4 = this.props,
          arranger = _this$props4.arranger,
          reverseTransition = _this$props4.reverseTransition;
      this.enteringJob.stop();

      if (arranger) {
        this.prepareTransition(reverseTransition ? arranger.enter : arranger.leave, callback);
      } else {
        callback();
      }
    }
    /**
     * Initiates a new transition
     *
     * @param	{Function}	arranger		Arranger function to call (enter, leave)
     * @param	{Function}	callback		Completion callback
     * @param	{Boolean}	[noAnimation]	`true` to disable animation for this transition
     * @returns {undefined}
     * @private
     */

  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props,
          enteringProp = _this$props5.enteringProp,
          children = _this$props5.children,
          childProps = _this$props5.childProps;

      if (enteringProp || childProps) {
        var props = Object.assign({}, childProps);

        if (enteringProp) {
          props[enteringProp] = this.state.entering;
        }

        return _react["default"].cloneElement(children, props);
      } else {
        return _react["default"].Children.only(children);
      }
    }
  }]);

  return View;
}(_react["default"].Component); // Not a true render method but instead a wrapper for TransitionGroup to wrap arbitrary children
// with a TransitionGroup-compatible child that supports animation
//
// eslint-disable-next-line enact/display-name


exports.View = View;
View.propTypes =
/** @lends ui/ViewManager.View.prototype */
{
  children: _propTypes["default"].node.isRequired,

  /**
   * Time in milliseconds to complete a transition
   *
   * @type {Number}
   * @required
   * @public
   */
  duration: _propTypes["default"].number.isRequired,

  /**
   * Set to `true` when the View should 'appear' without transitioning into the viewport
   *
   * @type {Boolean}
   * @public
   */
  appearing: _propTypes["default"].bool,

  /**
   * Arranger to control the animation
   *
   * @type {Arranger}
   * @public
   */
  arranger: _Arranger.shape,

  /**
   * An object containing properties to be passed to each child.
   *
   * @type {Object}
   * @public
   */
  childProps: _propTypes["default"].object,

  /**
   * Time, in milliseconds, to wait after a view has entered to inform it by passing the
   * `enteringProp` as `false`.
   *
   * @type {Number}
   * @default 0
   * @public
   */
  enteringDelay: _propTypes["default"].number,

  /**
   * Name of the property to pass to the wrapped view to indicate when it is entering the
   * viewport. When `true`, the view has been created but has not transitioned into place.
   * When `false`, the view has finished its transition.
   *
   * The notification can be delayed by setting `enteringDelay`. If not set, the view will not
   * be notified of the change in transition.
   *
   * @type {String}
   * @public
   */
  enteringProp: _propTypes["default"].string,

  /**
   * Index of the currently 'active' view.
   *
   * @type {Number}
   */
  index: _propTypes["default"].number,

  /**
   * When `true`, indicates if a view is currently leaving.
   *
   * @type {Boolean}
   */
  leaving: _propTypes["default"].bool,

  /**
   * When `true`, indicates if the transition should be animated
   *
   * @type {Boolean}
   * @default true
   * @public
   */
  noAnimation: _propTypes["default"].bool,

  /**
   * Index of the previously 'active' view.
   *
   * @type {Number}
   */
  previousIndex: _propTypes["default"].number,

  /**
   * When `true`, indicates if the transition should be reversed. The effect depends on how the provided
   * `arranger` handles reversal.
   *
   * @type {Boolean}
   * @default false
   */
  reverseTransition: _propTypes["default"].bool
};
View.defaultProps = {
  appearing: false,
  enteringDelay: 0
};

var wrapWithView = function wrapWithView(config) {
  return function (child) {
    return _react["default"].createElement(View, config, child);
  };
};

exports.wrapWithView = wrapWithView;
var _default = View;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/ViewManager/ViewManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/@enact/ui/ViewManager/ViewManager.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ViewManager: true,
  ViewManagerBase: true,
  ViewManagerDecorator: true
};
exports.ViewManagerDecorator = exports.ViewManagerBase = exports.ViewManager = exports["default"] = void 0;

var _propTypes = _interopRequireDefault(__webpack_require__(/*! @enact/core/internal/prop-types */ "./node_modules/@enact/core/internal/prop-types/prop-types.js"));

var _propTypes2 = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _ForwardRef = _interopRequireDefault(__webpack_require__(/*! ../ForwardRef */ "./node_modules/@enact/ui/ForwardRef/ForwardRef.js"));

var _Arranger = __webpack_require__(/*! ./Arranger */ "./node_modules/@enact/ui/ViewManager/Arranger.js");

Object.keys(_Arranger).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return _Arranger[key];
    }
  });
});

var _TransitionGroup = _interopRequireDefault(__webpack_require__(/*! ./TransitionGroup */ "./node_modules/@enact/ui/ViewManager/TransitionGroup.js"));

var _View = __webpack_require__(/*! ./View */ "./node_modules/@enact/ui/ViewManager/View.js");

var _class, _temp;

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * The base `ViewManager` component, without
 * [ViewManagerDecorator](ui/ViewManager.ViewManagerDecorator) applied.
 *
 * @class ViewManagerBase
 * @memberof ui/ViewManager
 * @ui
 * @public
 */


var ViewManagerBase = (_temp = _class =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ViewManagerBase, _React$Component);

  function ViewManagerBase(props) {
    var _this;

    _classCallCheck(this, ViewManagerBase);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(ViewManagerBase).call(this, props));
    _this.state = {
      prevIndex: null,
      reverseTransition: null
    };
    return _this;
  }

  _createClass(ViewManagerBase, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          arranger = _this$props.arranger,
          childProps = _this$props.childProps,
          children = _this$props.children,
          duration = _this$props.duration,
          index = _this$props.index,
          noAnimation = _this$props.noAnimation,
          enteringDelay = _this$props.enteringDelay,
          enteringProp = _this$props.enteringProp,
          rest = _objectWithoutProperties(_this$props, ["arranger", "childProps", "children", "duration", "index", "noAnimation", "enteringDelay", "enteringProp"]);

      var _this$props2 = this.props,
          _this$props2$end = _this$props2.end,
          end = _this$props2$end === void 0 ? index : _this$props2$end,
          _this$props2$start = _this$props2.start,
          start = _this$props2$start === void 0 ? index : _this$props2$start;
      var _this$state = this.state,
          previousIndex = _this$state.prevIndex,
          reverseTransition = _this$state.reverseTransition;

      var childrenList = _react["default"].Children.toArray(children);

      if (index > end) end = index;
      if (index < start) start = index;
      var childCount = end - start + 1;
      var size = noAnimation || !arranger ? childCount : childCount + 1;
      var views = childrenList.slice(start, start + childCount);
      var childFactory = (0, _View.wrapWithView)({
        arranger: arranger,
        duration: duration,
        index: index,
        noAnimation: noAnimation,
        previousIndex: previousIndex,
        reverseTransition: reverseTransition,
        enteringDelay: enteringDelay,
        enteringProp: enteringProp,
        childProps: childProps
      });
      delete rest.end;
      delete rest.reverseTransition;
      delete rest.start;
      return _react["default"].createElement(_TransitionGroup["default"], Object.assign({}, rest, {
        childFactory: childFactory,
        size: size,
        currentIndex: index
      }), views);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(props, state) {
      if (props.reverseTransition != null) {
        return {
          reverseTransition: !!props.reverseTransition
        };
      } else if (props.index !== state.index) {
        return {
          index: props.index,
          prevIndex: state.index,
          reverseTransition: state.index > props.index
        };
      }

      return null;
    }
  }]);

  return ViewManagerBase;
}(_react["default"].Component), _class.displayName = 'ViewManager', _class.propTypes =
/** @lends ui/ViewManager.ViewManagerBase.prototype */
{
  /**
   * Arranger to control the animation
   *
   * @type {Arranger}
   */
  arranger: _Arranger.shape,

  /**
   * An object containing properties to be passed to each child.
   *
   * @type {Object}
   * @public
   */
  childProps: _propTypes2["default"].object,

  /**
   * Views to be managed.
   *
   * May be any renderable component including custom React components or primitive DOM nodes.
   *
   * @type {Node}
   */
  children: _propTypes2["default"].node,

  /**
   * Type of component wrapping the children. May be a DOM node or a custom React component.
   *
   * @type {String|Component}
   * @default 'div'
   */
  component: _propTypes["default"].renderable,

  /**
   * Called with a reference to [component]{@link ui/ViewManager.ViewManager#component}
   *
   * @type {Function}
   * @private
   */
  componentRef: _propTypes2["default"].func,

  /**
   * Time in milliseconds to complete a transition
   *
   * @type {Number}
   * @default 300
   */
  duration: _propTypes2["default"].number,

  /**
   * Index of last visible view.
   *
   * Defaults to the current value of `index`.
   *
   * @type {Number}
   * @default value of index
   */
  end: _propTypes2["default"].number,

  /**
   * Time, in milliseconds, to wait after a view has entered to inform it by pass the
   * `enteringProp` as false.
   *
   * @type {Number}
   * @default 0
   */
  enteringDelay: _propTypes2["default"].number,

  /**
   * Name of the property to pass to the wrapped view to indicate when it is entering the
   * viewport.
   *
   * When `true`, the view has been created but has not transitioned into place.
   * When `false`, the view has finished its transition.
   *
   * The notification can be delayed by setting `enteringDelay`. If not set, the view will not
   * be notified of the change in transition.
   *
   * @type {String}
   */
  enteringProp: _propTypes2["default"].string,

  /**
   * Index of active view
   *
   * @type {Number}
   * @default 0
   */
  index: _propTypes2["default"].number,

  /**
   * Indicates if the transition should be animated
   *
   * @type {Boolean}
   * @default false
   */
  noAnimation: _propTypes2["default"].bool,

  /**
   * Called when each view is rendered during initial construction.
   *
   * @type {Function}
   */
  onAppear: _propTypes2["default"].func,

  /**
   * Called when each view completes its transition into the viewport.
   *
   * @type {Function}
   */
  onEnter: _propTypes2["default"].func,

  /**
   * Called when each view completes its transition out of the viewport.
   *
   * @type {Function}
   */
  onLeave: _propTypes2["default"].func,

  /**
   * Called when each view completes its transition within the viewport.
   *
   * @type {Function}
   */
  onStay: _propTypes2["default"].func,

  /**
   * Called once when all views have completed their transition.
   *
   * @type {Function}
   */
  onTransition: _propTypes2["default"].func,

  /**
   * Called once before views begin their transition.
   *
   * @type {Function}
   */
  onWillTransition: _propTypes2["default"].func,

  /**
   * Explicitly sets the transition direction.
   *
   * If omitted, the direction is determined automaticallly based on the change of index or a
   * string comparison of the first child's key.
   *
   * @type {Boolean}
   */
  reverseTransition: _propTypes2["default"].bool,

  /**
   * Index of first visible view. Defaults to the current value of `index`.
   *
   * @type {Number}
   * @default value of index
   */
  start: _propTypes2["default"].number
}, _class.defaultProps = {
  component: 'div',
  duration: 300,
  index: 0
}, _temp);
/**
 * Applies ViewManager behaviors.
 *
 * @hoc
 * @memberof ui/ViewManager
 * @mixes ui/ForwardRef.ForwardRef
 * @public
 */

exports.ViewManagerBase = ViewManagerBase;
var ViewManagerDecorator = (0, _ForwardRef["default"])({
  prop: 'componentRef'
});
/**
 * A `ViewManager` controls the visibility of a configurable number of views, allowing for them to be
 * transitioned on and off the viewport.
 *
 * @class ViewManager
 * @memberof ui/ViewManager
 * @extends ui/ViewManager.ViewManagerBase
 * @mixes ui/ViewManager.ViewManagerDecorator
 * @ui
 * @public
 */

exports.ViewManagerDecorator = ViewManagerDecorator;
var ViewManager = ViewManagerDecorator(ViewManagerBase);
exports.ViewManager = ViewManager;
var _default = ViewManager;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/ViewManager/arrange.js":
/*!*******************************************************!*\
  !*** ./node_modules/@enact/ui/ViewManager/arrange.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.compose = exports.ease = exports.endBy = exports.startAfter = exports.reverse = exports.slideOut = exports.slideIn = exports.slideOutPartial = exports.slideInPartial = exports.accelerate = exports.fadeIn = exports.fadeOut = exports.clearTransform = exports.replaceTransform = exports.prependTransform = exports.appendTransform = exports.transform = void 0;

var _curry = _interopRequireDefault(__webpack_require__(/*! ramda/src/curry */ "./node_modules/ramda/src/curry.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty(target, key, source[key]);
    });
  }

  return target;
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

var transform = (0, _curry["default"])(function (action, spec, _ref) {
  var node = _ref.node;
  var current = node.style.transform;
  var next = current;

  if (!current || action === 'replace') {
    next = spec;
  } else if (action === 'append') {
    next = current + ' ' + spec;
  } else if (action === 'prepend') {
    next = spec + ' ' + current;
  }

  node.style.transform = next;
});
exports.transform = transform;
var appendTransform = transform('append');
exports.appendTransform = appendTransform;
var prependTransform = transform('prepend');
exports.prependTransform = prependTransform;
var replaceTransform = transform('replace');
exports.replaceTransform = replaceTransform;
var clearTransform = transform('replace', '');
exports.clearTransform = clearTransform;

var fadeOut = function fadeOut(_ref2) {
  var node = _ref2.node,
      percent = _ref2.percent;
  node.style.opacity = 1 - percent;
};

exports.fadeOut = fadeOut;

var fadeIn = function fadeIn(_ref3) {
  var node = _ref3.node,
      percent = _ref3.percent;
  node.style.opacity = percent;
};

exports.fadeIn = fadeIn;
var accelerate = prependTransform('translateZ(0)');
exports.accelerate = accelerate;
var slideInOut = (0, _curry["default"])(function (direction, total, orientation, config) {
  var percent = config.percent;
  var p = total * (direction === 'out' ? percent : 1 - percent);
  var spec = orientation === 'top' && 'translateY(' + -p + '%)' || orientation === 'bottom' && 'translateY(' + p + '%)' || orientation === 'left' && 'translateX(' + -p + '%)' || orientation === 'right' && 'translateX(' + p + '%)';
  appendTransform(spec, config);
});
var slideInPartial = slideInOut('in');
exports.slideInPartial = slideInPartial;
var slideOutPartial = slideInOut('out');
exports.slideOutPartial = slideOutPartial;
var slideIn = slideInPartial(100);
exports.slideIn = slideIn;
var slideOut = slideOutPartial(100);
exports.slideOut = slideOut;
var reverse = (0, _curry["default"])(function (fn, _ref4) {
  var reverseTransition = _ref4.reverseTransition,
      percent = _ref4.percent,
      rest = _objectWithoutProperties(_ref4, ["reverseTransition", "percent"]);

  fn(_objectSpread({}, rest, {
    percent: reverseTransition ? 1 - percent : percent,
    reverseTransition: reverseTransition
  }));
});
exports.reverse = reverse;
var startAfter = (0, _curry["default"])(function (startPercent, fn, config) {
  var percent = config.percent,
      rest = _objectWithoutProperties(config, ["percent"]);

  var p = percent >= startPercent ? (percent - startPercent) / (1 - startPercent) : 0;
  fn(_objectSpread({}, rest, {
    percent: p
  }));
});
exports.startAfter = startAfter;
var endBy = (0, _curry["default"])(function (endPercent, fn, config) {
  var percent = config.percent,
      rest = _objectWithoutProperties(config, ["percent"]);

  var p = percent <= endPercent ? percent / endPercent : 1;
  fn(_objectSpread({}, rest, {
    percent: p
  }));
});
exports.endBy = endBy;
var ease = (0, _curry["default"])(function (easing, fn, config) {
  var percent = config.percent,
      rest = _objectWithoutProperties(config, ["percent"]);

  fn(_objectSpread({}, rest, {
    percent: easing(percent)
  }));
});
exports.ease = ease;

var compose = function compose() {
  for (var _len = arguments.length, arrangers = new Array(_len), _key = 0; _key < _len; _key++) {
    arrangers[_key] = arguments[_key];
  }

  return function () {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    arrangers.forEach(function (fn) {
      return fn.apply(void 0, args);
    });
  };
};

exports.compose = compose;

/***/ }),

/***/ "./node_modules/@enact/ui/internal/Pure/Pure.js":
/*!******************************************************!*\
  !*** ./node_modules/@enact/ui/internal/Pure/Pure.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Pure = exports["default"] = void 0;

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Default config for {@link ui/internal/Pure.Pure}.
 *
 * @memberof ui/internal/Pure.Pure
 * @hocconfig
 */


var defaultConfig = {
  /**
   * Configures the comparators used to test for prop changes
   *
   * @type {Object}
   * @memberof ui/internal/Pure.Pure.defaultConfig
   */
  propComparators: {
    '*': function _(a, b) {
      return a === b;
    }
  }
};
/**
 * Implements `shouldComponentUpdate` based on property change determination. By default, props are
 * shallowly compared for strict equality
 *
 * Custom comparators can be provided via the `propComparators` config property which accepts an
 * object mapping property names to comparator functions. To override the default comparator, use
 * the key, `'*'`.
 *
 * ```
 * const PureComponent = Pure(
 *     // Overrides the comparator for `count`. All other props will use the default comparators
 *     propComparators: {
 *         // For example, count is compared using loose equality allowing '5' to equal 5
 *         count: (a, b) => a == b
 *     },
 *     Component
 * )
 * ```
 *
 * @class Pure
 * @memberof ui/internal/Pure
 * @hoc
 * @private
 */

var Pure = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  var propComparators = config.propComparators;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      _classCallCheck(this, _class);

      return _possibleConstructorReturn(this, _getPrototypeOf(_class).apply(this, arguments));
    }

    _createClass(_class, [{
      key: "shouldComponentUpdate",
      value: function shouldComponentUpdate(nextProps) {
        return this.hasChanged(this.props, nextProps, propComparators);
      }
    }, {
      key: "hasChanged",
      value: function hasChanged(current, next, comparators) {
        var propKeys = Object.keys(current);
        var nextKeys = Object.keys(next); // early bail out if the objects have a different number of keys

        if (propKeys.length !== nextKeys.length) {
          return true;
        }

        var hasOwn = Object.prototype.hasOwnProperty.bind(current);

        for (var i = 0; i < nextKeys.length; i++) {
          var prop = nextKeys[i];
          var comp = comparators[prop] || comparators['*'];

          if (!hasOwn(prop) || !comp(current[prop], next[prop])) {
            return true;
          }
        }

        return false;
      }
    }, {
      key: "render",
      value: function render() {
        return _react["default"].createElement(Wrapped, this.props);
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'Pure', _class.propTypes = {}, _class.defaultProps = {}, _temp;
});
exports.Pure = Pure;
var _default = Pure;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/internal/localized-fonts/localized-fonts.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@enact/ui/internal/localized-fonts/localized-fonts.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

var fontMap = {};
var currentLocale = null; // Generate a single font-face rule

var buildFont = function buildFont(inOptions) {
  if (!inOptions && !inOptions.name) {
    return '';
  }

  var strOut = '@font-face { \n' + "  font-family: \"".concat(inOptions.name, "\";\n") + "  font-weight: ".concat(inOptions.weight || 'normal', ";\n");

  if (inOptions.localName) {
    strOut += "  src: local(\"".concat(inOptions.localName, "\");\n");
  }

  if (inOptions.unicodeRange) {
    strOut += "  unicode-range: ".concat(inOptions.unicodeRange, ";\n");
  }

  strOut += '} \n';
  return strOut;
}; // Generate a collection of font-face rules, in multiple font-variants


var buildFontSet = function buildFontSet(fontName, fonts, strLang, bitDefault) {
  var strOut = '',
      name = bitDefault ? fontName : fontName + ' ' + strLang;

  if (fonts[strLang].regular) {
    // Build Regular
    strOut += buildFont({
      name: name,
      localName: fonts[strLang].regular,
      weight: 400,
      unicodeRange: fonts[strLang].unicodeRange
    }); // Build Bold

    strOut += buildFont({
      name: name,
      localName: fonts[strLang].bold || fonts[strLang].regular,
      // fallback to regular
      weight: 700,
      unicodeRange: fonts[strLang].unicodeRange
    }); // Build Light

    strOut += buildFont({
      name: name,
      localName: fonts[strLang].light || fonts[strLang].regular,
      // fallback to regular
      weight: 300,
      unicodeRange: fonts[strLang].unicodeRange
    });
  }

  return strOut;
};

var buildFontDefinitionCss = function buildFontDefinitionCss(locale, buildOverrides) {
  var matchLang = locale.match(/\b([a-z]{2})\b/),
      language = matchLang && matchLang[1],
      matchReg = locale.match(/\b([A-Z]{2}|[0-9]{3})\b/),
      region = matchReg && matchReg[1];
  var fontDefinitionCss = ''; // Build all the fonts so they could be explicitly called

  for (var fontName in fontMap) {
    var fonts = fontMap[fontName];

    for (var lang in fonts) {
      if (!buildOverrides) {
        fontDefinitionCss += buildFontSet(fontName, fonts, lang);
      } else {
        // Set up the override for locale-specific font.
        // la = language, re = region; `la-RE`
        var _lang$split = lang.split('-'),
            _lang$split2 = _slicedToArray(_lang$split, 2),
            la = _lang$split2[0],
            re = _lang$split2[1];

        if (la === language) {
          if (!re || re && re === region) {
            fontDefinitionCss += buildFontSet(fontName, fonts, lang, true);
          }
        }
      }
    }
  }

  return fontDefinitionCss;
};

var insertFontDefinitionCss = function insertFontDefinitionCss(styleId, fontDefinitionCss) {
  if (typeof document !== 'undefined') {
    // Normal execution in a browser window
    var styleElem = document.getElementById(styleId);

    if (!styleElem) {
      styleElem = document.createElement('style');
      styleElem.setAttribute('id', styleId);
      styleElem.setAttribute('type', 'text/css');
      document.head.appendChild(styleElem);
    }

    styleElem.innerHTML = fontDefinitionCss;
  } else {
    var tag = "<style type=\"text/css\" id=\"".concat(styleId, "\">").concat(fontDefinitionCss, "</style>"); // We're rendering without the DOM; return the font definition stylesheet element string.

    return tag;
  }
};

function fontGenerator(locale) {
  var styleId = 'localized-fonts';

  if (typeof document !== 'undefined' && document.getElementById(styleId)) {
    return;
  }

  return insertFontDefinitionCss(styleId, buildFontDefinitionCss(locale));
}

function fontOverrideGenerator(locale) {
  return insertFontDefinitionCss('localized-fonts-override', buildFontDefinitionCss(locale, true));
}
/**
 * Generates locale-specific font rules allowing any locale to have its own custom font. Each
 * locale-font from the configuration block (defined in this file) is generated at run-time. If the
 * locale you're currently in is in the locale-font list an additional `@font-face` rule will be
 * generated that will override the standard font.
 *
 * In addition to the standard override-font being generated, named region-specific fonts are also
 * generated. This lets you incorporate language specific fonts when you're outside of one of those
 * regions; useful in a language list context where you want the name of each language to be
 * represented by that language's designated font.
 *
 * Below is example genarated-output of the Urdu ("ur") locale-font.
 *
 * ```css
 * &#64;font-face {
 * 	font-family: 'Custom Font ur';
 * 	font-weight: 500;
 * 	src: local('CustomFont_Urdu');
 * 	unicode-range: U+0600-U+06FF, U+FE70-U+FEFE, U+FB50-U+FDFF;
 * }
 * &#64;font-face {
 * 	font-family: 'Custom Font ur Bold';
 * 	font-weight: 700;
 * 	src: local('CustomFont_Urdu');
 * 	unicode-range: U+0600-U+06FF, U+FE70-U+FEFE, U+FB50-U+FDFF;
 * }
 * &#64;font-face {
 * 	font-family: 'Custom Font ur Light';
 * 	font-weight: 300;
 * 	src: local('CustomFont_Urdu');
 * 	unicode-range: U+0600-U+06FF, U+FE70-U+FEFE, U+FB50-U+FDFF;
 * }
 * ```
 *
 * @param {String} locale Locale string in the format
 * @returns {String} An HTML fragment of the `<style>` when prerendering
 *
 * @public
 */


function generateFontRules(locale) {
  if (!locale || locale === currentLocale) {
    return;
  }

  currentLocale = locale;
  return fontGenerator(locale);
}

function generateFontOverrideRules(locale) {
  if (!locale) {
    return;
  }

  return fontOverrideGenerator(locale);
}
/**
 * Adds a localed font to the font map
 *
 * ```
 * addLocalizedFont('My Theme Font', {
 *   'ur': {
 *      regular: 'My Theme Urdu',
 *      unicodeRange:
 *        'U+600-6FF,' +
 *        'U+FE70-FEFE,' +
 *        'U+FB50-FDFF'
 *    }
 * })
 * ```
 *
 * @param {String} name  Name of the font
 * @param {Object} fonts Object mapping font names and unicode ranges to locales
 *
 * @public
 */


function addLocalizedFont(name, fonts) {
  fontMap[name] = fonts;

  if (currentLocale) {
    fontGenerator(currentLocale);
  }
}
/**
 * Removes a localized font from the font map
 *
 * @param   {String} name Name of the font
 *
 * @public
 */


function removeLocalizedFont(name) {
  delete fontMap[name];

  if (currentLocale) {
    fontGenerator(currentLocale);
  }
}

module.exports = generateFontRules;
module.exports.generateFontRules = generateFontRules;
module.exports.generateFontOverrideRules = generateFontOverrideRules;
module.exports.addLocalizedFont = addLocalizedFont;
module.exports.removeLocalizedFont = removeLocalizedFont;

/***/ }),

/***/ "./node_modules/@enact/ui/resolution/ResolutionDecorator.js":
/*!******************************************************************!*\
  !*** ./node_modules/@enact/ui/resolution/ResolutionDecorator.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ResolutionDecorator = exports["default"] = void 0;

var _react = _interopRequireDefault(__webpack_require__(/*! react */ "./node_modules/react/index.js"));

var _reactDom = _interopRequireDefault(__webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js"));

var _propTypes = _interopRequireDefault(__webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js"));

var _hoc = _interopRequireDefault(__webpack_require__(/*! @enact/core/hoc */ "./node_modules/@enact/core/hoc/hoc.js"));

var _resolution = __webpack_require__(/*! ./resolution */ "./node_modules/@enact/ui/resolution/resolution.js");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}
/**
 * Default config for `ResolutionDecorator`.
 *
 * @memberof ui/resolution.ResolutionDecorator
 * @hocconfig
 */


var defaultConfig = {
  /**
   * Attaches an event listener to the window to listen for resize events.
   *
   * @type {Boolean}
   * @default true
   * @public
   * @memberof ui/resolution.ResolutionDecorator.defaultConfig
   */
  dynamic: true,

  /**
   * An array of objects containing declarations for screen types to add to the list of known
   * screen types.
   *
   * @type {Object[]}
   * @default null
   * @public
   * @memberof ui/resolution.ResolutionDecorator.defaultConfig
   */
  screenTypes: null
};
/**
 * A higher-order component that configures resolution support for its wrapped component tree.
 *
 * Configuration options:
 *	* `dynamic: true` - when `true`, updates the resolution classes when the window resizes
 *	* `screenTypes: null` - defines a set of screen types to support
 *
 * Example:
 * ```
 *	// Will have the resolution classes and will be updated when the window resizes
 *	const AppWithResolution = ResolutionDecorator(App);
 *	// Will have the resolution classes for the screen at the time of render only
 *	const AppWithStaticResolution = ResolutionDecorator({dynamic: false}, App);
 *	const AppWithScreenTypes = ResolutionDecorator({screenTypes: [
 *		{name: 'hd', pxPerRem: 16, width: 1280, height: 720, aspectRatioName: 'hdtv', base: true}
 *	]}, App);
 * ```
 * @class ResolutionDecorator
 * @memberof ui/resolution
 * @hoc
 * @public
 */

var ResolutionDecorator = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
  var _class, _temp;

  if (config.screenTypes) {
    (0, _resolution.defineScreenTypes)(config.screenTypes);
  }

  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class(props) {
      var _this;

      _classCallCheck(this, _class);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));

      _this.handleResize = function () {
        var classNames = _this.didClassesChange();

        if (classNames) {
          _this.setState({
            resolutionClasses: classNames
          });
        }
      };

      (0, _resolution.init)({
        measurementNode: typeof window !== 'undefined' && window
      });
      _this.state = {
        resolutionClasses: ''
      };
      return _this;
    }

    _createClass(_class, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        if (config.dynamic) window.addEventListener('resize', this.handleResize); // eslint-disable-next-line react/no-find-dom-node

        this.rootNode = _reactDom["default"].findDOMNode(this);
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (config.dynamic) window.removeEventListener('resize', this.handleResize);
      }
    }, {
      key: "didClassesChange",

      /*
       * Compare our current version of the resolved resolution class names with a fresh
       * initialization of RI.
       *
       * @returns {String|undefined} A string of new class names or undefined when there is no change.
       * @private
       */
      value: function didClassesChange() {
        var prevClassNames = (0, _resolution.getResolutionClasses)();
        (0, _resolution.init)({
          measurementNode: this.rootNode
        });
        var classNames = (0, _resolution.getResolutionClasses)();

        if (prevClassNames !== classNames) {
          return classNames;
        }
      }
    }, {
      key: "render",
      value: function render() {
        // Check if the classes are different from our previous classes
        var classes = (0, _resolution.getResolutionClasses)();
        if (this.props.className) classes += (classes ? ' ' : '') + this.props.className;
        return _react["default"].createElement(Wrapped, Object.assign({}, this.props, {
          className: classes
        }));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'ResolutionDecorator', _class.propTypes =
  /** @lends ui/resolution.ResolutionDecorator.prototype */
  {
    className: _propTypes["default"].string
  }, _temp;
});
exports.ResolutionDecorator = ResolutionDecorator;
var _default = ResolutionDecorator;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/resolution/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@enact/ui/resolution/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ResolutionDecorator: true
};
Object.defineProperty(exports, "ResolutionDecorator", {
  enumerable: true,
  get: function get() {
    return _ResolutionDecorator["default"];
  }
});
exports["default"] = void 0;

var ri = _interopRequireWildcard(__webpack_require__(/*! ./resolution */ "./node_modules/@enact/ui/resolution/resolution.js"));

Object.keys(ri).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function get() {
      return ri[key];
    }
  });
});

var _ResolutionDecorator = _interopRequireDefault(__webpack_require__(/*! ./ResolutionDecorator */ "./node_modules/@enact/ui/resolution/ResolutionDecorator.js"));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};

          if (desc.get || desc.set) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
    }

    newObj["default"] = obj;
    return newObj;
  }
}
/**
 * Exports a number of useful methods for resolution independence.
 *
 * The default export is an object containing the resolution independence methods.
 *
 * @module ui/resolution
 * @exports ResolutionDecorator
 */


var _default = ri;
exports["default"] = _default;

/***/ }),

/***/ "./node_modules/@enact/ui/resolution/resolution.js":
/*!*********************************************************!*\
  !*** ./node_modules/@enact/ui/resolution/resolution.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _typeof2(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof2(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calculateFontSize = calculateFontSize;
exports.defineScreenTypes = defineScreenTypes;
exports.getAspectRatio = getAspectRatio;
exports.getAspectRatioName = getAspectRatioName;
exports.getResolutionClasses = getResolutionClasses;
exports.getScreenTypeObject = getScreenTypeObject;
exports.getScreenType = getScreenType;
exports.init = init;
exports.scale = scale;
exports.selectSrc = selectSrc;
exports.unit = unit;
exports.unitToPixelFactors = exports.scaleToRem = exports.config = void 0;

function _typeof(obj) {
  if (typeof Symbol === "function" && _typeof2(Symbol.iterator) === "symbol") {
    _typeof = function _typeof(obj) {
      return _typeof2(obj);
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : _typeof2(obj);
    };
  }

  return _typeof(obj);
}

var baseScreen,
    orientation,
    riRatio,
    screenType,
    workspaceBounds = {
  width: (typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' ? window.innerWidth : 1920,
  height: (typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object' ? window.innerHeight : 1080
},
    screenTypes = [{
  name: 'standard',
  pxPerRem: 16,
  width: workspaceBounds.width,
  height: workspaceBounds.height,
  aspectRatioName: 'standard',
  base: true
}],
    // Assign one sane type in case defineScreenTypes is never run.
screenTypeObject,
    config;
/**
 * Object that stores all of the pixel conversion factors to each keyed unit.
 *
 * @type {Object}
 * @memberof ui/resolution
 * @public
 */

exports.config = config;
var unitToPixelFactors = {
  'rem': 12,
  'in': 96
};
exports.unitToPixelFactors = unitToPixelFactors;
var configDefaults = {
  orientationHandling: 'normal'
};
/**
 * Update the common measured boundary object.
 *
 * This object is used as "what size screen are we looking at". Providing no arguments has no
 * effect and updates nothing.
 *
 * @function
 * @memberOf ui/resolution
 * @param {Node}    measurementNode    A standard DOM node or the `window` node.
 *
 * @returns {undefined}
 * @private
 */

var updateWorkspaceBounds = function updateWorkspaceBounds(measurementNode) {
  if (measurementNode && (measurementNode.clientHeight || measurementNode.clientWidth)) {
    workspaceBounds = {
      height: measurementNode.clientHeight,
      width: measurementNode.clientWidth
    };
  } else if (measurementNode && (measurementNode.innerHeight || measurementNode.innerWidth)) {
    // A backup for if measurementNode is actually `window` and not a normal node
    workspaceBounds = {
      height: measurementNode.innerHeight,
      width: measurementNode.innerWidth
    };
  }
};
/**
 * Fetch the screenType object
 *
 * @function
 * @memberof ui/resolution
 * @param  {String}    type    The key string for the screen type object. If falsy, the current
 *                             screenType is used
 *
 * @returns {Object}           screenTypeObject
 * @private
 */


function getScreenTypeObject(type) {
  type = type || screenType;

  if (screenTypeObject && screenTypeObject.name === type) {
    return screenTypeObject;
  }

  return screenTypes.filter(function (elem) {
    return type === elem.name;
  })[0];
}
/**
 * Sets up screen resolution scaling capabilities by defining an array of all the screens
 * being used.
 *
 * These should be listed in order from smallest to largest, according to
 * width.
 *
 * The `name`, `pxPerRem`, `width`, and `aspectRatioName` properties are required for
 * each screen type in the array. Setting `base: true` on a screen type marks it as the
 * default resolution, upon which everything else will be based.
 *
 * Executing this method also initializes the rest of the resolution-independence code.
 *
 * Example:
 * ```
 * import ri from 'enact/ui/resolution';
 *
 * ri.defineScreenTypes([
 * 	{name: 'vga',     pxPerRem: 8,  width: 640,  height: 480,  aspectRatioName: 'standard'},
 * 	{name: 'xga',     pxPerRem: 16, width: 1024, height: 768,  aspectRatioName: 'standard'},
 * 	{name: 'hd',      pxPerRem: 16, width: 1280, height: 720,  aspectRatioName: 'hdtv'},
 * 	{name: 'fhd',     pxPerRem: 24, width: 1920, height: 1080, aspectRatioName: 'hdtv', base: true},
 * 	{name: 'uw-uxga', pxPerRem: 24, width: 2560, height: 1080, aspectRatioName: 'cinema'},
 * 	{name: 'uhd',     pxPerRem: 48, width: 3840, height: 2160, aspectRatioName: 'hdtv'}
 * ]);
 * ```
 *
 * @function
 * @memberof ui/resolution
 * @param {Object[]}    types    An array of objects containing screen configuration data, as in the
 *                            preceding example.
 * @returns {undefined}
 * @public
 */


function defineScreenTypes(types) {
  if (types) screenTypes = types;

  for (var i = 0; i < screenTypes.length; i++) {
    if (screenTypes[i]['base']) baseScreen = screenTypes[i];
  }

  init();
}
/**
 * Fetches the name of the screen type that best matches the current screen size.
 *
 * The best match is defined as the screen type that is the closest to the screen resolution without
 * going over. ("The Price is Right" style.)
 *
 * @function
 * @memberof ui/resolution
 * @param {Object}    rez    Optional measurement scheme. Must include `height` and `width` properties.
 * @returns {String}         Screen type (e.g., `'fhd'`, `'uhd'`, etc.)
 * @public
 */


function getScreenType(rez) {
  rez = rez || workspaceBounds;
  var types = screenTypes;
  var bestMatch = types[types.length - 1].name; // Blindly set the first screen type, in case no matches are found later.

  orientation = 'landscape';

  if (rez.height > rez.width) {
    orientation = 'portrait';
    var swap = rez.width;
    rez.width = rez.height;
    rez.height = swap;
  } // Loop through resolutions, last->first, largest->smallest


  for (var i = types.length - 1; i >= 0; i--) {
    // Does the current resolution fit inside this screenType definition? If so, save it as the current best match.
    if (rez.height <= types[i].height && rez.width <= types[i].width) {
      bestMatch = types[i].name;
    }
  } // Return the name of the closest fitting set of dimensions.


  return bestMatch;
}
/**
 * Calculate the base rem font size.
 *
 * This is how the magic happens. This accepts an optional `screenType` name. If one isn't provided,
 * the currently detected screen type is used. This uses the config option `orientationHandling`,
 * which when set to "scale" and the screen is in portrait orientation, will dynamically calculate
 * what the base font size should be, if the width were proportionally scaled down to fit in the portrait space.
 *
 * To use, put the following in your application code:
 * ```
 * import ri from '@enact/ui/resolution';
 *
 * ri.config.orientationHandling = 'scale';
 * ri.init();
 * ```
 *
 * This has no effect if the screen is in landscape, or if `orientationHandling` is unset.
 *
 * @function
 * @memberof ui/resolution
 * @param {String}    type    Screen type to base size the calculation on. If no
 *                            screen type is provided, the current screen type will be used.
 * @returns {String}          The calculated pixel size (with unit suffix. Ex: "24px").
 * @public
 */


function calculateFontSize(type) {
  var scrObj = getScreenTypeObject(type);
  var size;

  if (orientation === 'portrait' && config.orientationHandling === 'scale') {
    size = scrObj.height / scrObj.width * scrObj.pxPerRem;
  } else {
    size = scrObj.pxPerRem;
  }

  return size + 'px';
}
/**
 * @function
 * @memberof ui/resolution
 * @param {String}    size     A valid CSS measurement to be applied as the base document font size.
 * @private
 * @returns {undefined}
 */


function updateBaseFontSize(size) {
  if ((typeof window === "undefined" ? "undefined" : _typeof(window)) === 'object') {
    document.documentElement.style.fontSize = size;
  }
}
/**
 * Returns the CSS classes for the given `type`.
 *
 * @function
 * @memberof ui/resolution
 * @param {String}    type    Screen type
 * @returns {String}          CSS class names
 * @public
 */


function getResolutionClasses() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : screenType;
  var classes = [];

  if (orientation) {
    classes.push('enact-orientation-' + orientation);
  }

  if (type) {
    classes.push('enact-res-' + type.toLowerCase());
    var scrObj = getScreenTypeObject(type);

    if (scrObj.aspectRatioName) {
      classes.push('enact-aspect-ratio-' + scrObj.aspectRatioName.toLowerCase());
    }
  }

  return classes.join(' ');
}
/**
 * Returns the ratio of pixels per rem for the given `type` to the pixels per rem for the base type.
 *
 * @function
 * @memberof ui/resolution
 * @param  {String}    type    Screen type
 *
 * @returns {Number}           ratio
 */


function getRiRatio() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : screenType;

  if (type && baseScreen) {
    var ratio = getUnitToPixelFactors(type) / getUnitToPixelFactors(baseScreen.name);

    if (type === screenType) {
      // cache this if it's for our current screen type.
      riRatio = ratio;
    }

    return ratio;
  }

  return 1;
}
/**
 * Returns the pixels per rem for the given `type`.
 *
 * @memberof ui/resolution
 * @param {String}    type    Screen type
 *
 * @returns {Number}          pixels per rem
 */


function getUnitToPixelFactors() {
  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : screenType;

  if (type) {
    return getScreenTypeObject(type).pxPerRem;
  }

  return 1;
}
/**
 * Calculates the aspect ratio of the specified screen type.
 *
 * If no screen type is provided, the current screen type is used.
 *
 * @function
 * @memberof ui/resolution
 * @param {String}    type    Screen type whose aspect ratio will be calculated. If no screen
 *                            type is provided, the current screen type is used.
 * @returns {Number}          The calculated screen ratio (e.g., `1.333`, `1.777`, `2.333`, etc.)
 * @public
 */


function getAspectRatio(type) {
  var scrObj = getScreenTypeObject(type);

  if (scrObj.width && scrObj.height) {
    return scrObj.width / scrObj.height;
  }

  return 1;
}
/**
 * Returns the name of the aspect ratio for a specified screen type, or for the default
 * screen type if none is provided.
 *
 * @function
 * @memberof ui/resolution
 * @param {String}    type    Screen type whose aspect ratio name will be returned. If no
 *                            screen type is provided, the current screen type will be used.
 * @returns {String}          The name of the screen type's aspect ratio
 * @public
 */


function getAspectRatioName(type) {
  var scrObj = getScreenTypeObject(type);
  return scrObj.aspectRatioName || 'standard';
}
/**
 * Takes a provided pixel value and performs a scaling operation based on the current
 * screen type.
 *
 * @function
 * @memberof ui/resolution
 * @param {Number}    px    The quantity of standard-resolution pixels to scale to the
 *                          current screen resolution.
 * @returns {Number}        The scaled value based on the current screen scaling factor
 * @public
 */


function scale(px) {
  return (riRatio || getRiRatio()) * px;
}
/**
 * Convert to various unit formats.
 *
 * Useful for converting pixels to a resolution-independent
 * measurement method, like "rem". Other units are available if defined in the
 * {@link ui/resolution.unitToPixelFactors} object.
 *
 * Example:
 * ```
 * import ri from '@enact/ui/resolution';
 *
 * // Do calculations and get back the desired CSS unit.
 * var frameWidth = 250,
 *     frameWithMarginInches = ri.unit( 10 + frameWidth + 10, 'in' ), // '2.8125in' == frameWithMarginInches
 *     frameWithMarginRems = ri.unit( 10 + frameWidth + 10, 'rem' ); // '22.5rem' == frameWithMarginRems
 * ```
 *
 * @function
 * @memberof ui/resolution
 * @param {String|Number}     pixels    The pixels or math to convert to the unit ("px" suffix in String
 *                                       format is permitted. ex: `'20px'`)
 * @param {String}            toUnit    The name of the unit to convert to.
 *
 * @returns {String|undefined}          Resulting conversion in CSS safe format, in case of malformed input, `undefined`
 * @public
 */


function unit(pixels, toUnit) {
  if (!toUnit || !unitToPixelFactors[toUnit]) return;
  if (typeof pixels === 'string' && pixels.substr(-2) === 'px') pixels = parseInt(pixels.substr(0, pixels.length - 2));
  if (typeof pixels !== 'number') return;
  return pixels / unitToPixelFactors[toUnit] + '' + toUnit;
}
/**
 * Shorthand for when you know you need to scale some pixel value and have it converted to "rem" for
 * proper scaling.
 *
 * This runs {@link ui/resolution.scale} and {@link ui/resolution.unit} together.
 *
 * @function
 * @memberof ui/resolution
 * @param {Number}    pixels    The quantity of standard-resolution pixels to scale to rems
 *
 * @returns {String|undefined}  Resulting conversion or, in case of malformed input, `undefined`
 * @public
 */


var scaleToRem = function scaleToRem(pixels) {
  return unit(scale(pixels), 'rem');
};
/**
 * The default configurable options for {@link ui/resolution.selectSrc}.
 *
 * @typedef {Object} selectSrcOptions
 * @memberof ui/resolution
 * @property {String}    hd    HD / 720p Resolution image asset source URI/URL
 * @property {String}    fhd    FHD / 1080p Resolution image asset source URI/URL
 * @property {String}    uhd    UHD / 4K Resolution image asset source URI/URL
 */

/**
 * Selects the ideal image asset from a set of assets, based on various screen
 * resolutions: HD (720p), FHD (1080p), UHD (4k).
 *
 * When a `src` argument is provided, `selectSrc()` will choose the best image with
 * respect to the current screen resolution. `src` may be either the traditional
 * string, which will pass straight through, or a hash/object of screen types and
 * their asset sources (keys:screen and values:src). The image sources will be used
 * when the screen resolution is less than or equal to the provided screen types.
 *
 * Example:
 * ```
 * // Take advantage of the multi-res mode
 * import {Image} from '@enact/ui/Image';
 *
 * const src = {
 *     'hd': 'http://lorempixel.com/64/64/city/1/',
 *     'fhd': 'http://lorempixel.com/128/128/city/1/',
 *     'uhd': 'http://lorempixel.com/256/256/city/1/'
 * };
 * ...
 * <Image src={src} ... />
 * ...
 * ```
 *
 * @function
 * @memberof ui/resolution
 * @param {String|ui/resolution.selectSrcSrcOptions} src       A string containing a single image
 *                                                             source or a key/value hash/object
 *                                                             containing keys representing screen
 *                                                             types (`'hd'`, `'fhd'`, `'uhd'`,
 *                                                             etc.) and values containing the asset
 *                                                             source for that target screen
 *                                                             resolution.
 *
 * @returns {String}                                           The chosen source, given the string
 *                                                             or hash provided
 * @public
 */


exports.scaleToRem = scaleToRem;

function selectSrc(src) {
  if (typeof src != 'string' && src) {
    var newSrc = src.fhd || src.uhd || src.hd;
    var types = screenTypes; // loop through resolutions

    for (var i = types.length - 1; i >= 0; i--) {
      var t = types[i].name;
      if (screenType === t && src[t]) newSrc = src[t];
    }

    src = newSrc;
  }

  return src;
}
/**
 * This will need to be re-run any time the screen size changes, so all the values can be re-cached.
 *
 * @function
 * @memberof ui/resolution
 * @param {Object}    args    A hash of options. The key `measurementNode` is used to as the node,
 *                            typically the root element, to measure and use as the dimensions for
 *                            the `screenType`.
 *
 * @returns {undefined}
 * @public
 */


function init() {
  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var measurementNode = args.measurementNode;
  updateWorkspaceBounds(measurementNode);
  screenType = getScreenType();
  screenTypeObject = getScreenTypeObject();
  unitToPixelFactors.rem = getUnitToPixelFactors();
  riRatio = getRiRatio();
  updateBaseFontSize(calculateFontSize());
}
/**
 * The current configuration
 *
 * @type {Object}
 * @memberof ui/resolution
 * @private
 */


exports.config = config = Object.assign({}, configDefaults);

/***/ }),

/***/ "./node_modules/classnames/bind.js":
/*!*****************************************!*\
  !*** ./node_modules/classnames/bind.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(this && this[arg] || arg);
			} else if (Array.isArray(arg)) {
				classes.push(classNames.apply(this, arg));
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(this && this[key] || key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {
	'use strict';

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if ( true && module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else if (true) {
		// register as 'classnames', consistent with npm package name
		!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
			return classNames;
		}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	} else {}
}());


/***/ }),

/***/ "./node_modules/define-properties/index.js":
/*!*************************************************!*\
  !*** ./node_modules/define-properties/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keys = __webpack_require__(/*! object-keys */ "./node_modules/object-keys/index.js");
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
			return false;
		}
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;


/***/ }),

/***/ "./node_modules/direction/index.js":
/*!*****************************************!*\
  !*** ./node_modules/direction/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = direction

var RTL = '\u0591-\u07FF\uFB1D-\uFDFD\uFE70-\uFEFC'
var LTR =
  'A-Za-z\u00C0-\u00D6\u00D8-\u00F6' +
  '\u00F8-\u02B8\u0300-\u0590\u0800-\u1FFF\u200E\u2C00-\uFB1C' +
  '\uFE00-\uFE6F\uFEFD-\uFFFF'

var rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')
var ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')

function direction(value) {
  value = String(value || '')

  if (rtl.test(value)) {
    return 'rtl'
  }

  if (ltr.test(value)) {
    return 'ltr'
  }

  return 'neutral'
}


/***/ }),

/***/ "./node_modules/eases/cubic-out.js":
/*!*****************************************!*\
  !*** ./node_modules/eases/cubic-out.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function cubicOut(t) {
  var f = t - 1.0
  return f * f * f + 1.0
}

module.exports = cubicOut

/***/ }),

/***/ "./node_modules/eases/quad-in-out.js":
/*!*******************************************!*\
  !*** ./node_modules/eases/quad-in-out.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function quadInOut(t) {
    t /= 0.5
    if (t < 1) return 0.5*t*t
    t--
    return -0.5 * (t*(t-2) - 1)
}

module.exports = quadInOut

/***/ }),

/***/ "./node_modules/es-abstract/GetIntrinsic.js":
/*!**************************************************!*\
  !*** ./node_modules/es-abstract/GetIntrinsic.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* globals
	Set,
	Map,
	WeakSet,
	WeakMap,

	Promise,

	Symbol,
	Proxy,

	Atomics,
	SharedArrayBuffer,

	ArrayBuffer,
	DataView,
	Uint8Array,
	Float32Array,
	Float64Array,
	Int8Array,
	Int16Array,
	Int32Array,
	Uint8ClampedArray,
	Uint16Array,
	Uint32Array,
*/

var undefined; // eslint-disable-line no-shadow-restricted-names

var ThrowTypeError = Object.getOwnPropertyDescriptor
	? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())
	: function () { throw new TypeError(); };

var hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var generator; // = function * () {};
var generatorFunction = generator ? getProto(generator) : undefined;
var asyncFn; // async function() {};
var asyncFunction = asyncFn ? asyncFn.constructor : undefined;
var asyncGen; // async function * () {};
var asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;
var asyncGenIterator = asyncGen ? asyncGen() : undefined;

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'$ %Array%': Array,
	'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,
	'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'$ %ArrayPrototype%': Array.prototype,
	'$ %ArrayProto_entries%': Array.prototype.entries,
	'$ %ArrayProto_forEach%': Array.prototype.forEach,
	'$ %ArrayProto_keys%': Array.prototype.keys,
	'$ %ArrayProto_values%': Array.prototype.values,
	'$ %AsyncFromSyncIteratorPrototype%': undefined,
	'$ %AsyncFunction%': asyncFunction,
	'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,
	'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,
	'$ %AsyncGeneratorFunction%': asyncGenFunction,
	'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,
	'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,
	'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'$ %Boolean%': Boolean,
	'$ %BooleanPrototype%': Boolean.prototype,
	'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,
	'$ %Date%': Date,
	'$ %DatePrototype%': Date.prototype,
	'$ %decodeURI%': decodeURI,
	'$ %decodeURIComponent%': decodeURIComponent,
	'$ %encodeURI%': encodeURI,
	'$ %encodeURIComponent%': encodeURIComponent,
	'$ %Error%': Error,
	'$ %ErrorPrototype%': Error.prototype,
	'$ %eval%': eval, // eslint-disable-line no-eval
	'$ %EvalError%': EvalError,
	'$ %EvalErrorPrototype%': EvalError.prototype,
	'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,
	'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,
	'$ %Function%': Function,
	'$ %FunctionPrototype%': Function.prototype,
	'$ %Generator%': generator ? getProto(generator()) : undefined,
	'$ %GeneratorFunction%': generatorFunction,
	'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,
	'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,
	'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,
	'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,
	'$ %isFinite%': isFinite,
	'$ %isNaN%': isNaN,
	'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'$ %JSON%': JSON,
	'$ %JSONParse%': JSON.parse,
	'$ %Map%': typeof Map === 'undefined' ? undefined : Map,
	'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,
	'$ %Math%': Math,
	'$ %Number%': Number,
	'$ %NumberPrototype%': Number.prototype,
	'$ %Object%': Object,
	'$ %ObjectPrototype%': Object.prototype,
	'$ %ObjProto_toString%': Object.prototype.toString,
	'$ %ObjProto_valueOf%': Object.prototype.valueOf,
	'$ %parseFloat%': parseFloat,
	'$ %parseInt%': parseInt,
	'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,
	'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,
	'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,
	'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,
	'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,
	'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'$ %RangeError%': RangeError,
	'$ %RangeErrorPrototype%': RangeError.prototype,
	'$ %ReferenceError%': ReferenceError,
	'$ %ReferenceErrorPrototype%': ReferenceError.prototype,
	'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'$ %RegExp%': RegExp,
	'$ %RegExpPrototype%': RegExp.prototype,
	'$ %Set%': typeof Set === 'undefined' ? undefined : Set,
	'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,
	'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,
	'$ %String%': String,
	'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'$ %StringPrototype%': String.prototype,
	'$ %Symbol%': hasSymbols ? Symbol : undefined,
	'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,
	'$ %SyntaxError%': SyntaxError,
	'$ %SyntaxErrorPrototype%': SyntaxError.prototype,
	'$ %ThrowTypeError%': ThrowTypeError,
	'$ %TypedArray%': TypedArray,
	'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,
	'$ %TypeError%': TypeError,
	'$ %TypeErrorPrototype%': TypeError.prototype,
	'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,
	'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,
	'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,
	'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,
	'$ %URIError%': URIError,
	'$ %URIErrorPrototype%': URIError.prototype,
	'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,
	'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,
	'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new TypeError('"allowMissing" argument must be a boolean');
	}

	var key = '$ ' + name;
	if (!(key in INTRINSICS)) {
		throw new SyntaxError('intrinsic ' + name + ' does not exist!');
	}

	// istanbul ignore if // hopefully this is impossible to test :-)
	if (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {
		throw new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
	}
	return INTRINSICS[key];
};


/***/ }),

/***/ "./node_modules/es-abstract/es5.js":
/*!*****************************************!*\
  !*** ./node_modules/es-abstract/es5.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(/*! ./GetIntrinsic */ "./node_modules/es-abstract/GetIntrinsic.js");

var $Object = GetIntrinsic('%Object%');
var $TypeError = GetIntrinsic('%TypeError%');
var $String = GetIntrinsic('%String%');

var assertRecord = __webpack_require__(/*! ./helpers/assertRecord */ "./node_modules/es-abstract/helpers/assertRecord.js");
var $isNaN = __webpack_require__(/*! ./helpers/isNaN */ "./node_modules/es-abstract/helpers/isNaN.js");
var $isFinite = __webpack_require__(/*! ./helpers/isFinite */ "./node_modules/es-abstract/helpers/isFinite.js");

var sign = __webpack_require__(/*! ./helpers/sign */ "./node_modules/es-abstract/helpers/sign.js");
var mod = __webpack_require__(/*! ./helpers/mod */ "./node_modules/es-abstract/helpers/mod.js");

var IsCallable = __webpack_require__(/*! is-callable */ "./node_modules/is-callable/index.js");
var toPrimitive = __webpack_require__(/*! es-to-primitive/es5 */ "./node_modules/es-to-primitive/es5.js");

var has = __webpack_require__(/*! has */ "./node_modules/has/src/index.js");

// https://es5.github.io/#x9
var ES5 = {
	ToPrimitive: toPrimitive,

	ToBoolean: function ToBoolean(value) {
		return !!value;
	},
	ToNumber: function ToNumber(value) {
		return +value; // eslint-disable-line no-implicit-coercion
	},
	ToInteger: function ToInteger(value) {
		var number = this.ToNumber(value);
		if ($isNaN(number)) { return 0; }
		if (number === 0 || !$isFinite(number)) { return number; }
		return sign(number) * Math.floor(Math.abs(number));
	},
	ToInt32: function ToInt32(x) {
		return this.ToNumber(x) >> 0;
	},
	ToUint32: function ToUint32(x) {
		return this.ToNumber(x) >>> 0;
	},
	ToUint16: function ToUint16(value) {
		var number = this.ToNumber(value);
		if ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }
		var posInt = sign(number) * Math.floor(Math.abs(number));
		return mod(posInt, 0x10000);
	},
	ToString: function ToString(value) {
		return $String(value);
	},
	ToObject: function ToObject(value) {
		this.CheckObjectCoercible(value);
		return $Object(value);
	},
	CheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {
		/* jshint eqnull:true */
		if (value == null) {
			throw new $TypeError(optMessage || 'Cannot call method on ' + value);
		}
		return value;
	},
	IsCallable: IsCallable,
	SameValue: function SameValue(x, y) {
		if (x === y) { // 0 === -0, but they are not identical.
			if (x === 0) { return 1 / x === 1 / y; }
			return true;
		}
		return $isNaN(x) && $isNaN(y);
	},

	// https://www.ecma-international.org/ecma-262/5.1/#sec-8
	Type: function Type(x) {
		if (x === null) {
			return 'Null';
		}
		if (typeof x === 'undefined') {
			return 'Undefined';
		}
		if (typeof x === 'function' || typeof x === 'object') {
			return 'Object';
		}
		if (typeof x === 'number') {
			return 'Number';
		}
		if (typeof x === 'boolean') {
			return 'Boolean';
		}
		if (typeof x === 'string') {
			return 'String';
		}
	},

	// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
	IsPropertyDescriptor: function IsPropertyDescriptor(Desc) {
		if (this.Type(Desc) !== 'Object') {
			return false;
		}
		var allowed = {
			'[[Configurable]]': true,
			'[[Enumerable]]': true,
			'[[Get]]': true,
			'[[Set]]': true,
			'[[Value]]': true,
			'[[Writable]]': true
		};

		for (var key in Desc) { // eslint-disable-line
			if (has(Desc, key) && !allowed[key]) {
				return false;
			}
		}

		var isData = has(Desc, '[[Value]]');
		var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');
		if (isData && IsAccessor) {
			throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
		}
		return true;
	},

	// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1
	IsAccessorDescriptor: function IsAccessorDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		assertRecord(this, 'Property Descriptor', 'Desc', Desc);

		if (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {
			return false;
		}

		return true;
	},

	// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2
	IsDataDescriptor: function IsDataDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		assertRecord(this, 'Property Descriptor', 'Desc', Desc);

		if (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {
			return false;
		}

		return true;
	},

	// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3
	IsGenericDescriptor: function IsGenericDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return false;
		}

		assertRecord(this, 'Property Descriptor', 'Desc', Desc);

		if (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {
			return true;
		}

		return false;
	},

	// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4
	FromPropertyDescriptor: function FromPropertyDescriptor(Desc) {
		if (typeof Desc === 'undefined') {
			return Desc;
		}

		assertRecord(this, 'Property Descriptor', 'Desc', Desc);

		if (this.IsDataDescriptor(Desc)) {
			return {
				value: Desc['[[Value]]'],
				writable: !!Desc['[[Writable]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else if (this.IsAccessorDescriptor(Desc)) {
			return {
				get: Desc['[[Get]]'],
				set: Desc['[[Set]]'],
				enumerable: !!Desc['[[Enumerable]]'],
				configurable: !!Desc['[[Configurable]]']
			};
		} else {
			throw new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');
		}
	},

	// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5
	ToPropertyDescriptor: function ToPropertyDescriptor(Obj) {
		if (this.Type(Obj) !== 'Object') {
			throw new $TypeError('ToPropertyDescriptor requires an object');
		}

		var desc = {};
		if (has(Obj, 'enumerable')) {
			desc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);
		}
		if (has(Obj, 'configurable')) {
			desc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);
		}
		if (has(Obj, 'value')) {
			desc['[[Value]]'] = Obj.value;
		}
		if (has(Obj, 'writable')) {
			desc['[[Writable]]'] = this.ToBoolean(Obj.writable);
		}
		if (has(Obj, 'get')) {
			var getter = Obj.get;
			if (typeof getter !== 'undefined' && !this.IsCallable(getter)) {
				throw new TypeError('getter must be a function');
			}
			desc['[[Get]]'] = getter;
		}
		if (has(Obj, 'set')) {
			var setter = Obj.set;
			if (typeof setter !== 'undefined' && !this.IsCallable(setter)) {
				throw new $TypeError('setter must be a function');
			}
			desc['[[Set]]'] = setter;
		}

		if ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {
			throw new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');
		}
		return desc;
	}
};

module.exports = ES5;


/***/ }),

/***/ "./node_modules/es-abstract/helpers/assertRecord.js":
/*!**********************************************************!*\
  !*** ./node_modules/es-abstract/helpers/assertRecord.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var GetIntrinsic = __webpack_require__(/*! ../GetIntrinsic */ "./node_modules/es-abstract/GetIntrinsic.js");

var $TypeError = GetIntrinsic('%TypeError%');
var $SyntaxError = GetIntrinsic('%SyntaxError%');

var has = __webpack_require__(/*! has */ "./node_modules/has/src/index.js");

var predicates = {
  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type
  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {
    if (ES.Type(Desc) !== 'Object') {
      return false;
    }
    var allowed = {
      '[[Configurable]]': true,
      '[[Enumerable]]': true,
      '[[Get]]': true,
      '[[Set]]': true,
      '[[Value]]': true,
      '[[Writable]]': true
    };

    for (var key in Desc) { // eslint-disable-line
      if (has(Desc, key) && !allowed[key]) {
        return false;
      }
    }

    var isData = has(Desc, '[[Value]]');
    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');
    if (isData && IsAccessor) {
      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');
    }
    return true;
  }
};

module.exports = function assertRecord(ES, recordType, argumentName, value) {
  var predicate = predicates[recordType];
  if (typeof predicate !== 'function') {
    throw new $SyntaxError('unknown record type: ' + recordType);
  }
  if (!predicate(ES, value)) {
    throw new $TypeError(argumentName + ' must be a ' + recordType);
  }
  console.log(predicate(ES, value), value);
};


/***/ }),

/***/ "./node_modules/es-abstract/helpers/isFinite.js":
/*!******************************************************!*\
  !*** ./node_modules/es-abstract/helpers/isFinite.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var $isNaN = Number.isNaN || function (a) { return a !== a; };

module.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };


/***/ }),

/***/ "./node_modules/es-abstract/helpers/isNaN.js":
/*!***************************************************!*\
  !*** ./node_modules/es-abstract/helpers/isNaN.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = Number.isNaN || function isNaN(a) {
	return a !== a;
};


/***/ }),

/***/ "./node_modules/es-abstract/helpers/mod.js":
/*!*************************************************!*\
  !*** ./node_modules/es-abstract/helpers/mod.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function mod(number, modulo) {
	var remain = number % modulo;
	return Math.floor(remain >= 0 ? remain : remain + modulo);
};


/***/ }),

/***/ "./node_modules/es-abstract/helpers/sign.js":
/*!**************************************************!*\
  !*** ./node_modules/es-abstract/helpers/sign.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function sign(number) {
	return number >= 0 ? 1 : -1;
};


/***/ }),

/***/ "./node_modules/es-to-primitive/es5.js":
/*!*********************************************!*\
  !*** ./node_modules/es-to-primitive/es5.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;

var isPrimitive = __webpack_require__(/*! ./helpers/isPrimitive */ "./node_modules/es-to-primitive/helpers/isPrimitive.js");

var isCallable = __webpack_require__(/*! is-callable */ "./node_modules/is-callable/index.js");

// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8
var ES5internalSlots = {
	'[[DefaultValue]]': function (O) {
		var actualHint;
		if (arguments.length > 1) {
			actualHint = arguments[1];
		} else {
			actualHint = toStr.call(O) === '[object Date]' ? String : Number;
		}

		if (actualHint === String || actualHint === Number) {
			var methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];
			var value, i;
			for (i = 0; i < methods.length; ++i) {
				if (isCallable(O[methods[i]])) {
					value = O[methods[i]]();
					if (isPrimitive(value)) {
						return value;
					}
				}
			}
			throw new TypeError('No default value');
		}
		throw new TypeError('invalid [[DefaultValue]] hint supplied');
	}
};

// http://ecma-international.org/ecma-262/5.1/#sec-9.1
module.exports = function ToPrimitive(input) {
	if (isPrimitive(input)) {
		return input;
	}
	if (arguments.length > 1) {
		return ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);
	}
	return ES5internalSlots['[[DefaultValue]]'](input);
};


/***/ }),

/***/ "./node_modules/es-to-primitive/helpers/isPrimitive.js":
/*!*************************************************************!*\
  !*** ./node_modules/es-to-primitive/helpers/isPrimitive.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function isPrimitive(value) {
	return value === null || (typeof value !== 'function' && typeof value !== 'object');
};


/***/ }),

/***/ "./node_modules/fbjs/lib/shallowEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/fbjs/lib/shallowEqual.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @typechecks
 * 
 */

/*eslint-disable no-self-compare */



var hasOwnProperty = Object.prototype.hasOwnProperty;

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  // SameValue algorithm
  if (x === y) {
    // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    // Added the nonzero y check to make Flow happy, but it is redundant
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  } else {
    // Step 6.a: NaN == NaN
    return x !== x && y !== y;
  }
}

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

module.exports = shallowEqual;

/***/ }),

/***/ "./node_modules/for-each/index.js":
/*!****************************************!*\
  !*** ./node_modules/for-each/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isCallable = __webpack_require__(/*! is-callable */ "./node_modules/is-callable/index.js");

var toStr = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;

var forEachArray = function forEachArray(array, iterator, receiver) {
    for (var i = 0, len = array.length; i < len; i++) {
        if (hasOwnProperty.call(array, i)) {
            if (receiver == null) {
                iterator(array[i], i, array);
            } else {
                iterator.call(receiver, array[i], i, array);
            }
        }
    }
};

var forEachString = function forEachString(string, iterator, receiver) {
    for (var i = 0, len = string.length; i < len; i++) {
        // no such thing as a sparse string.
        if (receiver == null) {
            iterator(string.charAt(i), i, string);
        } else {
            iterator.call(receiver, string.charAt(i), i, string);
        }
    }
};

var forEachObject = function forEachObject(object, iterator, receiver) {
    for (var k in object) {
        if (hasOwnProperty.call(object, k)) {
            if (receiver == null) {
                iterator(object[k], k, object);
            } else {
                iterator.call(receiver, object[k], k, object);
            }
        }
    }
};

var forEach = function forEach(list, iterator, thisArg) {
    if (!isCallable(iterator)) {
        throw new TypeError('iterator must be a function');
    }

    var receiver;
    if (arguments.length >= 3) {
        receiver = thisArg;
    }

    if (toStr.call(list) === '[object Array]') {
        forEachArray(list, iterator, receiver);
    } else if (typeof list === 'string') {
        forEachString(list, iterator, receiver);
    } else {
        forEachObject(list, iterator, receiver);
    }
};

module.exports = forEach;


/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};


/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/function-bind/implementation.js");

module.exports = Function.prototype.bind || implementation;


/***/ }),

/***/ "./node_modules/global/window.js":
/*!***************************************!*\
  !*** ./node_modules/global/window.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var win;

if (typeof window !== "undefined") {
    win = window;
} else if (typeof global !== "undefined") {
    win = global;
} else if (typeof self !== "undefined"){
    win = self;
} else {
    win = {};
}

module.exports = win;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);


/***/ }),

/***/ "./node_modules/invariant/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/invariant/browser.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (true) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

module.exports = invariant;


/***/ }),

/***/ "./node_modules/is-callable/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-callable/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var fnToStr = Function.prototype.toString;

var constructorRegex = /^\s*class\b/;
var isES6ClassFn = function isES6ClassFunction(value) {
	try {
		var fnStr = fnToStr.call(value);
		return constructorRegex.test(fnStr);
	} catch (e) {
		return false; // not a function
	}
};

var tryFunctionObject = function tryFunctionToStr(value) {
	try {
		if (isES6ClassFn(value)) { return false; }
		fnToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var fnClass = '[object Function]';
var genClass = '[object GeneratorFunction]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isCallable(value) {
	if (!value) { return false; }
	if (typeof value !== 'function' && typeof value !== 'object') { return false; }
	if (typeof value === 'function' && !value.prototype) { return true; }
	if (hasToStringTag) { return tryFunctionObject(value); }
	if (isES6ClassFn(value)) { return false; }
	var strClass = toStr.call(value);
	return strClass === fnClass || strClass === genClass;
};


/***/ }),

/***/ "./node_modules/is-function/index.js":
/*!*******************************************!*\
  !*** ./node_modules/is-function/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = isFunction

var toString = Object.prototype.toString

function isFunction (fn) {
  var string = toString.call(fn)
  return string === '[object Function]' ||
    (typeof fn === 'function' && string !== '[object RegExp]') ||
    (typeof window !== 'undefined' &&
     // IE8 and below
     (fn === window.setTimeout ||
      fn === window.alert ||
      fn === window.confirm ||
      fn === window.prompt))
};


/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ "./node_modules/object-keys/implementation.js":
/*!****************************************************!*\
  !*** ./node_modules/object-keys/implementation.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js"); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/index.js":
/*!*******************************************!*\
  !*** ./node_modules/object-keys/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var slice = Array.prototype.slice;
var isArgs = __webpack_require__(/*! ./isArguments */ "./node_modules/object-keys/isArguments.js");

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : __webpack_require__(/*! ./implementation */ "./node_modules/object-keys/implementation.js");

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;


/***/ }),

/***/ "./node_modules/object-keys/isArguments.js":
/*!*************************************************!*\
  !*** ./node_modules/object-keys/isArguments.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};


/***/ }),

/***/ "./node_modules/parse-headers/parse-headers.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse-headers/parse-headers.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var trim = __webpack_require__(/*! string.prototype.trim */ "./node_modules/string.prototype.trim/index.js")
  , forEach = __webpack_require__(/*! for-each */ "./node_modules/for-each/index.js")
  , isArray = function(arg) {
      return Object.prototype.toString.call(arg) === '[object Array]';
    }

module.exports = function (headers) {
  if (!headers)
    return {}

  var result = {}

  forEach(
      trim(headers).split('\n')
    , function (row) {
        var index = row.indexOf(':')
          , key = trim(row.slice(0, index)).toLowerCase()
          , value = trim(row.slice(index + 1))

        if (typeof(result[key]) === 'undefined') {
          result[key] = value
        } else if (isArray(result[key])) {
          result[key].push(value)
        } else {
          result[key] = [ result[key], value ]
        }
      }
  )

  return result
}


/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var printWarning = function() {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */
function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error;
        // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.
        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error(
              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
            );
            err.name = 'Invariant Violation';
            throw err;
          }
          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }
        if (error && !(error instanceof Error)) {
          printWarning(
            (componentName || 'React class') + ': type specification of ' +
            location + ' `' + typeSpecName + '` is invalid; the type checker ' +
            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
            'You may have forgotten to pass an argument to the type checker ' +
            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
            'shape all require an argument).'
          );
        }
        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;

          var stack = getStack ? getStack() : '';

          printWarning(
            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
          );
        }
      }
    }
  }
}

/**
 * Resets warning cache when testing.
 *
 * @private
 */
checkPropTypes.resetWarningCache = function() {
  if (true) {
    loggedTypeFailures = {};
  }
}

module.exports = checkPropTypes;


/***/ }),

/***/ "./node_modules/prop-types/factoryWithTypeCheckers.js":
/*!************************************************************!*\
  !*** ./node_modules/prop-types/factoryWithTypeCheckers.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");
var assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");
var checkPropTypes = __webpack_require__(/*! ./checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

var has = Function.call.bind(Object.prototype.hasOwnProperty);
var printWarning = function() {};

if (true) {
  printWarning = function(text) {
    var message = 'Warning: ' + text;
    if (typeof console !== 'undefined') {
      console.error(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}

function emptyFunctionThatReturnsNull() {
  return null;
}

module.exports = function(isValidElement, throwOnDirectAccess) {
  /* global Symbol */
  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

  /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */
  function getIteratorFn(maybeIterable) {
    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
    if (typeof iteratorFn === 'function') {
      return iteratorFn;
    }
  }

  /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */

  var ANONYMOUS = '<<anonymous>>';

  // Important!
  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
  var ReactPropTypes = {
    array: createPrimitiveTypeChecker('array'),
    bool: createPrimitiveTypeChecker('boolean'),
    func: createPrimitiveTypeChecker('function'),
    number: createPrimitiveTypeChecker('number'),
    object: createPrimitiveTypeChecker('object'),
    string: createPrimitiveTypeChecker('string'),
    symbol: createPrimitiveTypeChecker('symbol'),

    any: createAnyTypeChecker(),
    arrayOf: createArrayOfTypeChecker,
    element: createElementTypeChecker(),
    elementType: createElementTypeTypeChecker(),
    instanceOf: createInstanceTypeChecker,
    node: createNodeChecker(),
    objectOf: createObjectOfTypeChecker,
    oneOf: createEnumTypeChecker,
    oneOfType: createUnionTypeChecker,
    shape: createShapeTypeChecker,
    exact: createStrictShapeTypeChecker,
  };

  /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */
  /*eslint-disable no-self-compare*/
  function is(x, y) {
    // SameValue algorithm
    if (x === y) {
      // Steps 1-5, 7-10
      // Steps 6.b-6.e: +0 != -0
      return x !== 0 || 1 / x === 1 / y;
    } else {
      // Step 6.a: NaN == NaN
      return x !== x && y !== y;
    }
  }
  /*eslint-enable no-self-compare*/

  /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */
  function PropTypeError(message) {
    this.message = message;
    this.stack = '';
  }
  // Make `instanceof Error` still work for returned errors.
  PropTypeError.prototype = Error.prototype;

  function createChainableTypeChecker(validate) {
    if (true) {
      var manualPropTypeCallCache = {};
      var manualPropTypeWarningCount = 0;
    }
    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
      componentName = componentName || ANONYMOUS;
      propFullName = propFullName || propName;

      if (secret !== ReactPropTypesSecret) {
        if (throwOnDirectAccess) {
          // New behavior only for users of `prop-types` package
          var err = new Error(
            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
            'Use `PropTypes.checkPropTypes()` to call them. ' +
            'Read more at http://fb.me/use-check-prop-types'
          );
          err.name = 'Invariant Violation';
          throw err;
        } else if ( true && typeof console !== 'undefined') {
          // Old behavior for people using React.PropTypes
          var cacheKey = componentName + ':' + propName;
          if (
            !manualPropTypeCallCache[cacheKey] &&
            // Avoid spamming the console because they are often not actionable except for lib authors
            manualPropTypeWarningCount < 3
          ) {
            printWarning(
              'You are manually calling a React.PropTypes validation ' +
              'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
              'and will throw in the standalone `prop-types` package. ' +
              'You may be seeing this warning due to a third-party PropTypes ' +
              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
            );
            manualPropTypeCallCache[cacheKey] = true;
            manualPropTypeWarningCount++;
          }
        }
      }
      if (props[propName] == null) {
        if (isRequired) {
          if (props[propName] === null) {
            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
          }
          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
        }
        return null;
      } else {
        return validate(props, propName, componentName, location, propFullName);
      }
    }

    var chainedCheckType = checkType.bind(null, false);
    chainedCheckType.isRequired = checkType.bind(null, true);

    return chainedCheckType;
  }

  function createPrimitiveTypeChecker(expectedType) {
    function validate(props, propName, componentName, location, propFullName, secret) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== expectedType) {
        // `propValue` being instance of, say, date/regexp, pass the 'object'
        // check, but we can offer a more precise error message here rather than
        // 'of type `object`'.
        var preciseType = getPreciseType(propValue);

        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createAnyTypeChecker() {
    return createChainableTypeChecker(emptyFunctionThatReturnsNull);
  }

  function createArrayOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
      }
      var propValue = props[propName];
      if (!Array.isArray(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
      }
      for (var i = 0; i < propValue.length; i++) {
        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
        if (error instanceof Error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!isValidElement(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createElementTypeTypeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      if (!ReactIs.isValidElementType(propValue)) {
        var propType = getPropType(propValue);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createInstanceTypeChecker(expectedClass) {
    function validate(props, propName, componentName, location, propFullName) {
      if (!(props[propName] instanceof expectedClass)) {
        var expectedClassName = expectedClass.name || ANONYMOUS;
        var actualClassName = getClassName(props[propName]);
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createEnumTypeChecker(expectedValues) {
    if (!Array.isArray(expectedValues)) {
      if (true) {
        if (arguments.length > 1) {
          printWarning(
            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
          );
        } else {
          printWarning('Invalid argument supplied to oneOf, expected an array.');
        }
      }
      return emptyFunctionThatReturnsNull;
    }

    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      for (var i = 0; i < expectedValues.length; i++) {
        if (is(propValue, expectedValues[i])) {
          return null;
        }
      }

      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
        var type = getPreciseType(value);
        if (type === 'symbol') {
          return String(value);
        }
        return value;
      });
      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createObjectOfTypeChecker(typeChecker) {
    function validate(props, propName, componentName, location, propFullName) {
      if (typeof typeChecker !== 'function') {
        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
      }
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
      }
      for (var key in propValue) {
        if (has(propValue, key)) {
          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
          if (error instanceof Error) {
            return error;
          }
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createUnionTypeChecker(arrayOfTypeCheckers) {
    if (!Array.isArray(arrayOfTypeCheckers)) {
       true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : undefined;
      return emptyFunctionThatReturnsNull;
    }

    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
      var checker = arrayOfTypeCheckers[i];
      if (typeof checker !== 'function') {
        printWarning(
          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
        );
        return emptyFunctionThatReturnsNull;
      }
    }

    function validate(props, propName, componentName, location, propFullName) {
      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
        var checker = arrayOfTypeCheckers[i];
        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
          return null;
        }
      }

      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
    }
    return createChainableTypeChecker(validate);
  }

  function createNodeChecker() {
    function validate(props, propName, componentName, location, propFullName) {
      if (!isNode(props[propName])) {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      for (var key in shapeTypes) {
        var checker = shapeTypes[key];
        if (!checker) {
          continue;
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }
    return createChainableTypeChecker(validate);
  }

  function createStrictShapeTypeChecker(shapeTypes) {
    function validate(props, propName, componentName, location, propFullName) {
      var propValue = props[propName];
      var propType = getPropType(propValue);
      if (propType !== 'object') {
        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
      }
      // We need to check all keys in case some are required but missing from
      // props.
      var allKeys = assign({}, props[propName], shapeTypes);
      for (var key in allKeys) {
        var checker = shapeTypes[key];
        if (!checker) {
          return new PropTypeError(
            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
            '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
            '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
          );
        }
        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
        if (error) {
          return error;
        }
      }
      return null;
    }

    return createChainableTypeChecker(validate);
  }

  function isNode(propValue) {
    switch (typeof propValue) {
      case 'number':
      case 'string':
      case 'undefined':
        return true;
      case 'boolean':
        return !propValue;
      case 'object':
        if (Array.isArray(propValue)) {
          return propValue.every(isNode);
        }
        if (propValue === null || isValidElement(propValue)) {
          return true;
        }

        var iteratorFn = getIteratorFn(propValue);
        if (iteratorFn) {
          var iterator = iteratorFn.call(propValue);
          var step;
          if (iteratorFn !== propValue.entries) {
            while (!(step = iterator.next()).done) {
              if (!isNode(step.value)) {
                return false;
              }
            }
          } else {
            // Iterator will provide entry [k,v] tuples rather than values.
            while (!(step = iterator.next()).done) {
              var entry = step.value;
              if (entry) {
                if (!isNode(entry[1])) {
                  return false;
                }
              }
            }
          }
        } else {
          return false;
        }

        return true;
      default:
        return false;
    }
  }

  function isSymbol(propType, propValue) {
    // Native Symbol.
    if (propType === 'symbol') {
      return true;
    }

    // falsy value can't be a Symbol
    if (!propValue) {
      return false;
    }

    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
    if (propValue['@@toStringTag'] === 'Symbol') {
      return true;
    }

    // Fallback for non-spec compliant Symbols which are polyfilled.
    if (typeof Symbol === 'function' && propValue instanceof Symbol) {
      return true;
    }

    return false;
  }

  // Equivalent of `typeof` but with special handling for array and regexp.
  function getPropType(propValue) {
    var propType = typeof propValue;
    if (Array.isArray(propValue)) {
      return 'array';
    }
    if (propValue instanceof RegExp) {
      // Old webkits (at least until Android 4.0) return 'function' rather than
      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
      // passes PropTypes.object.
      return 'object';
    }
    if (isSymbol(propType, propValue)) {
      return 'symbol';
    }
    return propType;
  }

  // This handles more types than `getPropType`. Only used for error messages.
  // See `createPrimitiveTypeChecker`.
  function getPreciseType(propValue) {
    if (typeof propValue === 'undefined' || propValue === null) {
      return '' + propValue;
    }
    var propType = getPropType(propValue);
    if (propType === 'object') {
      if (propValue instanceof Date) {
        return 'date';
      } else if (propValue instanceof RegExp) {
        return 'regexp';
      }
    }
    return propType;
  }

  // Returns a string that is postfixed to a warning about an invalid type.
  // For example, "undefined" or "of type array"
  function getPostfixForTypeWarning(value) {
    var type = getPreciseType(value);
    switch (type) {
      case 'array':
      case 'object':
        return 'an ' + type;
      case 'boolean':
      case 'date':
      case 'regexp':
        return 'a ' + type;
      default:
        return type;
    }
  }

  // Returns class name of the object, if any.
  function getClassName(propValue) {
    if (!propValue.constructor || !propValue.constructor.name) {
      return ANONYMOUS;
    }
    return propValue.constructor.name;
  }

  ReactPropTypes.checkPropTypes = checkPropTypes;
  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
  ReactPropTypes.PropTypes = ReactPropTypes;

  return ReactPropTypes;
};


/***/ }),

/***/ "./node_modules/prop-types/index.js":
/*!******************************************!*\
  !*** ./node_modules/prop-types/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

if (true) {
  var ReactIs = __webpack_require__(/*! react-is */ "./node_modules/react-is/index.js");

  // By explicitly using `prop-types` you are opting into new development behavior.
  // http://fb.me/prop-types-in-prod
  var throwOnDirectAccess = true;
  module.exports = __webpack_require__(/*! ./factoryWithTypeCheckers */ "./node_modules/prop-types/factoryWithTypeCheckers.js")(ReactIs.isElement, throwOnDirectAccess);
} else {}


/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */



var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

module.exports = ReactPropTypesSecret;


/***/ }),

/***/ "./node_modules/ramda/src/always.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/always.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");


/**
 * Returns a function that always returns the given value. Note that for
 * non-primitives the value returned is a reference to the original value.
 *
 * This function is known as `const`, `constant`, or `K` (for K combinator) in
 * other languages and libraries.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig a -> (* -> a)
 * @param {*} val The value to wrap in a function
 * @return {Function} A Function :: * -> val.
 * @example
 *
 *      var t = R.always('Tee');
 *      t(); //=> 'Tee'
 */
module.exports = _curry1(function always(val) {
  return function() {
    return val;
  };
});


/***/ }),

/***/ "./node_modules/ramda/src/and.js":
/*!***************************************!*\
  !*** ./node_modules/ramda/src/and.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Returns `true` if both arguments are `true`; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig a -> b -> a | b
 * @param {Any} a
 * @param {Any} b
 * @return {Any} the first argument if it is falsy, otherwise the second argument.
 * @see R.both
 * @example
 *
 *      R.and(true, true); //=> true
 *      R.and(true, false); //=> false
 *      R.and(false, true); //=> false
 *      R.and(false, false); //=> false
 */
module.exports = _curry2(function and(a, b) {
  return a && b;
});


/***/ }),

/***/ "./node_modules/ramda/src/ap.js":
/*!**************************************!*\
  !*** ./node_modules/ramda/src/ap.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _concat = __webpack_require__(/*! ./internal/_concat */ "./node_modules/ramda/src/internal/_concat.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _reduce = __webpack_require__(/*! ./internal/_reduce */ "./node_modules/ramda/src/internal/_reduce.js");
var map = __webpack_require__(/*! ./map */ "./node_modules/ramda/src/map.js");


/**
 * ap applies a list of functions to a list of values.
 *
 * Dispatches to the `ap` method of the second argument, if present. Also
 * treats curried functions as applicatives.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Function
 * @sig [a -> b] -> [a] -> [b]
 * @sig Apply f => f (a -> b) -> f a -> f b
 * @param {*} applyF
 * @param {*} applyX
 * @return {*}
 * @example
 *
 *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]
 *      R.ap([R.concat('tasty '), R.toUpper], ['pizza', 'salad']); //=> ["tasty pizza", "tasty salad", "PIZZA", "SALAD"]
 * @symb R.ap([f, g], [a, b]) = [f(a), f(b), g(a), g(b)]
 */
module.exports = _curry2(function ap(applyF, applyX) {
  return (
    typeof applyX['fantasy-land/ap'] === 'function' ?
      applyX['fantasy-land/ap'](applyF) :
    typeof applyF.ap === 'function' ?
      applyF.ap(applyX) :
    typeof applyF === 'function' ?
      function(x) { return applyF(x)(applyX(x)); } :
    // else
      _reduce(function(acc, f) { return _concat(acc, map(f, applyX)); }, [], applyF)
  );
});


/***/ }),

/***/ "./node_modules/ramda/src/bind.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/bind.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__(/*! ./internal/_arity */ "./node_modules/ramda/src/internal/_arity.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Creates a function that is bound to a context.
 * Note: `R.bind` does not provide the additional argument-binding capabilities of
 * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Function
 * @category Object
 * @sig (* -> *) -> {*} -> (* -> *)
 * @param {Function} fn The function to bind to context
 * @param {Object} thisObj The context to bind `fn` to
 * @return {Function} A function that will execute in the context of `thisObj`.
 * @see R.partial
 * @example
 *
 *      var log = R.bind(console.log, console);
 *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}
 *      // logs {a: 2}
 * @symb R.bind(f, o)(a, b) = f.call(o, a, b)
 */
module.exports = _curry2(function bind(fn, thisObj) {
  return _arity(fn.length, function() {
    return fn.apply(thisObj, arguments);
  });
});


/***/ }),

/***/ "./node_modules/ramda/src/clamp.js":
/*!*****************************************!*\
  !*** ./node_modules/ramda/src/clamp.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");

/**
 * Restricts a number to be within a range.
 *
 * Also works for other ordered types such as Strings and Dates.
 *
 * @func
 * @memberOf R
 * @since v0.20.0
 * @category Relation
 * @sig Ord a => a -> a -> a -> a
 * @param {Number} minimum The lower limit of the clamp (inclusive)
 * @param {Number} maximum The upper limit of the clamp (inclusive)
 * @param {Number} value Value to be clamped
 * @return {Number} Returns `minimum` when `val < minimum`, `maximum` when `val > maximum`, returns `val` otherwise
 * @example
 *
 *      R.clamp(1, 10, -5) // => 1
 *      R.clamp(1, 10, 15) // => 10
 *      R.clamp(1, 10, 4)  // => 4
 */
module.exports = _curry3(function clamp(min, max, value) {
  if (min > max) {
    throw new Error('min must not be greater than max in clamp(min, max, value)');
  }
  return value < min ? min :
         value > max ? max :
         value;
});


/***/ }),

/***/ "./node_modules/ramda/src/complement.js":
/*!**********************************************!*\
  !*** ./node_modules/ramda/src/complement.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var lift = __webpack_require__(/*! ./lift */ "./node_modules/ramda/src/lift.js");
var not = __webpack_require__(/*! ./not */ "./node_modules/ramda/src/not.js");


/**
 * Takes a function `f` and returns a function `g` such that if called with the same arguments
 * when `f` returns a "truthy" value, `g` returns `false` and when `f` returns a "falsy" value `g` returns `true`.
 *
 * `R.complement` may be applied to any functor
 *
 * @func
 * @memberOf R
 * @since v0.12.0
 * @category Logic
 * @sig (*... -> *) -> (*... -> Boolean)
 * @param {Function} f
 * @return {Function}
 * @see R.not
 * @example
 *
 *      var isNotNil = R.complement(R.isNil);
 *      isNil(null); //=> true
 *      isNotNil(null); //=> false
 *      isNil(7); //=> false
 *      isNotNil(7); //=> true
 */
module.exports = lift(not);


/***/ }),

/***/ "./node_modules/ramda/src/compose.js":
/*!*******************************************!*\
  !*** ./node_modules/ramda/src/compose.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var pipe = __webpack_require__(/*! ./pipe */ "./node_modules/ramda/src/pipe.js");
var reverse = __webpack_require__(/*! ./reverse */ "./node_modules/ramda/src/reverse.js");


/**
 * Performs right-to-left function composition. The rightmost function may have
 * any arity; the remaining functions must be unary.
 *
 * **Note:** The result of compose is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)
 * @param {...Function} ...functions The functions to compose
 * @return {Function}
 * @see R.pipe
 * @example
 *
 *      var classyGreeting = (firstName, lastName) => "The name's " + lastName + ", " + firstName + " " + lastName
 *      var yellGreeting = R.compose(R.toUpper, classyGreeting);
 *      yellGreeting('James', 'Bond'); //=> "THE NAME'S BOND, JAMES BOND"
 *
 *      R.compose(Math.abs, R.add(1), R.multiply(2))(-4) //=> 7
 *
 * @symb R.compose(f, g, h)(a, b) = f(g(h(a, b)))
 */
module.exports = function compose() {
  if (arguments.length === 0) {
    throw new Error('compose requires at least one argument');
  }
  return pipe.apply(this, reverse(arguments));
};


/***/ }),

/***/ "./node_modules/ramda/src/concat.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/concat.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _isArray = __webpack_require__(/*! ./internal/_isArray */ "./node_modules/ramda/src/internal/_isArray.js");
var _isFunction = __webpack_require__(/*! ./internal/_isFunction */ "./node_modules/ramda/src/internal/_isFunction.js");
var _isString = __webpack_require__(/*! ./internal/_isString */ "./node_modules/ramda/src/internal/_isString.js");
var toString = __webpack_require__(/*! ./toString */ "./node_modules/ramda/src/toString.js");


/**
 * Returns the result of concatenating the given lists or strings.
 *
 * Note: `R.concat` expects both arguments to be of the same type,
 * unlike the native `Array.prototype.concat` method. It will throw
 * an error if you `concat` an Array with a non-Array value.
 *
 * Dispatches to the `concat` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a] -> [a]
 * @sig String -> String -> String
 * @param {Array|String} firstList The first list
 * @param {Array|String} secondList The second list
 * @return {Array|String} A list consisting of the elements of `firstList` followed by the elements of
 * `secondList`.
 *
 * @example
 *
 *      R.concat('ABC', 'DEF'); // 'ABCDEF'
 *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]
 *      R.concat([], []); //=> []
 */
module.exports = _curry2(function concat(a, b) {
  if (_isArray(a)) {
    if (_isArray(b)) {
      return a.concat(b);
    }
    throw new TypeError(toString(b) + ' is not an array');
  }
  if (_isString(a)) {
    if (_isString(b)) {
      return a + b;
    }
    throw new TypeError(toString(b) + ' is not a string');
  }
  if (a != null && _isFunction(a['fantasy-land/concat'])) {
    return a['fantasy-land/concat'](b);
  }
  if (a != null && _isFunction(a.concat)) {
    return a.concat(b);
  }
  throw new TypeError(toString(a) + ' does not have a method named "concat" or "fantasy-land/concat"');
});


/***/ }),

/***/ "./node_modules/ramda/src/cond.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/cond.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__(/*! ./internal/_arity */ "./node_modules/ramda/src/internal/_arity.js");
var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var map = __webpack_require__(/*! ./map */ "./node_modules/ramda/src/map.js");
var max = __webpack_require__(/*! ./max */ "./node_modules/ramda/src/max.js");
var reduce = __webpack_require__(/*! ./reduce */ "./node_modules/ramda/src/reduce.js");


/**
 * Returns a function, `fn`, which encapsulates `if/else, if/else, ...` logic.
 * `R.cond` takes a list of [predicate, transformer] pairs. All of the arguments
 * to `fn` are applied to each of the predicates in turn until one returns a
 * "truthy" value, at which point `fn` returns the result of applying its
 * arguments to the corresponding transformer. If none of the predicates
 * matches, `fn` returns undefined.
 *
 * @func
 * @memberOf R
 * @since v0.6.0
 * @category Logic
 * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)
 * @param {Array} pairs A list of [predicate, transformer]
 * @return {Function}
 * @example
 *
 *      var fn = R.cond([
 *        [R.equals(0),   R.always('water freezes at 0°C')],
 *        [R.equals(100), R.always('water boils at 100°C')],
 *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']
 *      ]);
 *      fn(0); //=> 'water freezes at 0°C'
 *      fn(50); //=> 'nothing special happens at 50°C'
 *      fn(100); //=> 'water boils at 100°C'
 */
module.exports = _curry1(function cond(pairs) {
  var arity = reduce(max,
                     0,
                     map(function(pair) { return pair[0].length; }, pairs));
  return _arity(arity, function() {
    var idx = 0;
    while (idx < pairs.length) {
      if (pairs[idx][0].apply(this, arguments)) {
        return pairs[idx][1].apply(this, arguments);
      }
      idx += 1;
    }
  });
});


/***/ }),

/***/ "./node_modules/ramda/src/curry.js":
/*!*****************************************!*\
  !*** ./node_modules/ramda/src/curry.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var curryN = __webpack_require__(/*! ./curryN */ "./node_modules/ramda/src/curryN.js");


/**
 * Returns a curried equivalent of the provided function. The curried function
 * has two unusual capabilities. First, its arguments needn't be provided one
 * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (* -> a) -> (* -> a)
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curryN
 * @example
 *
 *      var addFourNumbers = (a, b, c, d) => a + b + c + d;
 *
 *      var curriedAddFourNumbers = R.curry(addFourNumbers);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */
module.exports = _curry1(function curry(fn) {
  return curryN(fn.length, fn);
});


/***/ }),

/***/ "./node_modules/ramda/src/curryN.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/curryN.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__(/*! ./internal/_arity */ "./node_modules/ramda/src/internal/_arity.js");
var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _curryN = __webpack_require__(/*! ./internal/_curryN */ "./node_modules/ramda/src/internal/_curryN.js");


/**
 * Returns a curried equivalent of the provided function, with the specified
 * arity. The curried function has two unusual capabilities. First, its
 * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the
 * following are equivalent:
 *
 *   - `g(1)(2)(3)`
 *   - `g(1)(2, 3)`
 *   - `g(1, 2)(3)`
 *   - `g(1, 2, 3)`
 *
 * Secondly, the special placeholder value [`R.__`](#__) may be used to specify
 * "gaps", allowing partial application of any combination of arguments,
 * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),
 * the following are equivalent:
 *
 *   - `g(1, 2, 3)`
 *   - `g(_, 2, 3)(1)`
 *   - `g(_, _, 3)(1)(2)`
 *   - `g(_, _, 3)(1, 2)`
 *   - `g(_, 2)(1)(3)`
 *   - `g(_, 2)(1, 3)`
 *   - `g(_, 2)(_, 3)(1)`
 *
 * @func
 * @memberOf R
 * @since v0.5.0
 * @category Function
 * @sig Number -> (* -> a) -> (* -> a)
 * @param {Number} length The arity for the returned function.
 * @param {Function} fn The function to curry.
 * @return {Function} A new, curried function.
 * @see R.curry
 * @example
 *
 *      var sumArgs = (...args) => R.sum(args);
 *
 *      var curriedAddFourNumbers = R.curryN(4, sumArgs);
 *      var f = curriedAddFourNumbers(1, 2);
 *      var g = f(3);
 *      g(4); //=> 10
 */
module.exports = _curry2(function curryN(length, fn) {
  if (length === 1) {
    return _curry1(fn);
  }
  return _arity(length, _curryN(length, [], fn));
});


/***/ }),

/***/ "./node_modules/ramda/src/eqBy.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/eqBy.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");
var equals = __webpack_require__(/*! ./equals */ "./node_modules/ramda/src/equals.js");


/**
 * Takes a function and two values in its domain and returns `true` if the
 * values map to the same value in the codomain; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Relation
 * @sig (a -> b) -> a -> a -> Boolean
 * @param {Function} f
 * @param {*} x
 * @param {*} y
 * @return {Boolean}
 * @example
 *
 *      R.eqBy(Math.abs, 5, -5); //=> true
 */
module.exports = _curry3(function eqBy(f, x, y) {
  return equals(f(x), f(y));
});


/***/ }),

/***/ "./node_modules/ramda/src/equals.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/equals.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _equals = __webpack_require__(/*! ./internal/_equals */ "./node_modules/ramda/src/internal/_equals.js");


/**
 * Returns `true` if its arguments are equivalent, `false` otherwise. Handles
 * cyclical data structures.
 *
 * Dispatches symmetrically to the `equals` methods of both arguments, if
 * present.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> b -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      R.equals(1, 1); //=> true
 *      R.equals(1, '1'); //=> false
 *      R.equals([1, 2, 3], [1, 2, 3]); //=> true
 *
 *      var a = {}; a.v = a;
 *      var b = {}; b.v = b;
 *      R.equals(a, b); //=> true
 */
module.exports = _curry2(function equals(a, b) {
  return _equals(a, b, [], []);
});


/***/ }),

/***/ "./node_modules/ramda/src/filter.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/filter.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _dispatchable = __webpack_require__(/*! ./internal/_dispatchable */ "./node_modules/ramda/src/internal/_dispatchable.js");
var _filter = __webpack_require__(/*! ./internal/_filter */ "./node_modules/ramda/src/internal/_filter.js");
var _isObject = __webpack_require__(/*! ./internal/_isObject */ "./node_modules/ramda/src/internal/_isObject.js");
var _reduce = __webpack_require__(/*! ./internal/_reduce */ "./node_modules/ramda/src/internal/_reduce.js");
var _xfilter = __webpack_require__(/*! ./internal/_xfilter */ "./node_modules/ramda/src/internal/_xfilter.js");
var keys = __webpack_require__(/*! ./keys */ "./node_modules/ramda/src/keys.js");


/**
 * Takes a predicate and a `Filterable`, and returns a new filterable of the
 * same type containing the members of the given filterable which satisfy the
 * given predicate. Filterable objects include plain objects or any object
 * that has a filter method such as `Array`.
 *
 * Dispatches to the `filter` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array} Filterable
 * @see R.reject, R.transduce, R.addIndex
 * @example
 *
 *      var isEven = n => n % 2 === 0;
 *
 *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */
module.exports = _curry2(_dispatchable(['filter'], _xfilter, function(pred, filterable) {
  return (
    _isObject(filterable) ?
      _reduce(function(acc, key) {
        if (pred(filterable[key])) {
          acc[key] = filterable[key];
        }
        return acc;
      }, {}, keys(filterable)) :
    // else
      _filter(pred, filterable)
  );
}));


/***/ }),

/***/ "./node_modules/ramda/src/findIndex.js":
/*!*********************************************!*\
  !*** ./node_modules/ramda/src/findIndex.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _dispatchable = __webpack_require__(/*! ./internal/_dispatchable */ "./node_modules/ramda/src/internal/_dispatchable.js");
var _xfindIndex = __webpack_require__(/*! ./internal/_xfindIndex */ "./node_modules/ramda/src/internal/_xfindIndex.js");


/**
 * Returns the index of the first element of the list which matches the
 * predicate, or `-1` if no element matches.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * @func
 * @memberOf R
 * @since v0.1.1
 * @category List
 * @sig (a -> Boolean) -> [a] -> Number
 * @param {Function} fn The predicate function used to determine if the element is the
 * desired one.
 * @param {Array} list The array to consider.
 * @return {Number} The index of the element found, or `-1`.
 * @see R.transduce
 * @example
 *
 *      var xs = [{a: 1}, {a: 2}, {a: 3}];
 *      R.findIndex(R.propEq('a', 2))(xs); //=> 1
 *      R.findIndex(R.propEq('a', 4))(xs); //=> -1
 */
module.exports = _curry2(_dispatchable([], _xfindIndex, function findIndex(fn, list) {
  var idx = 0;
  var len = list.length;
  while (idx < len) {
    if (fn(list[idx])) {
      return idx;
    }
    idx += 1;
  }
  return -1;
}));


/***/ }),

/***/ "./node_modules/ramda/src/flip.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/flip.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var curry = __webpack_require__(/*! ./curry */ "./node_modules/ramda/src/curry.js");


/**
 * Returns a new function much like the supplied one, except that the first two
 * arguments' order is reversed.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)
 * @param {Function} fn The function to invoke with its first two parameters reversed.
 * @return {*} The result of invoking `fn` with its first two parameters' order reversed.
 * @example
 *
 *      var mergeThree = (a, b, c) => [].concat(a, b, c);
 *
 *      mergeThree(1, 2, 3); //=> [1, 2, 3]
 *
 *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]
 * @symb R.flip(f)(a, b, c) = f(b, a, c)
 */
module.exports = _curry1(function flip(fn) {
  return curry(function(a, b) {
    var args = Array.prototype.slice.call(arguments, 0);
    args[0] = b;
    args[1] = a;
    return fn.apply(this, args);
  });
});


/***/ }),

/***/ "./node_modules/ramda/src/identical.js":
/*!*********************************************!*\
  !*** ./node_modules/ramda/src/identical.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Returns true if its arguments are identical, false otherwise. Values are
 * identical if they reference the same memory. `NaN` is identical to `NaN`;
 * `0` and `-0` are not identical.
 *
 * @func
 * @memberOf R
 * @since v0.15.0
 * @category Relation
 * @sig a -> a -> Boolean
 * @param {*} a
 * @param {*} b
 * @return {Boolean}
 * @example
 *
 *      var o = {};
 *      R.identical(o, o); //=> true
 *      R.identical(1, 1); //=> true
 *      R.identical(1, '1'); //=> false
 *      R.identical([], []); //=> false
 *      R.identical(0, -0); //=> false
 *      R.identical(NaN, NaN); //=> true
 */
module.exports = _curry2(function identical(a, b) {
  // SameValue algorithm
  if (a === b) { // Steps 1-5, 7-10
    // Steps 6.b-6.e: +0 != -0
    return a !== 0 || 1 / a === 1 / b;
  } else {
    // Step 6.a: NaN == NaN
    return a !== a && b !== b;
  }
});


/***/ }),

/***/ "./node_modules/ramda/src/identity.js":
/*!********************************************!*\
  !*** ./node_modules/ramda/src/identity.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _identity = __webpack_require__(/*! ./internal/_identity */ "./node_modules/ramda/src/internal/_identity.js");


/**
 * A function that does nothing but return the parameter supplied to it. Good
 * as a default or placeholder function.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig a -> a
 * @param {*} x The value to return.
 * @return {*} The input value, `x`.
 * @example
 *
 *      R.identity(1); //=> 1
 *
 *      var obj = {};
 *      R.identity(obj) === obj; //=> true
 * @symb R.identity(a) = a
 */
module.exports = _curry1(_identity);


/***/ }),

/***/ "./node_modules/ramda/src/internal/_Set.js":
/*!*************************************************!*\
  !*** ./node_modules/ramda/src/internal/_Set.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _contains = __webpack_require__(/*! ./_contains */ "./node_modules/ramda/src/internal/_contains.js");


// A simple Set type that honours R.equals semantics
module.exports = (function() {
  function _Set() {
    /* globals Set */
    this._nativeSet = typeof Set === 'function' ? new Set() : null;
    this._items = {};
  }

  // until we figure out why jsdoc chokes on this
  // @param item The item to add to the Set
  // @returns {boolean} true if the item did not exist prior, otherwise false
  //
  _Set.prototype.add = function(item) {
    return !hasOrAdd(item, true, this);
  };

  //
  // @param item The item to check for existence in the Set
  // @returns {boolean} true if the item exists in the Set, otherwise false
  //
  _Set.prototype.has = function(item) {
    return hasOrAdd(item, false, this);
  };

  //
  // Combines the logic for checking whether an item is a member of the set and
  // for adding a new item to the set.
  //
  // @param item       The item to check or add to the Set instance.
  // @param shouldAdd  If true, the item will be added to the set if it doesn't
  //                   already exist.
  // @param set        The set instance to check or add to.
  // @return {boolean} true if the item already existed, otherwise false.
  //
  function hasOrAdd(item, shouldAdd, set) {
    var type = typeof item;
    var prevSize, newSize;
    switch (type) {
      case 'string':
      case 'number':
        // distinguish between +0 and -0
        if (item === 0 && 1 / item === -Infinity) {
          if (set._items['-0']) {
            return true;
          } else {
            if (shouldAdd) {
              set._items['-0'] = true;
            }
            return false;
          }
        }
        // these types can all utilise the native Set
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = {};
              set._items[type][item] = true;
            }
            return false;
          } else if (item in set._items[type]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][item] = true;
            }
            return false;
          }
        }

      case 'boolean':
        // set._items['boolean'] holds a two element array
        // representing [ falseExists, trueExists ]
        if (type in set._items) {
          var bIdx = item ? 1 : 0;
          if (set._items[type][bIdx]) {
            return true;
          } else {
            if (shouldAdd) {
              set._items[type][bIdx] = true;
            }
            return false;
          }
        } else {
          if (shouldAdd) {
            set._items[type] = item ? [false, true] : [true, false];
          }
          return false;
        }

      case 'function':
        // compare functions for reference equality
        if (set._nativeSet !== null) {
          if (shouldAdd) {
            prevSize = set._nativeSet.size;
            set._nativeSet.add(item);
            newSize = set._nativeSet.size;
            return newSize === prevSize;
          } else {
            return set._nativeSet.has(item);
          }
        } else {
          if (!(type in set._items)) {
            if (shouldAdd) {
              set._items[type] = [item];
            }
            return false;
          }
          if (!_contains(item, set._items[type])) {
            if (shouldAdd) {
              set._items[type].push(item);
            }
            return false;
          }
          return true;
        }

      case 'undefined':
        if (set._items[type]) {
          return true;
        } else {
          if (shouldAdd) {
            set._items[type] = true;
          }
          return false;
        }

      case 'object':
        if (item === null) {
          if (!set._items['null']) {
            if (shouldAdd) {
              set._items['null'] = true;
            }
            return false;
          }
          return true;
        }
      /* falls through */
      default:
        // reduce the search size of heterogeneous sets by creating buckets
        // for each type.
        type = Object.prototype.toString.call(item);
        if (!(type in set._items)) {
          if (shouldAdd) {
            set._items[type] = [item];
          }
          return false;
        }
        // scan through all previously applied items
        if (!_contains(item, set._items[type])) {
          if (shouldAdd) {
            set._items[type].push(item);
          }
          return false;
        }
        return true;
    }
  }
  return _Set;
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_arity.js":
/*!***************************************************!*\
  !*** ./node_modules/ramda/src/internal/_arity.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _arity(n, fn) {
  /* eslint-disable no-unused-vars */
  switch (n) {
    case 0: return function() { return fn.apply(this, arguments); };
    case 1: return function(a0) { return fn.apply(this, arguments); };
    case 2: return function(a0, a1) { return fn.apply(this, arguments); };
    case 3: return function(a0, a1, a2) { return fn.apply(this, arguments); };
    case 4: return function(a0, a1, a2, a3) { return fn.apply(this, arguments); };
    case 5: return function(a0, a1, a2, a3, a4) { return fn.apply(this, arguments); };
    case 6: return function(a0, a1, a2, a3, a4, a5) { return fn.apply(this, arguments); };
    case 7: return function(a0, a1, a2, a3, a4, a5, a6) { return fn.apply(this, arguments); };
    case 8: return function(a0, a1, a2, a3, a4, a5, a6, a7) { return fn.apply(this, arguments); };
    case 9: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8) { return fn.apply(this, arguments); };
    case 10: return function(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) { return fn.apply(this, arguments); };
    default: throw new Error('First argument to _arity must be a non-negative integer no greater than ten');
  }
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_arrayFromIterator.js":
/*!***************************************************************!*\
  !*** ./node_modules/ramda/src/internal/_arrayFromIterator.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _arrayFromIterator(iter) {
  var list = [];
  var next;
  while (!(next = iter.next()).done) {
    list.push(next.value);
  }
  return list;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_checkForMethod.js":
/*!************************************************************!*\
  !*** ./node_modules/ramda/src/internal/_checkForMethod.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _isArray = __webpack_require__(/*! ./_isArray */ "./node_modules/ramda/src/internal/_isArray.js");


/**
 * This checks whether a function has a [methodname] function. If it isn't an
 * array it will execute that function otherwise it will default to the ramda
 * implementation.
 *
 * @private
 * @param {Function} fn ramda implemtation
 * @param {String} methodname property to check for a custom implementation
 * @return {Object} Whatever the return value of the method is.
 */
module.exports = function _checkForMethod(methodname, fn) {
  return function() {
    var length = arguments.length;
    if (length === 0) {
      return fn();
    }
    var obj = arguments[length - 1];
    return (_isArray(obj) || typeof obj[methodname] !== 'function') ?
      fn.apply(this, arguments) :
      obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_complement.js":
/*!********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_complement.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _complement(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_concat.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_concat.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Private `concat` function to merge two array-like objects.
 *
 * @private
 * @param {Array|Arguments} [set1=[]] An array-like object.
 * @param {Array|Arguments} [set2=[]] An array-like object.
 * @return {Array} A new, merged array.
 * @example
 *
 *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]
 */
module.exports = function _concat(set1, set2) {
  set1 = set1 || [];
  set2 = set2 || [];
  var idx;
  var len1 = set1.length;
  var len2 = set2.length;
  var result = [];

  idx = 0;
  while (idx < len1) {
    result[result.length] = set1[idx];
    idx += 1;
  }
  idx = 0;
  while (idx < len2) {
    result[result.length] = set2[idx];
    idx += 1;
  }
  return result;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_contains.js":
/*!******************************************************!*\
  !*** ./node_modules/ramda/src/internal/_contains.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _indexOf = __webpack_require__(/*! ./_indexOf */ "./node_modules/ramda/src/internal/_indexOf.js");


module.exports = function _contains(a, list) {
  return _indexOf(list, a, 0) >= 0;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_containsWith.js":
/*!**********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_containsWith.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _containsWith(pred, x, list) {
  var idx = 0;
  var len = list.length;

  while (idx < len) {
    if (pred(x, list[idx])) {
      return true;
    }
    idx += 1;
  }
  return false;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_curry1.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_curry1.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _isPlaceholder = __webpack_require__(/*! ./_isPlaceholder */ "./node_modules/ramda/src/internal/_isPlaceholder.js");


/**
 * Optimized internal one-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
module.exports = function _curry1(fn) {
  return function f1(a) {
    if (arguments.length === 0 || _isPlaceholder(a)) {
      return f1;
    } else {
      return fn.apply(this, arguments);
    }
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_curry2.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_curry2.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _isPlaceholder = __webpack_require__(/*! ./_isPlaceholder */ "./node_modules/ramda/src/internal/_isPlaceholder.js");


/**
 * Optimized internal two-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
module.exports = function _curry2(fn) {
  return function f2(a, b) {
    switch (arguments.length) {
      case 0:
        return f2;
      case 1:
        return _isPlaceholder(a) ? f2
             : _curry1(function(_b) { return fn(a, _b); });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f2
             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b); })
             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b); })
             : fn(a, b);
    }
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_curry3.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_curry3.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _curry2 = __webpack_require__(/*! ./_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _isPlaceholder = __webpack_require__(/*! ./_isPlaceholder */ "./node_modules/ramda/src/internal/_isPlaceholder.js");


/**
 * Optimized internal three-arity curry function.
 *
 * @private
 * @category Function
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
module.exports = function _curry3(fn) {
  return function f3(a, b, c) {
    switch (arguments.length) {
      case 0:
        return f3;
      case 1:
        return _isPlaceholder(a) ? f3
             : _curry2(function(_b, _c) { return fn(a, _b, _c); });
      case 2:
        return _isPlaceholder(a) && _isPlaceholder(b) ? f3
             : _isPlaceholder(a) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })
             : _isPlaceholder(b) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })
             : _curry1(function(_c) { return fn(a, b, _c); });
      default:
        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3
             : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function(_a, _b) { return fn(_a, _b, c); })
             : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function(_a, _c) { return fn(_a, b, _c); })
             : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function(_b, _c) { return fn(a, _b, _c); })
             : _isPlaceholder(a) ? _curry1(function(_a) { return fn(_a, b, c); })
             : _isPlaceholder(b) ? _curry1(function(_b) { return fn(a, _b, c); })
             : _isPlaceholder(c) ? _curry1(function(_c) { return fn(a, b, _c); })
             : fn(a, b, c);
    }
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_curryN.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_curryN.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__(/*! ./_arity */ "./node_modules/ramda/src/internal/_arity.js");
var _isPlaceholder = __webpack_require__(/*! ./_isPlaceholder */ "./node_modules/ramda/src/internal/_isPlaceholder.js");


/**
 * Internal curryN function.
 *
 * @private
 * @category Function
 * @param {Number} length The arity of the curried function.
 * @param {Array} received An array of arguments received thus far.
 * @param {Function} fn The function to curry.
 * @return {Function} The curried function.
 */
module.exports = function _curryN(length, received, fn) {
  return function() {
    var combined = [];
    var argsIdx = 0;
    var left = length;
    var combinedIdx = 0;
    while (combinedIdx < received.length || argsIdx < arguments.length) {
      var result;
      if (combinedIdx < received.length &&
          (!_isPlaceholder(received[combinedIdx]) ||
           argsIdx >= arguments.length)) {
        result = received[combinedIdx];
      } else {
        result = arguments[argsIdx];
        argsIdx += 1;
      }
      combined[combinedIdx] = result;
      if (!_isPlaceholder(result)) {
        left -= 1;
      }
      combinedIdx += 1;
    }
    return left <= 0 ? fn.apply(this, combined)
                     : _arity(left, _curryN(length, combined, fn));
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_dispatchable.js":
/*!**********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_dispatchable.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _isArray = __webpack_require__(/*! ./_isArray */ "./node_modules/ramda/src/internal/_isArray.js");
var _isTransformer = __webpack_require__(/*! ./_isTransformer */ "./node_modules/ramda/src/internal/_isTransformer.js");


/**
 * Returns a function that dispatches with different strategies based on the
 * object in list position (last argument). If it is an array, executes [fn].
 * Otherwise, if it has a function with one of the given method names, it will
 * execute that function (functor case). Otherwise, if it is a transformer,
 * uses transducer [xf] to return a new transformer (transducer case).
 * Otherwise, it will default to executing [fn].
 *
 * @private
 * @param {Array} methodNames properties to check for a custom implementation
 * @param {Function} xf transducer to initialize if object is transformer
 * @param {Function} fn default ramda implementation
 * @return {Function} A function that dispatches on object in list position
 */
module.exports = function _dispatchable(methodNames, xf, fn) {
  return function() {
    if (arguments.length === 0) {
      return fn();
    }
    var args = Array.prototype.slice.call(arguments, 0);
    var obj = args.pop();
    if (!_isArray(obj)) {
      var idx = 0;
      while (idx < methodNames.length) {
        if (typeof obj[methodNames[idx]] === 'function') {
          return obj[methodNames[idx]].apply(obj, args);
        }
        idx += 1;
      }
      if (_isTransformer(obj)) {
        var transducer = xf.apply(null, args);
        return transducer(obj);
      }
    }
    return fn.apply(this, arguments);
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_equals.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_equals.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _arrayFromIterator = __webpack_require__(/*! ./_arrayFromIterator */ "./node_modules/ramda/src/internal/_arrayFromIterator.js");
var _functionName = __webpack_require__(/*! ./_functionName */ "./node_modules/ramda/src/internal/_functionName.js");
var _has = __webpack_require__(/*! ./_has */ "./node_modules/ramda/src/internal/_has.js");
var identical = __webpack_require__(/*! ../identical */ "./node_modules/ramda/src/identical.js");
var keys = __webpack_require__(/*! ../keys */ "./node_modules/ramda/src/keys.js");
var type = __webpack_require__(/*! ../type */ "./node_modules/ramda/src/type.js");


module.exports = function _equals(a, b, stackA, stackB) {
  if (identical(a, b)) {
    return true;
  }

  if (type(a) !== type(b)) {
    return false;
  }

  if (a == null || b == null) {
    return false;
  }

  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {
    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) &&
           typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);
  }

  if (typeof a.equals === 'function' || typeof b.equals === 'function') {
    return typeof a.equals === 'function' && a.equals(b) &&
           typeof b.equals === 'function' && b.equals(a);
  }

  switch (type(a)) {
    case 'Arguments':
    case 'Array':
    case 'Object':
      if (typeof a.constructor === 'function' &&
          _functionName(a.constructor) === 'Promise') {
        return a === b;
      }
      break;
    case 'Boolean':
    case 'Number':
    case 'String':
      if (!(typeof a === typeof b && identical(a.valueOf(), b.valueOf()))) {
        return false;
      }
      break;
    case 'Date':
      if (!identical(a.valueOf(), b.valueOf())) {
        return false;
      }
      break;
    case 'Error':
      return a.name === b.name && a.message === b.message;
    case 'RegExp':
      if (!(a.source === b.source &&
            a.global === b.global &&
            a.ignoreCase === b.ignoreCase &&
            a.multiline === b.multiline &&
            a.sticky === b.sticky &&
            a.unicode === b.unicode)) {
        return false;
      }
      break;
    case 'Map':
    case 'Set':
      if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {
        return false;
      }
      break;
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
      break;
    case 'ArrayBuffer':
      break;
    default:
      // Values of other types are only equal if identical.
      return false;
  }

  var keysA = keys(a);
  if (keysA.length !== keys(b).length) {
    return false;
  }

  var idx = stackA.length - 1;
  while (idx >= 0) {
    if (stackA[idx] === a) {
      return stackB[idx] === b;
    }
    idx -= 1;
  }

  stackA.push(a);
  stackB.push(b);
  idx = keysA.length - 1;
  while (idx >= 0) {
    var key = keysA[idx];
    if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {
      return false;
    }
    idx -= 1;
  }
  stackA.pop();
  stackB.pop();
  return true;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_filter.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_filter.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _filter(fn, list) {
  var idx = 0;
  var len = list.length;
  var result = [];

  while (idx < len) {
    if (fn(list[idx])) {
      result[result.length] = list[idx];
    }
    idx += 1;
  }
  return result;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_functionName.js":
/*!**********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_functionName.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _functionName(f) {
  // String(x => x) evaluates to "x => x", so the pattern may not match.
  var match = String(f).match(/^function (\w*)/);
  return match == null ? '' : match[1];
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_has.js":
/*!*************************************************!*\
  !*** ./node_modules/ramda/src/internal/_has.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _has(prop, obj) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_identity.js":
/*!******************************************************!*\
  !*** ./node_modules/ramda/src/internal/_identity.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _identity(x) { return x; };


/***/ }),

/***/ "./node_modules/ramda/src/internal/_indexOf.js":
/*!*****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_indexOf.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var equals = __webpack_require__(/*! ../equals */ "./node_modules/ramda/src/equals.js");


module.exports = function _indexOf(list, a, idx) {
  var inf, item;
  // Array.prototype.indexOf doesn't exist below IE9
  if (typeof list.indexOf === 'function') {
    switch (typeof a) {
      case 'number':
        if (a === 0) {
          // manually crawl the list to distinguish between +0 and -0
          inf = 1 / a;
          while (idx < list.length) {
            item = list[idx];
            if (item === 0 && 1 / item === inf) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        } else if (a !== a) {
          // NaN
          while (idx < list.length) {
            item = list[idx];
            if (typeof item === 'number' && item !== item) {
              return idx;
            }
            idx += 1;
          }
          return -1;
        }
        // non-zero numbers can utilise Set
        return list.indexOf(a, idx);

      // all these types can utilise Set
      case 'string':
      case 'boolean':
      case 'function':
      case 'undefined':
        return list.indexOf(a, idx);

      case 'object':
        if (a === null) {
          // null can utilise Set
          return list.indexOf(a, idx);
        }
    }
  }
  // anything else not covered above, defer to R.equals
  while (idx < list.length) {
    if (equals(list[idx], a)) {
      return idx;
    }
    idx += 1;
  }
  return -1;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isArguments.js":
/*!*********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isArguments.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _has = __webpack_require__(/*! ./_has */ "./node_modules/ramda/src/internal/_has.js");


module.exports = (function() {
  var toString = Object.prototype.toString;
  return toString.call(arguments) === '[object Arguments]' ?
    function _isArguments(x) { return toString.call(x) === '[object Arguments]'; } :
    function _isArguments(x) { return _has('callee', x); };
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isArray.js":
/*!*****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isArray.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Tests whether or not an object is an array.
 *
 * @private
 * @param {*} val The object to test.
 * @return {Boolean} `true` if `val` is an array, `false` otherwise.
 * @example
 *
 *      _isArray([]); //=> true
 *      _isArray(null); //=> false
 *      _isArray({}); //=> false
 */
module.exports = Array.isArray || function _isArray(val) {
  return (val != null &&
          val.length >= 0 &&
          Object.prototype.toString.call(val) === '[object Array]');
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isArrayLike.js":
/*!*********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isArrayLike.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _isArray = __webpack_require__(/*! ./_isArray */ "./node_modules/ramda/src/internal/_isArray.js");
var _isString = __webpack_require__(/*! ./_isString */ "./node_modules/ramda/src/internal/_isString.js");


/**
 * Tests whether or not an object is similar to an array.
 *
 * @private
 * @category Type
 * @category List
 * @sig * -> Boolean
 * @param {*} x The object to test.
 * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.
 * @example
 *
 *      _isArrayLike([]); //=> true
 *      _isArrayLike(true); //=> false
 *      _isArrayLike({}); //=> false
 *      _isArrayLike({length: 10}); //=> false
 *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true
 */
module.exports = _curry1(function isArrayLike(x) {
  if (_isArray(x)) { return true; }
  if (!x) { return false; }
  if (typeof x !== 'object') { return false; }
  if (_isString(x)) { return false; }
  if (x.nodeType === 1) { return !!x.length; }
  if (x.length === 0) { return true; }
  if (x.length > 0) {
    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);
  }
  return false;
});


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isFunction.js":
/*!********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isFunction.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _isFunction(x) {
  return Object.prototype.toString.call(x) === '[object Function]';
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isObject.js":
/*!******************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isObject.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _isObject(x) {
  return Object.prototype.toString.call(x) === '[object Object]';
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isPlaceholder.js":
/*!***********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isPlaceholder.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _isPlaceholder(a) {
  return a != null &&
         typeof a === 'object' &&
         a['@@functional/placeholder'] === true;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isString.js":
/*!******************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isString.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _isString(x) {
  return Object.prototype.toString.call(x) === '[object String]';
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_isTransformer.js":
/*!***********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_isTransformer.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _isTransformer(obj) {
  return typeof obj['@@transducer/step'] === 'function';
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_map.js":
/*!*************************************************!*\
  !*** ./node_modules/ramda/src/internal/_map.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _map(fn, functor) {
  var idx = 0;
  var len = functor.length;
  var result = Array(len);
  while (idx < len) {
    result[idx] = fn(functor[idx]);
    idx += 1;
  }
  return result;
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_pipe.js":
/*!**************************************************!*\
  !*** ./node_modules/ramda/src/internal/_pipe.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _pipe(f, g) {
  return function() {
    return g.call(this, f.apply(this, arguments));
  };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_quote.js":
/*!***************************************************!*\
  !*** ./node_modules/ramda/src/internal/_quote.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _quote(s) {
  var escaped = s
    .replace(/\\/g, '\\\\')
    .replace(/[\b]/g, '\\b')  // \b matches word boundary; [\b] matches backspace
    .replace(/\f/g, '\\f')
    .replace(/\n/g, '\\n')
    .replace(/\r/g, '\\r')
    .replace(/\t/g, '\\t')
    .replace(/\v/g, '\\v')
    .replace(/\0/g, '\\0');

  return '"' + escaped.replace(/"/g, '\\"') + '"';
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_reduce.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_reduce.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _isArrayLike = __webpack_require__(/*! ./_isArrayLike */ "./node_modules/ramda/src/internal/_isArrayLike.js");
var _xwrap = __webpack_require__(/*! ./_xwrap */ "./node_modules/ramda/src/internal/_xwrap.js");
var bind = __webpack_require__(/*! ../bind */ "./node_modules/ramda/src/bind.js");


module.exports = (function() {
  function _arrayReduce(xf, acc, list) {
    var idx = 0;
    var len = list.length;
    while (idx < len) {
      acc = xf['@@transducer/step'](acc, list[idx]);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      idx += 1;
    }
    return xf['@@transducer/result'](acc);
  }

  function _iterableReduce(xf, acc, iter) {
    var step = iter.next();
    while (!step.done) {
      acc = xf['@@transducer/step'](acc, step.value);
      if (acc && acc['@@transducer/reduced']) {
        acc = acc['@@transducer/value'];
        break;
      }
      step = iter.next();
    }
    return xf['@@transducer/result'](acc);
  }

  function _methodReduce(xf, acc, obj, methodName) {
    return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));
  }

  var symIterator = (typeof Symbol !== 'undefined') ? Symbol.iterator : '@@iterator';
  return function _reduce(fn, acc, list) {
    if (typeof fn === 'function') {
      fn = _xwrap(fn);
    }
    if (_isArrayLike(list)) {
      return _arrayReduce(fn, acc, list);
    }
    if (typeof list['fantasy-land/reduce'] === 'function') {
      return _methodReduce(fn, acc, list, 'fantasy-land/reduce');
    }
    if (list[symIterator] != null) {
      return _iterableReduce(fn, acc, list[symIterator]());
    }
    if (typeof list.next === 'function') {
      return _iterableReduce(fn, acc, list);
    }
    if (typeof list.reduce === 'function') {
      return _methodReduce(fn, acc, list, 'reduce');
    }

    throw new TypeError('reduce: list must be array or iterable');
  };
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_reduced.js":
/*!*****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_reduced.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function _reduced(x) {
  return x && x['@@transducer/reduced'] ? x :
    {
      '@@transducer/value': x,
      '@@transducer/reduced': true
    };
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_toISOString.js":
/*!*********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_toISOString.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.
 */
module.exports = (function() {
  var pad = function pad(n) { return (n < 10 ? '0' : '') + n; };

  return typeof Date.prototype.toISOString === 'function' ?
    function _toISOString(d) {
      return d.toISOString();
    } :
    function _toISOString(d) {
      return (
        d.getUTCFullYear() + '-' +
        pad(d.getUTCMonth() + 1) + '-' +
        pad(d.getUTCDate()) + 'T' +
        pad(d.getUTCHours()) + ':' +
        pad(d.getUTCMinutes()) + ':' +
        pad(d.getUTCSeconds()) + '.' +
        (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z'
      );
    };
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_toString.js":
/*!******************************************************!*\
  !*** ./node_modules/ramda/src/internal/_toString.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _contains = __webpack_require__(/*! ./_contains */ "./node_modules/ramda/src/internal/_contains.js");
var _map = __webpack_require__(/*! ./_map */ "./node_modules/ramda/src/internal/_map.js");
var _quote = __webpack_require__(/*! ./_quote */ "./node_modules/ramda/src/internal/_quote.js");
var _toISOString = __webpack_require__(/*! ./_toISOString */ "./node_modules/ramda/src/internal/_toISOString.js");
var keys = __webpack_require__(/*! ../keys */ "./node_modules/ramda/src/keys.js");
var reject = __webpack_require__(/*! ../reject */ "./node_modules/ramda/src/reject.js");


module.exports = function _toString(x, seen) {
  var recur = function recur(y) {
    var xs = seen.concat([x]);
    return _contains(y, xs) ? '<Circular>' : _toString(y, xs);
  };

  //  mapPairs :: (Object, [String]) -> [String]
  var mapPairs = function(obj, keys) {
    return _map(function(k) { return _quote(k) + ': ' + recur(obj[k]); }, keys.slice().sort());
  };

  switch (Object.prototype.toString.call(x)) {
    case '[object Arguments]':
      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';
    case '[object Array]':
      return '[' + _map(recur, x).concat(mapPairs(x, reject(function(k) { return /^\d+$/.test(k); }, keys(x)))).join(', ') + ']';
    case '[object Boolean]':
      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();
    case '[object Date]':
      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';
    case '[object Null]':
      return 'null';
    case '[object Number]':
      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);
    case '[object String]':
      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);
    case '[object Undefined]':
      return 'undefined';
    default:
      if (typeof x.toString === 'function') {
        var repr = x.toString();
        if (repr !== '[object Object]') {
          return repr;
        }
      }
      return '{' + mapPairs(x, keys(x)).join(', ') + '}';
  }
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_xfBase.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_xfBase.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  init: function() {
    return this.xf['@@transducer/init']();
  },
  result: function(result) {
    return this.xf['@@transducer/result'](result);
  }
};


/***/ }),

/***/ "./node_modules/ramda/src/internal/_xfilter.js":
/*!*****************************************************!*\
  !*** ./node_modules/ramda/src/internal/_xfilter.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _xfBase = __webpack_require__(/*! ./_xfBase */ "./node_modules/ramda/src/internal/_xfBase.js");


module.exports = (function() {
  function XFilter(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XFilter.prototype['@@transducer/init'] = _xfBase.init;
  XFilter.prototype['@@transducer/result'] = _xfBase.result;
  XFilter.prototype['@@transducer/step'] = function(result, input) {
    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;
  };

  return _curry2(function _xfilter(f, xf) { return new XFilter(f, xf); });
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_xfindIndex.js":
/*!********************************************************!*\
  !*** ./node_modules/ramda/src/internal/_xfindIndex.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _reduced = __webpack_require__(/*! ./_reduced */ "./node_modules/ramda/src/internal/_reduced.js");
var _xfBase = __webpack_require__(/*! ./_xfBase */ "./node_modules/ramda/src/internal/_xfBase.js");


module.exports = (function() {
  function XFindIndex(f, xf) {
    this.xf = xf;
    this.f = f;
    this.idx = -1;
    this.found = false;
  }
  XFindIndex.prototype['@@transducer/init'] = _xfBase.init;
  XFindIndex.prototype['@@transducer/result'] = function(result) {
    if (!this.found) {
      result = this.xf['@@transducer/step'](result, -1);
    }
    return this.xf['@@transducer/result'](result);
  };
  XFindIndex.prototype['@@transducer/step'] = function(result, input) {
    this.idx += 1;
    if (this.f(input)) {
      this.found = true;
      result = _reduced(this.xf['@@transducer/step'](result, this.idx));
    }
    return result;
  };

  return _curry2(function _xfindIndex(f, xf) { return new XFindIndex(f, xf); });
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_xmap.js":
/*!**************************************************!*\
  !*** ./node_modules/ramda/src/internal/_xmap.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _xfBase = __webpack_require__(/*! ./_xfBase */ "./node_modules/ramda/src/internal/_xfBase.js");


module.exports = (function() {
  function XMap(f, xf) {
    this.xf = xf;
    this.f = f;
  }
  XMap.prototype['@@transducer/init'] = _xfBase.init;
  XMap.prototype['@@transducer/result'] = _xfBase.result;
  XMap.prototype['@@transducer/step'] = function(result, input) {
    return this.xf['@@transducer/step'](result, this.f(input));
  };

  return _curry2(function _xmap(f, xf) { return new XMap(f, xf); });
}());


/***/ }),

/***/ "./node_modules/ramda/src/internal/_xwrap.js":
/*!***************************************************!*\
  !*** ./node_modules/ramda/src/internal/_xwrap.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = (function() {
  function XWrap(fn) {
    this.f = fn;
  }
  XWrap.prototype['@@transducer/init'] = function() {
    throw new Error('init not implemented on XWrap');
  };
  XWrap.prototype['@@transducer/result'] = function(acc) { return acc; };
  XWrap.prototype['@@transducer/step'] = function(acc, x) {
    return this.f(acc, x);
  };

  return function _xwrap(fn) { return new XWrap(fn); };
}());


/***/ }),

/***/ "./node_modules/ramda/src/intersection.js":
/*!************************************************!*\
  !*** ./node_modules/ramda/src/intersection.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _contains = __webpack_require__(/*! ./internal/_contains */ "./node_modules/ramda/src/internal/_contains.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _filter = __webpack_require__(/*! ./internal/_filter */ "./node_modules/ramda/src/internal/_filter.js");
var flip = __webpack_require__(/*! ./flip */ "./node_modules/ramda/src/flip.js");
var uniq = __webpack_require__(/*! ./uniq */ "./node_modules/ramda/src/uniq.js");


/**
 * Combines two lists into a set (i.e. no duplicates) composed of those
 * elements common to both lists.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig [*] -> [*] -> [*]
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The list of elements found in both `list1` and `list2`.
 * @see R.innerJoin
 * @example
 *
 *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]
 */
module.exports = _curry2(function intersection(list1, list2) {
  var lookupList, filteredList;
  if (list1.length > list2.length) {
    lookupList = list1;
    filteredList = list2;
  } else {
    lookupList = list2;
    filteredList = list1;
  }
  return uniq(_filter(flip(_contains)(lookupList), filteredList));
});


/***/ }),

/***/ "./node_modules/ramda/src/is.js":
/*!**************************************!*\
  !*** ./node_modules/ramda/src/is.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * See if an object (`val`) is an instance of the supplied constructor. This
 * function will check up the inheritance chain, if any.
 *
 * @func
 * @memberOf R
 * @since v0.3.0
 * @category Type
 * @sig (* -> {*}) -> a -> Boolean
 * @param {Object} ctor A constructor
 * @param {*} val The value to test
 * @return {Boolean}
 * @example
 *
 *      R.is(Object, {}); //=> true
 *      R.is(Number, 1); //=> true
 *      R.is(Object, 1); //=> false
 *      R.is(String, 's'); //=> true
 *      R.is(String, new String('')); //=> true
 *      R.is(Object, new String('')); //=> true
 *      R.is(Object, 's'); //=> false
 *      R.is(Number, {}); //=> false
 */
module.exports = _curry2(function is(Ctor, val) {
  return val != null && val.constructor === Ctor || val instanceof Ctor;
});


/***/ }),

/***/ "./node_modules/ramda/src/keys.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/keys.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _has = __webpack_require__(/*! ./internal/_has */ "./node_modules/ramda/src/internal/_has.js");
var _isArguments = __webpack_require__(/*! ./internal/_isArguments */ "./node_modules/ramda/src/internal/_isArguments.js");


/**
 * Returns a list containing the names of all the enumerable own properties of
 * the supplied object.
 * Note that the order of the output array is not guaranteed to be consistent
 * across different JS platforms.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig {k: v} -> [k]
 * @param {Object} obj The object to extract properties from
 * @return {Array} An array of the object's own properties.
 * @see R.keysIn, R.values
 * @example
 *
 *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']
 */
module.exports = (function() {
  // cover IE < 9 keys issues
  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',
                            'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];
  // Safari bug
  var hasArgsEnumBug = (function() {
    'use strict';
    return arguments.propertyIsEnumerable('length');
  }());

  var contains = function contains(list, item) {
    var idx = 0;
    while (idx < list.length) {
      if (list[idx] === item) {
        return true;
      }
      idx += 1;
    }
    return false;
  };

  return typeof Object.keys === 'function' && !hasArgsEnumBug ?
    _curry1(function keys(obj) {
      return Object(obj) !== obj ? [] : Object.keys(obj);
    }) :
    _curry1(function keys(obj) {
      if (Object(obj) !== obj) {
        return [];
      }
      var prop, nIdx;
      var ks = [];
      var checkArgsLength = hasArgsEnumBug && _isArguments(obj);
      for (prop in obj) {
        if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {
          ks[ks.length] = prop;
        }
      }
      if (hasEnumBug) {
        nIdx = nonEnumerableProps.length - 1;
        while (nIdx >= 0) {
          prop = nonEnumerableProps[nIdx];
          if (_has(prop, obj) && !contains(ks, prop)) {
            ks[ks.length] = prop;
          }
          nIdx -= 1;
        }
      }
      return ks;
    });
}());


/***/ }),

/***/ "./node_modules/ramda/src/last.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/last.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var nth = __webpack_require__(/*! ./nth */ "./node_modules/ramda/src/nth.js");


/**
 * Returns the last element of the given list or string.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig [a] -> a | Undefined
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.init, R.head, R.tail
 * @example
 *
 *      R.last(['fi', 'fo', 'fum']); //=> 'fum'
 *      R.last([]); //=> undefined
 *
 *      R.last('abc'); //=> 'c'
 *      R.last(''); //=> ''
 */
module.exports = nth(-1);


/***/ }),

/***/ "./node_modules/ramda/src/lift.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/lift.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var liftN = __webpack_require__(/*! ./liftN */ "./node_modules/ramda/src/liftN.js");


/**
 * "lifts" a function of arity > 1 so that it may "map over" a list, Function or other
 * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.liftN
 * @example
 *
 *      var madd3 = R.lift((a, b, c) => a + b + c);
 *
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 *
 *      var madd5 = R.lift((a, b, c, d, e) => a + b + c + d + e);
 *
 *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]
 */
module.exports = _curry1(function lift(fn) {
  return liftN(fn.length, fn);
});


/***/ }),

/***/ "./node_modules/ramda/src/liftN.js":
/*!*****************************************!*\
  !*** ./node_modules/ramda/src/liftN.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _reduce = __webpack_require__(/*! ./internal/_reduce */ "./node_modules/ramda/src/internal/_reduce.js");
var ap = __webpack_require__(/*! ./ap */ "./node_modules/ramda/src/ap.js");
var curryN = __webpack_require__(/*! ./curryN */ "./node_modules/ramda/src/curryN.js");
var map = __webpack_require__(/*! ./map */ "./node_modules/ramda/src/map.js");


/**
 * "lifts" a function to be the specified arity, so that it may "map over" that
 * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).
 *
 * @func
 * @memberOf R
 * @since v0.7.0
 * @category Function
 * @sig Number -> (*... -> *) -> ([*]... -> [*])
 * @param {Function} fn The function to lift into higher context
 * @return {Function} The lifted function.
 * @see R.lift, R.ap
 * @example
 *
 *      var madd3 = R.liftN(3, (...args) => R.sum(args));
 *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]
 */
module.exports = _curry2(function liftN(arity, fn) {
  var lifted = curryN(arity, fn);
  return curryN(arity, function() {
    return _reduce(ap, map(lifted, arguments[0]), Array.prototype.slice.call(arguments, 1));
  });
});


/***/ }),

/***/ "./node_modules/ramda/src/map.js":
/*!***************************************!*\
  !*** ./node_modules/ramda/src/map.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _dispatchable = __webpack_require__(/*! ./internal/_dispatchable */ "./node_modules/ramda/src/internal/_dispatchable.js");
var _map = __webpack_require__(/*! ./internal/_map */ "./node_modules/ramda/src/internal/_map.js");
var _reduce = __webpack_require__(/*! ./internal/_reduce */ "./node_modules/ramda/src/internal/_reduce.js");
var _xmap = __webpack_require__(/*! ./internal/_xmap */ "./node_modules/ramda/src/internal/_xmap.js");
var curryN = __webpack_require__(/*! ./curryN */ "./node_modules/ramda/src/curryN.js");
var keys = __webpack_require__(/*! ./keys */ "./node_modules/ramda/src/keys.js");


/**
 * Takes a function and
 * a [functor](https://github.com/fantasyland/fantasy-land#functor),
 * applies the function to each of the functor's values, and returns
 * a functor of the same shape.
 *
 * Ramda provides suitable `map` implementations for `Array` and `Object`,
 * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.
 *
 * Dispatches to the `map` method of the second argument, if present.
 *
 * Acts as a transducer if a transformer is given in list position.
 *
 * Also treats functions as functors and will compose them together.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Functor f => (a -> b) -> f a -> f b
 * @param {Function} fn The function to be called on every element of the input `list`.
 * @param {Array} list The list to be iterated over.
 * @return {Array} The new list.
 * @see R.transduce, R.addIndex
 * @example
 *
 *      var double = x => x * 2;
 *
 *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]
 *
 *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}
 * @symb R.map(f, [a, b]) = [f(a), f(b)]
 * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }
 * @symb R.map(f, functor_o) = functor_o.map(f)
 */
module.exports = _curry2(_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {
  switch (Object.prototype.toString.call(functor)) {
    case '[object Function]':
      return curryN(functor.length, function() {
        return fn.call(this, functor.apply(this, arguments));
      });
    case '[object Object]':
      return _reduce(function(acc, key) {
        acc[key] = fn(functor[key]);
        return acc;
      }, {}, keys(functor));
    default:
      return _map(fn, functor);
  }
}));


/***/ }),

/***/ "./node_modules/ramda/src/max.js":
/*!***************************************!*\
  !*** ./node_modules/ramda/src/max.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Returns the larger of its two arguments.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig Ord a => a -> a -> a
 * @param {*} a
 * @param {*} b
 * @return {*}
 * @see R.maxBy, R.min
 * @example
 *
 *      R.max(789, 123); //=> 789
 *      R.max('a', 'b'); //=> 'b'
 */
module.exports = _curry2(function max(a, b) { return b > a ? b : a; });


/***/ }),

/***/ "./node_modules/ramda/src/mergeDeepWithKey.js":
/*!****************************************************!*\
  !*** ./node_modules/ramda/src/mergeDeepWithKey.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");
var _isObject = __webpack_require__(/*! ./internal/_isObject */ "./node_modules/ramda/src/internal/_isObject.js");
var mergeWithKey = __webpack_require__(/*! ./mergeWithKey */ "./node_modules/ramda/src/mergeWithKey.js");


/**
 * Creates a new object with the own properties of the two provided objects.
 * If a key exists in both objects:
 * - and both associated values are also objects then the values will be
 *   recursively merged.
 * - otherwise the provided function is applied to the key and associated values
 *   using the resulting value as the new value associated with the key.
 * If a key only exists in one object, the value will be associated with the key
 * of the resulting object.
 *
 * @func
 * @memberOf R
 * @since v0.24.0
 * @category Object
 * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}
 * @param {Function} fn
 * @param {Object} lObj
 * @param {Object} rObj
 * @return {Object}
 * @see R.mergeWithKey, R.mergeDeep, R.mergeDeepWith
 * @example
 *
 *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r
 *      R.mergeDeepWithKey(concatValues,
 *                         { a: true, c: { thing: 'foo', values: [10, 20] }},
 *                         { b: true, c: { thing: 'bar', values: [15, 35] }});
 *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}
 */
module.exports = _curry3(function mergeDeepWithKey(fn, lObj, rObj) {
  return mergeWithKey(function(k, lVal, rVal) {
    if (_isObject(lVal) && _isObject(rVal)) {
      return mergeDeepWithKey(fn, lVal, rVal);
    } else {
      return fn(k, lVal, rVal);
    }
  }, lObj, rObj);
});


/***/ }),

/***/ "./node_modules/ramda/src/mergeWithKey.js":
/*!************************************************!*\
  !*** ./node_modules/ramda/src/mergeWithKey.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");
var _has = __webpack_require__(/*! ./internal/_has */ "./node_modules/ramda/src/internal/_has.js");


/**
 * Creates a new object with the own properties of the two provided objects. If
 * a key exists in both objects, the provided function is applied to the key
 * and the values associated with the key in each object, with the result being
 * used as the value associated with the key in the returned object.
 *
 * @func
 * @memberOf R
 * @since v0.19.0
 * @category Object
 * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}
 * @param {Function} fn
 * @param {Object} l
 * @param {Object} r
 * @return {Object}
 * @see R.mergeDeepWithKey, R.merge, R.mergeWith
 * @example
 *
 *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r
 *      R.mergeWithKey(concatValues,
 *                     { a: true, thing: 'foo', values: [10, 20] },
 *                     { b: true, thing: 'bar', values: [15, 35] });
 *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }
 * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }
 */
module.exports = _curry3(function mergeWithKey(fn, l, r) {
  var result = {};
  var k;

  for (k in l) {
    if (_has(k, l)) {
      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];
    }
  }

  for (k in r) {
    if (_has(k, r) && !(_has(k, result))) {
      result[k] = r[k];
    }
  }

  return result;
});


/***/ }),

/***/ "./node_modules/ramda/src/not.js":
/*!***************************************!*\
  !*** ./node_modules/ramda/src/not.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");


/**
 * A function that returns the `!` of its argument. It will return `true` when
 * passed false-y value, and `false` when passed a truth-y one.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Logic
 * @sig * -> Boolean
 * @param {*} a any value
 * @return {Boolean} the logical inverse of passed argument.
 * @see R.complement
 * @example
 *
 *      R.not(true); //=> false
 *      R.not(false); //=> true
 *      R.not(0); //=> true
 *      R.not(1); //=> false
 */
module.exports = _curry1(function not(a) {
  return !a;
});


/***/ }),

/***/ "./node_modules/ramda/src/nth.js":
/*!***************************************!*\
  !*** ./node_modules/ramda/src/nth.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var _isString = __webpack_require__(/*! ./internal/_isString */ "./node_modules/ramda/src/internal/_isString.js");


/**
 * Returns the nth element of the given list or string. If n is negative the
 * element at index length + n is returned.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Number -> [a] -> a | Undefined
 * @sig Number -> String -> String
 * @param {Number} offset
 * @param {*} list
 * @return {*}
 * @example
 *
 *      var list = ['foo', 'bar', 'baz', 'quux'];
 *      R.nth(1, list); //=> 'bar'
 *      R.nth(-1, list); //=> 'quux'
 *      R.nth(-99, list); //=> undefined
 *
 *      R.nth(2, 'abc'); //=> 'c'
 *      R.nth(3, 'abc'); //=> ''
 * @symb R.nth(-1, [a, b, c]) = c
 * @symb R.nth(0, [a, b, c]) = a
 * @symb R.nth(1, [a, b, c]) = b
 */
module.exports = _curry2(function nth(offset, list) {
  var idx = offset < 0 ? list.length + offset : offset;
  return _isString(list) ? list.charAt(idx) : list[idx];
});


/***/ }),

/***/ "./node_modules/ramda/src/pipe.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/pipe.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _arity = __webpack_require__(/*! ./internal/_arity */ "./node_modules/ramda/src/internal/_arity.js");
var _pipe = __webpack_require__(/*! ./internal/_pipe */ "./node_modules/ramda/src/internal/_pipe.js");
var reduce = __webpack_require__(/*! ./reduce */ "./node_modules/ramda/src/reduce.js");
var tail = __webpack_require__(/*! ./tail */ "./node_modules/ramda/src/tail.js");


/**
 * Performs left-to-right function composition. The leftmost function may have
 * any arity; the remaining functions must be unary.
 *
 * In some libraries this function is named `sequence`.
 *
 * **Note:** The result of pipe is not automatically curried.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)
 * @param {...Function} functions
 * @return {Function}
 * @see R.compose
 * @example
 *
 *      var f = R.pipe(Math.pow, R.negate, R.inc);
 *
 *      f(3, 4); // -(3^4) + 1
 * @symb R.pipe(f, g, h)(a, b) = h(g(f(a, b)))
 */
module.exports = function pipe() {
  if (arguments.length === 0) {
    throw new Error('pipe requires at least one argument');
  }
  return _arity(arguments[0].length,
                reduce(_pipe, arguments[0], tail(arguments)));
};


/***/ }),

/***/ "./node_modules/ramda/src/prop.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/prop.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Returns a function that when supplied an object returns the indicated
 * property of that object, if it exists.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Object
 * @sig s -> {s: a} -> a | Undefined
 * @param {String} p The property name
 * @param {Object} obj The object to query
 * @return {*} The value at `obj.p`.
 * @see R.path
 * @example
 *
 *      R.prop('x', {x: 100}); //=> 100
 *      R.prop('x', {}); //=> undefined
 */
module.exports = _curry2(function prop(p, obj) { return obj[p]; });


/***/ }),

/***/ "./node_modules/ramda/src/propEq.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/propEq.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");
var equals = __webpack_require__(/*! ./equals */ "./node_modules/ramda/src/equals.js");


/**
 * Returns `true` if the specified object property is equal, in
 * [`R.equals`](#equals) terms, to the given value; `false` otherwise.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig String -> a -> Object -> Boolean
 * @param {String} name
 * @param {*} val
 * @param {*} obj
 * @return {Boolean}
 * @see R.equals, R.propSatisfies
 * @example
 *
 *      var abby = {name: 'Abby', age: 7, hair: 'blond'};
 *      var fred = {name: 'Fred', age: 12, hair: 'brown'};
 *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};
 *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};
 *      var kids = [abby, fred, rusty, alois];
 *      var hasBrownHair = R.propEq('hair', 'brown');
 *      R.filter(hasBrownHair, kids); //=> [fred, rusty]
 */
module.exports = _curry3(function propEq(name, val, obj) {
  return equals(val, obj[name]);
});


/***/ }),

/***/ "./node_modules/ramda/src/reduce.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/reduce.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");
var _reduce = __webpack_require__(/*! ./internal/_reduce */ "./node_modules/ramda/src/internal/_reduce.js");


/**
 * Returns a single item by iterating through the list, successively calling
 * the iterator function and passing it an accumulator value and the current
 * value from the array, and then passing the result to the next call.
 *
 * The iterator function receives two values: *(acc, value)*. It may use
 * [`R.reduced`](#reduced) to shortcut the iteration.
 *
 * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function
 * is *(value, acc)*.
 *
 * Note: `R.reduce` does not skip deleted or unassigned indices (sparse
 * arrays), unlike the native `Array.prototype.reduce` method. For more details
 * on this behavior, see:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description
 *
 * Dispatches to the `reduce` method of the third argument, if present. When
 * doing so, it is up to the user to handle the [`R.reduced`](#reduced)
 * shortcuting, as this is not implemented by `reduce`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig ((a, b) -> a) -> a -> [b] -> a
 * @param {Function} fn The iterator function. Receives two values, the accumulator and the
 *        current element from the array.
 * @param {*} acc The accumulator value.
 * @param {Array} list The list to iterate over.
 * @return {*} The final, accumulated value.
 * @see R.reduced, R.addIndex, R.reduceRight
 * @example
 *
 *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10
 *                -               -10
 *               / \              / \
 *              -   4           -6   4
 *             / \              / \
 *            -   3   ==>     -3   3
 *           / \              / \
 *          -   2           -1   2
 *         / \              / \
 *        0   1            0   1
 *
 * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)
 */
module.exports = _curry3(_reduce);


/***/ }),

/***/ "./node_modules/ramda/src/reject.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/reject.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _complement = __webpack_require__(/*! ./internal/_complement */ "./node_modules/ramda/src/internal/_complement.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var filter = __webpack_require__(/*! ./filter */ "./node_modules/ramda/src/filter.js");


/**
 * The complement of [`filter`](#filter).
 *
 * Acts as a transducer if a transformer is given in list position. Filterable
 * objects include plain objects or any object that has a filter method such
 * as `Array`.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig Filterable f => (a -> Boolean) -> f a -> f a
 * @param {Function} pred
 * @param {Array} filterable
 * @return {Array}
 * @see R.filter, R.transduce, R.addIndex
 * @example
 *
 *      var isOdd = (n) => n % 2 === 1;
 *
 *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]
 *
 *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}
 */
module.exports = _curry2(function reject(pred, filterable) {
  return filter(_complement(pred), filterable);
});


/***/ }),

/***/ "./node_modules/ramda/src/remove.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/remove.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");


/**
 * Removes the sub-list of `list` starting at index `start` and containing
 * `count` elements. _Note that this is not destructive_: it returns a copy of
 * the list with the changes.
 * <small>No lists have been harmed in the application of this function.</small>
 *
 * @func
 * @memberOf R
 * @since v0.2.2
 * @category List
 * @sig Number -> Number -> [a] -> [a]
 * @param {Number} start The position to start removing elements
 * @param {Number} count The number of elements to remove
 * @param {Array} list The list to remove from
 * @return {Array} A new Array with `count` elements from `start` removed.
 * @example
 *
 *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]
 */
module.exports = _curry3(function remove(start, count, list) {
  var result = Array.prototype.slice.call(list, 0);
  result.splice(start, count);
  return result;
});


/***/ }),

/***/ "./node_modules/ramda/src/reverse.js":
/*!*******************************************!*\
  !*** ./node_modules/ramda/src/reverse.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _isString = __webpack_require__(/*! ./internal/_isString */ "./node_modules/ramda/src/internal/_isString.js");


/**
 * Returns a new list or string with the elements or characters in reverse
 * order.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {Array|String} list
 * @return {Array|String}
 * @example
 *
 *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]
 *      R.reverse([1, 2]);     //=> [2, 1]
 *      R.reverse([1]);        //=> [1]
 *      R.reverse([]);         //=> []
 *
 *      R.reverse('abc');      //=> 'cba'
 *      R.reverse('ab');       //=> 'ba'
 *      R.reverse('a');        //=> 'a'
 *      R.reverse('');         //=> ''
 */
module.exports = _curry1(function reverse(list) {
  return _isString(list) ? list.split('').reverse().join('') :
                           Array.prototype.slice.call(list, 0).reverse();
});


/***/ }),

/***/ "./node_modules/ramda/src/slice.js":
/*!*****************************************!*\
  !*** ./node_modules/ramda/src/slice.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _checkForMethod = __webpack_require__(/*! ./internal/_checkForMethod */ "./node_modules/ramda/src/internal/_checkForMethod.js");
var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");


/**
 * Returns the elements of the given list or string (or object with a `slice`
 * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).
 *
 * Dispatches to the `slice` method of the third argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.4
 * @category List
 * @sig Number -> Number -> [a] -> [a]
 * @sig Number -> Number -> String -> String
 * @param {Number} fromIndex The start index (inclusive).
 * @param {Number} toIndex The end index (exclusive).
 * @param {*} list
 * @return {*}
 * @example
 *
 *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']
 *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']
 *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']
 *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']
 *      R.slice(0, 3, 'ramda');                     //=> 'ram'
 */
module.exports = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {
  return Array.prototype.slice.call(list, fromIndex, toIndex);
}));


/***/ }),

/***/ "./node_modules/ramda/src/tail.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/tail.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _checkForMethod = __webpack_require__(/*! ./internal/_checkForMethod */ "./node_modules/ramda/src/internal/_checkForMethod.js");
var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var slice = __webpack_require__(/*! ./slice */ "./node_modules/ramda/src/slice.js");


/**
 * Returns all but the first element of the given list or string (or object
 * with a `tail` method).
 *
 * Dispatches to the `slice` method of the first argument, if present.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @sig String -> String
 * @param {*} list
 * @return {*}
 * @see R.head, R.init, R.last
 * @example
 *
 *      R.tail([1, 2, 3]);  //=> [2, 3]
 *      R.tail([1, 2]);     //=> [2]
 *      R.tail([1]);        //=> []
 *      R.tail([]);         //=> []
 *
 *      R.tail('abc');  //=> 'bc'
 *      R.tail('ab');   //=> 'b'
 *      R.tail('a');    //=> ''
 *      R.tail('');     //=> ''
 */
module.exports = _curry1(_checkForMethod('tail', slice(1, Infinity)));


/***/ }),

/***/ "./node_modules/ramda/src/toString.js":
/*!********************************************!*\
  !*** ./node_modules/ramda/src/toString.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");
var _toString = __webpack_require__(/*! ./internal/_toString */ "./node_modules/ramda/src/internal/_toString.js");


/**
 * Returns the string representation of the given value. `eval`'ing the output
 * should result in a value equivalent to the input value. Many of the built-in
 * `toString` methods do not satisfy this requirement.
 *
 * If the given value is an `[object Object]` with a `toString` method other
 * than `Object.prototype.toString`, this method is invoked with no arguments
 * to produce the return value. This means user-defined constructor functions
 * can provide a suitable `toString` method. For example:
 *
 *     function Point(x, y) {
 *       this.x = x;
 *       this.y = y;
 *     }
 *
 *     Point.prototype.toString = function() {
 *       return 'new Point(' + this.x + ', ' + this.y + ')';
 *     };
 *
 *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'
 *
 * @func
 * @memberOf R
 * @since v0.14.0
 * @category String
 * @sig * -> String
 * @param {*} val
 * @return {String}
 * @example
 *
 *      R.toString(42); //=> '42'
 *      R.toString('abc'); //=> '"abc"'
 *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'
 *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{"bar": 2, "baz": 3, "foo": 1}'
 *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date("2001-02-03T04:05:06.000Z")'
 */
module.exports = _curry1(function toString(val) { return _toString(val, []); });


/***/ }),

/***/ "./node_modules/ramda/src/type.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/type.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry1 = __webpack_require__(/*! ./internal/_curry1 */ "./node_modules/ramda/src/internal/_curry1.js");


/**
 * Gives a single-word string description of the (native) type of a value,
 * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not
 * attempt to distinguish user Object types any further, reporting them all as
 * 'Object'.
 *
 * @func
 * @memberOf R
 * @since v0.8.0
 * @category Type
 * @sig (* -> {*}) -> String
 * @param {*} val The value to test
 * @return {String}
 * @example
 *
 *      R.type({}); //=> "Object"
 *      R.type(1); //=> "Number"
 *      R.type(false); //=> "Boolean"
 *      R.type('s'); //=> "String"
 *      R.type(null); //=> "Null"
 *      R.type([]); //=> "Array"
 *      R.type(/[A-z]/); //=> "RegExp"
 *      R.type(() => {}); //=> "Function"
 */
module.exports = _curry1(function type(val) {
  return val === null      ? 'Null'      :
         val === undefined ? 'Undefined' :
         Object.prototype.toString.call(val).slice(8, -1);
});


/***/ }),

/***/ "./node_modules/ramda/src/unionWith.js":
/*!*********************************************!*\
  !*** ./node_modules/ramda/src/unionWith.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _concat = __webpack_require__(/*! ./internal/_concat */ "./node_modules/ramda/src/internal/_concat.js");
var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");
var uniqWith = __webpack_require__(/*! ./uniqWith */ "./node_modules/ramda/src/uniqWith.js");


/**
 * Combines two lists into a set (i.e. no duplicates) composed of the elements
 * of each list. Duplication is determined according to the value returned by
 * applying the supplied predicate to two list elements.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Relation
 * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list1 The first list.
 * @param {Array} list2 The second list.
 * @return {Array} The first and second lists concatenated, with
 *         duplicates removed.
 * @see R.union
 * @example
 *
 *      var l1 = [{a: 1}, {a: 2}];
 *      var l2 = [{a: 1}, {a: 4}];
 *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]
 */
module.exports = _curry3(function unionWith(pred, list1, list2) {
  return uniqWith(pred, _concat(list1, list2));
});


/***/ }),

/***/ "./node_modules/ramda/src/uniq.js":
/*!****************************************!*\
  !*** ./node_modules/ramda/src/uniq.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var identity = __webpack_require__(/*! ./identity */ "./node_modules/ramda/src/identity.js");
var uniqBy = __webpack_require__(/*! ./uniqBy */ "./node_modules/ramda/src/uniqBy.js");


/**
 * Returns a new list containing only one copy of each element in the original
 * list. [`R.equals`](#equals) is used to determine equality.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category List
 * @sig [a] -> [a]
 * @param {Array} list The array to consider.
 * @return {Array} The list of unique items.
 * @example
 *
 *      R.uniq([1, 1, 2, 1]); //=> [1, 2]
 *      R.uniq([1, '1']);     //=> [1, '1']
 *      R.uniq([[42], [42]]); //=> [[42]]
 */
module.exports = uniqBy(identity);


/***/ }),

/***/ "./node_modules/ramda/src/uniqBy.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/uniqBy.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _Set = __webpack_require__(/*! ./internal/_Set */ "./node_modules/ramda/src/internal/_Set.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Returns a new list containing only one copy of each element in the original
 * list, based upon the value returned by applying the supplied function to
 * each list element. Prefers the first item if the supplied function produces
 * the same value on two items. [`R.equals`](#equals) is used for comparison.
 *
 * @func
 * @memberOf R
 * @since v0.16.0
 * @category List
 * @sig (a -> b) -> [a] -> [a]
 * @param {Function} fn A function used to produce a value to use during comparisons.
 * @param {Array} list The array to consider.
 * @return {Array} The list of unique items.
 * @example
 *
 *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]
 */
module.exports = _curry2(function uniqBy(fn, list) {
  var set = new _Set();
  var result = [];
  var idx = 0;
  var appliedItem, item;

  while (idx < list.length) {
    item = list[idx];
    appliedItem = fn(item);
    if (set.add(appliedItem)) {
      result.push(item);
    }
    idx += 1;
  }
  return result;
});


/***/ }),

/***/ "./node_modules/ramda/src/uniqWith.js":
/*!********************************************!*\
  !*** ./node_modules/ramda/src/uniqWith.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _containsWith = __webpack_require__(/*! ./internal/_containsWith */ "./node_modules/ramda/src/internal/_containsWith.js");
var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");


/**
 * Returns a new list containing only one copy of each element in the original
 * list, based upon the value returned by applying the supplied predicate to
 * two list elements. Prefers the first item if two items compare equal based
 * on the predicate.
 *
 * @func
 * @memberOf R
 * @since v0.2.0
 * @category List
 * @sig (a, a -> Boolean) -> [a] -> [a]
 * @param {Function} pred A predicate used to test whether two items are equal.
 * @param {Array} list The array to consider.
 * @return {Array} The list of unique items.
 * @example
 *
 *      var strEq = R.eqBy(String);
 *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]
 *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]
 *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]
 *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']
 */
module.exports = _curry2(function uniqWith(pred, list) {
  var idx = 0;
  var len = list.length;
  var result = [];
  var item;
  while (idx < len) {
    item = list[idx];
    if (!_containsWith(pred, item, result)) {
      result[result.length] = item;
    }
    idx += 1;
  }
  return result;
});


/***/ }),

/***/ "./node_modules/ramda/src/unless.js":
/*!******************************************!*\
  !*** ./node_modules/ramda/src/unless.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry3 = __webpack_require__(/*! ./internal/_curry3 */ "./node_modules/ramda/src/internal/_curry3.js");


/**
 * Tests the final argument by passing it to the given predicate function. If
 * the predicate is not satisfied, the function will return the result of
 * calling the `whenFalseFn` function with the same argument. If the predicate
 * is satisfied, the argument is returned as is.
 *
 * @func
 * @memberOf R
 * @since v0.18.0
 * @category Logic
 * @sig (a -> Boolean) -> (a -> a) -> a -> a
 * @param {Function} pred        A predicate function
 * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates
 *                               to a falsy value.
 * @param {*}        x           An object to test with the `pred` function and
 *                               pass to `whenFalseFn` if necessary.
 * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.
 * @see R.ifElse, R.when
 * @example
 *
 *      let safeInc = R.unless(R.isNil, R.inc);
 *      safeInc(null); //=> null
 *      safeInc(1); //=> 2
 */
module.exports = _curry3(function unless(pred, whenFalseFn, x) {
  return pred(x) ? x : whenFalseFn(x);
});


/***/ }),

/***/ "./node_modules/ramda/src/useWith.js":
/*!*******************************************!*\
  !*** ./node_modules/ramda/src/useWith.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _curry2 = __webpack_require__(/*! ./internal/_curry2 */ "./node_modules/ramda/src/internal/_curry2.js");
var curryN = __webpack_require__(/*! ./curryN */ "./node_modules/ramda/src/curryN.js");


/**
 * Accepts a function `fn` and a list of transformer functions and returns a
 * new curried function. When the new function is invoked, it calls the
 * function `fn` with parameters consisting of the result of calling each
 * supplied handler on successive arguments to the new function.
 *
 * If more arguments are passed to the returned function than transformer
 * functions, those arguments are passed directly to `fn` as additional
 * parameters. If you expect additional arguments that don't need to be
 * transformed, although you can ignore them, it's best to pass an identity
 * function so that the new function reports the correct arity.
 *
 * @func
 * @memberOf R
 * @since v0.1.0
 * @category Function
 * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)
 * @param {Function} fn The function to wrap.
 * @param {Array} transformers A list of transformer functions
 * @return {Function} The wrapped function.
 * @see R.converge
 * @example
 *
 *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81
 *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81
 *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32
 *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32
 * @symb R.useWith(f, [g, h])(a, b) = f(g(a), h(b))
 */
module.exports = _curry2(function useWith(fn, transformers) {
  return curryN(transformers.length, function() {
    var args = [];
    var idx = 0;
    while (idx < transformers.length) {
      args.push(transformers[idx].call(this, arguments[idx]));
      idx += 1;
    }
    return fn.apply(this, args.concat(Array.prototype.slice.call(arguments, transformers.length)));
  });
});


/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");
var scheduler = __webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js");
var tracing = __webpack_require__(/*! scheduler/tracing */ "./node_modules/scheduler/tracing.js");

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function () {};

{
  validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error = void 0;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

// Relying on the `invariant()` implementation lets us
// preserve the format and params in the www builds.

!React ? invariant(false, 'ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.') : void 0;

var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
  var funcArgs = Array.prototype.slice.call(arguments, 3);
  try {
    func.apply(context, funcArgs);
  } catch (error) {
    this.onError(error);
  }
};

{
  // In DEV mode, we swap out invokeGuardedCallback for a special version
  // that plays more nicely with the browser's DevTools. The idea is to preserve
  // "Pause on exceptions" behavior. Because React wraps all user-provided
  // functions in invokeGuardedCallback, and the production version of
  // invokeGuardedCallback uses a try-catch, all user exceptions are treated
  // like caught exceptions, and the DevTools won't pause unless the developer
  // takes the extra step of enabling pause on caught exceptions. This is
  // unintuitive, though, because even though React has caught the error, from
  // the developer's perspective, the error is uncaught.
  //
  // To preserve the expected "Pause on exceptions" behavior, we don't use a
  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
  // DOM node, and call the user-provided callback from inside an event handler
  // for that fake event. If the callback throws, the error is "captured" using
  // a global event handler. But because the error happens in a different
  // event loop context, it does not interrupt the normal program flow.
  // Effectively, this gives us try-catch behavior without actually using
  // try-catch. Neat!

  // Check that the browser supports the APIs we need to implement our special
  // DEV version of invokeGuardedCallback
  if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
    var fakeNode = document.createElement('react');

    var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
      // If document doesn't exist we know for sure we will crash in this method
      // when we call document.createEvent(). However this can cause confusing
      // errors: https://github.com/facebookincubator/create-react-app/issues/3482
      // So we preemptively throw with a better message instead.
      !(typeof document !== 'undefined') ? invariant(false, 'The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.') : void 0;
      var evt = document.createEvent('Event');

      // Keeps track of whether the user-provided callback threw an error. We
      // set this to true at the beginning, then set it to false right after
      // calling the function. If the function errors, `didError` will never be
      // set to false. This strategy works even if the browser is flaky and
      // fails to call our global error handler, because it doesn't rely on
      // the error event at all.
      var didError = true;

      // Keeps track of the value of window.event so that we can reset it
      // during the callback to let user code access window.event in the
      // browsers that support it.
      var windowEvent = window.event;

      // Keeps track of the descriptor of window.event to restore it after event
      // dispatching: https://github.com/facebook/react/issues/13688
      var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event');

      // Create an event handler for our fake event. We will synchronously
      // dispatch our fake event using `dispatchEvent`. Inside the handler, we
      // call the user-provided callback.
      var funcArgs = Array.prototype.slice.call(arguments, 3);
      function callCallback() {
        // We immediately remove the callback from event listeners so that
        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
        // nested call would trigger the fake event handlers of any call higher
        // in the stack.
        fakeNode.removeEventListener(evtType, callCallback, false);

        // We check for window.hasOwnProperty('event') to prevent the
        // window.event assignment in both IE <= 10 as they throw an error
        // "Member not found" in strict mode, and in Firefox which does not
        // support window.event.
        if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
          window.event = windowEvent;
        }

        func.apply(context, funcArgs);
        didError = false;
      }

      // Create a global error event handler. We use this to capture the value
      // that was thrown. It's possible that this error handler will fire more
      // than once; for example, if non-React code also calls `dispatchEvent`
      // and a handler for that event throws. We should be resilient to most of
      // those cases. Even if our error event handler fires more than once, the
      // last error event is always used. If the callback actually does error,
      // we know that the last error event is the correct one, because it's not
      // possible for anything else to have happened in between our callback
      // erroring and the code that follows the `dispatchEvent` call below. If
      // the callback doesn't error, but the error event was fired, we know to
      // ignore it because `didError` will be false, as described above.
      var error = void 0;
      // Use this to track whether the error event is ever called.
      var didSetError = false;
      var isCrossOriginError = false;

      function handleWindowError(event) {
        error = event.error;
        didSetError = true;
        if (error === null && event.colno === 0 && event.lineno === 0) {
          isCrossOriginError = true;
        }
        if (event.defaultPrevented) {
          // Some other error handler has prevented default.
          // Browsers silence the error report if this happens.
          // We'll remember this to later decide whether to log it or not.
          if (error != null && typeof error === 'object') {
            try {
              error._suppressLogging = true;
            } catch (inner) {
              // Ignore.
            }
          }
        }
      }

      // Create a fake event type.
      var evtType = 'react-' + (name ? name : 'invokeguardedcallback');

      // Attach our event handlers
      window.addEventListener('error', handleWindowError);
      fakeNode.addEventListener(evtType, callCallback, false);

      // Synchronously dispatch our fake event. If the user-provided function
      // errors, it will trigger our global error handler.
      evt.initEvent(evtType, false, false);
      fakeNode.dispatchEvent(evt);

      if (windowEventDescriptor) {
        Object.defineProperty(window, 'event', windowEventDescriptor);
      }

      if (didError) {
        if (!didSetError) {
          // The callback errored, but the error event never fired.
          error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
        } else if (isCrossOriginError) {
          error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
        }
        this.onError(error);
      }

      // Remove our event listeners
      window.removeEventListener('error', handleWindowError);
    };

    invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
  }
}

var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;

// Used by Fiber to simulate a try-catch.
var hasError = false;
var caughtError = null;

// Used by event system to capture/rethrow the first error.
var hasRethrowError = false;
var rethrowError = null;

var reporter = {
  onError: function (error) {
    hasError = true;
    caughtError = error;
  }
};

/**
 * Call a function while guarding against errors that happens within it.
 * Returns an error if it throws, otherwise null.
 *
 * In production, this is implemented using a try-catch. The reason we don't
 * use a try-catch directly is so that we can swap out a different
 * implementation in DEV mode.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */
function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
  hasError = false;
  caughtError = null;
  invokeGuardedCallbackImpl$1.apply(reporter, arguments);
}

/**
 * Same as invokeGuardedCallback, but instead of returning an error, it stores
 * it in a global so it can be rethrown by `rethrowCaughtError` later.
 * TODO: See if caughtError and rethrowError can be unified.
 *
 * @param {String} name of the guard to use for logging or debugging
 * @param {Function} func The function to invoke
 * @param {*} context The context to use when calling the function
 * @param {...*} args Arguments for function
 */
function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
  invokeGuardedCallback.apply(this, arguments);
  if (hasError) {
    var error = clearCaughtError();
    if (!hasRethrowError) {
      hasRethrowError = true;
      rethrowError = error;
    }
  }
}

/**
 * During execution of guarded functions we will capture the first error which
 * we will rethrow to be handled by the top level error handler.
 */
function rethrowCaughtError() {
  if (hasRethrowError) {
    var error = rethrowError;
    hasRethrowError = false;
    rethrowError = null;
    throw error;
  }
}

function hasCaughtError() {
  return hasError;
}

function clearCaughtError() {
  if (hasError) {
    var error = caughtError;
    hasError = false;
    caughtError = null;
    return error;
  } else {
    invariant(false, 'clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.');
  }
}

/**
 * Injectable ordering of event plugins.
 */
var eventPluginOrder = null;

/**
 * Injectable mapping from names to event plugin modules.
 */
var namesToPlugins = {};

/**
 * Recomputes the plugin list using the injected plugins and plugin ordering.
 *
 * @private
 */
function recomputePluginOrdering() {
  if (!eventPluginOrder) {
    // Wait until an `eventPluginOrder` is injected.
    return;
  }
  for (var pluginName in namesToPlugins) {
    var pluginModule = namesToPlugins[pluginName];
    var pluginIndex = eventPluginOrder.indexOf(pluginName);
    !(pluginIndex > -1) ? invariant(false, 'EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `%s`.', pluginName) : void 0;
    if (plugins[pluginIndex]) {
      continue;
    }
    !pluginModule.extractEvents ? invariant(false, 'EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `%s` does not.', pluginName) : void 0;
    plugins[pluginIndex] = pluginModule;
    var publishedEvents = pluginModule.eventTypes;
    for (var eventName in publishedEvents) {
      !publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName) ? invariant(false, 'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.', eventName, pluginName) : void 0;
    }
  }
}

/**
 * Publishes an event so that it can be dispatched by the supplied plugin.
 *
 * @param {object} dispatchConfig Dispatch configuration for the event.
 * @param {object} PluginModule Plugin publishing the event.
 * @return {boolean} True if the event was successfully published.
 * @private
 */
function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
  !!eventNameDispatchConfigs.hasOwnProperty(eventName) ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same event name, `%s`.', eventName) : void 0;
  eventNameDispatchConfigs[eventName] = dispatchConfig;

  var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;
  if (phasedRegistrationNames) {
    for (var phaseName in phasedRegistrationNames) {
      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
        var phasedRegistrationName = phasedRegistrationNames[phaseName];
        publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
      }
    }
    return true;
  } else if (dispatchConfig.registrationName) {
    publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
    return true;
  }
  return false;
}

/**
 * Publishes a registration name that is used to identify dispatched events.
 *
 * @param {string} registrationName Registration name to add.
 * @param {object} PluginModule Plugin publishing the event.
 * @private
 */
function publishRegistrationName(registrationName, pluginModule, eventName) {
  !!registrationNameModules[registrationName] ? invariant(false, 'EventPluginHub: More than one plugin attempted to publish the same registration name, `%s`.', registrationName) : void 0;
  registrationNameModules[registrationName] = pluginModule;
  registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;

  {
    var lowerCasedName = registrationName.toLowerCase();
    possibleRegistrationNames[lowerCasedName] = registrationName;

    if (registrationName === 'onDoubleClick') {
      possibleRegistrationNames.ondblclick = registrationName;
    }
  }
}

/**
 * Registers plugins so that they can extract and dispatch events.
 *
 * @see {EventPluginHub}
 */

/**
 * Ordered list of injected plugins.
 */
var plugins = [];

/**
 * Mapping from event name to dispatch config
 */
var eventNameDispatchConfigs = {};

/**
 * Mapping from registration name to plugin module
 */
var registrationNameModules = {};

/**
 * Mapping from registration name to event name
 */
var registrationNameDependencies = {};

/**
 * Mapping from lowercase registration names to the properly cased version,
 * used to warn in the case of missing event handlers. Available
 * only in true.
 * @type {Object}
 */
var possibleRegistrationNames = {};
// Trust the developer to only use possibleRegistrationNames in true

/**
 * Injects an ordering of plugins (by plugin name). This allows the ordering
 * to be decoupled from injection of the actual plugins so that ordering is
 * always deterministic regardless of packaging, on-the-fly injection, etc.
 *
 * @param {array} InjectedEventPluginOrder
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginOrder}
 */
function injectEventPluginOrder(injectedEventPluginOrder) {
  !!eventPluginOrder ? invariant(false, 'EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.') : void 0;
  // Clone the ordering so it cannot be dynamically mutated.
  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
  recomputePluginOrdering();
}

/**
 * Injects plugins to be used by `EventPluginHub`. The plugin names must be
 * in the ordering injected by `injectEventPluginOrder`.
 *
 * Plugins can be injected as part of page initialization or on-the-fly.
 *
 * @param {object} injectedNamesToPlugins Map from names to plugin modules.
 * @internal
 * @see {EventPluginHub.injection.injectEventPluginsByName}
 */
function injectEventPluginsByName(injectedNamesToPlugins) {
  var isOrderingDirty = false;
  for (var pluginName in injectedNamesToPlugins) {
    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
      continue;
    }
    var pluginModule = injectedNamesToPlugins[pluginName];
    if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
      !!namesToPlugins[pluginName] ? invariant(false, 'EventPluginRegistry: Cannot inject two different event plugins using the same name, `%s`.', pluginName) : void 0;
      namesToPlugins[pluginName] = pluginModule;
      isOrderingDirty = true;
    }
  }
  if (isOrderingDirty) {
    recomputePluginOrdering();
  }
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }
    if (condition) {
      return;
    }
    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format);

      // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610
      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var getFiberCurrentPropsFromNode = null;
var getInstanceFromNode = null;
var getNodeFromInstance = null;

function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
  getInstanceFromNode = getInstanceFromNodeImpl;
  getNodeFromInstance = getNodeFromInstanceImpl;
  {
    !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
  }
}

var validateEventDispatches = void 0;
{
  validateEventDispatches = function (event) {
    var dispatchListeners = event._dispatchListeners;
    var dispatchInstances = event._dispatchInstances;

    var listenersIsArr = Array.isArray(dispatchListeners);
    var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;

    var instancesIsArr = Array.isArray(dispatchInstances);
    var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;

    !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
  };
}

/**
 * Dispatch the event to the listener.
 * @param {SyntheticEvent} event SyntheticEvent to handle
 * @param {function} listener Application-level callback
 * @param {*} inst Internal component instance
 */
function executeDispatch(event, listener, inst) {
  var type = event.type || 'unknown-event';
  event.currentTarget = getNodeFromInstance(inst);
  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
  event.currentTarget = null;
}

/**
 * Standard/simple iteration through an event's collected dispatches.
 */
function executeDispatchesInOrder(event) {
  var dispatchListeners = event._dispatchListeners;
  var dispatchInstances = event._dispatchInstances;
  {
    validateEventDispatches(event);
  }
  if (Array.isArray(dispatchListeners)) {
    for (var i = 0; i < dispatchListeners.length; i++) {
      if (event.isPropagationStopped()) {
        break;
      }
      // Listeners and Instances are two parallel arrays that are always in sync.
      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
    }
  } else if (dispatchListeners) {
    executeDispatch(event, dispatchListeners, dispatchInstances);
  }
  event._dispatchListeners = null;
  event._dispatchInstances = null;
}

/**
 * @see executeDispatchesInOrderStopAtTrueImpl
 */


/**
 * Execution of a "direct" dispatch - there must be at most one dispatch
 * accumulated on the event or it is considered an error. It doesn't really make
 * sense for an event with multiple dispatches (bubbled) to keep track of the
 * return values at each dispatch execution, but it does tend to make sense when
 * dealing with "direct" dispatches.
 *
 * @return {*} The return value of executing the single dispatch.
 */


/**
 * @param {SyntheticEvent} event
 * @return {boolean} True iff number of dispatches accumulated is greater than 0.
 */

/**
 * Accumulates items that must not be null or undefined into the first one. This
 * is used to conserve memory by avoiding array allocations, and thus sacrifices
 * API cleanness. Since `current` can be null before being passed in and not
 * null after this function, make sure to assign it back to `current`:
 *
 * `a = accumulateInto(a, b);`
 *
 * This API should be sparingly used. Try `accumulate` for something cleaner.
 *
 * @return {*|array<*>} An accumulation of items.
 */

function accumulateInto(current, next) {
  !(next != null) ? invariant(false, 'accumulateInto(...): Accumulated items must not be null or undefined.') : void 0;

  if (current == null) {
    return next;
  }

  // Both are not empty. Warning: Never call x.concat(y) when you are not
  // certain that x is an Array (x could be a string with concat method).
  if (Array.isArray(current)) {
    if (Array.isArray(next)) {
      current.push.apply(current, next);
      return current;
    }
    current.push(next);
    return current;
  }

  if (Array.isArray(next)) {
    // A bit too dangerous to mutate `next`.
    return [current].concat(next);
  }

  return [current, next];
}

/**
 * @param {array} arr an "accumulation" of items which is either an Array or
 * a single item. Useful when paired with the `accumulate` module. This is a
 * simple utility that allows us to reason about a collection of items, but
 * handling the case when there is exactly one item (and we do not need to
 * allocate an array).
 * @param {function} cb Callback invoked with each element or a collection.
 * @param {?} [scope] Scope used as `this` in a callback.
 */
function forEachAccumulated(arr, cb, scope) {
  if (Array.isArray(arr)) {
    arr.forEach(cb, scope);
  } else if (arr) {
    cb.call(scope, arr);
  }
}

/**
 * Internal queue of events that have accumulated their dispatches and are
 * waiting to have their dispatches executed.
 */
var eventQueue = null;

/**
 * Dispatches an event and releases it back into the pool, unless persistent.
 *
 * @param {?object} event Synthetic event to be dispatched.
 * @private
 */
var executeDispatchesAndRelease = function (event) {
  if (event) {
    executeDispatchesInOrder(event);

    if (!event.isPersistent()) {
      event.constructor.release(event);
    }
  }
};
var executeDispatchesAndReleaseTopLevel = function (e) {
  return executeDispatchesAndRelease(e);
};

function isInteractive(tag) {
  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
}

function shouldPreventMouseEvent(name, type, props) {
  switch (name) {
    case 'onClick':
    case 'onClickCapture':
    case 'onDoubleClick':
    case 'onDoubleClickCapture':
    case 'onMouseDown':
    case 'onMouseDownCapture':
    case 'onMouseMove':
    case 'onMouseMoveCapture':
    case 'onMouseUp':
    case 'onMouseUpCapture':
      return !!(props.disabled && isInteractive(type));
    default:
      return false;
  }
}

/**
 * This is a unified interface for event plugins to be installed and configured.
 *
 * Event plugins can implement the following properties:
 *
 *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
 *     Required. When a top-level event is fired, this method is expected to
 *     extract synthetic events that will in turn be queued and dispatched.
 *
 *   `eventTypes` {object}
 *     Optional, plugins that fire events must publish a mapping of registration
 *     names that are used to register listeners. Values of this mapping must
 *     be objects that contain `registrationName` or `phasedRegistrationNames`.
 *
 *   `executeDispatch` {function(object, function, string)}
 *     Optional, allows plugins to override how an event gets dispatched. By
 *     default, the listener is simply invoked.
 *
 * Each plugin that is injected into `EventsPluginHub` is immediately operable.
 *
 * @public
 */

/**
 * Methods for injecting dependencies.
 */
var injection = {
  /**
   * @param {array} InjectedEventPluginOrder
   * @public
   */
  injectEventPluginOrder: injectEventPluginOrder,

  /**
   * @param {object} injectedNamesToPlugins Map from names to plugin modules.
   */
  injectEventPluginsByName: injectEventPluginsByName
};

/**
 * @param {object} inst The instance, which is the source of events.
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @return {?function} The stored callback.
 */
function getListener(inst, registrationName) {
  var listener = void 0;

  // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
  // live here; needs to be moved to a better place soon
  var stateNode = inst.stateNode;
  if (!stateNode) {
    // Work in progress (ex: onload events in incremental mode).
    return null;
  }
  var props = getFiberCurrentPropsFromNode(stateNode);
  if (!props) {
    // Work in progress.
    return null;
  }
  listener = props[registrationName];
  if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
    return null;
  }
  !(!listener || typeof listener === 'function') ? invariant(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener) : void 0;
  return listener;
}

/**
 * Allows registered plugins an opportunity to extract events from top-level
 * native browser events.
 *
 * @return {*} An accumulation of synthetic events.
 * @internal
 */
function extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = null;
  for (var i = 0; i < plugins.length; i++) {
    // Not every plugin in the ordering may be loaded at runtime.
    var possiblePlugin = plugins[i];
    if (possiblePlugin) {
      var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
      if (extractedEvents) {
        events = accumulateInto(events, extractedEvents);
      }
    }
  }
  return events;
}

function runEventsInBatch(events) {
  if (events !== null) {
    eventQueue = accumulateInto(eventQueue, events);
  }

  // Set `eventQueue` to null before processing it so that we can tell if more
  // events get enqueued while processing.
  var processingEventQueue = eventQueue;
  eventQueue = null;

  if (!processingEventQueue) {
    return;
  }

  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);
  !!eventQueue ? invariant(false, 'processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.') : void 0;
  // This would be a good time to rethrow if any of the event handlers threw.
  rethrowCaughtError();
}

function runExtractedEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var events = extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget);
  runEventsInBatch(events);
}

var FunctionComponent = 0;
var ClassComponent = 1;
var IndeterminateComponent = 2; // Before we know whether it is function or class
var HostRoot = 3; // Root of a host tree. Could be nested inside another node.
var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.
var HostComponent = 5;
var HostText = 6;
var Fragment = 7;
var Mode = 8;
var ContextConsumer = 9;
var ContextProvider = 10;
var ForwardRef = 11;
var Profiler = 12;
var SuspenseComponent = 13;
var MemoComponent = 14;
var SimpleMemoComponent = 15;
var LazyComponent = 16;
var IncompleteClassComponent = 17;
var DehydratedSuspenseComponent = 18;

var randomKey = Math.random().toString(36).slice(2);
var internalInstanceKey = '__reactInternalInstance$' + randomKey;
var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;

function precacheFiberNode(hostInst, node) {
  node[internalInstanceKey] = hostInst;
}

/**
 * Given a DOM node, return the closest ReactDOMComponent or
 * ReactDOMTextComponent instance ancestor.
 */
function getClosestInstanceFromNode(node) {
  if (node[internalInstanceKey]) {
    return node[internalInstanceKey];
  }

  while (!node[internalInstanceKey]) {
    if (node.parentNode) {
      node = node.parentNode;
    } else {
      // Top of the tree. This node must not be part of a React tree (or is
      // unmounted, potentially).
      return null;
    }
  }

  var inst = node[internalInstanceKey];
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber, this will always be the deepest root.
    return inst;
  }

  return null;
}

/**
 * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
 * instance, or null if the node was not rendered by this React.
 */
function getInstanceFromNode$1(node) {
  var inst = node[internalInstanceKey];
  if (inst) {
    if (inst.tag === HostComponent || inst.tag === HostText) {
      return inst;
    } else {
      return null;
    }
  }
  return null;
}

/**
 * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
 * DOM node.
 */
function getNodeFromInstance$1(inst) {
  if (inst.tag === HostComponent || inst.tag === HostText) {
    // In Fiber this, is just the state node right now. We assume it will be
    // a host component or host text.
    return inst.stateNode;
  }

  // Without this first invariant, passing a non-DOM-component triggers the next
  // invariant for a missing parent, which is super confusing.
  invariant(false, 'getNodeFromInstance: Invalid argument.');
}

function getFiberCurrentPropsFromNode$1(node) {
  return node[internalEventHandlersKey] || null;
}

function updateFiberProps(node, props) {
  node[internalEventHandlersKey] = props;
}

function getParent(inst) {
  do {
    inst = inst.return;
    // TODO: If this is a HostRoot we might want to bail out.
    // That is depending on if we want nested subtrees (layers) to bubble
    // events to their parent. We could also go through parentNode on the
    // host node but that wouldn't work for React Native and doesn't let us
    // do the portal feature.
  } while (inst && inst.tag !== HostComponent);
  if (inst) {
    return inst;
  }
  return null;
}

/**
 * Return the lowest common ancestor of A and B, or null if they are in
 * different trees.
 */
function getLowestCommonAncestor(instA, instB) {
  var depthA = 0;
  for (var tempA = instA; tempA; tempA = getParent(tempA)) {
    depthA++;
  }
  var depthB = 0;
  for (var tempB = instB; tempB; tempB = getParent(tempB)) {
    depthB++;
  }

  // If A is deeper, crawl up.
  while (depthA - depthB > 0) {
    instA = getParent(instA);
    depthA--;
  }

  // If B is deeper, crawl up.
  while (depthB - depthA > 0) {
    instB = getParent(instB);
    depthB--;
  }

  // Walk in lockstep until we find a match.
  var depth = depthA;
  while (depth--) {
    if (instA === instB || instA === instB.alternate) {
      return instA;
    }
    instA = getParent(instA);
    instB = getParent(instB);
  }
  return null;
}

/**
 * Return if A is an ancestor of B.
 */


/**
 * Return the parent instance of the passed-in instance.
 */


/**
 * Simulates the traversal of a two-phase, capture/bubble event dispatch.
 */
function traverseTwoPhase(inst, fn, arg) {
  var path = [];
  while (inst) {
    path.push(inst);
    inst = getParent(inst);
  }
  var i = void 0;
  for (i = path.length; i-- > 0;) {
    fn(path[i], 'captured', arg);
  }
  for (i = 0; i < path.length; i++) {
    fn(path[i], 'bubbled', arg);
  }
}

/**
 * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
 * should would receive a `mouseEnter` or `mouseLeave` event.
 *
 * Does not invoke the callback on the nearest common ancestor because nothing
 * "entered" or "left" that element.
 */
function traverseEnterLeave(from, to, fn, argFrom, argTo) {
  var common = from && to ? getLowestCommonAncestor(from, to) : null;
  var pathFrom = [];
  while (true) {
    if (!from) {
      break;
    }
    if (from === common) {
      break;
    }
    var alternate = from.alternate;
    if (alternate !== null && alternate === common) {
      break;
    }
    pathFrom.push(from);
    from = getParent(from);
  }
  var pathTo = [];
  while (true) {
    if (!to) {
      break;
    }
    if (to === common) {
      break;
    }
    var _alternate = to.alternate;
    if (_alternate !== null && _alternate === common) {
      break;
    }
    pathTo.push(to);
    to = getParent(to);
  }
  for (var i = 0; i < pathFrom.length; i++) {
    fn(pathFrom[i], 'bubbled', argFrom);
  }
  for (var _i = pathTo.length; _i-- > 0;) {
    fn(pathTo[_i], 'captured', argTo);
  }
}

/**
 * Some event types have a notion of different registration names for different
 * "phases" of propagation. This finds listeners by a given phase.
 */
function listenerAtPhase(inst, event, propagationPhase) {
  var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
  return getListener(inst, registrationName);
}

/**
 * A small set of propagation patterns, each of which will accept a small amount
 * of information, and generate a set of "dispatch ready event objects" - which
 * are sets of events that have already been annotated with a set of dispatched
 * listener functions/ids. The API is designed this way to discourage these
 * propagation strategies from actually executing the dispatches, since we
 * always want to collect the entire set of dispatches before executing even a
 * single one.
 */

/**
 * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
 * here, allows us to not have to bind or create functions for each event.
 * Mutating the event's members allows us to not have to create a wrapping
 * "dispatch" object that pairs the event with the listener.
 */
function accumulateDirectionalDispatches(inst, phase, event) {
  {
    !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
  }
  var listener = listenerAtPhase(inst, event, phase);
  if (listener) {
    event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
  }
}

/**
 * Collect dispatches (must be entirely collected before dispatching - see unit
 * tests). Lazily allocate the array to conserve memory.  We must loop through
 * each event and perform the traversal for each one. We cannot perform a
 * single traversal for the entire collection of events because each event may
 * have a different target.
 */
function accumulateTwoPhaseDispatchesSingle(event) {
  if (event && event.dispatchConfig.phasedRegistrationNames) {
    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
  }
}

/**
 * Accumulates without regard to direction, does not look for phased
 * registration names. Same as `accumulateDirectDispatchesSingle` but without
 * requiring that the `dispatchMarker` be the same as the dispatched ID.
 */
function accumulateDispatches(inst, ignoredDirection, event) {
  if (inst && event && event.dispatchConfig.registrationName) {
    var registrationName = event.dispatchConfig.registrationName;
    var listener = getListener(inst, registrationName);
    if (listener) {
      event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
    }
  }
}

/**
 * Accumulates dispatches on an `SyntheticEvent`, but only for the
 * `dispatchMarker`.
 * @param {SyntheticEvent} event
 */
function accumulateDirectDispatchesSingle(event) {
  if (event && event.dispatchConfig.registrationName) {
    accumulateDispatches(event._targetInst, null, event);
  }
}

function accumulateTwoPhaseDispatches(events) {
  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
}



function accumulateEnterLeaveDispatches(leave, enter, from, to) {
  traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
}

function accumulateDirectDispatches(events) {
  forEachAccumulated(events, accumulateDirectDispatchesSingle);
}

var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

// Do not uses the below two methods directly!
// Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
// (It is the only module that is allowed to access these methods.)

function unsafeCastStringToDOMTopLevelType(topLevelType) {
  return topLevelType;
}

function unsafeCastDOMTopLevelTypeToString(topLevelType) {
  return topLevelType;
}

/**
 * Generate a mapping of standard vendor prefixes using the defined style property and event name.
 *
 * @param {string} styleProp
 * @param {string} eventName
 * @returns {object}
 */
function makePrefixMap(styleProp, eventName) {
  var prefixes = {};

  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
  prefixes['Webkit' + styleProp] = 'webkit' + eventName;
  prefixes['Moz' + styleProp] = 'moz' + eventName;

  return prefixes;
}

/**
 * A list of event names to a configurable list of vendor prefixes.
 */
var vendorPrefixes = {
  animationend: makePrefixMap('Animation', 'AnimationEnd'),
  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
  animationstart: makePrefixMap('Animation', 'AnimationStart'),
  transitionend: makePrefixMap('Transition', 'TransitionEnd')
};

/**
 * Event names that have already been detected and prefixed (if applicable).
 */
var prefixedEventNames = {};

/**
 * Element to check for prefixes on.
 */
var style = {};

/**
 * Bootstrap if a DOM exists.
 */
if (canUseDOM) {
  style = document.createElement('div').style;

  // On some platforms, in particular some releases of Android 4.x,
  // the un-prefixed "animation" and "transition" properties are defined on the
  // style object but the events that fire will still be prefixed, so we need
  // to check if the un-prefixed events are usable, and if not remove them from the map.
  if (!('AnimationEvent' in window)) {
    delete vendorPrefixes.animationend.animation;
    delete vendorPrefixes.animationiteration.animation;
    delete vendorPrefixes.animationstart.animation;
  }

  // Same as above
  if (!('TransitionEvent' in window)) {
    delete vendorPrefixes.transitionend.transition;
  }
}

/**
 * Attempts to determine the correct vendor prefixed event name.
 *
 * @param {string} eventName
 * @returns {string}
 */
function getVendorPrefixedEventName(eventName) {
  if (prefixedEventNames[eventName]) {
    return prefixedEventNames[eventName];
  } else if (!vendorPrefixes[eventName]) {
    return eventName;
  }

  var prefixMap = vendorPrefixes[eventName];

  for (var styleProp in prefixMap) {
    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
      return prefixedEventNames[eventName] = prefixMap[styleProp];
    }
  }

  return eventName;
}

/**
 * To identify top level events in ReactDOM, we use constants defined by this
 * module. This is the only module that uses the unsafe* methods to express
 * that the constants actually correspond to the browser event names. This lets
 * us save some bundle size by avoiding a top level type -> event name map.
 * The rest of ReactDOM code should import top level types from this file.
 */
var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');


var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel');

// List of events that need to be individually attached to media elements.
// Note that events in this list will *not* be listened to at the top level
// unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.
var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

function getRawEventName(topLevelType) {
  return unsafeCastDOMTopLevelTypeToString(topLevelType);
}

/**
 * These variables store information about text content of a target node,
 * allowing comparison of content before and after a given event.
 *
 * Identify the node where selection currently begins, then observe
 * both its text content and its current position in the DOM. Since the
 * browser may natively replace the target node during composition, we can
 * use its position to find its replacement.
 *
 *
 */

var root = null;
var startText = null;
var fallbackText = null;

function initialize(nativeEventTarget) {
  root = nativeEventTarget;
  startText = getText();
  return true;
}

function reset() {
  root = null;
  startText = null;
  fallbackText = null;
}

function getData() {
  if (fallbackText) {
    return fallbackText;
  }

  var start = void 0;
  var startValue = startText;
  var startLength = startValue.length;
  var end = void 0;
  var endValue = getText();
  var endLength = endValue.length;

  for (start = 0; start < startLength; start++) {
    if (startValue[start] !== endValue[start]) {
      break;
    }
  }

  var minEnd = startLength - start;
  for (end = 1; end <= minEnd; end++) {
    if (startValue[startLength - end] !== endValue[endLength - end]) {
      break;
    }
  }

  var sliceTail = end > 1 ? 1 - end : undefined;
  fallbackText = endValue.slice(start, sliceTail);
  return fallbackText;
}

function getText() {
  if ('value' in root) {
    return root.value;
  }
  return root.textContent;
}

/* eslint valid-typeof: 0 */

var EVENT_POOL_SIZE = 10;

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var EventInterface = {
  type: null,
  target: null,
  // currentTarget is set when dispatching; no use in copying it here
  currentTarget: function () {
    return null;
  },
  eventPhase: null,
  bubbles: null,
  cancelable: null,
  timeStamp: function (event) {
    return event.timeStamp || Date.now();
  },
  defaultPrevented: null,
  isTrusted: null
};

function functionThatReturnsTrue() {
  return true;
}

function functionThatReturnsFalse() {
  return false;
}

/**
 * Synthetic events are dispatched by event plugins, typically in response to a
 * top-level event delegation handler.
 *
 * These systems should generally use pooling to reduce the frequency of garbage
 * collection. The system should check `isPersistent` to determine whether the
 * event should be released into the pool after being dispatched. Users that
 * need a persisted event should invoke `persist`.
 *
 * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
 * normalizing browser quirks. Subclasses do not necessarily have to implement a
 * DOM interface; custom application-specific events can also subclass this.
 *
 * @param {object} dispatchConfig Configuration used to dispatch this event.
 * @param {*} targetInst Marker identifying the event target.
 * @param {object} nativeEvent Native browser event.
 * @param {DOMEventTarget} nativeEventTarget Target node.
 */
function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
  {
    // these have a getter/setter for warnings
    delete this.nativeEvent;
    delete this.preventDefault;
    delete this.stopPropagation;
    delete this.isDefaultPrevented;
    delete this.isPropagationStopped;
  }

  this.dispatchConfig = dispatchConfig;
  this._targetInst = targetInst;
  this.nativeEvent = nativeEvent;

  var Interface = this.constructor.Interface;
  for (var propName in Interface) {
    if (!Interface.hasOwnProperty(propName)) {
      continue;
    }
    {
      delete this[propName]; // this has a getter/setter for warnings
    }
    var normalize = Interface[propName];
    if (normalize) {
      this[propName] = normalize(nativeEvent);
    } else {
      if (propName === 'target') {
        this.target = nativeEventTarget;
      } else {
        this[propName] = nativeEvent[propName];
      }
    }
  }

  var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
  if (defaultPrevented) {
    this.isDefaultPrevented = functionThatReturnsTrue;
  } else {
    this.isDefaultPrevented = functionThatReturnsFalse;
  }
  this.isPropagationStopped = functionThatReturnsFalse;
  return this;
}

_assign(SyntheticEvent.prototype, {
  preventDefault: function () {
    this.defaultPrevented = true;
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.preventDefault) {
      event.preventDefault();
    } else if (typeof event.returnValue !== 'unknown') {
      event.returnValue = false;
    }
    this.isDefaultPrevented = functionThatReturnsTrue;
  },

  stopPropagation: function () {
    var event = this.nativeEvent;
    if (!event) {
      return;
    }

    if (event.stopPropagation) {
      event.stopPropagation();
    } else if (typeof event.cancelBubble !== 'unknown') {
      // The ChangeEventPlugin registers a "propertychange" event for
      // IE. This event does not support bubbling or cancelling, and
      // any references to cancelBubble throw "Member not found".  A
      // typeof check of "unknown" circumvents this issue (and is also
      // IE specific).
      event.cancelBubble = true;
    }

    this.isPropagationStopped = functionThatReturnsTrue;
  },

  /**
   * We release all dispatched `SyntheticEvent`s after each event loop, adding
   * them back into the pool. This allows a way to hold onto a reference that
   * won't be added back into the pool.
   */
  persist: function () {
    this.isPersistent = functionThatReturnsTrue;
  },

  /**
   * Checks if this event should be released back into the pool.
   *
   * @return {boolean} True if this should not be released, false otherwise.
   */
  isPersistent: functionThatReturnsFalse,

  /**
   * `PooledClass` looks for `destructor` on each instance it releases.
   */
  destructor: function () {
    var Interface = this.constructor.Interface;
    for (var propName in Interface) {
      {
        Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
      }
    }
    this.dispatchConfig = null;
    this._targetInst = null;
    this.nativeEvent = null;
    this.isDefaultPrevented = functionThatReturnsFalse;
    this.isPropagationStopped = functionThatReturnsFalse;
    this._dispatchListeners = null;
    this._dispatchInstances = null;
    {
      Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
      Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
      Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
      Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
      Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
    }
  }
});

SyntheticEvent.Interface = EventInterface;

/**
 * Helper to reduce boilerplate when creating subclasses.
 */
SyntheticEvent.extend = function (Interface) {
  var Super = this;

  var E = function () {};
  E.prototype = Super.prototype;
  var prototype = new E();

  function Class() {
    return Super.apply(this, arguments);
  }
  _assign(prototype, Class.prototype);
  Class.prototype = prototype;
  Class.prototype.constructor = Class;

  Class.Interface = _assign({}, Super.Interface, Interface);
  Class.extend = Super.extend;
  addEventPoolingTo(Class);

  return Class;
};

addEventPoolingTo(SyntheticEvent);

/**
 * Helper to nullify syntheticEvent instance properties when destructing
 *
 * @param {String} propName
 * @param {?object} getVal
 * @return {object} defineProperty object
 */
function getPooledWarningPropertyDefinition(propName, getVal) {
  var isFunction = typeof getVal === 'function';
  return {
    configurable: true,
    set: set,
    get: get
  };

  function set(val) {
    var action = isFunction ? 'setting the method' : 'setting the property';
    warn(action, 'This is effectively a no-op');
    return val;
  }

  function get() {
    var action = isFunction ? 'accessing the method' : 'accessing the property';
    var result = isFunction ? 'This is a no-op function' : 'This is set to null';
    warn(action, result);
    return getVal;
  }

  function warn(action, result) {
    var warningCondition = false;
    !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
  }
}

function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
  var EventConstructor = this;
  if (EventConstructor.eventPool.length) {
    var instance = EventConstructor.eventPool.pop();
    EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
    return instance;
  }
  return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
}

function releasePooledEvent(event) {
  var EventConstructor = this;
  !(event instanceof EventConstructor) ? invariant(false, 'Trying to release an event instance into a pool of a different type.') : void 0;
  event.destructor();
  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
    EventConstructor.eventPool.push(event);
  }
}

function addEventPoolingTo(EventConstructor) {
  EventConstructor.eventPool = [];
  EventConstructor.getPooled = getPooledEvent;
  EventConstructor.release = releasePooledEvent;
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
 */
var SyntheticCompositionEvent = SyntheticEvent.extend({
  data: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
 *      /#events-inputevents
 */
var SyntheticInputEvent = SyntheticEvent.extend({
  data: null
});

var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space
var START_KEYCODE = 229;

var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;

var documentMode = null;
if (canUseDOM && 'documentMode' in document) {
  documentMode = document.documentMode;
}

// Webkit offers a very useful `textInput` event that can be used to
// directly represent `beforeInput`. The IE `textinput` event is not as
// useful, so we don't use it.
var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode;

// In IE9+, we have access to composition events, but the data supplied
// by the native compositionend event may be incorrect. Japanese ideographic
// spaces, for instance (\u3000) are not recorded correctly.
var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);

var SPACEBAR_CODE = 32;
var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);

// Events and their corresponding property names.
var eventTypes = {
  beforeInput: {
    phasedRegistrationNames: {
      bubbled: 'onBeforeInput',
      captured: 'onBeforeInputCapture'
    },
    dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
  },
  compositionEnd: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionEnd',
      captured: 'onCompositionEndCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionStart: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionStart',
      captured: 'onCompositionStartCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  },
  compositionUpdate: {
    phasedRegistrationNames: {
      bubbled: 'onCompositionUpdate',
      captured: 'onCompositionUpdateCapture'
    },
    dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
  }
};

// Track whether we've ever handled a keypress on the space key.
var hasSpaceKeypress = false;

/**
 * Return whether a native keypress event is assumed to be a command.
 * This is required because Firefox fires `keypress` events for key commands
 * (cut, copy, select-all, etc.) even though no character is inserted.
 */
function isKeypressCommand(nativeEvent) {
  return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) &&
  // ctrlKey && altKey is equivalent to AltGr, and is not a command.
  !(nativeEvent.ctrlKey && nativeEvent.altKey);
}

/**
 * Translate native top level events into event types.
 *
 * @param {string} topLevelType
 * @return {object}
 */
function getCompositionEventType(topLevelType) {
  switch (topLevelType) {
    case TOP_COMPOSITION_START:
      return eventTypes.compositionStart;
    case TOP_COMPOSITION_END:
      return eventTypes.compositionEnd;
    case TOP_COMPOSITION_UPDATE:
      return eventTypes.compositionUpdate;
  }
}

/**
 * Does our fallback best-guess model think this event signifies that
 * composition has begun?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionStart(topLevelType, nativeEvent) {
  return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
}

/**
 * Does our fallback mode think that this event is the end of composition?
 *
 * @param {string} topLevelType
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isFallbackCompositionEnd(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_KEY_UP:
      // Command keys insert or clear IME input.
      return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
    case TOP_KEY_DOWN:
      // Expect IME keyCode on each keydown. If we get any other
      // code we must have exited earlier.
      return nativeEvent.keyCode !== START_KEYCODE;
    case TOP_KEY_PRESS:
    case TOP_MOUSE_DOWN:
    case TOP_BLUR:
      // Events are not possible without cancelling IME.
      return true;
    default:
      return false;
  }
}

/**
 * Google Input Tools provides composition data via a CustomEvent,
 * with the `data` property populated in the `detail` object. If this
 * is available on the event object, use it. If not, this is a plain
 * composition event and we have nothing special to extract.
 *
 * @param {object} nativeEvent
 * @return {?string}
 */
function getDataFromCustomEvent(nativeEvent) {
  var detail = nativeEvent.detail;
  if (typeof detail === 'object' && 'data' in detail) {
    return detail.data;
  }
  return null;
}

/**
 * Check if a composition event was triggered by Korean IME.
 * Our fallback mode does not work well with IE's Korean IME,
 * so just use native composition events when Korean IME is used.
 * Although CompositionEvent.locale property is deprecated,
 * it is available in IE, where our fallback mode is enabled.
 *
 * @param {object} nativeEvent
 * @return {boolean}
 */
function isUsingKoreanIME(nativeEvent) {
  return nativeEvent.locale === 'ko';
}

// Track the current IME composition status, if any.
var isComposing = false;

/**
 * @return {?object} A SyntheticCompositionEvent.
 */
function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var eventType = void 0;
  var fallbackData = void 0;

  if (canUseCompositionEvent) {
    eventType = getCompositionEventType(topLevelType);
  } else if (!isComposing) {
    if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
      eventType = eventTypes.compositionStart;
    }
  } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
    eventType = eventTypes.compositionEnd;
  }

  if (!eventType) {
    return null;
  }

  if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
    // The current composition is stored statically and must not be
    // overwritten while composition continues.
    if (!isComposing && eventType === eventTypes.compositionStart) {
      isComposing = initialize(nativeEventTarget);
    } else if (eventType === eventTypes.compositionEnd) {
      if (isComposing) {
        fallbackData = getData();
      }
    }
  }

  var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

  if (fallbackData) {
    // Inject data generated from fallback path into the synthetic event.
    // This matches the property of native CompositionEventInterface.
    event.data = fallbackData;
  } else {
    var customData = getDataFromCustomEvent(nativeEvent);
    if (customData !== null) {
      event.data = customData;
    }
  }

  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * @param {TopLevelType} topLevelType Number from `TopLevelType`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The string corresponding to this `beforeInput` event.
 */
function getNativeBeforeInputChars(topLevelType, nativeEvent) {
  switch (topLevelType) {
    case TOP_COMPOSITION_END:
      return getDataFromCustomEvent(nativeEvent);
    case TOP_KEY_PRESS:
      /**
       * If native `textInput` events are available, our goal is to make
       * use of them. However, there is a special case: the spacebar key.
       * In Webkit, preventing default on a spacebar `textInput` event
       * cancels character insertion, but it *also* causes the browser
       * to fall back to its default spacebar behavior of scrolling the
       * page.
       *
       * Tracking at:
       * https://code.google.com/p/chromium/issues/detail?id=355103
       *
       * To avoid this issue, use the keypress event as if no `textInput`
       * event is available.
       */
      var which = nativeEvent.which;
      if (which !== SPACEBAR_CODE) {
        return null;
      }

      hasSpaceKeypress = true;
      return SPACEBAR_CHAR;

    case TOP_TEXT_INPUT:
      // Record the characters to be added to the DOM.
      var chars = nativeEvent.data;

      // If it's a spacebar character, assume that we have already handled
      // it at the keypress level and bail immediately. Android Chrome
      // doesn't give us keycodes, so we need to ignore it.
      if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
        return null;
      }

      return chars;

    default:
      // For other native event types, do nothing.
      return null;
  }
}

/**
 * For browsers that do not provide the `textInput` event, extract the
 * appropriate string to use for SyntheticInputEvent.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} nativeEvent Native browser event.
 * @return {?string} The fallback string for this `beforeInput` event.
 */
function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
  // If we are currently composing (IME) and using a fallback to do so,
  // try to extract the composed characters from the fallback object.
  // If composition event is available, we extract a string only at
  // compositionevent, otherwise extract it at fallback events.
  if (isComposing) {
    if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
      var chars = getData();
      reset();
      isComposing = false;
      return chars;
    }
    return null;
  }

  switch (topLevelType) {
    case TOP_PASTE:
      // If a paste event occurs after a keypress, throw out the input
      // chars. Paste events should not lead to BeforeInput events.
      return null;
    case TOP_KEY_PRESS:
      /**
       * As of v27, Firefox may fire keypress events even when no character
       * will be inserted. A few possibilities:
       *
       * - `which` is `0`. Arrow keys, Esc key, etc.
       *
       * - `which` is the pressed key code, but no char is available.
       *   Ex: 'AltGr + d` in Polish. There is no modified character for
       *   this key combination and no character is inserted into the
       *   document, but FF fires the keypress for char code `100` anyway.
       *   No `input` event will occur.
       *
       * - `which` is the pressed key code, but a command combination is
       *   being used. Ex: `Cmd+C`. No character is inserted, and no
       *   `input` event will occur.
       */
      if (!isKeypressCommand(nativeEvent)) {
        // IE fires the `keypress` event when a user types an emoji via
        // Touch keyboard of Windows.  In such a case, the `char` property
        // holds an emoji character like `\uD83D\uDE0A`.  Because its length
        // is 2, the property `which` does not represent an emoji correctly.
        // In such a case, we directly return the `char` property instead of
        // using `which`.
        if (nativeEvent.char && nativeEvent.char.length > 1) {
          return nativeEvent.char;
        } else if (nativeEvent.which) {
          return String.fromCharCode(nativeEvent.which);
        }
      }
      return null;
    case TOP_COMPOSITION_END:
      return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
    default:
      return null;
  }
}

/**
 * Extract a SyntheticInputEvent for `beforeInput`, based on either native
 * `textInput` or fallback behavior.
 *
 * @return {?object} A SyntheticInputEvent.
 */
function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
  var chars = void 0;

  if (canUseTextInputEvent) {
    chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
  } else {
    chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
  }

  // If no characters are being inserted, no BeforeInput event should
  // be fired.
  if (!chars) {
    return null;
  }

  var event = SyntheticInputEvent.getPooled(eventTypes.beforeInput, targetInst, nativeEvent, nativeEventTarget);

  event.data = chars;
  accumulateTwoPhaseDispatches(event);
  return event;
}

/**
 * Create an `onBeforeInput` event to match
 * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
 *
 * This event plugin is based on the native `textInput` event
 * available in Chrome, Safari, Opera, and IE. This event fires after
 * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
 *
 * `beforeInput` is spec'd but not implemented in any browsers, and
 * the `input` event does not provide any useful information about what has
 * actually been added, contrary to the spec. Thus, `textInput` is the best
 * available event to identify the characters that have actually been inserted
 * into the target node.
 *
 * This plugin is also responsible for emitting `composition` events, thus
 * allowing us to share composition fallback code for both `beforeInput` and
 * `composition` event types.
 */
var BeforeInputEventPlugin = {
  eventTypes: eventTypes,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

    if (composition === null) {
      return beforeInput;
    }

    if (beforeInput === null) {
      return composition;
    }

    return [composition, beforeInput];
  }
};

// Use to restore controlled state after a change event has fired.

var restoreImpl = null;
var restoreTarget = null;
var restoreQueue = null;

function restoreStateOfTarget(target) {
  // We perform this translation at the end of the event loop so that we
  // always receive the correct fiber here
  var internalInstance = getInstanceFromNode(target);
  if (!internalInstance) {
    // Unmounted
    return;
  }
  !(typeof restoreImpl === 'function') ? invariant(false, 'setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
  restoreImpl(internalInstance.stateNode, internalInstance.type, props);
}

function setRestoreImplementation(impl) {
  restoreImpl = impl;
}

function enqueueStateRestore(target) {
  if (restoreTarget) {
    if (restoreQueue) {
      restoreQueue.push(target);
    } else {
      restoreQueue = [target];
    }
  } else {
    restoreTarget = target;
  }
}

function needsStateRestore() {
  return restoreTarget !== null || restoreQueue !== null;
}

function restoreStateIfNeeded() {
  if (!restoreTarget) {
    return;
  }
  var target = restoreTarget;
  var queuedTargets = restoreQueue;
  restoreTarget = null;
  restoreQueue = null;

  restoreStateOfTarget(target);
  if (queuedTargets) {
    for (var i = 0; i < queuedTargets.length; i++) {
      restoreStateOfTarget(queuedTargets[i]);
    }
  }
}

// Used as a way to call batchedUpdates when we don't have a reference to
// the renderer. Such as when we're dispatching events or if third party
// libraries need to call batchedUpdates. Eventually, this API will go away when
// everything is batched by default. We'll then have a similar API to opt-out of
// scheduled work and instead do synchronous work.

// Defaults
var _batchedUpdatesImpl = function (fn, bookkeeping) {
  return fn(bookkeeping);
};
var _interactiveUpdatesImpl = function (fn, a, b) {
  return fn(a, b);
};
var _flushInteractiveUpdatesImpl = function () {};

var isBatching = false;
function batchedUpdates(fn, bookkeeping) {
  if (isBatching) {
    // If we are currently inside another batch, we need to wait until it
    // fully completes before restoring state.
    return fn(bookkeeping);
  }
  isBatching = true;
  try {
    return _batchedUpdatesImpl(fn, bookkeeping);
  } finally {
    // Here we wait until all updates have propagated, which is important
    // when using controlled components within layers:
    // https://github.com/facebook/react/issues/1698
    // Then we restore state of any controlled component.
    isBatching = false;
    var controlledComponentsHavePendingUpdates = needsStateRestore();
    if (controlledComponentsHavePendingUpdates) {
      // If a controlled event was fired, we may need to restore the state of
      // the DOM node back to the controlled value. This is necessary when React
      // bails out of the update without touching the DOM.
      _flushInteractiveUpdatesImpl();
      restoreStateIfNeeded();
    }
  }
}

function interactiveUpdates(fn, a, b) {
  return _interactiveUpdatesImpl(fn, a, b);
}



function setBatchingImplementation(batchedUpdatesImpl, interactiveUpdatesImpl, flushInteractiveUpdatesImpl) {
  _batchedUpdatesImpl = batchedUpdatesImpl;
  _interactiveUpdatesImpl = interactiveUpdatesImpl;
  _flushInteractiveUpdatesImpl = flushInteractiveUpdatesImpl;
}

/**
 * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
 */
var supportedInputTypes = {
  color: true,
  date: true,
  datetime: true,
  'datetime-local': true,
  email: true,
  month: true,
  number: true,
  password: true,
  range: true,
  search: true,
  tel: true,
  text: true,
  time: true,
  url: true,
  week: true
};

function isTextInputElement(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

  if (nodeName === 'input') {
    return !!supportedInputTypes[elem.type];
  }

  if (nodeName === 'textarea') {
    return true;
  }

  return false;
}

/**
 * HTML nodeType values that represent the type of the node
 */

var ELEMENT_NODE = 1;
var TEXT_NODE = 3;
var COMMENT_NODE = 8;
var DOCUMENT_NODE = 9;
var DOCUMENT_FRAGMENT_NODE = 11;

/**
 * Gets the target node from a native browser event by accounting for
 * inconsistencies in browser DOM APIs.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {DOMEventTarget} Target node.
 */
function getEventTarget(nativeEvent) {
  // Fallback to nativeEvent.srcElement for IE9
  // https://github.com/facebook/react/issues/12506
  var target = nativeEvent.target || nativeEvent.srcElement || window;

  // Normalize SVG <use> element events #4963
  if (target.correspondingUseElement) {
    target = target.correspondingUseElement;
  }

  // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
  // @see http://www.quirksmode.org/js/events_properties.html
  return target.nodeType === TEXT_NODE ? target.parentNode : target;
}

/**
 * Checks if an event is supported in the current execution environment.
 *
 * NOTE: This will not work correctly for non-generic events such as `change`,
 * `reset`, `load`, `error`, and `select`.
 *
 * Borrows from Modernizr.
 *
 * @param {string} eventNameSuffix Event name, e.g. "click".
 * @return {boolean} True if the event is supported.
 * @internal
 * @license Modernizr 3.0.0pre (Custom Build) | MIT
 */
function isEventSupported(eventNameSuffix) {
  if (!canUseDOM) {
    return false;
  }

  var eventName = 'on' + eventNameSuffix;
  var isSupported = eventName in document;

  if (!isSupported) {
    var element = document.createElement('div');
    element.setAttribute(eventName, 'return;');
    isSupported = typeof element[eventName] === 'function';
  }

  return isSupported;
}

function isCheckable(elem) {
  var type = elem.type;
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
}

function getTracker(node) {
  return node._valueTracker;
}

function detachTracker(node) {
  node._valueTracker = null;
}

function getValueFromNode(node) {
  var value = '';
  if (!node) {
    return value;
  }

  if (isCheckable(node)) {
    value = node.checked ? 'true' : 'false';
  } else {
    value = node.value;
  }

  return value;
}

function trackValueOnNode(node) {
  var valueField = isCheckable(node) ? 'checked' : 'value';
  var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);

  var currentValue = '' + node[valueField];

  // if someone has already defined a value or Safari, then bail
  // and don't track value will cause over reporting of changes,
  // but it's better then a hard failure
  // (needed for certain tests that spyOn input values and Safari)
  if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
    return;
  }
  var get = descriptor.get,
      set = descriptor.set;

  Object.defineProperty(node, valueField, {
    configurable: true,
    get: function () {
      return get.call(this);
    },
    set: function (value) {
      currentValue = '' + value;
      set.call(this, value);
    }
  });
  // We could've passed this the first time
  // but it triggers a bug in IE11 and Edge 14/15.
  // Calling defineProperty() again should be equivalent.
  // https://github.com/facebook/react/issues/11768
  Object.defineProperty(node, valueField, {
    enumerable: descriptor.enumerable
  });

  var tracker = {
    getValue: function () {
      return currentValue;
    },
    setValue: function (value) {
      currentValue = '' + value;
    },
    stopTracking: function () {
      detachTracker(node);
      delete node[valueField];
    }
  };
  return tracker;
}

function track(node) {
  if (getTracker(node)) {
    return;
  }

  // TODO: Once it's just Fiber we can move this to node._wrapperState
  node._valueTracker = trackValueOnNode(node);
}

function updateValueIfChanged(node) {
  if (!node) {
    return false;
  }

  var tracker = getTracker(node);
  // if there is no tracker at this point it's unlikely
  // that trying again will succeed
  if (!tracker) {
    return true;
  }

  var lastValue = tracker.getValue();
  var nextValue = getValueFromNode(node);
  if (nextValue !== lastValue) {
    tracker.setValue(nextValue);
    return true;
  }
  return false;
}

var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;

// Prevent newer renderers from RTE when used with older react package versions.
// Current owner and dispatcher used to share the same ref,
// but PR #14548 split them out to better support the react-debug-tools package.
if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
  ReactSharedInternals.ReactCurrentDispatcher = {
    current: null
  };
}

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';
  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');
    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);
        if (match) {
          var pathBeforeSlash = match[1];
          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }
    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }
  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;

var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

var Pending = 0;
var Resolved = 1;
var Rejected = 2;

function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }
  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }
  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_CONCURRENT_MODE_TYPE:
      return 'ConcurrentMode';
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';
    case REACT_PORTAL_TYPE:
      return 'Portal';
    case REACT_PROFILER_TYPE:
      return 'Profiler';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_SUSPENSE_TYPE:
      return 'Suspense';
  }
  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';
      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';
      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');
      case REACT_MEMO_TYPE:
        return getComponentName(type.type);
      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);
          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }
        }
    }
  }
  return null;
}

var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

function describeFiber(fiber) {
  switch (fiber.tag) {
    case HostRoot:
    case HostPortal:
    case HostText:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
      return '';
    default:
      var owner = fiber._debugOwner;
      var source = fiber._debugSource;
      var name = getComponentName(fiber.type);
      var ownerName = null;
      if (owner) {
        ownerName = getComponentName(owner.type);
      }
      return describeComponentFrame(name, source, ownerName);
  }
}

function getStackByFiberInDevAndProd(workInProgress) {
  var info = '';
  var node = workInProgress;
  do {
    info += describeFiber(node);
    node = node.return;
  } while (node);
  return info;
}

var current = null;
var phase = null;

function getCurrentFiberOwnerNameInDevOrNull() {
  {
    if (current === null) {
      return null;
    }
    var owner = current._debugOwner;
    if (owner !== null && typeof owner !== 'undefined') {
      return getComponentName(owner.type);
    }
  }
  return null;
}

function getCurrentFiberStackInDev() {
  {
    if (current === null) {
      return '';
    }
    // Safe because if current fiber exists, we are reconciling,
    // and it is guaranteed to be the work-in-progress version.
    return getStackByFiberInDevAndProd(current);
  }
  return '';
}

function resetCurrentFiber() {
  {
    ReactDebugCurrentFrame.getCurrentStack = null;
    current = null;
    phase = null;
  }
}

function setCurrentFiber(fiber) {
  {
    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
    current = fiber;
    phase = null;
  }
}

function setCurrentPhase(lifeCyclePhase) {
  {
    phase = lifeCyclePhase;
  }
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();
    // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

// A reserved attribute.
// It is handled by React separately and shouldn't be written to the DOM.
var RESERVED = 0;

// A simple string attribute.
// Attributes that aren't in the whitelist are presumed to have this type.
var STRING = 1;

// A string attribute that accepts booleans in React. In HTML, these are called
// "enumerated" attributes with "true" and "false" as possible values.
// When true, it should be set to a "true" string.
// When false, it should be set to a "false" string.
var BOOLEANISH_STRING = 2;

// A real boolean attribute.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
var BOOLEAN = 3;

// An attribute that can be used as a flag as well as with a value.
// When true, it should be present (set either to an empty string or its name).
// When false, it should be omitted.
// For any other value, should be present with that value.
var OVERLOADED_BOOLEAN = 4;

// An attribute that must be numeric or parse as a numeric.
// When falsy, it should be removed.
var NUMERIC = 5;

// An attribute that must be positive numeric or parse as a positive numeric.
// When falsy, it should be removed.
var POSITIVE_NUMERIC = 6;

/* eslint-disable max-len */
var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD';
/* eslint-enable max-len */
var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040';


var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty = Object.prototype.hasOwnProperty;
var illegalAttributeNameCache = {};
var validatedAttributeNameCache = {};

function isAttributeNameSafe(attributeName) {
  if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
    return true;
  }
  if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
    return false;
  }
  if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
    validatedAttributeNameCache[attributeName] = true;
    return true;
  }
  illegalAttributeNameCache[attributeName] = true;
  {
    warning$1(false, 'Invalid attribute name: `%s`', attributeName);
  }
  return false;
}

function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null) {
    return propertyInfo.type === RESERVED;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
    return true;
  }
  return false;
}

function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
  if (propertyInfo !== null && propertyInfo.type === RESERVED) {
    return false;
  }
  switch (typeof value) {
    case 'function':
    // $FlowIssue symbol is perfectly valid here
    case 'symbol':
      // eslint-disable-line
      return true;
    case 'boolean':
      {
        if (isCustomComponentTag) {
          return false;
        }
        if (propertyInfo !== null) {
          return !propertyInfo.acceptsBooleans;
        } else {
          var prefix = name.toLowerCase().slice(0, 5);
          return prefix !== 'data-' && prefix !== 'aria-';
        }
      }
    default:
      return false;
  }
}

function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
  if (value === null || typeof value === 'undefined') {
    return true;
  }
  if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
    return true;
  }
  if (isCustomComponentTag) {
    return false;
  }
  if (propertyInfo !== null) {
    switch (propertyInfo.type) {
      case BOOLEAN:
        return !value;
      case OVERLOADED_BOOLEAN:
        return value === false;
      case NUMERIC:
        return isNaN(value);
      case POSITIVE_NUMERIC:
        return isNaN(value) || value < 1;
    }
  }
  return false;
}

function getPropertyInfo(name) {
  return properties.hasOwnProperty(name) ? properties[name] : null;
}

function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace) {
  this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
  this.attributeName = attributeName;
  this.attributeNamespace = attributeNamespace;
  this.mustUseProperty = mustUseProperty;
  this.propertyName = name;
  this.type = type;
}

// When adding attributes to this list, be sure to also add them to
// the `possibleStandardNames` module to ensure casing and incorrect
// name warnings.
var properties = {};

// These props are reserved by React. They shouldn't be written to the DOM.
['children', 'dangerouslySetInnerHTML',
// TODO: This prevents the assignment of defaultValue to regular
// elements (not just inputs). Now that ReactDOMInput assigns to the
// defaultValue property -- do we need this?
'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// A few React string attributes have a different name.
// This is a mapping from React prop names to the attribute names.
[['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
  var name = _ref[0],
      attributeName = _ref[1];

  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" HTML attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are "enumerated" SVG attributes that accept "true" and "false".
// In React, we let users pass `true` and `false` even though technically
// these aren't boolean attributes (they are coerced to strings).
// Since these are SVG attributes, their attribute names are case-sensitive.
['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML boolean attributes.
['allowFullScreen', 'async',
// Note: there is a special case that prevents it from being written to the DOM
// on the client side because the browsers are inconsistent. Instead we call focus().
'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless',
// Microdata
'itemScope'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

// These are the few React props that we set as DOM properties
// rather than attributes. These are all booleans.
['checked',
// Note: `option.selected` is not updated if `select.multiple` is
// disabled with `removeAttribute`. We have special logic for handling this.
'multiple', 'muted', 'selected'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that are "overloaded booleans": they behave like
// booleans, but can also accept a string value.
['capture', 'download'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be positive numbers.
['cols', 'rows', 'size', 'span'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
  name, // attributeName
  null);
} // attributeNamespace
);

// These are HTML attributes that must be numbers.
['rowSpan', 'start'].forEach(function (name) {
  properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
  name.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

var CAMELIZE = /[\-\:]([a-z])/g;
var capitalize = function (token) {
  return token[1].toUpperCase();
};

// This is a list of all SVG attributes that need special casing, namespacing,
// or boolean value assignment. Regular attributes that just accept strings
// and have the same names are omitted, just like in the HTML whitelist.
// Some of these attributes can be hard to find. This list was created by
// scrapping the MDN documentation.
['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, null);
} // attributeNamespace
);

// String SVG attributes with the xlink namespace.
['xlink:actuate', 'xlink:arcrole', 'xlink:href', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/1999/xlink');
});

// String SVG attributes with the xml namespace.
['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
  var name = attributeName.replace(CAMELIZE, capitalize);
  properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
  attributeName, 'http://www.w3.org/XML/1998/namespace');
});

// These attribute exists both in HTML and SVG.
// The attribute name is case-sensitive in SVG so we can't just use
// the React name like we do for attributes that exist only in HTML.
['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
  properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
  attributeName.toLowerCase(), // attributeName
  null);
} // attributeNamespace
);

/**
 * Get the value for a property on a node. Only used in DEV for SSR validation.
 * The "expected" argument is used as a hint of what the expected value is.
 * Some properties have multiple equivalent values.
 */
function getValueForProperty(node, name, expected, propertyInfo) {
  {
    if (propertyInfo.mustUseProperty) {
      var propertyName = propertyInfo.propertyName;

      return node[propertyName];
    } else {
      var attributeName = propertyInfo.attributeName;

      var stringValue = null;

      if (propertyInfo.type === OVERLOADED_BOOLEAN) {
        if (node.hasAttribute(attributeName)) {
          var value = node.getAttribute(attributeName);
          if (value === '') {
            return true;
          }
          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return value;
          }
          if (value === '' + expected) {
            return expected;
          }
          return value;
        }
      } else if (node.hasAttribute(attributeName)) {
        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
          // We had an attribute but shouldn't have had one, so read it
          // for the error message.
          return node.getAttribute(attributeName);
        }
        if (propertyInfo.type === BOOLEAN) {
          // If this was a boolean, it doesn't matter what the value is
          // the fact that we have it is the same as the expected.
          return expected;
        }
        // Even if this property uses a namespace we use getAttribute
        // because we assume its namespaced name is the same as our config.
        // To use getAttributeNS we need the local name which we don't have
        // in our config atm.
        stringValue = node.getAttribute(attributeName);
      }

      if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
        return stringValue === null ? expected : stringValue;
      } else if (stringValue === '' + expected) {
        return expected;
      } else {
        return stringValue;
      }
    }
  }
}

/**
 * Get the value for a attribute on a node. Only used in DEV for SSR validation.
 * The third argument is used as a hint of what the expected value is. Some
 * attributes have multiple equivalent values.
 */
function getValueForAttribute(node, name, expected) {
  {
    if (!isAttributeNameSafe(name)) {
      return;
    }
    if (!node.hasAttribute(name)) {
      return expected === undefined ? undefined : null;
    }
    var value = node.getAttribute(name);
    if (value === '' + expected) {
      return expected;
    }
    return value;
  }
}

/**
 * Sets the value for a property on a node.
 *
 * @param {DOMElement} node
 * @param {string} name
 * @param {*} value
 */
function setValueForProperty(node, name, value, isCustomComponentTag) {
  var propertyInfo = getPropertyInfo(name);
  if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
    return;
  }
  if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
    value = null;
  }
  // If the prop isn't in the special list, treat it as a simple attribute.
  if (isCustomComponentTag || propertyInfo === null) {
    if (isAttributeNameSafe(name)) {
      var _attributeName = name;
      if (value === null) {
        node.removeAttribute(_attributeName);
      } else {
        node.setAttribute(_attributeName, '' + value);
      }
    }
    return;
  }
  var mustUseProperty = propertyInfo.mustUseProperty;

  if (mustUseProperty) {
    var propertyName = propertyInfo.propertyName;

    if (value === null) {
      var type = propertyInfo.type;

      node[propertyName] = type === BOOLEAN ? false : '';
    } else {
      // Contrary to `setAttribute`, object properties are properly
      // `toString`ed by IE8/9.
      node[propertyName] = value;
    }
    return;
  }
  // The rest are treated as attributes with special cases.
  var attributeName = propertyInfo.attributeName,
      attributeNamespace = propertyInfo.attributeNamespace;

  if (value === null) {
    node.removeAttribute(attributeName);
  } else {
    var _type = propertyInfo.type;

    var attributeValue = void 0;
    if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
      attributeValue = '';
    } else {
      // `setAttribute` with objects becomes only `[object]` in IE8/9,
      // ('' + value) makes it output the correct toString()-value.
      attributeValue = '' + value;
    }
    if (attributeNamespace) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    } else {
      node.setAttribute(attributeName, attributeValue);
    }
  }
}

// Flow does not allow string concatenation of most non-string types. To work
// around this limitation, we use an opaque type that can only be obtained by
// passing the value through getToStringValue first.
function toString(value) {
  return '' + value;
}

function getToStringValue(value) {
  switch (typeof value) {
    case 'boolean':
    case 'number':
    case 'object':
    case 'string':
    case 'undefined':
      return value;
    default:
      // function, symbol are assigned as empty strings
      return '';
  }
}

var ReactDebugCurrentFrame$1 = null;

var ReactControlledValuePropTypes = {
  checkPropTypes: null
};

{
  ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;

  var hasReadOnlyValue = {
    button: true,
    checkbox: true,
    image: true,
    hidden: true,
    radio: true,
    reset: true,
    submit: true
  };

  var propTypes = {
    value: function (props, propName, componentName) {
      if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null) {
        return null;
      }
      return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    },
    checked: function (props, propName, componentName) {
      if (props.onChange || props.readOnly || props.disabled || props[propName] == null) {
        return null;
      }
      return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
    }
  };

  /**
   * Provide a linked `value` attribute for controlled forms. You should not use
   * this outside of the ReactDOM controlled form components.
   */
  ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
    checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$1.getStackAddendum);
  };
}

var enableUserTimingAPI = true;

// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:
var debugRenderPhaseSideEffects = false;

// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:
var debugRenderPhaseSideEffectsForStrictMode = true;

// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.
var replayFailedUnitOfWorkWithInvokeGuardedCallback = true;

// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
var warnAboutDeprecatedLifecycles = false;

// Gather advanced timing metrics for Profiler subtrees.
var enableProfilerTimer = true;

// Trace which interactions trigger each commit.
var enableSchedulerTracing = true;

// Only used in www builds.
var enableSuspenseServerRenderer = false; // TODO: true? Here it might just be false.

// Only used in www builds.


// Only used in www builds.


// React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties
var disableInputAttributeSyncing = false;

// These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
var enableStableConcurrentModeAPIs = false;

var warnAboutShorthandPropertyCollision = false;

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue = false;
var didWarnCheckedDefaultChecked = false;
var didWarnControlledToUncontrolled = false;
var didWarnUncontrolledToControlled = false;

function isControlled(props) {
  var usesChecked = props.type === 'checkbox' || props.type === 'radio';
  return usesChecked ? props.checked != null : props.value != null;
}

/**
 * Implements an <input> host component that allows setting these optional
 * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
 *
 * If `checked` or `value` are not supplied (or null/undefined), user actions
 * that affect the checked state or value will trigger updates to the element.
 *
 * If they are supplied (and not null/undefined), the rendered element will not
 * trigger updates to the element. Instead, the props must change in order for
 * the rendered element to be updated.
 *
 * The rendered element will be initialized as unchecked (or `defaultChecked`)
 * with an empty value (or `defaultValue`).
 *
 * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
 */

function getHostProps(element, props) {
  var node = element;
  var checked = props.checked;

  var hostProps = _assign({}, props, {
    defaultChecked: undefined,
    defaultValue: undefined,
    value: undefined,
    checked: checked != null ? checked : node._wrapperState.initialChecked
  });

  return hostProps;
}

function initWrapperState(element, props) {
  {
    ReactControlledValuePropTypes.checkPropTypes('input', props);

    if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
      warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnCheckedDefaultChecked = true;
    }
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
      warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
      didWarnValueDefaultValue = true;
    }
  }

  var node = element;
  var defaultValue = props.defaultValue == null ? '' : props.defaultValue;

  node._wrapperState = {
    initialChecked: props.checked != null ? props.checked : props.defaultChecked,
    initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
    controlled: isControlled(props)
  };
}

function updateChecked(element, props) {
  var node = element;
  var checked = props.checked;
  if (checked != null) {
    setValueForProperty(node, 'checked', checked, false);
  }
}

function updateWrapper(element, props) {
  var node = element;
  {
    var _controlled = isControlled(props);

    if (!node._wrapperState.controlled && _controlled && !didWarnUncontrolledToControlled) {
      warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnUncontrolledToControlled = true;
    }
    if (node._wrapperState.controlled && !_controlled && !didWarnControlledToUncontrolled) {
      warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
      didWarnControlledToUncontrolled = true;
    }
  }

  updateChecked(element, props);

  var value = getToStringValue(props.value);
  var type = props.type;

  if (value != null) {
    if (type === 'number') {
      if (value === 0 && node.value === '' ||
      // We explicitly want to coerce to number here if possible.
      // eslint-disable-next-line
      node.value != value) {
        node.value = toString(value);
      }
    } else if (node.value !== toString(value)) {
      node.value = toString(value);
    }
  } else if (type === 'submit' || type === 'reset') {
    // Submit/reset inputs need the attribute removed completely to avoid
    // blank-text buttons.
    node.removeAttribute('value');
    return;
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the value attribute, React only assigns a new value
    // whenever the defaultValue React prop has changed. When not present,
    // React does nothing
    if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  } else {
    // When syncing the value attribute, the value comes from a cascade of
    // properties:
    //  1. The value React property
    //  2. The defaultValue React property
    //  3. Otherwise there should be no change
    if (props.hasOwnProperty('value')) {
      setDefaultValue(node, props.type, value);
    } else if (props.hasOwnProperty('defaultValue')) {
      setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
    }
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the attribute is directly
    // controllable from the defaultValue React property. It needs to be
    // updated as new props come in.
    if (props.defaultChecked == null) {
      node.removeAttribute('checked');
    } else {
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, it only changes when it needs
    // to be removed, such as transitioning from a checkbox into a text input
    if (props.checked == null && props.defaultChecked != null) {
      node.defaultChecked = !!props.defaultChecked;
    }
  }
}

function postMountWrapper(element, props, isHydrating) {
  var node = element;

  // Do not assign value if it is already set. This prevents user text input
  // from being lost during SSR hydration.
  if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
    var type = props.type;
    var isButton = type === 'submit' || type === 'reset';

    // Avoid setting value attribute on submit/reset inputs as it overrides the
    // default value provided by the browser. See: #12872
    if (isButton && (props.value === undefined || props.value === null)) {
      return;
    }

    var _initialValue = toString(node._wrapperState.initialValue);

    // Do not assign value if it is already set. This prevents user text input
    // from being lost during SSR hydration.
    if (!isHydrating) {
      if (disableInputAttributeSyncing) {
        var value = getToStringValue(props.value);

        // When not syncing the value attribute, the value property points
        // directly to the React prop. Only assign it if it exists.
        if (value != null) {
          // Always assign on buttons so that it is possible to assign an
          // empty string to clear button text.
          //
          // Otherwise, do not re-assign the value property if is empty. This
          // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
          // prematurely marking required inputs as invalid. Equality is compared
          // to the current value in case the browser provided value is not an
          // empty string.
          if (isButton || value !== node.value) {
            node.value = toString(value);
          }
        }
      } else {
        // When syncing the value attribute, the value property should use
        // the wrapperState._initialValue property. This uses:
        //
        //   1. The value React property when present
        //   2. The defaultValue React property when present
        //   3. An empty string
        if (_initialValue !== node.value) {
          node.value = _initialValue;
        }
      }
    }

    if (disableInputAttributeSyncing) {
      // When not syncing the value attribute, assign the value attribute
      // directly from the defaultValue React property (when present)
      var defaultValue = getToStringValue(props.defaultValue);
      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    } else {
      // Otherwise, the value attribute is synchronized to the property,
      // so we assign defaultValue to the same thing as the value property
      // assignment step above.
      node.defaultValue = _initialValue;
    }
  }

  // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
  // this is needed to work around a chrome bug where setting defaultChecked
  // will sometimes influence the value of checked (even after detachment).
  // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
  // We need to temporarily unset name to avoid disrupting radio button groups.
  var name = node.name;
  if (name !== '') {
    node.name = '';
  }

  if (disableInputAttributeSyncing) {
    // When not syncing the checked attribute, the checked property
    // never gets assigned. It must be manually set. We don't want
    // to do this when hydrating so that existing user input isn't
    // modified
    if (!isHydrating) {
      updateChecked(element, props);
    }

    // Only assign the checked attribute if it is defined. This saves
    // a DOM write when controlling the checked attribute isn't needed
    // (text inputs, submit/reset)
    if (props.hasOwnProperty('defaultChecked')) {
      node.defaultChecked = !node.defaultChecked;
      node.defaultChecked = !!props.defaultChecked;
    }
  } else {
    // When syncing the checked attribute, both the checked property and
    // attribute are assigned at the same time using defaultChecked. This uses:
    //
    //   1. The checked React property when present
    //   2. The defaultChecked React property when present
    //   3. Otherwise, false
    node.defaultChecked = !node.defaultChecked;
    node.defaultChecked = !!node._wrapperState.initialChecked;
  }

  if (name !== '') {
    node.name = name;
  }
}

function restoreControlledState(element, props) {
  var node = element;
  updateWrapper(node, props);
  updateNamedCousins(node, props);
}

function updateNamedCousins(rootNode, props) {
  var name = props.name;
  if (props.type === 'radio' && name != null) {
    var queryRoot = rootNode;

    while (queryRoot.parentNode) {
      queryRoot = queryRoot.parentNode;
    }

    // If `rootNode.form` was non-null, then we could try `form.elements`,
    // but that sometimes behaves strangely in IE8. We could also try using
    // `form.getElementsByName`, but that will only return direct children
    // and won't include inputs that use the HTML5 `form=` attribute. Since
    // the input might not even be in a form. It might not even be in the
    // document. Let's just use the local `querySelectorAll` to ensure we don't
    // miss anything.
    var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

    for (var i = 0; i < group.length; i++) {
      var otherNode = group[i];
      if (otherNode === rootNode || otherNode.form !== rootNode.form) {
        continue;
      }
      // This will throw if radio buttons rendered by different copies of React
      // and the same name are rendered into the same form (same as #1939).
      // That's probably okay; we don't support it just as we don't support
      // mixing React radio buttons with non-React ones.
      var otherProps = getFiberCurrentPropsFromNode$1(otherNode);
      !otherProps ? invariant(false, 'ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.') : void 0;

      // We need update the tracked value on the named cousin since the value
      // was changed but the input saw no event or value set
      updateValueIfChanged(otherNode);

      // If this is a controlled radio button group, forcing the input that
      // was previously checked to update will cause it to be come re-checked
      // as appropriate.
      updateWrapper(otherNode, otherProps);
    }
  }
}

// In Chrome, assigning defaultValue to certain input types triggers input validation.
// For number inputs, the display value loses trailing decimal points. For email inputs,
// Chrome raises "The specified value <x> is not a valid email address".
//
// Here we check to see if the defaultValue has actually changed, avoiding these problems
// when the user is inputting text
//
// https://github.com/facebook/react/issues/7253
function setDefaultValue(node, type, value) {
  if (
  // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
  type !== 'number' || node.ownerDocument.activeElement !== node) {
    if (value == null) {
      node.defaultValue = toString(node._wrapperState.initialValue);
    } else if (node.defaultValue !== toString(value)) {
      node.defaultValue = toString(value);
    }
  }
}

var eventTypes$1 = {
  change: {
    phasedRegistrationNames: {
      bubbled: 'onChange',
      captured: 'onChangeCapture'
    },
    dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
  }
};

function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
  var event = SyntheticEvent.getPooled(eventTypes$1.change, inst, nativeEvent, target);
  event.type = 'change';
  // Flag this event loop as needing state restore.
  enqueueStateRestore(target);
  accumulateTwoPhaseDispatches(event);
  return event;
}
/**
 * For IE shims
 */
var activeElement = null;
var activeElementInst = null;

/**
 * SECTION: handle `change` event
 */
function shouldUseChangeEvent(elem) {
  var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
}

function manualDispatchChangeEvent(nativeEvent) {
  var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent));

  // If change and propertychange bubbled, we'd just bind to it like all the
  // other events and have it go through ReactBrowserEventEmitter. Since it
  // doesn't, we manually listen for the events and so we have to enqueue and
  // process the abstract event manually.
  //
  // Batching is necessary here in order to ensure that all event handlers run
  // before the next rerender (including event handlers attached to ancestor
  // elements instead of directly on the input). Without this, controlled
  // components don't work properly in conjunction with event bubbling because
  // the component is rerendered and the value reverted before all the event
  // handlers can run. See https://github.com/facebook/react/issues/708.
  batchedUpdates(runEventInBatch, event);
}

function runEventInBatch(event) {
  runEventsInBatch(event);
}

function getInstIfValueChanged(targetInst) {
  var targetNode = getNodeFromInstance$1(targetInst);
  if (updateValueIfChanged(targetNode)) {
    return targetInst;
  }
}

function getTargetInstForChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CHANGE) {
    return targetInst;
  }
}

/**
 * SECTION: handle `input` event
 */
var isInputEventSupported = false;
if (canUseDOM) {
  // IE9 claims to support the input event but fails to trigger it when
  // deleting text, so we ignore its input events.
  isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
}

/**
 * (For IE <=9) Starts tracking propertychange events on the passed-in element
 * and override the value property so that we can distinguish user events from
 * value changes in JS.
 */
function startWatchingForValueChange(target, targetInst) {
  activeElement = target;
  activeElementInst = targetInst;
  activeElement.attachEvent('onpropertychange', handlePropertyChange);
}

/**
 * (For IE <=9) Removes the event listeners from the currently-tracked element,
 * if any exists.
 */
function stopWatchingForValueChange() {
  if (!activeElement) {
    return;
  }
  activeElement.detachEvent('onpropertychange', handlePropertyChange);
  activeElement = null;
  activeElementInst = null;
}

/**
 * (For IE <=9) Handles a propertychange event, sending a `change` event if
 * the value of the active element has changed.
 */
function handlePropertyChange(nativeEvent) {
  if (nativeEvent.propertyName !== 'value') {
    return;
  }
  if (getInstIfValueChanged(activeElementInst)) {
    manualDispatchChangeEvent(nativeEvent);
  }
}

function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
  if (topLevelType === TOP_FOCUS) {
    // In IE9, propertychange fires for most input events but is buggy and
    // doesn't fire when text is deleted, but conveniently, selectionchange
    // appears to fire in all of the remaining cases so we catch those and
    // forward the event if the value has changed
    // In either case, we don't want to call the event handler if the value
    // is changed from JS so we redefine a setter for `.value` that updates
    // our activeElementValue variable, allowing us to ignore those changes
    //
    // stopWatching() should be a noop here but we call it just in case we
    // missed a blur event somehow.
    stopWatchingForValueChange();
    startWatchingForValueChange(target, targetInst);
  } else if (topLevelType === TOP_BLUR) {
    stopWatchingForValueChange();
  }
}

// For IE8 and IE9.
function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
  if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
    // On the selectionchange event, the target is just document which isn't
    // helpful for us so just check activeElement instead.
    //
    // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
    // propertychange on the first input event after setting `value` from a
    // script and fires only keydown, keypress, keyup. Catching keyup usually
    // gets it and catching keydown lets us fire an event for the first
    // keystroke if user does a key repeat (it'll be a little delayed: right
    // before the second keystroke). Other input methods (e.g., paste) seem to
    // fire selectionchange normally.
    return getInstIfValueChanged(activeElementInst);
  }
}

/**
 * SECTION: handle `click` event
 */
function shouldUseClickEvent(elem) {
  // Use the `click` event to detect changes to checkbox and radio inputs.
  // This approach works across all browsers, whereas `change` does not fire
  // until `blur` in IE8.
  var nodeName = elem.nodeName;
  return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
}

function getTargetInstForClickEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_CLICK) {
    return getInstIfValueChanged(targetInst);
  }
}

function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
  if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
    return getInstIfValueChanged(targetInst);
  }
}

function handleControlledInputBlur(node) {
  var state = node._wrapperState;

  if (!state || !state.controlled || node.type !== 'number') {
    return;
  }

  if (!disableInputAttributeSyncing) {
    // If controlled, assign the value attribute to the current value on blur
    setDefaultValue(node, 'number', node.value);
  }
}

/**
 * This plugin creates an `onChange` event that normalizes change events
 * across form elements. This event fires at a time when it's possible to
 * change the element's value without seeing a flicker.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - select
 */
var ChangeEventPlugin = {
  eventTypes: eventTypes$1,

  _isInputEventSupported: isInputEventSupported,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    var getTargetInstFunc = void 0,
        handleEventFunc = void 0;
    if (shouldUseChangeEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForChangeEvent;
    } else if (isTextInputElement(targetNode)) {
      if (isInputEventSupported) {
        getTargetInstFunc = getTargetInstForInputOrChangeEvent;
      } else {
        getTargetInstFunc = getTargetInstForInputEventPolyfill;
        handleEventFunc = handleEventsForInputEventPolyfill;
      }
    } else if (shouldUseClickEvent(targetNode)) {
      getTargetInstFunc = getTargetInstForClickEvent;
    }

    if (getTargetInstFunc) {
      var inst = getTargetInstFunc(topLevelType, targetInst);
      if (inst) {
        var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
        return event;
      }
    }

    if (handleEventFunc) {
      handleEventFunc(topLevelType, targetNode, targetInst);
    }

    // When blurring, set the value attribute for number inputs
    if (topLevelType === TOP_BLUR) {
      handleControlledInputBlur(targetNode);
    }
  }
};

/**
 * Module that is injectable into `EventPluginHub`, that specifies a
 * deterministic ordering of `EventPlugin`s. A convenient way to reason about
 * plugins, without having to package every one of them. This is better than
 * having plugins be ordered in the same order that they are injected because
 * that ordering would be influenced by the packaging order.
 * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
 * preventing default on events is convenient in `SimpleEventPlugin` handlers.
 */
var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];

var SyntheticUIEvent = SyntheticEvent.extend({
  view: null,
  detail: null
});

var modifierKeyToProp = {
  Alt: 'altKey',
  Control: 'ctrlKey',
  Meta: 'metaKey',
  Shift: 'shiftKey'
};

// Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
// getModifierState. If getModifierState is not supported, we map it to a set of
// modifier keys exposed by the event. In this case, Lock-keys are not supported.
/**
 * Translation from modifier key to the associated property in the event.
 * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
 */

function modifierStateGetter(keyArg) {
  var syntheticEvent = this;
  var nativeEvent = syntheticEvent.nativeEvent;
  if (nativeEvent.getModifierState) {
    return nativeEvent.getModifierState(keyArg);
  }
  var keyProp = modifierKeyToProp[keyArg];
  return keyProp ? !!nativeEvent[keyProp] : false;
}

function getEventModifierState(nativeEvent) {
  return modifierStateGetter;
}

var previousScreenX = 0;
var previousScreenY = 0;
// Use flags to signal movementX/Y has already been set
var isMovementXSet = false;
var isMovementYSet = false;

/**
 * @interface MouseEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticMouseEvent = SyntheticUIEvent.extend({
  screenX: null,
  screenY: null,
  clientX: null,
  clientY: null,
  pageX: null,
  pageY: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  getModifierState: getEventModifierState,
  button: null,
  buttons: null,
  relatedTarget: function (event) {
    return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
  },
  movementX: function (event) {
    if ('movementX' in event) {
      return event.movementX;
    }

    var screenX = previousScreenX;
    previousScreenX = event.screenX;

    if (!isMovementXSet) {
      isMovementXSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenX - screenX : 0;
  },
  movementY: function (event) {
    if ('movementY' in event) {
      return event.movementY;
    }

    var screenY = previousScreenY;
    previousScreenY = event.screenY;

    if (!isMovementYSet) {
      isMovementYSet = true;
      return 0;
    }

    return event.type === 'mousemove' ? event.screenY - screenY : 0;
  }
});

/**
 * @interface PointerEvent
 * @see http://www.w3.org/TR/pointerevents/
 */
var SyntheticPointerEvent = SyntheticMouseEvent.extend({
  pointerId: null,
  width: null,
  height: null,
  pressure: null,
  tangentialPressure: null,
  tiltX: null,
  tiltY: null,
  twist: null,
  pointerType: null,
  isPrimary: null
});

var eventTypes$2 = {
  mouseEnter: {
    registrationName: 'onMouseEnter',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  mouseLeave: {
    registrationName: 'onMouseLeave',
    dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
  },
  pointerEnter: {
    registrationName: 'onPointerEnter',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  },
  pointerLeave: {
    registrationName: 'onPointerLeave',
    dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
  }
};

var EnterLeaveEventPlugin = {
  eventTypes: eventTypes$2,

  /**
   * For almost every interaction we care about, there will be both a top-level
   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
   * we do not extract duplicate events. However, moving the mouse into the
   * browser from outside will not fire a `mouseout` event. In this case, we use
   * the `mouseover` top-level event.
   */
  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
    var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

    if (isOverEvent && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
      return null;
    }

    if (!isOutEvent && !isOverEvent) {
      // Must not be a mouse or pointer in or out - ignoring.
      return null;
    }

    var win = void 0;
    if (nativeEventTarget.window === nativeEventTarget) {
      // `nativeEventTarget` is probably a window object.
      win = nativeEventTarget;
    } else {
      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
      var doc = nativeEventTarget.ownerDocument;
      if (doc) {
        win = doc.defaultView || doc.parentWindow;
      } else {
        win = window;
      }
    }

    var from = void 0;
    var to = void 0;
    if (isOutEvent) {
      from = targetInst;
      var related = nativeEvent.relatedTarget || nativeEvent.toElement;
      to = related ? getClosestInstanceFromNode(related) : null;
    } else {
      // Moving to a node from outside the window.
      from = null;
      to = targetInst;
    }

    if (from === to) {
      // Nothing pertains to our managed components.
      return null;
    }

    var eventInterface = void 0,
        leaveEventType = void 0,
        enterEventType = void 0,
        eventTypePrefix = void 0;

    if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
      eventInterface = SyntheticMouseEvent;
      leaveEventType = eventTypes$2.mouseLeave;
      enterEventType = eventTypes$2.mouseEnter;
      eventTypePrefix = 'mouse';
    } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
      eventInterface = SyntheticPointerEvent;
      leaveEventType = eventTypes$2.pointerLeave;
      enterEventType = eventTypes$2.pointerEnter;
      eventTypePrefix = 'pointer';
    }

    var fromNode = from == null ? win : getNodeFromInstance$1(from);
    var toNode = to == null ? win : getNodeFromInstance$1(to);

    var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
    leave.type = eventTypePrefix + 'leave';
    leave.target = fromNode;
    leave.relatedTarget = toNode;

    var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
    enter.type = eventTypePrefix + 'enter';
    enter.target = toNode;
    enter.relatedTarget = fromNode;

    accumulateEnterLeaveDispatches(leave, enter, from, to);

    return [leave, enter];
  }
};

/**
 * inlined Object.is polyfill to avoid requiring consumers ship their own
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
 */
function is(x, y) {
  return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
  ;
}

var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

/**
 * Performs equality by iterating through keys on an object and returning false
 * when any key has values which are not strictly equal between the arguments.
 * Returns true when the values of all keys are strictly equal.
 */
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }

  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
    return false;
  }

  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);

  if (keysA.length !== keysB.length) {
    return false;
  }

  // Test for A's keys different from B.
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty$1.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }

  return true;
}

/**
 * `ReactInstanceMap` maintains a mapping from a public facing stateful
 * instance (key) and the internal representation (value). This allows public
 * methods to accept the user facing instance as an argument and map them back
 * to internal methods.
 *
 * Note that this module is currently shared and assumed to be stateless.
 * If this becomes an actual Map, that will break.
 */

/**
 * This API should be called `delete` but we'd have to make sure to always
 * transform these to strings for IE support. When this transform is fully
 * supported we can rename it.
 */


function get(key) {
  return key._reactInternalFiber;
}

function has(key) {
  return key._reactInternalFiber !== undefined;
}

function set(key, value) {
  key._reactInternalFiber = value;
}

// Don't change these two values. They're used by React Dev Tools.
var NoEffect = /*              */0;
var PerformedWork = /*         */1;

// You can change the rest (and add more).
var Placement = /*             */2;
var Update = /*                */4;
var PlacementAndUpdate = /*    */6;
var Deletion = /*              */8;
var ContentReset = /*          */16;
var Callback = /*              */32;
var DidCapture = /*            */64;
var Ref = /*                   */128;
var Snapshot = /*              */256;
var Passive = /*               */512;

// Passive & Update & Callback & Ref & Snapshot
var LifecycleEffectMask = /*   */932;

// Union of all host effects
var HostEffectMask = /*        */1023;

var Incomplete = /*            */1024;
var ShouldCapture = /*         */2048;

var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;

var MOUNTING = 1;
var MOUNTED = 2;
var UNMOUNTED = 3;

function isFiberMountedImpl(fiber) {
  var node = fiber;
  if (!fiber.alternate) {
    // If there is no alternate, this might be a new tree that isn't inserted
    // yet. If it is, then it will have a pending insertion effect on it.
    if ((node.effectTag & Placement) !== NoEffect) {
      return MOUNTING;
    }
    while (node.return) {
      node = node.return;
      if ((node.effectTag & Placement) !== NoEffect) {
        return MOUNTING;
      }
    }
  } else {
    while (node.return) {
      node = node.return;
    }
  }
  if (node.tag === HostRoot) {
    // TODO: Check if this was a nested HostRoot when used with
    // renderContainerIntoSubtree.
    return MOUNTED;
  }
  // If we didn't hit the root, that means that we're in an disconnected tree
  // that has been unmounted.
  return UNMOUNTED;
}

function isFiberMounted(fiber) {
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function isMounted(component) {
  {
    var owner = ReactCurrentOwner$1.current;
    if (owner !== null && owner.tag === ClassComponent) {
      var ownerFiber = owner;
      var instance = ownerFiber.stateNode;
      !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
      instance._warnedAboutRefsInRender = true;
    }
  }

  var fiber = get(component);
  if (!fiber) {
    return false;
  }
  return isFiberMountedImpl(fiber) === MOUNTED;
}

function assertIsMounted(fiber) {
  !(isFiberMountedImpl(fiber) === MOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
}

function findCurrentFiberUsingSlowPath(fiber) {
  var alternate = fiber.alternate;
  if (!alternate) {
    // If there is no alternate, then we only need to check if it is mounted.
    var state = isFiberMountedImpl(fiber);
    !(state !== UNMOUNTED) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
    if (state === MOUNTING) {
      return null;
    }
    return fiber;
  }
  // If we have two possible branches, we'll walk backwards up to the root
  // to see what path the root points to. On the way we may hit one of the
  // special cases and we'll deal with them.
  var a = fiber;
  var b = alternate;
  while (true) {
    var parentA = a.return;
    var parentB = parentA ? parentA.alternate : null;
    if (!parentA || !parentB) {
      // We're at the root.
      break;
    }

    // If both copies of the parent fiber point to the same child, we can
    // assume that the child is current. This happens when we bailout on low
    // priority: the bailed out fiber's child reuses the current child.
    if (parentA.child === parentB.child) {
      var child = parentA.child;
      while (child) {
        if (child === a) {
          // We've determined that A is the current branch.
          assertIsMounted(parentA);
          return fiber;
        }
        if (child === b) {
          // We've determined that B is the current branch.
          assertIsMounted(parentA);
          return alternate;
        }
        child = child.sibling;
      }
      // We should never have an alternate for any mounting node. So the only
      // way this could possibly happen is if this was unmounted, if at all.
      invariant(false, 'Unable to find node on an unmounted component.');
    }

    if (a.return !== b.return) {
      // The return pointer of A and the return pointer of B point to different
      // fibers. We assume that return pointers never criss-cross, so A must
      // belong to the child set of A.return, and B must belong to the child
      // set of B.return.
      a = parentA;
      b = parentB;
    } else {
      // The return pointers point to the same fiber. We'll have to use the
      // default, slow path: scan the child sets of each parent alternate to see
      // which child belongs to which set.
      //
      // Search parent A's child set
      var didFindChild = false;
      var _child = parentA.child;
      while (_child) {
        if (_child === a) {
          didFindChild = true;
          a = parentA;
          b = parentB;
          break;
        }
        if (_child === b) {
          didFindChild = true;
          b = parentA;
          a = parentB;
          break;
        }
        _child = _child.sibling;
      }
      if (!didFindChild) {
        // Search parent B's child set
        _child = parentB.child;
        while (_child) {
          if (_child === a) {
            didFindChild = true;
            a = parentB;
            b = parentA;
            break;
          }
          if (_child === b) {
            didFindChild = true;
            b = parentB;
            a = parentA;
            break;
          }
          _child = _child.sibling;
        }
        !didFindChild ? invariant(false, 'Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.') : void 0;
      }
    }

    !(a.alternate === b) ? invariant(false, 'Return fibers should always be each others\' alternates. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  }
  // If the root is not a host container, we're in a disconnected tree. I.e.
  // unmounted.
  !(a.tag === HostRoot) ? invariant(false, 'Unable to find node on an unmounted component.') : void 0;
  if (a.stateNode.current === a) {
    // We've determined that A is the current branch.
    return fiber;
  }
  // Otherwise B has to be current branch.
  return alternate;
}

function findCurrentHostFiber(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function findCurrentHostFiberWithNoPortals(parent) {
  var currentParent = findCurrentFiberUsingSlowPath(parent);
  if (!currentParent) {
    return null;
  }

  // Next we'll drill down this component to find the first HostComponent/Text.
  var node = currentParent;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      return node;
    } else if (node.child && node.tag !== HostPortal) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === currentParent) {
      return null;
    }
    while (!node.sibling) {
      if (!node.return || node.return === currentParent) {
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
  // Flow needs the return null here, but ESLint complains about it.
  // eslint-disable-next-line no-unreachable
  return null;
}

function addEventBubbleListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, false);
}

function addEventCaptureListener(element, eventType, listener) {
  element.addEventListener(eventType, listener, true);
}

/**
 * @interface Event
 * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
 * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
 */
var SyntheticAnimationEvent = SyntheticEvent.extend({
  animationName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/clipboard-apis/
 */
var SyntheticClipboardEvent = SyntheticEvent.extend({
  clipboardData: function (event) {
    return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
  }
});

/**
 * @interface FocusEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticFocusEvent = SyntheticUIEvent.extend({
  relatedTarget: null
});

/**
 * `charCode` represents the actual "character code" and is safe to use with
 * `String.fromCharCode`. As such, only keys that correspond to printable
 * characters produce a valid `charCode`, the only exception to this is Enter.
 * The Tab-key is considered non-printable and does not have a `charCode`,
 * presumably because it does not produce a tab-character in browsers.
 *
 * @param {object} nativeEvent Native browser event.
 * @return {number} Normalized `charCode` property.
 */
function getEventCharCode(nativeEvent) {
  var charCode = void 0;
  var keyCode = nativeEvent.keyCode;

  if ('charCode' in nativeEvent) {
    charCode = nativeEvent.charCode;

    // FF does not set `charCode` for the Enter-key, check against `keyCode`.
    if (charCode === 0 && keyCode === 13) {
      charCode = 13;
    }
  } else {
    // IE8 does not implement `charCode`, but `keyCode` has the correct value.
    charCode = keyCode;
  }

  // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
  // report Enter as charCode 10 when ctrl is pressed.
  if (charCode === 10) {
    charCode = 13;
  }

  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
  // Must not discard the (non-)printable Enter-key.
  if (charCode >= 32 || charCode === 13) {
    return charCode;
  }

  return 0;
}

/**
 * Normalization of deprecated HTML5 `key` values
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var normalizeKey = {
  Esc: 'Escape',
  Spacebar: ' ',
  Left: 'ArrowLeft',
  Up: 'ArrowUp',
  Right: 'ArrowRight',
  Down: 'ArrowDown',
  Del: 'Delete',
  Win: 'OS',
  Menu: 'ContextMenu',
  Apps: 'ContextMenu',
  Scroll: 'ScrollLock',
  MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
  '8': 'Backspace',
  '9': 'Tab',
  '12': 'Clear',
  '13': 'Enter',
  '16': 'Shift',
  '17': 'Control',
  '18': 'Alt',
  '19': 'Pause',
  '20': 'CapsLock',
  '27': 'Escape',
  '32': ' ',
  '33': 'PageUp',
  '34': 'PageDown',
  '35': 'End',
  '36': 'Home',
  '37': 'ArrowLeft',
  '38': 'ArrowUp',
  '39': 'ArrowRight',
  '40': 'ArrowDown',
  '45': 'Insert',
  '46': 'Delete',
  '112': 'F1',
  '113': 'F2',
  '114': 'F3',
  '115': 'F4',
  '116': 'F5',
  '117': 'F6',
  '118': 'F7',
  '119': 'F8',
  '120': 'F9',
  '121': 'F10',
  '122': 'F11',
  '123': 'F12',
  '144': 'NumLock',
  '145': 'ScrollLock',
  '224': 'Meta'
};

/**
 * @param {object} nativeEvent Native browser event.
 * @return {string} Normalized `key` property.
 */
function getEventKey(nativeEvent) {
  if (nativeEvent.key) {
    // Normalize inconsistent values reported by browsers due to
    // implementations of a working draft specification.

    // FireFox implements `key` but returns `MozPrintableKey` for all
    // printable characters (normalized to `Unidentified`), ignore it.
    var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
    if (key !== 'Unidentified') {
      return key;
    }
  }

  // Browser does not implement `key`, polyfill as much of it as we can.
  if (nativeEvent.type === 'keypress') {
    var charCode = getEventCharCode(nativeEvent);

    // The enter-key is technically both printable and non-printable and can
    // thus be captured by `keypress`, no other non-printable key should.
    return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
  }
  if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
    // While user keyboard layout determines the actual meaning of each
    // `keyCode` value, almost all function keys have a universal value.
    return translateToKey[nativeEvent.keyCode] || 'Unidentified';
  }
  return '';
}

/**
 * @interface KeyboardEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
  key: getEventKey,
  location: null,
  ctrlKey: null,
  shiftKey: null,
  altKey: null,
  metaKey: null,
  repeat: null,
  locale: null,
  getModifierState: getEventModifierState,
  // Legacy Interface
  charCode: function (event) {
    // `charCode` is the result of a KeyPress event and represents the value of
    // the actual printable character.

    // KeyPress is deprecated, but its replacement is not yet final and not
    // implemented in any major browser. Only KeyPress has charCode.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    return 0;
  },
  keyCode: function (event) {
    // `keyCode` is the result of a KeyDown/Up event and represents the value of
    // physical keyboard key.

    // The actual meaning of the value depends on the users' keyboard layout
    // which cannot be detected. Assuming that it is a US keyboard layout
    // provides a surprisingly accurate mapping for US and European users.
    // Due to this, it is left to the user to implement at this time.
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  },
  which: function (event) {
    // `which` is an alias for either `keyCode` or `charCode` depending on the
    // type of the event.
    if (event.type === 'keypress') {
      return getEventCharCode(event);
    }
    if (event.type === 'keydown' || event.type === 'keyup') {
      return event.keyCode;
    }
    return 0;
  }
});

/**
 * @interface DragEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticDragEvent = SyntheticMouseEvent.extend({
  dataTransfer: null
});

/**
 * @interface TouchEvent
 * @see http://www.w3.org/TR/touch-events/
 */
var SyntheticTouchEvent = SyntheticUIEvent.extend({
  touches: null,
  targetTouches: null,
  changedTouches: null,
  altKey: null,
  metaKey: null,
  ctrlKey: null,
  shiftKey: null,
  getModifierState: getEventModifierState
});

/**
 * @interface Event
 * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
 * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
 */
var SyntheticTransitionEvent = SyntheticEvent.extend({
  propertyName: null,
  elapsedTime: null,
  pseudoElement: null
});

/**
 * @interface WheelEvent
 * @see http://www.w3.org/TR/DOM-Level-3-Events/
 */
var SyntheticWheelEvent = SyntheticMouseEvent.extend({
  deltaX: function (event) {
    return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
    'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
  },
  deltaY: function (event) {
    return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
    'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
    'wheelDelta' in event ? -event.wheelDelta : 0;
  },

  deltaZ: null,

  // Browsers without "deltaMode" is reporting in raw wheel delta where one
  // notch on the scroll is always +/- 120, roughly equivalent to pixels.
  // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
  // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
  deltaMode: null
});

/**
 * Turns
 * ['abort', ...]
 * into
 * eventTypes = {
 *   'abort': {
 *     phasedRegistrationNames: {
 *       bubbled: 'onAbort',
 *       captured: 'onAbortCapture',
 *     },
 *     dependencies: [TOP_ABORT],
 *   },
 *   ...
 * };
 * topLevelEventsToDispatchConfig = new Map([
 *   [TOP_ABORT, { sameConfig }],
 * ]);
 */

var interactiveEventTypeNames = [[TOP_BLUR, 'blur'], [TOP_CANCEL, 'cancel'], [TOP_CLICK, 'click'], [TOP_CLOSE, 'close'], [TOP_CONTEXT_MENU, 'contextMenu'], [TOP_COPY, 'copy'], [TOP_CUT, 'cut'], [TOP_AUX_CLICK, 'auxClick'], [TOP_DOUBLE_CLICK, 'doubleClick'], [TOP_DRAG_END, 'dragEnd'], [TOP_DRAG_START, 'dragStart'], [TOP_DROP, 'drop'], [TOP_FOCUS, 'focus'], [TOP_INPUT, 'input'], [TOP_INVALID, 'invalid'], [TOP_KEY_DOWN, 'keyDown'], [TOP_KEY_PRESS, 'keyPress'], [TOP_KEY_UP, 'keyUp'], [TOP_MOUSE_DOWN, 'mouseDown'], [TOP_MOUSE_UP, 'mouseUp'], [TOP_PASTE, 'paste'], [TOP_PAUSE, 'pause'], [TOP_PLAY, 'play'], [TOP_POINTER_CANCEL, 'pointerCancel'], [TOP_POINTER_DOWN, 'pointerDown'], [TOP_POINTER_UP, 'pointerUp'], [TOP_RATE_CHANGE, 'rateChange'], [TOP_RESET, 'reset'], [TOP_SEEKED, 'seeked'], [TOP_SUBMIT, 'submit'], [TOP_TOUCH_CANCEL, 'touchCancel'], [TOP_TOUCH_END, 'touchEnd'], [TOP_TOUCH_START, 'touchStart'], [TOP_VOLUME_CHANGE, 'volumeChange']];
var nonInteractiveEventTypeNames = [[TOP_ABORT, 'abort'], [TOP_ANIMATION_END, 'animationEnd'], [TOP_ANIMATION_ITERATION, 'animationIteration'], [TOP_ANIMATION_START, 'animationStart'], [TOP_CAN_PLAY, 'canPlay'], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough'], [TOP_DRAG, 'drag'], [TOP_DRAG_ENTER, 'dragEnter'], [TOP_DRAG_EXIT, 'dragExit'], [TOP_DRAG_LEAVE, 'dragLeave'], [TOP_DRAG_OVER, 'dragOver'], [TOP_DURATION_CHANGE, 'durationChange'], [TOP_EMPTIED, 'emptied'], [TOP_ENCRYPTED, 'encrypted'], [TOP_ENDED, 'ended'], [TOP_ERROR, 'error'], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture'], [TOP_LOAD, 'load'], [TOP_LOADED_DATA, 'loadedData'], [TOP_LOADED_METADATA, 'loadedMetadata'], [TOP_LOAD_START, 'loadStart'], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture'], [TOP_MOUSE_MOVE, 'mouseMove'], [TOP_MOUSE_OUT, 'mouseOut'], [TOP_MOUSE_OVER, 'mouseOver'], [TOP_PLAYING, 'playing'], [TOP_POINTER_MOVE, 'pointerMove'], [TOP_POINTER_OUT, 'pointerOut'], [TOP_POINTER_OVER, 'pointerOver'], [TOP_PROGRESS, 'progress'], [TOP_SCROLL, 'scroll'], [TOP_SEEKING, 'seeking'], [TOP_STALLED, 'stalled'], [TOP_SUSPEND, 'suspend'], [TOP_TIME_UPDATE, 'timeUpdate'], [TOP_TOGGLE, 'toggle'], [TOP_TOUCH_MOVE, 'touchMove'], [TOP_TRANSITION_END, 'transitionEnd'], [TOP_WAITING, 'waiting'], [TOP_WHEEL, 'wheel']];

var eventTypes$4 = {};
var topLevelEventsToDispatchConfig = {};

function addEventTypeNameToConfig(_ref, isInteractive) {
  var topEvent = _ref[0],
      event = _ref[1];

  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
  var onEvent = 'on' + capitalizedEvent;

  var type = {
    phasedRegistrationNames: {
      bubbled: onEvent,
      captured: onEvent + 'Capture'
    },
    dependencies: [topEvent],
    isInteractive: isInteractive
  };
  eventTypes$4[event] = type;
  topLevelEventsToDispatchConfig[topEvent] = type;
}

interactiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, true);
});
nonInteractiveEventTypeNames.forEach(function (eventTuple) {
  addEventTypeNameToConfig(eventTuple, false);
});

// Only used in DEV for exhaustiveness validation.
var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];

var SimpleEventPlugin = {
  eventTypes: eventTypes$4,

  isInteractiveTopLevelEventType: function (topLevelType) {
    var config = topLevelEventsToDispatchConfig[topLevelType];
    return config !== undefined && config.isInteractive === true;
  },


  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];
    if (!dispatchConfig) {
      return null;
    }
    var EventConstructor = void 0;
    switch (topLevelType) {
      case TOP_KEY_PRESS:
        // Firefox creates a keypress event for function keys too. This removes
        // the unwanted keypress events. Enter is however both printable and
        // non-printable. One would expect Tab to be as well (but it isn't).
        if (getEventCharCode(nativeEvent) === 0) {
          return null;
        }
      /* falls through */
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        EventConstructor = SyntheticKeyboardEvent;
        break;
      case TOP_BLUR:
      case TOP_FOCUS:
        EventConstructor = SyntheticFocusEvent;
        break;
      case TOP_CLICK:
        // Firefox creates a click event on right mouse clicks. This removes the
        // unwanted click events.
        if (nativeEvent.button === 2) {
          return null;
        }
      /* falls through */
      case TOP_AUX_CLICK:
      case TOP_DOUBLE_CLICK:
      case TOP_MOUSE_DOWN:
      case TOP_MOUSE_MOVE:
      case TOP_MOUSE_UP:
      // TODO: Disabled elements should not respond to mouse events
      /* falls through */
      case TOP_MOUSE_OUT:
      case TOP_MOUSE_OVER:
      case TOP_CONTEXT_MENU:
        EventConstructor = SyntheticMouseEvent;
        break;
      case TOP_DRAG:
      case TOP_DRAG_END:
      case TOP_DRAG_ENTER:
      case TOP_DRAG_EXIT:
      case TOP_DRAG_LEAVE:
      case TOP_DRAG_OVER:
      case TOP_DRAG_START:
      case TOP_DROP:
        EventConstructor = SyntheticDragEvent;
        break;
      case TOP_TOUCH_CANCEL:
      case TOP_TOUCH_END:
      case TOP_TOUCH_MOVE:
      case TOP_TOUCH_START:
        EventConstructor = SyntheticTouchEvent;
        break;
      case TOP_ANIMATION_END:
      case TOP_ANIMATION_ITERATION:
      case TOP_ANIMATION_START:
        EventConstructor = SyntheticAnimationEvent;
        break;
      case TOP_TRANSITION_END:
        EventConstructor = SyntheticTransitionEvent;
        break;
      case TOP_SCROLL:
        EventConstructor = SyntheticUIEvent;
        break;
      case TOP_WHEEL:
        EventConstructor = SyntheticWheelEvent;
        break;
      case TOP_COPY:
      case TOP_CUT:
      case TOP_PASTE:
        EventConstructor = SyntheticClipboardEvent;
        break;
      case TOP_GOT_POINTER_CAPTURE:
      case TOP_LOST_POINTER_CAPTURE:
      case TOP_POINTER_CANCEL:
      case TOP_POINTER_DOWN:
      case TOP_POINTER_MOVE:
      case TOP_POINTER_OUT:
      case TOP_POINTER_OVER:
      case TOP_POINTER_UP:
        EventConstructor = SyntheticPointerEvent;
        break;
      default:
        {
          if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
            warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
          }
        }
        // HTML Events
        // @see http://www.w3.org/TR/html5/index.html#events-0
        EventConstructor = SyntheticEvent;
        break;
    }
    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
    accumulateTwoPhaseDispatches(event);
    return event;
  }
};

var isInteractiveTopLevelEventType = SimpleEventPlugin.isInteractiveTopLevelEventType;


var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
var callbackBookkeepingPool = [];

/**
 * Find the deepest React component completely containing the root of the
 * passed-in instance (for use when entire React trees are nested within each
 * other). If React trees are not nested, returns null.
 */
function findRootContainerNode(inst) {
  // TODO: It may be a good idea to cache this to prevent unnecessary DOM
  // traversal, but caching is difficult to do correctly without using a
  // mutation observer to listen for all DOM changes.
  while (inst.return) {
    inst = inst.return;
  }
  if (inst.tag !== HostRoot) {
    // This can happen if we're in a detached tree.
    return null;
  }
  return inst.stateNode.containerInfo;
}

// Used to store ancestor hierarchy in top level callback
function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst) {
  if (callbackBookkeepingPool.length) {
    var instance = callbackBookkeepingPool.pop();
    instance.topLevelType = topLevelType;
    instance.nativeEvent = nativeEvent;
    instance.targetInst = targetInst;
    return instance;
  }
  return {
    topLevelType: topLevelType,
    nativeEvent: nativeEvent,
    targetInst: targetInst,
    ancestors: []
  };
}

function releaseTopLevelCallbackBookKeeping(instance) {
  instance.topLevelType = null;
  instance.nativeEvent = null;
  instance.targetInst = null;
  instance.ancestors.length = 0;
  if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
    callbackBookkeepingPool.push(instance);
  }
}

function handleTopLevel(bookKeeping) {
  var targetInst = bookKeeping.targetInst;

  // Loop through the hierarchy, in case there's any nested components.
  // It's important that we build the array of ancestors before calling any
  // event handlers, because event handlers can modify the DOM, leading to
  // inconsistencies with ReactMount's node cache. See #1105.
  var ancestor = targetInst;
  do {
    if (!ancestor) {
      bookKeeping.ancestors.push(ancestor);
      break;
    }
    var root = findRootContainerNode(ancestor);
    if (!root) {
      break;
    }
    bookKeeping.ancestors.push(ancestor);
    ancestor = getClosestInstanceFromNode(root);
  } while (ancestor);

  for (var i = 0; i < bookKeeping.ancestors.length; i++) {
    targetInst = bookKeeping.ancestors[i];
    runExtractedEventsInBatch(bookKeeping.topLevelType, targetInst, bookKeeping.nativeEvent, getEventTarget(bookKeeping.nativeEvent));
  }
}

// TODO: can we stop exporting these?
var _enabled = true;

function setEnabled(enabled) {
  _enabled = !!enabled;
}

function isEnabled() {
  return _enabled;
}

/**
 * Traps top-level events by using event bubbling.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapBubbledEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventBubbleListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

/**
 * Traps a top-level event by using event capturing.
 *
 * @param {number} topLevelType Number from `TopLevelEventTypes`.
 * @param {object} element Element on which to attach listener.
 * @return {?object} An object with a remove function which will forcefully
 *                  remove the listener.
 * @internal
 */
function trapCapturedEvent(topLevelType, element) {
  if (!element) {
    return null;
  }
  var dispatch = isInteractiveTopLevelEventType(topLevelType) ? dispatchInteractiveEvent : dispatchEvent;

  addEventCaptureListener(element, getRawEventName(topLevelType),
  // Check if interactive and wrap in interactiveUpdates
  dispatch.bind(null, topLevelType));
}

function dispatchInteractiveEvent(topLevelType, nativeEvent) {
  interactiveUpdates(dispatchEvent, topLevelType, nativeEvent);
}

function dispatchEvent(topLevelType, nativeEvent) {
  if (!_enabled) {
    return;
  }

  var nativeEventTarget = getEventTarget(nativeEvent);
  var targetInst = getClosestInstanceFromNode(nativeEventTarget);
  if (targetInst !== null && typeof targetInst.tag === 'number' && !isFiberMounted(targetInst)) {
    // If we get an event (ex: img onload) before committing that
    // component's mount, ignore it for now (that is, treat it as if it was an
    // event on a non-React tree). We might also consider queueing events and
    // dispatching them after the mount.
    targetInst = null;
  }

  var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst);

  try {
    // Event queue being processed in the same cycle allows
    // `preventDefault`.
    batchedUpdates(handleTopLevel, bookKeeping);
  } finally {
    releaseTopLevelCallbackBookKeeping(bookKeeping);
  }
}

/**
 * Summary of `ReactBrowserEventEmitter` event handling:
 *
 *  - Top-level delegation is used to trap most native browser events. This
 *    may only occur in the main thread and is the responsibility of
 *    ReactDOMEventListener, which is injected and can therefore support
 *    pluggable event sources. This is the only work that occurs in the main
 *    thread.
 *
 *  - We normalize and de-duplicate events to account for browser quirks. This
 *    may be done in the worker thread.
 *
 *  - Forward these native events (with the associated top-level type used to
 *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
 *    to extract any synthetic events.
 *
 *  - The `EventPluginHub` will then process each event by annotating them with
 *    "dispatches", a sequence of listeners and IDs that care about that event.
 *
 *  - The `EventPluginHub` then dispatches the events.
 *
 * Overview of React and the event system:
 *
 * +------------+    .
 * |    DOM     |    .
 * +------------+    .
 *       |           .
 *       v           .
 * +------------+    .
 * | ReactEvent |    .
 * |  Listener  |    .
 * +------------+    .                         +-----------+
 *       |           .               +--------+|SimpleEvent|
 *       |           .               |         |Plugin     |
 * +-----|------+    .               v         +-----------+
 * |     |      |    .    +--------------+                    +------------+
 * |     +-----------.--->|EventPluginHub|                    |    Event   |
 * |            |    .    |              |     +-----------+  | Propagators|
 * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
 * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
 * |            |    .    |              |     +-----------+  |  utilities |
 * |     +-----------.--->|              |                    +------------+
 * |     |      |    .    +--------------+
 * +-----|------+    .                ^        +-----------+
 *       |           .                |        |Enter/Leave|
 *       +           .                +-------+|Plugin     |
 * +-------------+   .                         +-----------+
 * | application |   .
 * |-------------|   .
 * |             |   .
 * |             |   .
 * +-------------+   .
 *                   .
 *    React Core     .  General Purpose Event Plugin System
 */

var alreadyListeningTo = {};
var reactTopListenersCounter = 0;

/**
 * To ensure no conflicts with other potential React instances on the page
 */
var topListenersIDKey = '_reactListenersID' + ('' + Math.random()).slice(2);

function getListeningForDocument(mountAt) {
  // In IE8, `mountAt` is a host object and doesn't have `hasOwnProperty`
  // directly.
  if (!Object.prototype.hasOwnProperty.call(mountAt, topListenersIDKey)) {
    mountAt[topListenersIDKey] = reactTopListenersCounter++;
    alreadyListeningTo[mountAt[topListenersIDKey]] = {};
  }
  return alreadyListeningTo[mountAt[topListenersIDKey]];
}

/**
 * We listen for bubbled touch events on the document object.
 *
 * Firefox v8.01 (and possibly others) exhibited strange behavior when
 * mounting `onmousemove` events at some node that was not the document
 * element. The symptoms were that if your mouse is not moving over something
 * contained within that mount point (for example on the background) the
 * top-level listeners for `onmousemove` won't be called. However, if you
 * register the `mousemove` on the document object, then it will of course
 * catch all `mousemove`s. This along with iOS quirks, justifies restricting
 * top-level listeners to the document object only, at least for these
 * movement types of events and possibly all events.
 *
 * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
 *
 * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
 * they bubble to document.
 *
 * @param {string} registrationName Name of listener (e.g. `onClick`).
 * @param {object} mountAt Container where to mount the listener
 */
function listenTo(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];

  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      switch (dependency) {
        case TOP_SCROLL:
          trapCapturedEvent(TOP_SCROLL, mountAt);
          break;
        case TOP_FOCUS:
        case TOP_BLUR:
          trapCapturedEvent(TOP_FOCUS, mountAt);
          trapCapturedEvent(TOP_BLUR, mountAt);
          // We set the flag for a single dependency later in this function,
          // but this ensures we mark both as attached rather than just one.
          isListening[TOP_BLUR] = true;
          isListening[TOP_FOCUS] = true;
          break;
        case TOP_CANCEL:
        case TOP_CLOSE:
          if (isEventSupported(getRawEventName(dependency))) {
            trapCapturedEvent(dependency, mountAt);
          }
          break;
        case TOP_INVALID:
        case TOP_SUBMIT:
        case TOP_RESET:
          // We listen to them on the target DOM elements.
          // Some of them bubble so we don't want them to fire twice.
          break;
        default:
          // By default, listen on the top level to all non-media events.
          // Media events don't bubble so adding the listener wouldn't do anything.
          var isMediaEvent = mediaEventTypes.indexOf(dependency) !== -1;
          if (!isMediaEvent) {
            trapBubbledEvent(dependency, mountAt);
          }
          break;
      }
      isListening[dependency] = true;
    }
  }
}

function isListeningToAllDependencies(registrationName, mountAt) {
  var isListening = getListeningForDocument(mountAt);
  var dependencies = registrationNameDependencies[registrationName];
  for (var i = 0; i < dependencies.length; i++) {
    var dependency = dependencies[i];
    if (!(isListening.hasOwnProperty(dependency) && isListening[dependency])) {
      return false;
    }
  }
  return true;
}

function getActiveElement(doc) {
  doc = doc || (typeof document !== 'undefined' ? document : undefined);
  if (typeof doc === 'undefined') {
    return null;
  }
  try {
    return doc.activeElement || doc.body;
  } catch (e) {
    return doc.body;
  }
}

/**
 * Given any node return the first leaf node without children.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {DOMElement|DOMTextNode}
 */
function getLeafNode(node) {
  while (node && node.firstChild) {
    node = node.firstChild;
  }
  return node;
}

/**
 * Get the next sibling within a container. This will walk up the
 * DOM if a node's siblings have been exhausted.
 *
 * @param {DOMElement|DOMTextNode} node
 * @return {?DOMElement|DOMTextNode}
 */
function getSiblingNode(node) {
  while (node) {
    if (node.nextSibling) {
      return node.nextSibling;
    }
    node = node.parentNode;
  }
}

/**
 * Get object describing the nodes which contain characters at offset.
 *
 * @param {DOMElement|DOMTextNode} root
 * @param {number} offset
 * @return {?object}
 */
function getNodeForCharacterOffset(root, offset) {
  var node = getLeafNode(root);
  var nodeStart = 0;
  var nodeEnd = 0;

  while (node) {
    if (node.nodeType === TEXT_NODE) {
      nodeEnd = nodeStart + node.textContent.length;

      if (nodeStart <= offset && nodeEnd >= offset) {
        return {
          node: node,
          offset: offset - nodeStart
        };
      }

      nodeStart = nodeEnd;
    }

    node = getLeafNode(getSiblingNode(node));
  }
}

/**
 * @param {DOMElement} outerNode
 * @return {?object}
 */
function getOffsets(outerNode) {
  var ownerDocument = outerNode.ownerDocument;

  var win = ownerDocument && ownerDocument.defaultView || window;
  var selection = win.getSelection && win.getSelection();

  if (!selection || selection.rangeCount === 0) {
    return null;
  }

  var anchorNode = selection.anchorNode,
      anchorOffset = selection.anchorOffset,
      focusNode = selection.focusNode,
      focusOffset = selection.focusOffset;

  // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
  // up/down buttons on an <input type="number">. Anonymous divs do not seem to
  // expose properties, triggering a "Permission denied error" if any of its
  // properties are accessed. The only seemingly possible way to avoid erroring
  // is to access a property that typically works for non-anonymous divs and
  // catch any error that may otherwise arise. See
  // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

  try {
    /* eslint-disable no-unused-expressions */
    anchorNode.nodeType;
    focusNode.nodeType;
    /* eslint-enable no-unused-expressions */
  } catch (e) {
    return null;
  }

  return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
}

/**
 * Returns {start, end} where `start` is the character/codepoint index of
 * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
 * `end` is the index of (focusNode, focusOffset).
 *
 * Returns null if you pass in garbage input but we should probably just crash.
 *
 * Exported only for testing.
 */
function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
  var length = 0;
  var start = -1;
  var end = -1;
  var indexWithinAnchor = 0;
  var indexWithinFocus = 0;
  var node = outerNode;
  var parentNode = null;

  outer: while (true) {
    var next = null;

    while (true) {
      if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
        start = length + anchorOffset;
      }
      if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
        end = length + focusOffset;
      }

      if (node.nodeType === TEXT_NODE) {
        length += node.nodeValue.length;
      }

      if ((next = node.firstChild) === null) {
        break;
      }
      // Moving from `node` to its first child `next`.
      parentNode = node;
      node = next;
    }

    while (true) {
      if (node === outerNode) {
        // If `outerNode` has children, this is always the second time visiting
        // it. If it has no children, this is still the first loop, and the only
        // valid selection is anchorNode and focusNode both equal to this node
        // and both offsets 0, in which case we will have handled above.
        break outer;
      }
      if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
        start = length;
      }
      if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
        end = length;
      }
      if ((next = node.nextSibling) !== null) {
        break;
      }
      node = parentNode;
      parentNode = node.parentNode;
    }

    // Moving from `node` to its next sibling `next`.
    node = next;
  }

  if (start === -1 || end === -1) {
    // This should never happen. (Would happen if the anchor/focus nodes aren't
    // actually inside the passed-in node.)
    return null;
  }

  return {
    start: start,
    end: end
  };
}

/**
 * In modern non-IE browsers, we can support both forward and backward
 * selections.
 *
 * Note: IE10+ supports the Selection object, but it does not support
 * the `extend` method, which means that even in modern IE, it's not possible
 * to programmatically create a backward selection. Thus, for all IE
 * versions, we use the old IE API to create our selections.
 *
 * @param {DOMElement|DOMTextNode} node
 * @param {object} offsets
 */
function setOffsets(node, offsets) {
  var doc = node.ownerDocument || document;
  var win = doc && doc.defaultView || window;

  // Edge fails with "Object expected" in some scenarios.
  // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
  // fails when pasting 100+ items)
  if (!win.getSelection) {
    return;
  }

  var selection = win.getSelection();
  var length = node.textContent.length;
  var start = Math.min(offsets.start, length);
  var end = offsets.end === undefined ? start : Math.min(offsets.end, length);

  // IE 11 uses modern selection, but doesn't support the extend method.
  // Flip backward selections, so we can set with a single range.
  if (!selection.extend && start > end) {
    var temp = end;
    end = start;
    start = temp;
  }

  var startMarker = getNodeForCharacterOffset(node, start);
  var endMarker = getNodeForCharacterOffset(node, end);

  if (startMarker && endMarker) {
    if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
      return;
    }
    var range = doc.createRange();
    range.setStart(startMarker.node, startMarker.offset);
    selection.removeAllRanges();

    if (start > end) {
      selection.addRange(range);
      selection.extend(endMarker.node, endMarker.offset);
    } else {
      range.setEnd(endMarker.node, endMarker.offset);
      selection.addRange(range);
    }
  }
}

function isTextNode(node) {
  return node && node.nodeType === TEXT_NODE;
}

function containsNode(outerNode, innerNode) {
  if (!outerNode || !innerNode) {
    return false;
  } else if (outerNode === innerNode) {
    return true;
  } else if (isTextNode(outerNode)) {
    return false;
  } else if (isTextNode(innerNode)) {
    return containsNode(outerNode, innerNode.parentNode);
  } else if ('contains' in outerNode) {
    return outerNode.contains(innerNode);
  } else if (outerNode.compareDocumentPosition) {
    return !!(outerNode.compareDocumentPosition(innerNode) & 16);
  } else {
    return false;
  }
}

function isInDocument(node) {
  return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
}

function isSameOriginFrame(iframe) {
  try {
    // Accessing the contentDocument of a HTMLIframeElement can cause the browser
    // to throw, e.g. if it has a cross-origin src attribute.
    // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
    // iframe.contentDocument.defaultView;
    // A safety way is to access one of the cross origin properties: Window or Location
    // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
    // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl

    return typeof iframe.contentWindow.location.href === 'string';
  } catch (err) {
    return false;
  }
}

function getActiveElementDeep() {
  var win = window;
  var element = getActiveElement();
  while (element instanceof win.HTMLIFrameElement) {
    if (isSameOriginFrame(element)) {
      win = element.contentWindow;
    } else {
      return element;
    }
    element = getActiveElement(win.document);
  }
  return element;
}

/**
 * @ReactInputSelection: React input selection module. Based on Selection.js,
 * but modified to be suitable for react and has a couple of bug fixes (doesn't
 * assume buttons have range selections allowed).
 * Input selection module for React.
 */

/**
 * @hasSelectionCapabilities: we get the element types that support selection
 * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
 * and `selectionEnd` rows.
 */
function hasSelectionCapabilities(elem) {
  var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
  return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
}

function getSelectionInformation() {
  var focusedElem = getActiveElementDeep();
  return {
    focusedElem: focusedElem,
    selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection$1(focusedElem) : null
  };
}

/**
 * @restoreSelection: If any selection information was potentially lost,
 * restore it. This is useful when performing operations that could remove dom
 * nodes and place them back in, resulting in focus being lost.
 */
function restoreSelection(priorSelectionInformation) {
  var curFocusedElem = getActiveElementDeep();
  var priorFocusedElem = priorSelectionInformation.focusedElem;
  var priorSelectionRange = priorSelectionInformation.selectionRange;
  if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
    if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
      setSelection(priorFocusedElem, priorSelectionRange);
    }

    // Focusing a node can change the scroll position, which is undesirable
    var ancestors = [];
    var ancestor = priorFocusedElem;
    while (ancestor = ancestor.parentNode) {
      if (ancestor.nodeType === ELEMENT_NODE) {
        ancestors.push({
          element: ancestor,
          left: ancestor.scrollLeft,
          top: ancestor.scrollTop
        });
      }
    }

    if (typeof priorFocusedElem.focus === 'function') {
      priorFocusedElem.focus();
    }

    for (var i = 0; i < ancestors.length; i++) {
      var info = ancestors[i];
      info.element.scrollLeft = info.left;
      info.element.scrollTop = info.top;
    }
  }
}

/**
 * @getSelection: Gets the selection bounds of a focused textarea, input or
 * contentEditable node.
 * -@input: Look up selection bounds of this input
 * -@return {start: selectionStart, end: selectionEnd}
 */
function getSelection$1(input) {
  var selection = void 0;

  if ('selectionStart' in input) {
    // Modern browser with input or textarea.
    selection = {
      start: input.selectionStart,
      end: input.selectionEnd
    };
  } else {
    // Content editable or old IE textarea.
    selection = getOffsets(input);
  }

  return selection || { start: 0, end: 0 };
}

/**
 * @setSelection: Sets the selection bounds of a textarea or input and focuses
 * the input.
 * -@input     Set selection bounds of this input or textarea
 * -@offsets   Object of same form that is returned from get*
 */
function setSelection(input, offsets) {
  var start = offsets.start,
      end = offsets.end;

  if (end === undefined) {
    end = start;
  }

  if ('selectionStart' in input) {
    input.selectionStart = start;
    input.selectionEnd = Math.min(end, input.value.length);
  } else {
    setOffsets(input, offsets);
  }
}

var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;

var eventTypes$3 = {
  select: {
    phasedRegistrationNames: {
      bubbled: 'onSelect',
      captured: 'onSelectCapture'
    },
    dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
  }
};

var activeElement$1 = null;
var activeElementInst$1 = null;
var lastSelection = null;
var mouseDown = false;

/**
 * Get an object which is a unique representation of the current selection.
 *
 * The return value will not be consistent across nodes or browsers, but
 * two identical selections on the same node will return identical objects.
 *
 * @param {DOMElement} node
 * @return {object}
 */
function getSelection(node) {
  if ('selectionStart' in node && hasSelectionCapabilities(node)) {
    return {
      start: node.selectionStart,
      end: node.selectionEnd
    };
  } else {
    var win = node.ownerDocument && node.ownerDocument.defaultView || window;
    var selection = win.getSelection();
    return {
      anchorNode: selection.anchorNode,
      anchorOffset: selection.anchorOffset,
      focusNode: selection.focusNode,
      focusOffset: selection.focusOffset
    };
  }
}

/**
 * Get document associated with the event target.
 *
 * @param {object} nativeEventTarget
 * @return {Document}
 */
function getEventTargetDocument(eventTarget) {
  return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
}

/**
 * Poll selection to see whether it's changed.
 *
 * @param {object} nativeEvent
 * @param {object} nativeEventTarget
 * @return {?SyntheticEvent}
 */
function constructSelectEvent(nativeEvent, nativeEventTarget) {
  // Ensure we have the right element, and that the user is not dragging a
  // selection (this matches native `select` event behavior). In HTML5, select
  // fires only on input and textarea thus if there's no focused element we
  // won't dispatch.
  var doc = getEventTargetDocument(nativeEventTarget);

  if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
    return null;
  }

  // Only fire when selection has actually changed.
  var currentSelection = getSelection(activeElement$1);
  if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
    lastSelection = currentSelection;

    var syntheticEvent = SyntheticEvent.getPooled(eventTypes$3.select, activeElementInst$1, nativeEvent, nativeEventTarget);

    syntheticEvent.type = 'select';
    syntheticEvent.target = activeElement$1;

    accumulateTwoPhaseDispatches(syntheticEvent);

    return syntheticEvent;
  }

  return null;
}

/**
 * This plugin creates an `onSelect` event that normalizes select events
 * across form elements.
 *
 * Supported elements are:
 * - input (see `isTextInputElement`)
 * - textarea
 * - contentEditable
 *
 * This differs from native browser implementations in the following ways:
 * - Fires on contentEditable fields as well as inputs.
 * - Fires for collapsed selection.
 * - Fires after user input.
 */
var SelectEventPlugin = {
  eventTypes: eventTypes$3,

  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {
    var doc = getEventTargetDocument(nativeEventTarget);
    // Track whether all listeners exists for this plugin. If none exist, we do
    // not extract events. See #3639.
    if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
      return null;
    }

    var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

    switch (topLevelType) {
      // Track the input node that has focus.
      case TOP_FOCUS:
        if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
          activeElement$1 = targetNode;
          activeElementInst$1 = targetInst;
          lastSelection = null;
        }
        break;
      case TOP_BLUR:
        activeElement$1 = null;
        activeElementInst$1 = null;
        lastSelection = null;
        break;
      // Don't fire the event while the user is dragging. This matches the
      // semantics of the native select event.
      case TOP_MOUSE_DOWN:
        mouseDown = true;
        break;
      case TOP_CONTEXT_MENU:
      case TOP_MOUSE_UP:
      case TOP_DRAG_END:
        mouseDown = false;
        return constructSelectEvent(nativeEvent, nativeEventTarget);
      // Chrome and IE fire non-standard event when selection is changed (and
      // sometimes when it hasn't). IE's event fires out of order with respect
      // to key and input events on deletion, so we discard it.
      //
      // Firefox doesn't support selectionchange, so check selection status
      // after each key entry. The selection changes after keydown and before
      // keyup, but we check on keydown as well in the case of holding down a
      // key, when multiple keydown events are fired but only one keyup is.
      // This is also our approach for IE handling, for the reason above.
      case TOP_SELECTION_CHANGE:
        if (skipSelectionChangeEvent) {
          break;
        }
      // falls through
      case TOP_KEY_DOWN:
      case TOP_KEY_UP:
        return constructSelectEvent(nativeEvent, nativeEventTarget);
    }

    return null;
  }
};

/**
 * Inject modules for resolving DOM hierarchy and plugin ordering.
 */
injection.injectEventPluginOrder(DOMEventPluginOrder);
setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);

/**
 * Some important event plugins included by default (without having to require
 * them).
 */
injection.injectEventPluginsByName({
  SimpleEventPlugin: SimpleEventPlugin,
  EnterLeaveEventPlugin: EnterLeaveEventPlugin,
  ChangeEventPlugin: ChangeEventPlugin,
  SelectEventPlugin: SelectEventPlugin,
  BeforeInputEventPlugin: BeforeInputEventPlugin
});

var didWarnSelectedSetOnOption = false;
var didWarnInvalidChild = false;

function flattenChildren(children) {
  var content = '';

  // Flatten children. We'll warn if they are invalid
  // during validateProps() which runs for hydration too.
  // Note that this would throw on non-element objects.
  // Elements are stringified (which is normally irrelevant
  // but matters for <fbt>).
  React.Children.forEach(children, function (child) {
    if (child == null) {
      return;
    }
    content += child;
    // Note: we don't warn about invalid children here.
    // Instead, this is done separately below so that
    // it happens during the hydration codepath too.
  });

  return content;
}

/**
 * Implements an <option> host component that warns when `selected` is set.
 */

function validateProps(element, props) {
  {
    // This mirrors the codepath above, but runs for hydration too.
    // Warn about invalid children here so that client and hydration are consistent.
    // TODO: this seems like it could cause a DEV-only throw for hydration
    // if children contains a non-element object. We should try to avoid that.
    if (typeof props.children === 'object' && props.children !== null) {
      React.Children.forEach(props.children, function (child) {
        if (child == null) {
          return;
        }
        if (typeof child === 'string' || typeof child === 'number') {
          return;
        }
        if (typeof child.type !== 'string') {
          return;
        }
        if (!didWarnInvalidChild) {
          didWarnInvalidChild = true;
          warning$1(false, 'Only strings and numbers are supported as <option> children.');
        }
      });
    }

    // TODO: Remove support for `selected` in <option>.
    if (props.selected != null && !didWarnSelectedSetOnOption) {
      warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
      didWarnSelectedSetOnOption = true;
    }
  }
}

function postMountWrapper$1(element, props) {
  // value="" should make a value attribute (#6219)
  if (props.value != null) {
    element.setAttribute('value', toString(getToStringValue(props.value)));
  }
}

function getHostProps$1(element, props) {
  var hostProps = _assign({ children: undefined }, props);
  var content = flattenChildren(props.children);

  if (content) {
    hostProps.children = content;
  }

  return hostProps;
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnValueDefaultValue$1 = void 0;

{
  didWarnValueDefaultValue$1 = false;
}

function getDeclarationErrorAddendum() {
  var ownerName = getCurrentFiberOwnerNameInDevOrNull();
  if (ownerName) {
    return '\n\nCheck the render method of `' + ownerName + '`.';
  }
  return '';
}

var valuePropNames = ['value', 'defaultValue'];

/**
 * Validation function for `value` and `defaultValue`.
 */
function checkSelectPropTypes(props) {
  ReactControlledValuePropTypes.checkPropTypes('select', props);

  for (var i = 0; i < valuePropNames.length; i++) {
    var propName = valuePropNames[i];
    if (props[propName] == null) {
      continue;
    }
    var isArray = Array.isArray(props[propName]);
    if (props.multiple && !isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
    } else if (!props.multiple && isArray) {
      warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
    }
  }
}

function updateOptions(node, multiple, propValue, setDefaultSelected) {
  var options = node.options;

  if (multiple) {
    var selectedValues = propValue;
    var selectedValue = {};
    for (var i = 0; i < selectedValues.length; i++) {
      // Prefix to avoid chaos with special keys.
      selectedValue['$' + selectedValues[i]] = true;
    }
    for (var _i = 0; _i < options.length; _i++) {
      var selected = selectedValue.hasOwnProperty('$' + options[_i].value);
      if (options[_i].selected !== selected) {
        options[_i].selected = selected;
      }
      if (selected && setDefaultSelected) {
        options[_i].defaultSelected = true;
      }
    }
  } else {
    // Do not set `select.value` as exact behavior isn't consistent across all
    // browsers for all cases.
    var _selectedValue = toString(getToStringValue(propValue));
    var defaultSelected = null;
    for (var _i2 = 0; _i2 < options.length; _i2++) {
      if (options[_i2].value === _selectedValue) {
        options[_i2].selected = true;
        if (setDefaultSelected) {
          options[_i2].defaultSelected = true;
        }
        return;
      }
      if (defaultSelected === null && !options[_i2].disabled) {
        defaultSelected = options[_i2];
      }
    }
    if (defaultSelected !== null) {
      defaultSelected.selected = true;
    }
  }
}

/**
 * Implements a <select> host component that allows optionally setting the
 * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
 * stringable. If `multiple` is true, the prop must be an array of stringables.
 *
 * If `value` is not supplied (or null/undefined), user actions that change the
 * selected option will trigger updates to the rendered options.
 *
 * If it is supplied (and not null/undefined), the rendered options will not
 * update in response to user actions. Instead, the `value` prop must change in
 * order for the rendered options to update.
 *
 * If `defaultValue` is provided, any options with the supplied values will be
 * selected.
 */

function getHostProps$2(element, props) {
  return _assign({}, props, {
    value: undefined
  });
}

function initWrapperState$1(element, props) {
  var node = element;
  {
    checkSelectPropTypes(props);
  }

  node._wrapperState = {
    wasMultiple: !!props.multiple
  };

  {
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
      warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
      didWarnValueDefaultValue$1 = true;
    }
  }
}

function postMountWrapper$2(element, props) {
  var node = element;
  node.multiple = !!props.multiple;
  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (props.defaultValue != null) {
    updateOptions(node, !!props.multiple, props.defaultValue, true);
  }
}

function postUpdateWrapper(element, props) {
  var node = element;
  var wasMultiple = node._wrapperState.wasMultiple;
  node._wrapperState.wasMultiple = !!props.multiple;

  var value = props.value;
  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  } else if (wasMultiple !== !!props.multiple) {
    // For simplicity, reapply `defaultValue` if `multiple` is toggled.
    if (props.defaultValue != null) {
      updateOptions(node, !!props.multiple, props.defaultValue, true);
    } else {
      // Revert the select back to its default unselected state.
      updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
    }
  }
}

function restoreControlledState$2(element, props) {
  var node = element;
  var value = props.value;

  if (value != null) {
    updateOptions(node, !!props.multiple, value, false);
  }
}

var didWarnValDefaultVal = false;

/**
 * Implements a <textarea> host component that allows setting `value`, and
 * `defaultValue`. This differs from the traditional DOM API because value is
 * usually set as PCDATA children.
 *
 * If `value` is not supplied (or null/undefined), user actions that affect the
 * value will trigger updates to the element.
 *
 * If `value` is supplied (and not null/undefined), the rendered element will
 * not trigger updates to the element. Instead, the `value` prop must change in
 * order for the rendered element to be updated.
 *
 * The rendered element will be initialized with an empty value, the prop
 * `defaultValue` if specified, or the children content (deprecated).
 */

function getHostProps$3(element, props) {
  var node = element;
  !(props.dangerouslySetInnerHTML == null) ? invariant(false, '`dangerouslySetInnerHTML` does not make sense on <textarea>.') : void 0;

  // Always set children to the same thing. In IE9, the selection range will
  // get reset if `textContent` is mutated.  We could add a check in setTextContent
  // to only set the value if/when the value differs from the node value (which would
  // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
  // solution. The value can be a boolean or object so that's why it's forced
  // to be a string.
  var hostProps = _assign({}, props, {
    value: undefined,
    defaultValue: undefined,
    children: toString(node._wrapperState.initialValue)
  });

  return hostProps;
}

function initWrapperState$2(element, props) {
  var node = element;
  {
    ReactControlledValuePropTypes.checkPropTypes('textarea', props);
    if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
      warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnValDefaultVal = true;
    }
  }

  var initialValue = props.value;

  // Only bother fetching default value if we're going to use it
  if (initialValue == null) {
    var defaultValue = props.defaultValue;
    // TODO (yungsters): Remove support for children content in <textarea>.
    var children = props.children;
    if (children != null) {
      {
        warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
      }
      !(defaultValue == null) ? invariant(false, 'If you supply `defaultValue` on a <textarea>, do not pass children.') : void 0;
      if (Array.isArray(children)) {
        !(children.length <= 1) ? invariant(false, '<textarea> can only have at most one child.') : void 0;
        children = children[0];
      }

      defaultValue = children;
    }
    if (defaultValue == null) {
      defaultValue = '';
    }
    initialValue = defaultValue;
  }

  node._wrapperState = {
    initialValue: getToStringValue(initialValue)
  };
}

function updateWrapper$1(element, props) {
  var node = element;
  var value = getToStringValue(props.value);
  var defaultValue = getToStringValue(props.defaultValue);
  if (value != null) {
    // Cast `value` to a string to ensure the value is set correctly. While
    // browsers typically do this as necessary, jsdom doesn't.
    var newValue = toString(value);
    // To avoid side effects (such as losing text selection), only set value if changed
    if (newValue !== node.value) {
      node.value = newValue;
    }
    if (props.defaultValue == null && node.defaultValue !== newValue) {
      node.defaultValue = newValue;
    }
  }
  if (defaultValue != null) {
    node.defaultValue = toString(defaultValue);
  }
}

function postMountWrapper$3(element, props) {
  var node = element;
  // This is in postMount because we need access to the DOM node, which is not
  // available until after the component has mounted.
  var textContent = node.textContent;

  // Only set node.value if textContent is equal to the expected
  // initial value. In IE10/IE11 there is a bug where the placeholder attribute
  // will populate textContent as well.
  // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/
  if (textContent === node._wrapperState.initialValue) {
    node.value = textContent;
  }
}

function restoreControlledState$3(element, props) {
  // DOM component is still mounted; update
  updateWrapper$1(element, props);
}

var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';

var Namespaces = {
  html: HTML_NAMESPACE$1,
  mathml: MATH_NAMESPACE,
  svg: SVG_NAMESPACE
};

// Assumes there is no parent namespace.
function getIntrinsicNamespace(type) {
  switch (type) {
    case 'svg':
      return SVG_NAMESPACE;
    case 'math':
      return MATH_NAMESPACE;
    default:
      return HTML_NAMESPACE$1;
  }
}

function getChildNamespace(parentNamespace, type) {
  if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
    // No (or default) parent namespace: potential entry point.
    return getIntrinsicNamespace(type);
  }
  if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
    // We're leaving SVG.
    return HTML_NAMESPACE$1;
  }
  // By default, pass namespace below.
  return parentNamespace;
}

/* globals MSApp */

/**
 * Create a function which has 'unsafe' privileges (required by windows8 apps)
 */
var createMicrosoftUnsafeLocalFunction = function (func) {
  if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
    return function (arg0, arg1, arg2, arg3) {
      MSApp.execUnsafeLocalFunction(function () {
        return func(arg0, arg1, arg2, arg3);
      });
    };
  } else {
    return func;
  }
};

// SVG temp container for IE lacking innerHTML
var reusableSVGContainer = void 0;

/**
 * Set the innerHTML property of a node
 *
 * @param {DOMElement} node
 * @param {string} html
 * @internal
 */
var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
  // IE does not have innerHTML for SVG nodes, so instead we inject the
  // new markup in a temp node and then move the child nodes across into
  // the target node

  if (node.namespaceURI === Namespaces.svg && !('innerHTML' in node)) {
    reusableSVGContainer = reusableSVGContainer || document.createElement('div');
    reusableSVGContainer.innerHTML = '<svg>' + html + '</svg>';
    var svgNode = reusableSVGContainer.firstChild;
    while (node.firstChild) {
      node.removeChild(node.firstChild);
    }
    while (svgNode.firstChild) {
      node.appendChild(svgNode.firstChild);
    }
  } else {
    node.innerHTML = html;
  }
});

/**
 * Set the textContent property of a node. For text updates, it's faster
 * to set the `nodeValue` of the Text node directly instead of using
 * `.textContent` which will remove the existing node and create a new one.
 *
 * @param {DOMElement} node
 * @param {string} text
 * @internal
 */
var setTextContent = function (node, text) {
  if (text) {
    var firstChild = node.firstChild;

    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
      firstChild.nodeValue = text;
      return;
    }
  }
  node.textContent = text;
};

// List derived from Gecko source code:
// https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js
var shorthandToLonghand = {
  animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
  background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
  backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
  border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
  borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
  borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
  borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
  borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
  borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
  borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
  borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
  borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
  borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
  borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
  borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
  borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
  columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
  columns: ['columnCount', 'columnWidth'],
  flex: ['flexBasis', 'flexGrow', 'flexShrink'],
  flexFlow: ['flexDirection', 'flexWrap'],
  font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
  fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
  gap: ['columnGap', 'rowGap'],
  grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
  gridColumn: ['gridColumnEnd', 'gridColumnStart'],
  gridColumnGap: ['columnGap'],
  gridGap: ['columnGap', 'rowGap'],
  gridRow: ['gridRowEnd', 'gridRowStart'],
  gridRowGap: ['rowGap'],
  gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
  listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
  margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
  marker: ['markerEnd', 'markerMid', 'markerStart'],
  mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
  maskPosition: ['maskPositionX', 'maskPositionY'],
  outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
  overflow: ['overflowX', 'overflowY'],
  padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
  placeContent: ['alignContent', 'justifyContent'],
  placeItems: ['alignItems', 'justifyItems'],
  placeSelf: ['alignSelf', 'justifySelf'],
  textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
  textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
  transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
  wordWrap: ['overflowWrap']
};

/**
 * CSS properties which accept numbers but are not in units of "px".
 */
var isUnitlessNumber = {
  animationIterationCount: true,
  borderImageOutset: true,
  borderImageSlice: true,
  borderImageWidth: true,
  boxFlex: true,
  boxFlexGroup: true,
  boxOrdinalGroup: true,
  columnCount: true,
  columns: true,
  flex: true,
  flexGrow: true,
  flexPositive: true,
  flexShrink: true,
  flexNegative: true,
  flexOrder: true,
  gridArea: true,
  gridRow: true,
  gridRowEnd: true,
  gridRowSpan: true,
  gridRowStart: true,
  gridColumn: true,
  gridColumnEnd: true,
  gridColumnSpan: true,
  gridColumnStart: true,
  fontWeight: true,
  lineClamp: true,
  lineHeight: true,
  opacity: true,
  order: true,
  orphans: true,
  tabSize: true,
  widows: true,
  zIndex: true,
  zoom: true,

  // SVG-related properties
  fillOpacity: true,
  floodOpacity: true,
  stopOpacity: true,
  strokeDasharray: true,
  strokeDashoffset: true,
  strokeMiterlimit: true,
  strokeOpacity: true,
  strokeWidth: true
};

/**
 * @param {string} prefix vendor-specific prefix, eg: Webkit
 * @param {string} key style name, eg: transitionDuration
 * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
 * WebkitTransitionDuration
 */
function prefixKey(prefix, key) {
  return prefix + key.charAt(0).toUpperCase() + key.substring(1);
}

/**
 * Support style names that may come passed in prefixed by adding permutations
 * of vendor prefixes.
 */
var prefixes = ['Webkit', 'ms', 'Moz', 'O'];

// Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
// infinite loop, because it iterates over the newly added props too.
Object.keys(isUnitlessNumber).forEach(function (prop) {
  prefixes.forEach(function (prefix) {
    isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
  });
});

/**
 * Convert a value into the proper css writable value. The style name `name`
 * should be logical (no hyphens), as specified
 * in `CSSProperty.isUnitlessNumber`.
 *
 * @param {string} name CSS property name such as `topMargin`.
 * @param {*} value CSS property value such as `10px`.
 * @return {string} Normalized style value with dimensions applied.
 */
function dangerousStyleValue(name, value, isCustomProperty) {
  // Note that we've removed escapeTextForBrowser() calls here since the
  // whole string will be escaped when the attribute is injected into
  // the markup. If you provide unsafe user data here they can inject
  // arbitrary CSS which may be problematic (I couldn't repro this):
  // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
  // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
  // This is not an XSS hole but instead a potential CSS injection issue
  // which has lead to a greater discussion about how we're going to
  // trust URLs moving forward. See #2115901

  var isEmpty = value == null || typeof value === 'boolean' || value === '';
  if (isEmpty) {
    return '';
  }

  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
    return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
  }

  return ('' + value).trim();
}

var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;

/**
 * Hyphenates a camelcased CSS property name, for example:
 *
 *   > hyphenateStyleName('backgroundColor')
 *   < "background-color"
 *   > hyphenateStyleName('MozTransition')
 *   < "-moz-transition"
 *   > hyphenateStyleName('msTransition')
 *   < "-ms-transition"
 *
 * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
 * is converted to `-ms-`.
 */
function hyphenateStyleName(name) {
  return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
}

var warnValidStyle = function () {};

{
  // 'msTransform' is correct, but the other prefixes should be capitalized
  var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
  var msPattern$1 = /^-ms-/;
  var hyphenPattern = /-(.)/g;

  // style values shouldn't contain a semicolon
  var badStyleValueWithSemicolonPattern = /;\s*$/;

  var warnedStyleNames = {};
  var warnedStyleValues = {};
  var warnedForNaNValue = false;
  var warnedForInfinityValue = false;

  var camelize = function (string) {
    return string.replace(hyphenPattern, function (_, character) {
      return character.toUpperCase();
    });
  };

  var warnHyphenatedStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported style property %s. Did you mean %s?', name,
    // As Andi Smith suggests
    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
    // is converted to lowercase `ms`.
    camelize(name.replace(msPattern$1, 'ms-')));
  };

  var warnBadVendoredStyleName = function (name) {
    if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
      return;
    }

    warnedStyleNames[name] = true;
    warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
  };

  var warnStyleValueWithSemicolon = function (name, value) {
    if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
      return;
    }

    warnedStyleValues[value] = true;
    warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
  };

  var warnStyleValueIsNaN = function (name, value) {
    if (warnedForNaNValue) {
      return;
    }

    warnedForNaNValue = true;
    warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
  };

  var warnStyleValueIsInfinity = function (name, value) {
    if (warnedForInfinityValue) {
      return;
    }

    warnedForInfinityValue = true;
    warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
  };

  warnValidStyle = function (name, value) {
    if (name.indexOf('-') > -1) {
      warnHyphenatedStyleName(name);
    } else if (badVendoredStyleNamePattern.test(name)) {
      warnBadVendoredStyleName(name);
    } else if (badStyleValueWithSemicolonPattern.test(value)) {
      warnStyleValueWithSemicolon(name, value);
    }

    if (typeof value === 'number') {
      if (isNaN(value)) {
        warnStyleValueIsNaN(name, value);
      } else if (!isFinite(value)) {
        warnStyleValueIsInfinity(name, value);
      }
    }
  };
}

var warnValidStyle$1 = warnValidStyle;

/**
 * Operations for dealing with CSS properties.
 */

/**
 * This creates a string that is expected to be equivalent to the style
 * attribute generated by server-side rendering. It by-passes warnings and
 * security checks so it's not safe to use this value for anything other than
 * comparison. It is only used in DEV for SSR validation.
 */
function createDangerousStringForStyles(styles) {
  {
    var serialized = '';
    var delimiter = '';
    for (var styleName in styles) {
      if (!styles.hasOwnProperty(styleName)) {
        continue;
      }
      var styleValue = styles[styleName];
      if (styleValue != null) {
        var isCustomProperty = styleName.indexOf('--') === 0;
        serialized += delimiter + hyphenateStyleName(styleName) + ':';
        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);

        delimiter = ';';
      }
    }
    return serialized || null;
  }
}

/**
 * Sets the value for multiple styles on a node.  If a value is specified as
 * '' (empty string), the corresponding style property will be unset.
 *
 * @param {DOMElement} node
 * @param {object} styles
 */
function setValueForStyles(node, styles) {
  var style = node.style;
  for (var styleName in styles) {
    if (!styles.hasOwnProperty(styleName)) {
      continue;
    }
    var isCustomProperty = styleName.indexOf('--') === 0;
    {
      if (!isCustomProperty) {
        warnValidStyle$1(styleName, styles[styleName]);
      }
    }
    var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
    if (styleName === 'float') {
      styleName = 'cssFloat';
    }
    if (isCustomProperty) {
      style.setProperty(styleName, styleValue);
    } else {
      style[styleName] = styleValue;
    }
  }
}

function isValueEmpty(value) {
  return value == null || typeof value === 'boolean' || value === '';
}

/**
 * Given {color: 'red', overflow: 'hidden'} returns {
 *   color: 'color',
 *   overflowX: 'overflow',
 *   overflowY: 'overflow',
 * }. This can be read as "the overflowY property was set by the overflow
 * shorthand". That is, the values are the property that each was derived from.
 */
function expandShorthandMap(styles) {
  var expanded = {};
  for (var key in styles) {
    var longhands = shorthandToLonghand[key] || [key];
    for (var i = 0; i < longhands.length; i++) {
      expanded[longhands[i]] = key;
    }
  }
  return expanded;
}

/**
 * When mixing shorthand and longhand property names, we warn during updates if
 * we expect an incorrect result to occur. In particular, we warn for:
 *
 * Updating a shorthand property (longhand gets overwritten):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
 *   becomes .style.font = 'baz'
 * Removing a shorthand property (longhand gets lost too):
 *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
 *   becomes .style.font = ''
 * Removing a longhand property (should revert to shorthand; doesn't):
 *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
 *   becomes .style.fontVariant = ''
 */
function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
  if (!warnAboutShorthandPropertyCollision) {
    return;
  }

  if (!nextStyles) {
    return;
  }

  var expandedUpdates = expandShorthandMap(styleUpdates);
  var expandedStyles = expandShorthandMap(nextStyles);
  var warnedAbout = {};
  for (var key in expandedUpdates) {
    var originalKey = expandedUpdates[key];
    var correctOriginalKey = expandedStyles[key];
    if (correctOriginalKey && originalKey !== correctOriginalKey) {
      var warningKey = originalKey + ',' + correctOriginalKey;
      if (warnedAbout[warningKey]) {
        continue;
      }
      warnedAbout[warningKey] = true;
      warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
    }
  }
}

// For HTML, certain tags should omit their close tag. We keep a whitelist for
// those special-case tags.

var omittedCloseTags = {
  area: true,
  base: true,
  br: true,
  col: true,
  embed: true,
  hr: true,
  img: true,
  input: true,
  keygen: true,
  link: true,
  meta: true,
  param: true,
  source: true,
  track: true,
  wbr: true
  // NOTE: menuitem's close tag should be omitted, but that causes problems.
};

// For HTML, certain tags cannot have children. This has the same purpose as
// `omittedCloseTags` except that `menuitem` should still have its closing tag.

var voidElementTags = _assign({
  menuitem: true
}, omittedCloseTags);

// TODO: We can remove this if we add invariantWithStack()
// or add stack by default to invariants where possible.
var HTML$1 = '__html';

var ReactDebugCurrentFrame$2 = null;
{
  ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
}

function assertValidProps(tag, props) {
  if (!props) {
    return;
  }
  // Note the use of `==` which checks for null or undefined.
  if (voidElementTags[tag]) {
    !(props.children == null && props.dangerouslySetInnerHTML == null) ? invariant(false, '%s is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.%s', tag, ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
  }
  if (props.dangerouslySetInnerHTML != null) {
    !(props.children == null) ? invariant(false, 'Can only set one of `children` or `props.dangerouslySetInnerHTML`.') : void 0;
    !(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML) ? invariant(false, '`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.') : void 0;
  }
  {
    !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
  }
  !(props.style == null || typeof props.style === 'object') ? invariant(false, 'The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + \'em\'}} when using JSX.%s', ReactDebugCurrentFrame$2.getStackAddendum()) : void 0;
}

function isCustomComponent(tagName, props) {
  if (tagName.indexOf('-') === -1) {
    return typeof props.is === 'string';
  }
  switch (tagName) {
    // These are reserved SVG and MathML elements.
    // We don't mind this whitelist too much because we expect it to never grow.
    // The alternative is to track the namespace in a few places which is convoluted.
    // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
    case 'annotation-xml':
    case 'color-profile':
    case 'font-face':
    case 'font-face-src':
    case 'font-face-uri':
    case 'font-face-format':
    case 'font-face-name':
    case 'missing-glyph':
      return false;
    default:
      return true;
  }
}

// When adding attributes to the HTML or SVG whitelist, be sure to
// also add them to this module to ensure casing and incorrect name
// warnings.
var possibleStandardNames = {
  // HTML
  accept: 'accept',
  acceptcharset: 'acceptCharset',
  'accept-charset': 'acceptCharset',
  accesskey: 'accessKey',
  action: 'action',
  allowfullscreen: 'allowFullScreen',
  alt: 'alt',
  as: 'as',
  async: 'async',
  autocapitalize: 'autoCapitalize',
  autocomplete: 'autoComplete',
  autocorrect: 'autoCorrect',
  autofocus: 'autoFocus',
  autoplay: 'autoPlay',
  autosave: 'autoSave',
  capture: 'capture',
  cellpadding: 'cellPadding',
  cellspacing: 'cellSpacing',
  challenge: 'challenge',
  charset: 'charSet',
  checked: 'checked',
  children: 'children',
  cite: 'cite',
  class: 'className',
  classid: 'classID',
  classname: 'className',
  cols: 'cols',
  colspan: 'colSpan',
  content: 'content',
  contenteditable: 'contentEditable',
  contextmenu: 'contextMenu',
  controls: 'controls',
  controlslist: 'controlsList',
  coords: 'coords',
  crossorigin: 'crossOrigin',
  dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
  data: 'data',
  datetime: 'dateTime',
  default: 'default',
  defaultchecked: 'defaultChecked',
  defaultvalue: 'defaultValue',
  defer: 'defer',
  dir: 'dir',
  disabled: 'disabled',
  download: 'download',
  draggable: 'draggable',
  enctype: 'encType',
  for: 'htmlFor',
  form: 'form',
  formmethod: 'formMethod',
  formaction: 'formAction',
  formenctype: 'formEncType',
  formnovalidate: 'formNoValidate',
  formtarget: 'formTarget',
  frameborder: 'frameBorder',
  headers: 'headers',
  height: 'height',
  hidden: 'hidden',
  high: 'high',
  href: 'href',
  hreflang: 'hrefLang',
  htmlfor: 'htmlFor',
  httpequiv: 'httpEquiv',
  'http-equiv': 'httpEquiv',
  icon: 'icon',
  id: 'id',
  innerhtml: 'innerHTML',
  inputmode: 'inputMode',
  integrity: 'integrity',
  is: 'is',
  itemid: 'itemID',
  itemprop: 'itemProp',
  itemref: 'itemRef',
  itemscope: 'itemScope',
  itemtype: 'itemType',
  keyparams: 'keyParams',
  keytype: 'keyType',
  kind: 'kind',
  label: 'label',
  lang: 'lang',
  list: 'list',
  loop: 'loop',
  low: 'low',
  manifest: 'manifest',
  marginwidth: 'marginWidth',
  marginheight: 'marginHeight',
  max: 'max',
  maxlength: 'maxLength',
  media: 'media',
  mediagroup: 'mediaGroup',
  method: 'method',
  min: 'min',
  minlength: 'minLength',
  multiple: 'multiple',
  muted: 'muted',
  name: 'name',
  nomodule: 'noModule',
  nonce: 'nonce',
  novalidate: 'noValidate',
  open: 'open',
  optimum: 'optimum',
  pattern: 'pattern',
  placeholder: 'placeholder',
  playsinline: 'playsInline',
  poster: 'poster',
  preload: 'preload',
  profile: 'profile',
  radiogroup: 'radioGroup',
  readonly: 'readOnly',
  referrerpolicy: 'referrerPolicy',
  rel: 'rel',
  required: 'required',
  reversed: 'reversed',
  role: 'role',
  rows: 'rows',
  rowspan: 'rowSpan',
  sandbox: 'sandbox',
  scope: 'scope',
  scoped: 'scoped',
  scrolling: 'scrolling',
  seamless: 'seamless',
  selected: 'selected',
  shape: 'shape',
  size: 'size',
  sizes: 'sizes',
  span: 'span',
  spellcheck: 'spellCheck',
  src: 'src',
  srcdoc: 'srcDoc',
  srclang: 'srcLang',
  srcset: 'srcSet',
  start: 'start',
  step: 'step',
  style: 'style',
  summary: 'summary',
  tabindex: 'tabIndex',
  target: 'target',
  title: 'title',
  type: 'type',
  usemap: 'useMap',
  value: 'value',
  width: 'width',
  wmode: 'wmode',
  wrap: 'wrap',

  // SVG
  about: 'about',
  accentheight: 'accentHeight',
  'accent-height': 'accentHeight',
  accumulate: 'accumulate',
  additive: 'additive',
  alignmentbaseline: 'alignmentBaseline',
  'alignment-baseline': 'alignmentBaseline',
  allowreorder: 'allowReorder',
  alphabetic: 'alphabetic',
  amplitude: 'amplitude',
  arabicform: 'arabicForm',
  'arabic-form': 'arabicForm',
  ascent: 'ascent',
  attributename: 'attributeName',
  attributetype: 'attributeType',
  autoreverse: 'autoReverse',
  azimuth: 'azimuth',
  basefrequency: 'baseFrequency',
  baselineshift: 'baselineShift',
  'baseline-shift': 'baselineShift',
  baseprofile: 'baseProfile',
  bbox: 'bbox',
  begin: 'begin',
  bias: 'bias',
  by: 'by',
  calcmode: 'calcMode',
  capheight: 'capHeight',
  'cap-height': 'capHeight',
  clip: 'clip',
  clippath: 'clipPath',
  'clip-path': 'clipPath',
  clippathunits: 'clipPathUnits',
  cliprule: 'clipRule',
  'clip-rule': 'clipRule',
  color: 'color',
  colorinterpolation: 'colorInterpolation',
  'color-interpolation': 'colorInterpolation',
  colorinterpolationfilters: 'colorInterpolationFilters',
  'color-interpolation-filters': 'colorInterpolationFilters',
  colorprofile: 'colorProfile',
  'color-profile': 'colorProfile',
  colorrendering: 'colorRendering',
  'color-rendering': 'colorRendering',
  contentscripttype: 'contentScriptType',
  contentstyletype: 'contentStyleType',
  cursor: 'cursor',
  cx: 'cx',
  cy: 'cy',
  d: 'd',
  datatype: 'datatype',
  decelerate: 'decelerate',
  descent: 'descent',
  diffuseconstant: 'diffuseConstant',
  direction: 'direction',
  display: 'display',
  divisor: 'divisor',
  dominantbaseline: 'dominantBaseline',
  'dominant-baseline': 'dominantBaseline',
  dur: 'dur',
  dx: 'dx',
  dy: 'dy',
  edgemode: 'edgeMode',
  elevation: 'elevation',
  enablebackground: 'enableBackground',
  'enable-background': 'enableBackground',
  end: 'end',
  exponent: 'exponent',
  externalresourcesrequired: 'externalResourcesRequired',
  fill: 'fill',
  fillopacity: 'fillOpacity',
  'fill-opacity': 'fillOpacity',
  fillrule: 'fillRule',
  'fill-rule': 'fillRule',
  filter: 'filter',
  filterres: 'filterRes',
  filterunits: 'filterUnits',
  floodopacity: 'floodOpacity',
  'flood-opacity': 'floodOpacity',
  floodcolor: 'floodColor',
  'flood-color': 'floodColor',
  focusable: 'focusable',
  fontfamily: 'fontFamily',
  'font-family': 'fontFamily',
  fontsize: 'fontSize',
  'font-size': 'fontSize',
  fontsizeadjust: 'fontSizeAdjust',
  'font-size-adjust': 'fontSizeAdjust',
  fontstretch: 'fontStretch',
  'font-stretch': 'fontStretch',
  fontstyle: 'fontStyle',
  'font-style': 'fontStyle',
  fontvariant: 'fontVariant',
  'font-variant': 'fontVariant',
  fontweight: 'fontWeight',
  'font-weight': 'fontWeight',
  format: 'format',
  from: 'from',
  fx: 'fx',
  fy: 'fy',
  g1: 'g1',
  g2: 'g2',
  glyphname: 'glyphName',
  'glyph-name': 'glyphName',
  glyphorientationhorizontal: 'glyphOrientationHorizontal',
  'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
  glyphorientationvertical: 'glyphOrientationVertical',
  'glyph-orientation-vertical': 'glyphOrientationVertical',
  glyphref: 'glyphRef',
  gradienttransform: 'gradientTransform',
  gradientunits: 'gradientUnits',
  hanging: 'hanging',
  horizadvx: 'horizAdvX',
  'horiz-adv-x': 'horizAdvX',
  horizoriginx: 'horizOriginX',
  'horiz-origin-x': 'horizOriginX',
  ideographic: 'ideographic',
  imagerendering: 'imageRendering',
  'image-rendering': 'imageRendering',
  in2: 'in2',
  in: 'in',
  inlist: 'inlist',
  intercept: 'intercept',
  k1: 'k1',
  k2: 'k2',
  k3: 'k3',
  k4: 'k4',
  k: 'k',
  kernelmatrix: 'kernelMatrix',
  kernelunitlength: 'kernelUnitLength',
  kerning: 'kerning',
  keypoints: 'keyPoints',
  keysplines: 'keySplines',
  keytimes: 'keyTimes',
  lengthadjust: 'lengthAdjust',
  letterspacing: 'letterSpacing',
  'letter-spacing': 'letterSpacing',
  lightingcolor: 'lightingColor',
  'lighting-color': 'lightingColor',
  limitingconeangle: 'limitingConeAngle',
  local: 'local',
  markerend: 'markerEnd',
  'marker-end': 'markerEnd',
  markerheight: 'markerHeight',
  markermid: 'markerMid',
  'marker-mid': 'markerMid',
  markerstart: 'markerStart',
  'marker-start': 'markerStart',
  markerunits: 'markerUnits',
  markerwidth: 'markerWidth',
  mask: 'mask',
  maskcontentunits: 'maskContentUnits',
  maskunits: 'maskUnits',
  mathematical: 'mathematical',
  mode: 'mode',
  numoctaves: 'numOctaves',
  offset: 'offset',
  opacity: 'opacity',
  operator: 'operator',
  order: 'order',
  orient: 'orient',
  orientation: 'orientation',
  origin: 'origin',
  overflow: 'overflow',
  overlineposition: 'overlinePosition',
  'overline-position': 'overlinePosition',
  overlinethickness: 'overlineThickness',
  'overline-thickness': 'overlineThickness',
  paintorder: 'paintOrder',
  'paint-order': 'paintOrder',
  panose1: 'panose1',
  'panose-1': 'panose1',
  pathlength: 'pathLength',
  patterncontentunits: 'patternContentUnits',
  patterntransform: 'patternTransform',
  patternunits: 'patternUnits',
  pointerevents: 'pointerEvents',
  'pointer-events': 'pointerEvents',
  points: 'points',
  pointsatx: 'pointsAtX',
  pointsaty: 'pointsAtY',
  pointsatz: 'pointsAtZ',
  prefix: 'prefix',
  preservealpha: 'preserveAlpha',
  preserveaspectratio: 'preserveAspectRatio',
  primitiveunits: 'primitiveUnits',
  property: 'property',
  r: 'r',
  radius: 'radius',
  refx: 'refX',
  refy: 'refY',
  renderingintent: 'renderingIntent',
  'rendering-intent': 'renderingIntent',
  repeatcount: 'repeatCount',
  repeatdur: 'repeatDur',
  requiredextensions: 'requiredExtensions',
  requiredfeatures: 'requiredFeatures',
  resource: 'resource',
  restart: 'restart',
  result: 'result',
  results: 'results',
  rotate: 'rotate',
  rx: 'rx',
  ry: 'ry',
  scale: 'scale',
  security: 'security',
  seed: 'seed',
  shaperendering: 'shapeRendering',
  'shape-rendering': 'shapeRendering',
  slope: 'slope',
  spacing: 'spacing',
  specularconstant: 'specularConstant',
  specularexponent: 'specularExponent',
  speed: 'speed',
  spreadmethod: 'spreadMethod',
  startoffset: 'startOffset',
  stddeviation: 'stdDeviation',
  stemh: 'stemh',
  stemv: 'stemv',
  stitchtiles: 'stitchTiles',
  stopcolor: 'stopColor',
  'stop-color': 'stopColor',
  stopopacity: 'stopOpacity',
  'stop-opacity': 'stopOpacity',
  strikethroughposition: 'strikethroughPosition',
  'strikethrough-position': 'strikethroughPosition',
  strikethroughthickness: 'strikethroughThickness',
  'strikethrough-thickness': 'strikethroughThickness',
  string: 'string',
  stroke: 'stroke',
  strokedasharray: 'strokeDasharray',
  'stroke-dasharray': 'strokeDasharray',
  strokedashoffset: 'strokeDashoffset',
  'stroke-dashoffset': 'strokeDashoffset',
  strokelinecap: 'strokeLinecap',
  'stroke-linecap': 'strokeLinecap',
  strokelinejoin: 'strokeLinejoin',
  'stroke-linejoin': 'strokeLinejoin',
  strokemiterlimit: 'strokeMiterlimit',
  'stroke-miterlimit': 'strokeMiterlimit',
  strokewidth: 'strokeWidth',
  'stroke-width': 'strokeWidth',
  strokeopacity: 'strokeOpacity',
  'stroke-opacity': 'strokeOpacity',
  suppresscontenteditablewarning: 'suppressContentEditableWarning',
  suppresshydrationwarning: 'suppressHydrationWarning',
  surfacescale: 'surfaceScale',
  systemlanguage: 'systemLanguage',
  tablevalues: 'tableValues',
  targetx: 'targetX',
  targety: 'targetY',
  textanchor: 'textAnchor',
  'text-anchor': 'textAnchor',
  textdecoration: 'textDecoration',
  'text-decoration': 'textDecoration',
  textlength: 'textLength',
  textrendering: 'textRendering',
  'text-rendering': 'textRendering',
  to: 'to',
  transform: 'transform',
  typeof: 'typeof',
  u1: 'u1',
  u2: 'u2',
  underlineposition: 'underlinePosition',
  'underline-position': 'underlinePosition',
  underlinethickness: 'underlineThickness',
  'underline-thickness': 'underlineThickness',
  unicode: 'unicode',
  unicodebidi: 'unicodeBidi',
  'unicode-bidi': 'unicodeBidi',
  unicoderange: 'unicodeRange',
  'unicode-range': 'unicodeRange',
  unitsperem: 'unitsPerEm',
  'units-per-em': 'unitsPerEm',
  unselectable: 'unselectable',
  valphabetic: 'vAlphabetic',
  'v-alphabetic': 'vAlphabetic',
  values: 'values',
  vectoreffect: 'vectorEffect',
  'vector-effect': 'vectorEffect',
  version: 'version',
  vertadvy: 'vertAdvY',
  'vert-adv-y': 'vertAdvY',
  vertoriginx: 'vertOriginX',
  'vert-origin-x': 'vertOriginX',
  vertoriginy: 'vertOriginY',
  'vert-origin-y': 'vertOriginY',
  vhanging: 'vHanging',
  'v-hanging': 'vHanging',
  videographic: 'vIdeographic',
  'v-ideographic': 'vIdeographic',
  viewbox: 'viewBox',
  viewtarget: 'viewTarget',
  visibility: 'visibility',
  vmathematical: 'vMathematical',
  'v-mathematical': 'vMathematical',
  vocab: 'vocab',
  widths: 'widths',
  wordspacing: 'wordSpacing',
  'word-spacing': 'wordSpacing',
  writingmode: 'writingMode',
  'writing-mode': 'writingMode',
  x1: 'x1',
  x2: 'x2',
  x: 'x',
  xchannelselector: 'xChannelSelector',
  xheight: 'xHeight',
  'x-height': 'xHeight',
  xlinkactuate: 'xlinkActuate',
  'xlink:actuate': 'xlinkActuate',
  xlinkarcrole: 'xlinkArcrole',
  'xlink:arcrole': 'xlinkArcrole',
  xlinkhref: 'xlinkHref',
  'xlink:href': 'xlinkHref',
  xlinkrole: 'xlinkRole',
  'xlink:role': 'xlinkRole',
  xlinkshow: 'xlinkShow',
  'xlink:show': 'xlinkShow',
  xlinktitle: 'xlinkTitle',
  'xlink:title': 'xlinkTitle',
  xlinktype: 'xlinkType',
  'xlink:type': 'xlinkType',
  xmlbase: 'xmlBase',
  'xml:base': 'xmlBase',
  xmllang: 'xmlLang',
  'xml:lang': 'xmlLang',
  xmlns: 'xmlns',
  'xml:space': 'xmlSpace',
  xmlnsxlink: 'xmlnsXlink',
  'xmlns:xlink': 'xmlnsXlink',
  xmlspace: 'xmlSpace',
  y1: 'y1',
  y2: 'y2',
  y: 'y',
  ychannelselector: 'yChannelSelector',
  z: 'z',
  zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
  'aria-current': 0, // state
  'aria-details': 0,
  'aria-disabled': 0, // state
  'aria-hidden': 0, // state
  'aria-invalid': 0, // state
  'aria-keyshortcuts': 0,
  'aria-label': 0,
  'aria-roledescription': 0,
  // Widget Attributes
  'aria-autocomplete': 0,
  'aria-checked': 0,
  'aria-expanded': 0,
  'aria-haspopup': 0,
  'aria-level': 0,
  'aria-modal': 0,
  'aria-multiline': 0,
  'aria-multiselectable': 0,
  'aria-orientation': 0,
  'aria-placeholder': 0,
  'aria-pressed': 0,
  'aria-readonly': 0,
  'aria-required': 0,
  'aria-selected': 0,
  'aria-sort': 0,
  'aria-valuemax': 0,
  'aria-valuemin': 0,
  'aria-valuenow': 0,
  'aria-valuetext': 0,
  // Live Region Attributes
  'aria-atomic': 0,
  'aria-busy': 0,
  'aria-live': 0,
  'aria-relevant': 0,
  // Drag-and-Drop Attributes
  'aria-dropeffect': 0,
  'aria-grabbed': 0,
  // Relationship Attributes
  'aria-activedescendant': 0,
  'aria-colcount': 0,
  'aria-colindex': 0,
  'aria-colspan': 0,
  'aria-controls': 0,
  'aria-describedby': 0,
  'aria-errormessage': 0,
  'aria-flowto': 0,
  'aria-labelledby': 0,
  'aria-owns': 0,
  'aria-posinset': 0,
  'aria-rowcount': 0,
  'aria-rowindex': 0,
  'aria-rowspan': 0,
  'aria-setsize': 0
};

var warnedProperties = {};
var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

var hasOwnProperty$2 = Object.prototype.hasOwnProperty;

function validateProperty(tagName, name) {
  if (hasOwnProperty$2.call(warnedProperties, name) && warnedProperties[name]) {
    return true;
  }

  if (rARIACamel.test(name)) {
    var ariaName = 'aria-' + name.slice(4).toLowerCase();
    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (correctName == null) {
      warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
      warnedProperties[name] = true;
      return true;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== correctName) {
      warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
      warnedProperties[name] = true;
      return true;
    }
  }

  if (rARIA.test(name)) {
    var lowerCasedName = name.toLowerCase();
    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;

    // If this is an aria-* attribute, but is not listed in the known DOM
    // DOM properties, then it is an invalid aria-* attribute.
    if (standardName == null) {
      warnedProperties[name] = true;
      return false;
    }
    // aria-* attributes should be lowercase; suggest the lowercase version.
    if (name !== standardName) {
      warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
      warnedProperties[name] = true;
      return true;
    }
  }

  return true;
}

function warnInvalidARIAProps(type, props) {
  var invalidProps = [];

  for (var key in props) {
    var isValid = validateProperty(type, key);
    if (!isValid) {
      invalidProps.push(key);
    }
  }

  var unknownPropString = invalidProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');

  if (invalidProps.length === 1) {
    warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  } else if (invalidProps.length > 1) {
    warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
  }
}

function validateProperties(type, props) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnInvalidARIAProps(type, props);
}

var didWarnValueNull = false;

function validateProperties$1(type, props) {
  if (type !== 'input' && type !== 'textarea' && type !== 'select') {
    return;
  }

  if (props != null && props.value === null && !didWarnValueNull) {
    didWarnValueNull = true;
    if (type === 'select' && props.multiple) {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
    } else {
      warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
    }
  }
}

var validateProperty$1 = function () {};

{
  var warnedProperties$1 = {};
  var _hasOwnProperty = Object.prototype.hasOwnProperty;
  var EVENT_NAME_REGEX = /^on./;
  var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
  var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
  var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

  validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
    if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
      return true;
    }

    var lowerCasedName = name.toLowerCase();
    if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
      warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
      warnedProperties$1[name] = true;
      return true;
    }

    // We can't rely on the event system being injected on the server.
    if (canUseEventSystem) {
      if (registrationNameModules.hasOwnProperty(name)) {
        return true;
      }
      var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;
      if (registrationName != null) {
        warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
        warnedProperties$1[name] = true;
        return true;
      }
      if (EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (EVENT_NAME_REGEX.test(name)) {
      // If no event plugins have been injected, we are in a server environment.
      // So we can't tell if the event name is correct for sure, but we can filter
      // out known bad ones like `onclick`. We can't suggest a specific replacement though.
      if (INVALID_EVENT_NAME_REGEX.test(name)) {
        warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Let the ARIA attribute hook validate ARIA attributes
    if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
      return true;
    }

    if (lowerCasedName === 'innerhtml') {
      warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'aria') {
      warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
      warnedProperties$1[name] = true;
      return true;
    }

    if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
      warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'number' && isNaN(value)) {
      warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
      warnedProperties$1[name] = true;
      return true;
    }

    var propertyInfo = getPropertyInfo(name);
    var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;

    // Known attributes should match the casing specified in the property config.
    if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      var standardName = possibleStandardNames[lowerCasedName];
      if (standardName !== name) {
        warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
        warnedProperties$1[name] = true;
        return true;
      }
    } else if (!isReserved && name !== lowerCasedName) {
      // Unknown attributes should have lowercase casing since that's how they
      // will be cased anyway with server rendering.
      warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
      warnedProperties$1[name] = true;
      return true;
    }

    if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      if (value) {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
      } else {
        warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
      }
      warnedProperties$1[name] = true;
      return true;
    }

    // Now that we've validated casing, do not validate
    // data types for reserved props
    if (isReserved) {
      return true;
    }

    // Warn when a known attribute is a bad type
    if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
      warnedProperties$1[name] = true;
      return false;
    }

    // Warn when passing the strings 'false' or 'true' into a boolean prop
    if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
      warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
      warnedProperties$1[name] = true;
      return true;
    }

    return true;
  };
}

var warnUnknownProperties = function (type, props, canUseEventSystem) {
  var unknownProps = [];
  for (var key in props) {
    var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);
    if (!isValid) {
      unknownProps.push(key);
    }
  }

  var unknownPropString = unknownProps.map(function (prop) {
    return '`' + prop + '`';
  }).join(', ');
  if (unknownProps.length === 1) {
    warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  } else if (unknownProps.length > 1) {
    warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
  }
};

function validateProperties$2(type, props, canUseEventSystem) {
  if (isCustomComponent(type, props)) {
    return;
  }
  warnUnknownProperties(type, props, canUseEventSystem);
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var didWarnInvalidHydration = false;
var didWarnShadyDOM = false;

var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
var AUTOFOCUS = 'autoFocus';
var CHILDREN = 'children';
var STYLE$1 = 'style';
var HTML = '__html';

var HTML_NAMESPACE = Namespaces.html;


var warnedUnknownTags = void 0;
var suppressHydrationWarning = void 0;

var validatePropertiesInDevelopment = void 0;
var warnForTextDifference = void 0;
var warnForPropDifference = void 0;
var warnForExtraAttributes = void 0;
var warnForInvalidEventListener = void 0;
var canDiffStyleForHydrationWarning = void 0;

var normalizeMarkupForTextOrAttribute = void 0;
var normalizeHTML = void 0;

{
  warnedUnknownTags = {
    // Chrome is the only major browser not shipping <time>. But as of July
    // 2017 it intends to ship it due to widespread usage. We intentionally
    // *don't* warn for <time> even if it's unrecognized by Chrome because
    // it soon will be, and many apps have been using it anyway.
    time: true,
    // There are working polyfills for <dialog>. Let people use it.
    dialog: true,
    // Electron ships a custom <webview> tag to display external web content in
    // an isolated frame and process.
    // This tag is not present in non Electron environments such as JSDom which
    // is often used for testing purposes.
    // @see https://electronjs.org/docs/api/webview-tag
    webview: true
  };

  validatePropertiesInDevelopment = function (type, props) {
    validateProperties(type, props);
    validateProperties$1(type, props);
    validateProperties$2(type, props, /* canUseEventSystem */true);
  };

  // IE 11 parses & normalizes the style attribute as opposed to other
  // browsers. It adds spaces and sorts the properties in some
  // non-alphabetical order. Handling that would require sorting CSS
  // properties in the client & server versions or applying
  // `expectedStyle` to a temporary DOM node to read its `style` attribute
  // normalized. Since it only affects IE, we're skipping style warnings
  // in that browser completely in favor of doing all that work.
  // See https://github.com/facebook/react/issues/11807
  canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;

  // HTML parsing normalizes CR and CRLF to LF.
  // It also can turn \u0000 into \uFFFD inside attributes.
  // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
  // If we have a mismatch, it might be caused by that.
  // We will still patch up in this case but not fire the warning.
  var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
  var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

  normalizeMarkupForTextOrAttribute = function (markup) {
    var markupString = typeof markup === 'string' ? markup : '' + markup;
    return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
  };

  warnForTextDifference = function (serverText, clientText) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
    var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
    if (normalizedServerText === normalizedClientText) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
  };

  warnForPropDifference = function (propName, serverValue, clientValue) {
    if (didWarnInvalidHydration) {
      return;
    }
    var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
    var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
    if (normalizedServerValue === normalizedClientValue) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
  };

  warnForExtraAttributes = function (attributeNames) {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    var names = [];
    attributeNames.forEach(function (name) {
      names.push(name);
    });
    warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
  };

  warnForInvalidEventListener = function (registrationName, listener) {
    if (listener === false) {
      warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
    } else {
      warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
    }
  };

  // Parse the HTML and read it back to normalize the HTML string so that it
  // can be used for comparison.
  normalizeHTML = function (parent, html) {
    // We could have created a separate document here to avoid
    // re-initializing custom elements if they exist. But this breaks
    // how <noscript> is being handled. So we use the same document.
    // See the discussion in https://github.com/facebook/react/pull/11157.
    var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
    testElement.innerHTML = html;
    return testElement.innerHTML;
  };
}

function ensureListeningTo(rootContainerElement, registrationName) {
  var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
  var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
  listenTo(registrationName, doc);
}

function getOwnerDocumentFromRootContainer(rootContainerElement) {
  return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
}

function noop() {}

function trapClickOnNonInteractiveElement(node) {
  // Mobile Safari does not fire properly bubble click events on
  // non-interactive elements, which means delegated click listeners do not
  // fire. The workaround for this bug involves attaching an empty click
  // listener on the target node.
  // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
  // Just set it using the onclick property so that we don't have to manage any
  // bookkeeping for it. Not sure if we need to clear it when the listener is
  // removed.
  // TODO: Only do this for the relevant Safaris maybe?
  node.onclick = noop;
}

function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
  for (var propKey in nextProps) {
    if (!nextProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = nextProps[propKey];
    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      // Relies on `updateStylesByID` not mutating `styleUpdates`.
      setValueForStyles(domElement, nextProp);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      if (nextHtml != null) {
        setInnerHTML(domElement, nextHtml);
      }
    } else if (propKey === CHILDREN) {
      if (typeof nextProp === 'string') {
        // Avoid setting initial textContent when the text is empty. In IE11 setting
        // textContent on a <textarea> will cause the placeholder to not
        // show within the <textarea> until it has been focused and blurred again.
        // https://github.com/facebook/react/issues/6731#issuecomment-254874553
        var canSetTextContent = tag !== 'textarea' || nextProp !== '';
        if (canSetTextContent) {
          setTextContent(domElement, nextProp);
        }
      } else if (typeof nextProp === 'number') {
        setTextContent(domElement, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // We polyfill it separately on the client during commit.
      // We could have excluded it in the property list instead of
      // adding a special case here, but then it wouldn't be emitted
      // on server rendering (but we *do* want to emit it in SSR).
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if (nextProp != null) {
      setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
    }
  }
}

function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
  // TODO: Handle wasCustomComponentTag
  for (var i = 0; i < updatePayload.length; i += 2) {
    var propKey = updatePayload[i];
    var propValue = updatePayload[i + 1];
    if (propKey === STYLE$1) {
      setValueForStyles(domElement, propValue);
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      setInnerHTML(domElement, propValue);
    } else if (propKey === CHILDREN) {
      setTextContent(domElement, propValue);
    } else {
      setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
    }
  }
}

function createElement(type, props, rootContainerElement, parentNamespace) {
  var isCustomComponentTag = void 0;

  // We create tags in the namespace of their parent container, except HTML
  // tags get no namespace.
  var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
  var domElement = void 0;
  var namespaceURI = parentNamespace;
  if (namespaceURI === HTML_NAMESPACE) {
    namespaceURI = getIntrinsicNamespace(type);
  }
  if (namespaceURI === HTML_NAMESPACE) {
    {
      isCustomComponentTag = isCustomComponent(type, props);
      // Should this check be gated by parent namespace? Not sure we want to
      // allow <SVG> or <mATH>.
      !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
    }

    if (type === 'script') {
      // Create the script via .innerHTML so its "parser-inserted" flag is
      // set to true and it does not execute
      var div = ownerDocument.createElement('div');
      div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
      // This is guaranteed to yield a script element.
      var firstChild = div.firstChild;
      domElement = div.removeChild(firstChild);
    } else if (typeof props.is === 'string') {
      // $FlowIssue `createElement` should be updated for Web Components
      domElement = ownerDocument.createElement(type, { is: props.is });
    } else {
      // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
      // See discussion in https://github.com/facebook/react/pull/6896
      // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
      domElement = ownerDocument.createElement(type);
      // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
      // attributes on `select`s needs to be added before `option`s are inserted.
      // This prevents:
      // - a bug where the `select` does not scroll to the correct option because singular
      //  `select` elements automatically pick the first item #13222
      // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
      // See https://github.com/facebook/react/issues/13222
      // and https://github.com/facebook/react/issues/14239
      if (type === 'select') {
        var node = domElement;
        if (props.multiple) {
          node.multiple = true;
        } else if (props.size) {
          // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
          // it is possible that no option is selected.
          //
          // This is only necessary when a select in "single selection mode".
          node.size = props.size;
        }
      }
    }
  } else {
    domElement = ownerDocument.createElementNS(namespaceURI, type);
  }

  {
    if (namespaceURI === HTML_NAMESPACE) {
      if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
        warnedUnknownTags[type] = true;
        warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
      }
    }
  }

  return domElement;
}

function createTextNode(text, rootContainerElement) {
  return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
}

function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
  var isCustomComponentTag = isCustomComponent(tag, rawProps);
  {
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  var props = void 0;
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      props = rawProps;
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      props = rawProps;
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      props = rawProps;
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      props = rawProps;
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      props = rawProps;
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      props = getHostProps(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      props = getHostProps$1(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      props = getHostProps$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      props = getHostProps$3(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    default:
      props = rawProps;
  }

  assertValidProps(tag, props);

  setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, false);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'option':
      postMountWrapper$1(domElement, rawProps);
      break;
    case 'select':
      postMountWrapper$2(domElement, rawProps);
      break;
    default:
      if (typeof props.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }
}

// Calculate the diff between the two objects.
function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
  {
    validatePropertiesInDevelopment(tag, nextRawProps);
  }

  var updatePayload = null;

  var lastProps = void 0;
  var nextProps = void 0;
  switch (tag) {
    case 'input':
      lastProps = getHostProps(domElement, lastRawProps);
      nextProps = getHostProps(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'option':
      lastProps = getHostProps$1(domElement, lastRawProps);
      nextProps = getHostProps$1(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'select':
      lastProps = getHostProps$2(domElement, lastRawProps);
      nextProps = getHostProps$2(domElement, nextRawProps);
      updatePayload = [];
      break;
    case 'textarea':
      lastProps = getHostProps$3(domElement, lastRawProps);
      nextProps = getHostProps$3(domElement, nextRawProps);
      updatePayload = [];
      break;
    default:
      lastProps = lastRawProps;
      nextProps = nextRawProps;
      if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  assertValidProps(tag, nextProps);

  var propKey = void 0;
  var styleName = void 0;
  var styleUpdates = null;
  for (propKey in lastProps) {
    if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
      continue;
    }
    if (propKey === STYLE$1) {
      var lastStyle = lastProps[propKey];
      for (styleName in lastStyle) {
        if (lastStyle.hasOwnProperty(styleName)) {
          if (!styleUpdates) {
            styleUpdates = {};
          }
          styleUpdates[styleName] = '';
        }
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {
      // Noop. This is handled by the clear text mechanism.
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (propKey === AUTOFOCUS) {
      // Noop. It doesn't work on updates anyway.
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      // This is a special case. If any listener updates we need to ensure
      // that the "current" fiber pointer gets updated so we need a commit
      // to update this element.
      if (!updatePayload) {
        updatePayload = [];
      }
    } else {
      // For all other deleted properties we add it to the queue. We use
      // the whitelist in the commit phase instead.
      (updatePayload = updatePayload || []).push(propKey, null);
    }
  }
  for (propKey in nextProps) {
    var nextProp = nextProps[propKey];
    var lastProp = lastProps != null ? lastProps[propKey] : undefined;
    if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
      continue;
    }
    if (propKey === STYLE$1) {
      {
        if (nextProp) {
          // Freeze the next style object so that we can assume it won't be
          // mutated. We have already warned for this in the past.
          Object.freeze(nextProp);
        }
      }
      if (lastProp) {
        // Unset styles on `lastProp` but not on `nextProp`.
        for (styleName in lastProp) {
          if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = '';
          }
        }
        // Update styles that changed since `lastProp`.
        for (styleName in nextProp) {
          if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
            if (!styleUpdates) {
              styleUpdates = {};
            }
            styleUpdates[styleName] = nextProp[styleName];
          }
        }
      } else {
        // Relies on `updateStylesByID` not mutating `styleUpdates`.
        if (!styleUpdates) {
          if (!updatePayload) {
            updatePayload = [];
          }
          updatePayload.push(propKey, styleUpdates);
        }
        styleUpdates = nextProp;
      }
    } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
      var nextHtml = nextProp ? nextProp[HTML] : undefined;
      var lastHtml = lastProp ? lastProp[HTML] : undefined;
      if (nextHtml != null) {
        if (lastHtml !== nextHtml) {
          (updatePayload = updatePayload || []).push(propKey, '' + nextHtml);
        }
      } else {
        // TODO: It might be too late to clear this if we have children
        // inserted already.
      }
    } else if (propKey === CHILDREN) {
      if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
        (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
      }
    } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {
      // Noop
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        // We eagerly listen to this even though we haven't committed yet.
        if ( true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
      if (!updatePayload && lastProp !== nextProp) {
        // This is a special case. If any listener updates we need to ensure
        // that the "current" props pointer gets updated so we need a commit
        // to update this element.
        updatePayload = [];
      }
    } else {
      // For any other property we always add it to the queue and then we
      // filter it out using the whitelist during the commit.
      (updatePayload = updatePayload || []).push(propKey, nextProp);
    }
  }
  if (styleUpdates) {
    {
      validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
    }
    (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
  }
  return updatePayload;
}

// Apply the diff.
function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
  // Update checked *before* name.
  // In the middle of an update, it is possible to have multiple checked.
  // When a checked radio tries to change name, browser makes another radio's checked false.
  if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
    updateChecked(domElement, nextRawProps);
  }

  var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
  var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
  // Apply the diff.
  updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);

  // TODO: Ensure that an update gets scheduled if any of the special props
  // changed.
  switch (tag) {
    case 'input':
      // Update the wrapper around inputs *after* updating props. This has to
      // happen after `updateDOMProperties`. Otherwise HTML5 input validations
      // raise warnings and prevent the new value from being assigned.
      updateWrapper(domElement, nextRawProps);
      break;
    case 'textarea':
      updateWrapper$1(domElement, nextRawProps);
      break;
    case 'select':
      // <select> value update needs to occur after <option> children
      // reconciliation
      postUpdateWrapper(domElement, nextRawProps);
      break;
  }
}

function getPossibleStandardName(propName) {
  {
    var lowerCasedName = propName.toLowerCase();
    if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
      return null;
    }
    return possibleStandardNames[lowerCasedName] || null;
  }
  return null;
}

function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
  var isCustomComponentTag = void 0;
  var extraAttributeNames = void 0;

  {
    suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
    isCustomComponentTag = isCustomComponent(tag, rawProps);
    validatePropertiesInDevelopment(tag, rawProps);
    if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
      warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
      didWarnShadyDOM = true;
    }
  }

  // TODO: Make sure that we check isMounted before firing any of these events.
  switch (tag) {
    case 'iframe':
    case 'object':
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'video':
    case 'audio':
      // Create listener for each media event
      for (var i = 0; i < mediaEventTypes.length; i++) {
        trapBubbledEvent(mediaEventTypes[i], domElement);
      }
      break;
    case 'source':
      trapBubbledEvent(TOP_ERROR, domElement);
      break;
    case 'img':
    case 'image':
    case 'link':
      trapBubbledEvent(TOP_ERROR, domElement);
      trapBubbledEvent(TOP_LOAD, domElement);
      break;
    case 'form':
      trapBubbledEvent(TOP_RESET, domElement);
      trapBubbledEvent(TOP_SUBMIT, domElement);
      break;
    case 'details':
      trapBubbledEvent(TOP_TOGGLE, domElement);
      break;
    case 'input':
      initWrapperState(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'option':
      validateProps(domElement, rawProps);
      break;
    case 'select':
      initWrapperState$1(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
    case 'textarea':
      initWrapperState$2(domElement, rawProps);
      trapBubbledEvent(TOP_INVALID, domElement);
      // For controlled components we always need to ensure we're listening
      // to onChange. Even if there is no listener.
      ensureListeningTo(rootContainerElement, 'onChange');
      break;
  }

  assertValidProps(tag, rawProps);

  {
    extraAttributeNames = new Set();
    var attributes = domElement.attributes;
    for (var _i = 0; _i < attributes.length; _i++) {
      var name = attributes[_i].name.toLowerCase();
      switch (name) {
        // Built-in SSR attribute is whitelisted
        case 'data-reactroot':
          break;
        // Controlled attributes are not validated
        // TODO: Only ignore them on controlled tags.
        case 'value':
          break;
        case 'checked':
          break;
        case 'selected':
          break;
        default:
          // Intentionally use the original name.
          // See discussion in https://github.com/facebook/react/pull/10676.
          extraAttributeNames.add(attributes[_i].name);
      }
    }
  }

  var updatePayload = null;
  for (var propKey in rawProps) {
    if (!rawProps.hasOwnProperty(propKey)) {
      continue;
    }
    var nextProp = rawProps[propKey];
    if (propKey === CHILDREN) {
      // For text content children we compare against textContent. This
      // might match additional HTML that is hidden when we read it using
      // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
      // satisfies our requirement. Our requirement is not to produce perfect
      // HTML and attributes. Ideally we should preserve structure but it's
      // ok not to if the visible content is still enough to indicate what
      // even listeners these nodes might be wired up to.
      // TODO: Warn if there is more than a single textNode as a child.
      // TODO: Should we use domElement.firstChild.nodeValue to compare?
      if (typeof nextProp === 'string') {
        if (domElement.textContent !== nextProp) {
          if ( true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, nextProp];
        }
      } else if (typeof nextProp === 'number') {
        if (domElement.textContent !== '' + nextProp) {
          if ( true && !suppressHydrationWarning) {
            warnForTextDifference(domElement.textContent, nextProp);
          }
          updatePayload = [CHILDREN, '' + nextProp];
        }
      }
    } else if (registrationNameModules.hasOwnProperty(propKey)) {
      if (nextProp != null) {
        if ( true && typeof nextProp !== 'function') {
          warnForInvalidEventListener(propKey, nextProp);
        }
        ensureListeningTo(rootContainerElement, propKey);
      }
    } else if ( true &&
    // Convince Flow we've calculated it (it's DEV-only in this method.)
    typeof isCustomComponentTag === 'boolean') {
      // Validate that the properties correspond to their expected values.
      var serverValue = void 0;
      var propertyInfo = getPropertyInfo(propKey);
      if (suppressHydrationWarning) {
        // Don't bother comparing. We're ignoring all these warnings.
      } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 ||
      // Controlled attributes are not validated
      // TODO: Only ignore them on controlled tags.
      propKey === 'value' || propKey === 'checked' || propKey === 'selected') {
        // Noop
      } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
        var serverHTML = domElement.innerHTML;
        var nextHtml = nextProp ? nextProp[HTML] : undefined;
        var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');
        if (expectedHTML !== serverHTML) {
          warnForPropDifference(propKey, serverHTML, expectedHTML);
        }
      } else if (propKey === STYLE$1) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey);

        if (canDiffStyleForHydrationWarning) {
          var expectedStyle = createDangerousStringForStyles(nextProp);
          serverValue = domElement.getAttribute('style');
          if (expectedStyle !== serverValue) {
            warnForPropDifference(propKey, serverValue, expectedStyle);
          }
        }
      } else if (isCustomComponentTag) {
        // $FlowFixMe - Should be inferred as not undefined.
        extraAttributeNames.delete(propKey.toLowerCase());
        serverValue = getValueForAttribute(domElement, propKey, nextProp);

        if (nextProp !== serverValue) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
        var isMismatchDueToBadCasing = false;
        if (propertyInfo !== null) {
          // $FlowFixMe - Should be inferred as not undefined.
          extraAttributeNames.delete(propertyInfo.attributeName);
          serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
        } else {
          var ownNamespace = parentNamespace;
          if (ownNamespace === HTML_NAMESPACE) {
            ownNamespace = getIntrinsicNamespace(tag);
          }
          if (ownNamespace === HTML_NAMESPACE) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
          } else {
            var standardName = getPossibleStandardName(propKey);
            if (standardName !== null && standardName !== propKey) {
              // If an SVG prop is supplied with bad casing, it will
              // be successfully parsed from HTML, but will produce a mismatch
              // (and would be incorrectly rendered on the client).
              // However, we already warn about bad casing elsewhere.
              // So we'll skip the misleading extra mismatch warning in this case.
              isMismatchDueToBadCasing = true;
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(standardName);
            }
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);
          }
          serverValue = getValueForAttribute(domElement, propKey, nextProp);
        }

        if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
          warnForPropDifference(propKey, serverValue, nextProp);
        }
      }
    }
  }

  {
    // $FlowFixMe - Should be inferred as not undefined.
    if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
      // $FlowFixMe - Should be inferred as not undefined.
      warnForExtraAttributes(extraAttributeNames);
    }
  }

  switch (tag) {
    case 'input':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper(domElement, rawProps, true);
      break;
    case 'textarea':
      // TODO: Make sure we check if this is still unmounted or do any clean
      // up necessary since we never stop tracking anymore.
      track(domElement);
      postMountWrapper$3(domElement, rawProps);
      break;
    case 'select':
    case 'option':
      // For input and textarea we current always set the value property at
      // post mount to force it to diverge from attributes. However, for
      // option and select we don't quite do the same thing and select
      // is not resilient to the DOM state changing so we don't do that here.
      // TODO: Consider not doing this for input and textarea.
      break;
    default:
      if (typeof rawProps.onClick === 'function') {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(domElement);
      }
      break;
  }

  return updatePayload;
}

function diffHydratedText(textNode, text) {
  var isDifferent = textNode.nodeValue !== text;
  return isDifferent;
}

function warnForUnmatchedText(textNode, text) {
  {
    warnForTextDifference(textNode.nodeValue, text);
  }
}

function warnForDeletedHydratableElement(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
  }
}

function warnForDeletedHydratableText(parentNode, child) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedElement(parentNode, tag, props) {
  {
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
  }
}

function warnForInsertedHydratedText(parentNode, text) {
  {
    if (text === '') {
      // We expect to insert empty text nodes since they're not represented in
      // the HTML.
      // TODO: Remove this special case if we can just avoid inserting empty
      // text nodes.
      return;
    }
    if (didWarnInvalidHydration) {
      return;
    }
    didWarnInvalidHydration = true;
    warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
  }
}

function restoreControlledState$1(domElement, tag, props) {
  switch (tag) {
    case 'input':
      restoreControlledState(domElement, props);
      return;
    case 'textarea':
      restoreControlledState$3(domElement, props);
      return;
    case 'select':
      restoreControlledState$2(domElement, props);
      return;
  }
}

// TODO: direct imports like some-package/src/* are bad. Fix me.
var validateDOMNesting = function () {};
var updatedAncestorInfo = function () {};

{
  // This validation code was written based on the HTML5 parsing spec:
  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  //
  // Note: this does not catch all invalid nesting, nor does it try to (as it's
  // not clear what practical benefit doing so provides); instead, we warn only
  // for cases where the parser will give a parse tree differing from what React
  // intended. For example, <b><div></div></b> is invalid but we don't warn
  // because it still parses correctly; we do warn for other cases like nested
  // <p> tags where the beginning of the second element implicitly closes the
  // first, causing a confusing mess.

  // https://html.spec.whatwg.org/multipage/syntax.html#special
  var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
  var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template',

  // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
  // TODO: Distinguish by namespace here -- for <title>, including it here
  // errs on the side of fewer warnings
  'foreignObject', 'desc', 'title'];

  // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope
  var buttonScopeTags = inScopeTags.concat(['button']);

  // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags
  var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];

  var emptyAncestorInfo = {
    current: null,

    formTag: null,
    aTagInScope: null,
    buttonTagInScope: null,
    nobrTagInScope: null,
    pTagInButtonScope: null,

    listItemTagAutoclosing: null,
    dlItemTagAutoclosing: null
  };

  updatedAncestorInfo = function (oldInfo, tag) {
    var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);
    var info = { tag: tag };

    if (inScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.aTagInScope = null;
      ancestorInfo.buttonTagInScope = null;
      ancestorInfo.nobrTagInScope = null;
    }
    if (buttonScopeTags.indexOf(tag) !== -1) {
      ancestorInfo.pTagInButtonScope = null;
    }

    // See rules for 'li', 'dd', 'dt' start tags in
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
      ancestorInfo.listItemTagAutoclosing = null;
      ancestorInfo.dlItemTagAutoclosing = null;
    }

    ancestorInfo.current = info;

    if (tag === 'form') {
      ancestorInfo.formTag = info;
    }
    if (tag === 'a') {
      ancestorInfo.aTagInScope = info;
    }
    if (tag === 'button') {
      ancestorInfo.buttonTagInScope = info;
    }
    if (tag === 'nobr') {
      ancestorInfo.nobrTagInScope = info;
    }
    if (tag === 'p') {
      ancestorInfo.pTagInButtonScope = info;
    }
    if (tag === 'li') {
      ancestorInfo.listItemTagAutoclosing = info;
    }
    if (tag === 'dd' || tag === 'dt') {
      ancestorInfo.dlItemTagAutoclosing = info;
    }

    return ancestorInfo;
  };

  /**
   * Returns whether
   */
  var isTagValidWithParent = function (tag, parentTag) {
    // First, let's check if we're in an unusual parsing mode...
    switch (parentTag) {
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
      case 'select':
        return tag === 'option' || tag === 'optgroup' || tag === '#text';
      case 'optgroup':
        return tag === 'option' || tag === '#text';
      // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
      // but
      case 'option':
        return tag === '#text';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
      // No special behavior since these rules fall back to "in body" mode for
      // all except special table nodes which cause bad parsing behavior anyway.

      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr
      case 'tr':
        return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody
      case 'tbody':
      case 'thead':
      case 'tfoot':
        return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup
      case 'colgroup':
        return tag === 'col' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable
      case 'table':
        return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead
      case 'head':
        return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
      // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element
      case 'html':
        return tag === 'head' || tag === 'body';
      case '#document':
        return tag === 'html';
    }

    // Probably in the "in body" parsing mode, so we outlaw only tag combos
    // where the parsing rules cause implicit opens or closes to be added.
    // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody
    switch (tag) {
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

      case 'rp':
      case 'rt':
        return impliedEndTags.indexOf(parentTag) === -1;

      case 'body':
      case 'caption':
      case 'col':
      case 'colgroup':
      case 'frame':
      case 'head':
      case 'html':
      case 'tbody':
      case 'td':
      case 'tfoot':
      case 'th':
      case 'thead':
      case 'tr':
        // These tags are only valid with a few parents that have special child
        // parsing rules -- if we're down here, then none of those matched and
        // so we allow it only if we don't know what the parent is, as all other
        // cases are invalid.
        return parentTag == null;
    }

    return true;
  };

  /**
   * Returns whether
   */
  var findInvalidAncestorForTag = function (tag, ancestorInfo) {
    switch (tag) {
      case 'address':
      case 'article':
      case 'aside':
      case 'blockquote':
      case 'center':
      case 'details':
      case 'dialog':
      case 'dir':
      case 'div':
      case 'dl':
      case 'fieldset':
      case 'figcaption':
      case 'figure':
      case 'footer':
      case 'header':
      case 'hgroup':
      case 'main':
      case 'menu':
      case 'nav':
      case 'ol':
      case 'p':
      case 'section':
      case 'summary':
      case 'ul':
      case 'pre':
      case 'listing':
      case 'table':
      case 'hr':
      case 'xmp':
      case 'h1':
      case 'h2':
      case 'h3':
      case 'h4':
      case 'h5':
      case 'h6':
        return ancestorInfo.pTagInButtonScope;

      case 'form':
        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

      case 'li':
        return ancestorInfo.listItemTagAutoclosing;

      case 'dd':
      case 'dt':
        return ancestorInfo.dlItemTagAutoclosing;

      case 'button':
        return ancestorInfo.buttonTagInScope;

      case 'a':
        // Spec says something about storing a list of markers, but it sounds
        // equivalent to this check.
        return ancestorInfo.aTagInScope;

      case 'nobr':
        return ancestorInfo.nobrTagInScope;
    }

    return null;
  };

  var didWarn = {};

  validateDOMNesting = function (childTag, childText, ancestorInfo) {
    ancestorInfo = ancestorInfo || emptyAncestorInfo;
    var parentInfo = ancestorInfo.current;
    var parentTag = parentInfo && parentInfo.tag;

    if (childText != null) {
      !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
      childTag = '#text';
    }

    var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
    var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
    var invalidParentOrAncestor = invalidParent || invalidAncestor;
    if (!invalidParentOrAncestor) {
      return;
    }

    var ancestorTag = invalidParentOrAncestor.tag;
    var addendum = getCurrentFiberStackInDev();

    var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;
    if (didWarn[warnKey]) {
      return;
    }
    didWarn[warnKey] = true;

    var tagDisplayName = childTag;
    var whitespaceInfo = '';
    if (childTag === '#text') {
      if (/\S/.test(childText)) {
        tagDisplayName = 'Text nodes';
      } else {
        tagDisplayName = 'Whitespace text nodes';
        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
      }
    } else {
      tagDisplayName = '<' + childTag + '>';
    }

    if (invalidParent) {
      var info = '';
      if (ancestorTag === 'table' && childTag === 'tr') {
        info += ' Add a <tbody> to your code to match the DOM tree generated by ' + 'the browser.';
      }
      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
    } else {
      warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
    }
  };
}

// Renderers that don't support persistence
// can re-export everything from this module.

function shim() {
  invariant(false, 'The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.');
}

// Persistence (when unsupported)
var supportsPersistence = false;
var cloneInstance = shim;
var createContainerChildSet = shim;
var appendChildToContainerChildSet = shim;
var finalizeContainerChildren = shim;
var replaceContainerChildren = shim;
var cloneHiddenInstance = shim;
var cloneUnhiddenInstance = shim;
var createHiddenTextInstance = shim;

var SUPPRESS_HYDRATION_WARNING = void 0;
{
  SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
}

var SUSPENSE_START_DATA = '$';
var SUSPENSE_END_DATA = '/$';

var STYLE = 'style';

var eventsEnabled = null;
var selectionInformation = null;

function shouldAutoFocusHostComponent(type, props) {
  switch (type) {
    case 'button':
    case 'input':
    case 'select':
    case 'textarea':
      return !!props.autoFocus;
  }
  return false;
}

function getRootHostContext(rootContainerInstance) {
  var type = void 0;
  var namespace = void 0;
  var nodeType = rootContainerInstance.nodeType;
  switch (nodeType) {
    case DOCUMENT_NODE:
    case DOCUMENT_FRAGMENT_NODE:
      {
        type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
        var root = rootContainerInstance.documentElement;
        namespace = root ? root.namespaceURI : getChildNamespace(null, '');
        break;
      }
    default:
      {
        var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
        var ownNamespace = container.namespaceURI || null;
        type = container.tagName;
        namespace = getChildNamespace(ownNamespace, type);
        break;
      }
  }
  {
    var validatedTag = type.toLowerCase();
    var _ancestorInfo = updatedAncestorInfo(null, validatedTag);
    return { namespace: namespace, ancestorInfo: _ancestorInfo };
  }
  return namespace;
}

function getChildHostContext(parentHostContext, type, rootContainerInstance) {
  {
    var parentHostContextDev = parentHostContext;
    var _namespace = getChildNamespace(parentHostContextDev.namespace, type);
    var _ancestorInfo2 = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
    return { namespace: _namespace, ancestorInfo: _ancestorInfo2 };
  }
  var parentNamespace = parentHostContext;
  return getChildNamespace(parentNamespace, type);
}

function getPublicInstance(instance) {
  return instance;
}

function prepareForCommit(containerInfo) {
  eventsEnabled = isEnabled();
  selectionInformation = getSelectionInformation();
  setEnabled(false);
}

function resetAfterCommit(containerInfo) {
  restoreSelection(selectionInformation);
  selectionInformation = null;
  setEnabled(eventsEnabled);
  eventsEnabled = null;
}

function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  var parentNamespace = void 0;
  {
    // TODO: take namespace into account when validating.
    var hostContextDev = hostContext;
    validateDOMNesting(type, null, hostContextDev.ancestorInfo);
    if (typeof props.children === 'string' || typeof props.children === 'number') {
      var string = '' + props.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
    parentNamespace = hostContextDev.namespace;
  }
  var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
  precacheFiberNode(internalInstanceHandle, domElement);
  updateFiberProps(domElement, props);
  return domElement;
}

function appendInitialChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
  setInitialProperties(domElement, type, props, rootContainerInstance);
  return shouldAutoFocusHostComponent(type, props);
}

function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
  {
    var hostContextDev = hostContext;
    if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
      var string = '' + newProps.children;
      var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
      validateDOMNesting(null, string, ownAncestorInfo);
    }
  }
  return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
}

function shouldSetTextContent(type, props) {
  return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
}

function shouldDeprioritizeSubtree(type, props) {
  return !!props.hidden;
}

function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
  {
    var hostContextDev = hostContext;
    validateDOMNesting(null, text, hostContextDev.ancestorInfo);
  }
  var textNode = createTextNode(text, rootContainerInstance);
  precacheFiberNode(internalInstanceHandle, textNode);
  return textNode;
}

var isPrimaryRenderer = true;
// This initialization code may run even on server environments
// if a component just imports ReactDOM (e.g. for findDOMNode).
// Some environments might not have setTimeout or clearTimeout.
var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
var noTimeout = -1;
var schedulePassiveEffects = scheduler.unstable_scheduleCallback;
var cancelPassiveEffects = scheduler.unstable_cancelCallback;

// -------------------
//     Mutation
// -------------------

var supportsMutation = true;

function commitMount(domElement, type, newProps, internalInstanceHandle) {
  // Despite the naming that might imply otherwise, this method only
  // fires if there is an `Update` effect scheduled during mounting.
  // This happens if `finalizeInitialChildren` returns `true` (which it
  // does to implement the `autoFocus` attribute on the client). But
  // there are also other cases when this might happen (such as patching
  // up text content during hydration mismatch). So we'll check this again.
  if (shouldAutoFocusHostComponent(type, newProps)) {
    domElement.focus();
  }
}

function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
  // Update the props handle so that we know which props are the ones with
  // with current event handlers.
  updateFiberProps(domElement, newProps);
  // Apply the diff to the DOM node.
  updateProperties(domElement, updatePayload, type, oldProps, newProps);
}

function resetTextContent(domElement) {
  setTextContent(domElement, '');
}

function commitTextUpdate(textInstance, oldText, newText) {
  textInstance.nodeValue = newText;
}

function appendChild(parentInstance, child) {
  parentInstance.appendChild(child);
}

function appendChildToContainer(container, child) {
  var parentNode = void 0;
  if (container.nodeType === COMMENT_NODE) {
    parentNode = container.parentNode;
    parentNode.insertBefore(child, container);
  } else {
    parentNode = container;
    parentNode.appendChild(child);
  }
  // This container might be used for a portal.
  // If something inside a portal is clicked, that click should bubble
  // through the React tree. However, on Mobile Safari the click would
  // never bubble through the *DOM* tree unless an ancestor with onclick
  // event exists. So we wouldn't see it and dispatch it.
  // This is why we ensure that non React root containers have inline onclick
  // defined.
  // https://github.com/facebook/react/issues/11918
  var reactRootContainer = container._reactRootContainer;
  if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
    // TODO: This cast may not be sound for SVG, MathML or custom elements.
    trapClickOnNonInteractiveElement(parentNode);
  }
}

function insertBefore(parentInstance, child, beforeChild) {
  parentInstance.insertBefore(child, beforeChild);
}

function insertInContainerBefore(container, child, beforeChild) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.insertBefore(child, beforeChild);
  } else {
    container.insertBefore(child, beforeChild);
  }
}

function removeChild(parentInstance, child) {
  parentInstance.removeChild(child);
}

function removeChildFromContainer(container, child) {
  if (container.nodeType === COMMENT_NODE) {
    container.parentNode.removeChild(child);
  } else {
    container.removeChild(child);
  }
}

function clearSuspenseBoundary(parentInstance, suspenseInstance) {
  var node = suspenseInstance;
  // Delete all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.
  var depth = 0;
  do {
    var nextNode = node.nextSibling;
    parentInstance.removeChild(node);
    if (nextNode && nextNode.nodeType === COMMENT_NODE) {
      var data = nextNode.data;
      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          parentInstance.removeChild(nextNode);
          return;
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA) {
        depth++;
      }
    }
    node = nextNode;
  } while (node);
  // TODO: Warn, we didn't find the end comment boundary.
}

function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
  if (container.nodeType === COMMENT_NODE) {
    clearSuspenseBoundary(container.parentNode, suspenseInstance);
  } else if (container.nodeType === ELEMENT_NODE) {
    clearSuspenseBoundary(container, suspenseInstance);
  } else {
    // Document nodes should never contain suspense boundaries.
  }
}

function hideInstance(instance) {
  // TODO: Does this work for all element types? What about MathML? Should we
  // pass host context to this method?
  instance = instance;
  instance.style.display = 'none';
}

function hideTextInstance(textInstance) {
  textInstance.nodeValue = '';
}

function unhideInstance(instance, props) {
  instance = instance;
  var styleProp = props[STYLE];
  var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
  instance.style.display = dangerousStyleValue('display', display);
}

function unhideTextInstance(textInstance, text) {
  textInstance.nodeValue = text;
}

// -------------------
//     Hydration
// -------------------

var supportsHydration = true;

function canHydrateInstance(instance, type, props) {
  if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
    return null;
  }
  // This has now been refined to an element node.
  return instance;
}

function canHydrateTextInstance(instance, text) {
  if (text === '' || instance.nodeType !== TEXT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a text node.
  return instance;
}

function canHydrateSuspenseInstance(instance) {
  if (instance.nodeType !== COMMENT_NODE) {
    // Empty strings are not parsed by HTML so there won't be a correct match here.
    return null;
  }
  // This has now been refined to a suspense node.
  return instance;
}

function getNextHydratableSibling(instance) {
  var node = instance.nextSibling;
  // Skip non-hydratable nodes.
  while (node && node.nodeType !== ELEMENT_NODE && node.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || node.nodeType !== COMMENT_NODE || node.data !== SUSPENSE_START_DATA)) {
    node = node.nextSibling;
  }
  return node;
}

function getFirstHydratableChild(parentInstance) {
  var next = parentInstance.firstChild;
  // Skip non-hydratable nodes.
  while (next && next.nodeType !== ELEMENT_NODE && next.nodeType !== TEXT_NODE && (!enableSuspenseServerRenderer || next.nodeType !== COMMENT_NODE || next.data !== SUSPENSE_START_DATA)) {
    next = next.nextSibling;
  }
  return next;
}

function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, instance);
  // TODO: Possibly defer this until the commit phase where all the events
  // get attached.
  updateFiberProps(instance, props);
  var parentNamespace = void 0;
  {
    var hostContextDev = hostContext;
    parentNamespace = hostContextDev.namespace;
  }
  return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
}

function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
  precacheFiberNode(internalInstanceHandle, textInstance);
  return diffHydratedText(textInstance, text);
}

function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
  var node = suspenseInstance.nextSibling;
  // Skip past all nodes within this suspense boundary.
  // There might be nested nodes so we need to keep track of how
  // deep we are and only break out when we're back on top.
  var depth = 0;
  while (node) {
    if (node.nodeType === COMMENT_NODE) {
      var data = node.data;
      if (data === SUSPENSE_END_DATA) {
        if (depth === 0) {
          return getNextHydratableSibling(node);
        } else {
          depth--;
        }
      } else if (data === SUSPENSE_START_DATA) {
        depth++;
      }
    }
    node = node.nextSibling;
  }
  // TODO: Warn, we didn't find the end comment boundary.
  return null;
}

function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
  {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForUnmatchedText(textInstance, text);
  }
}

function didNotHydrateContainerInstance(parentContainer, instance) {
  {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentContainer, instance);
    } else if (instance.nodeType === COMMENT_NODE) {
      // TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentContainer, instance);
    }
  }
}

function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    if (instance.nodeType === ELEMENT_NODE) {
      warnForDeletedHydratableElement(parentInstance, instance);
    } else if (instance.nodeType === COMMENT_NODE) {
      // TODO: warnForDeletedHydratableSuspenseBoundary
    } else {
      warnForDeletedHydratableText(parentInstance, instance);
    }
  }
}

function didNotFindHydratableContainerInstance(parentContainer, type, props) {
  {
    warnForInsertedHydratedElement(parentContainer, type, props);
  }
}

function didNotFindHydratableContainerTextInstance(parentContainer, text) {
  {
    warnForInsertedHydratedText(parentContainer, text);
  }
}



function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedElement(parentInstance, type, props);
  }
}

function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    warnForInsertedHydratedText(parentInstance, text);
  }
}

function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
  if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
    // TODO: warnForInsertedHydratedSuspense(parentInstance);
  }
}

// Prefix measurements so that it's possible to filter them.
// Longer prefixes are hard to read in DevTools.
var reactEmoji = '\u269B';
var warningEmoji = '\u26D4';
var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function';

// Keep track of current fiber so that we know the path to unwind on pause.
// TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?
var currentFiber = null;
// If we're in the middle of user code, which fiber and method is it?
// Reusing `currentFiber` would be confusing for this because user code fiber
// can change during commit phase too, but we don't need to unwind it (since
// lifecycles in the commit phase don't resemble a tree).
var currentPhase = null;
var currentPhaseFiber = null;
// Did lifecycle hook schedule an update? This is often a performance problem,
// so we will keep track of it, and include it in the report.
// Track commits caused by cascading updates.
var isCommitting = false;
var hasScheduledUpdateInCurrentCommit = false;
var hasScheduledUpdateInCurrentPhase = false;
var commitCountInCurrentWorkLoop = 0;
var effectCountInCurrentCommit = 0;
var isWaitingForCallback = false;
// During commits, we only show a measurement once per method name
// to avoid stretch the commit phase with measurement overhead.
var labelsInCurrentCommit = new Set();

var formatMarkName = function (markName) {
  return reactEmoji + ' ' + markName;
};

var formatLabel = function (label, warning) {
  var prefix = warning ? warningEmoji + ' ' : reactEmoji + ' ';
  var suffix = warning ? ' Warning: ' + warning : '';
  return '' + prefix + label + suffix;
};

var beginMark = function (markName) {
  performance.mark(formatMarkName(markName));
};

var clearMark = function (markName) {
  performance.clearMarks(formatMarkName(markName));
};

var endMark = function (label, markName, warning) {
  var formattedMarkName = formatMarkName(markName);
  var formattedLabel = formatLabel(label, warning);
  try {
    performance.measure(formattedLabel, formattedMarkName);
  } catch (err) {}
  // If previous mark was missing for some reason, this will throw.
  // This could only happen if React crashed in an unexpected place earlier.
  // Don't pile on with more errors.

  // Clear marks immediately to avoid growing buffer.
  performance.clearMarks(formattedMarkName);
  performance.clearMeasures(formattedLabel);
};

var getFiberMarkName = function (label, debugID) {
  return label + ' (#' + debugID + ')';
};

var getFiberLabel = function (componentName, isMounted, phase) {
  if (phase === null) {
    // These are composite component total time measurements.
    return componentName + ' [' + (isMounted ? 'update' : 'mount') + ']';
  } else {
    // Composite component methods.
    return componentName + '.' + phase;
  }
};

var beginFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);

  if (isCommitting && labelsInCurrentCommit.has(label)) {
    // During the commit phase, we don't show duplicate labels because
    // there is a fixed overhead for every measurement, and we don't
    // want to stretch the commit phase beyond necessary.
    return false;
  }
  labelsInCurrentCommit.add(label);

  var markName = getFiberMarkName(label, debugID);
  beginMark(markName);
  return true;
};

var clearFiberMark = function (fiber, phase) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  clearMark(markName);
};

var endFiberMark = function (fiber, phase, warning) {
  var componentName = getComponentName(fiber.type) || 'Unknown';
  var debugID = fiber._debugID;
  var isMounted = fiber.alternate !== null;
  var label = getFiberLabel(componentName, isMounted, phase);
  var markName = getFiberMarkName(label, debugID);
  endMark(label, markName, warning);
};

var shouldIgnoreFiber = function (fiber) {
  // Host components should be skipped in the timeline.
  // We could check typeof fiber.type, but does this work with RN?
  switch (fiber.tag) {
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case Fragment:
    case ContextProvider:
    case ContextConsumer:
    case Mode:
      return true;
    default:
      return false;
  }
};

var clearPendingPhaseMeasurement = function () {
  if (currentPhase !== null && currentPhaseFiber !== null) {
    clearFiberMark(currentPhaseFiber, currentPhase);
  }
  currentPhaseFiber = null;
  currentPhase = null;
  hasScheduledUpdateInCurrentPhase = false;
};

var pauseTimers = function () {
  // Stops all currently active measurements so that they can be resumed
  // if we continue in a later deferred loop from the same unit of work.
  var fiber = currentFiber;
  while (fiber) {
    if (fiber._debugIsCurrentlyTiming) {
      endFiberMark(fiber, null, null);
    }
    fiber = fiber.return;
  }
};

var resumeTimersRecursively = function (fiber) {
  if (fiber.return !== null) {
    resumeTimersRecursively(fiber.return);
  }
  if (fiber._debugIsCurrentlyTiming) {
    beginFiberMark(fiber, null);
  }
};

var resumeTimers = function () {
  // Resumes all measurements that were active during the last deferred loop.
  if (currentFiber !== null) {
    resumeTimersRecursively(currentFiber);
  }
};

function recordEffect() {
  if (enableUserTimingAPI) {
    effectCountInCurrentCommit++;
  }
}

function recordScheduleUpdate() {
  if (enableUserTimingAPI) {
    if (isCommitting) {
      hasScheduledUpdateInCurrentCommit = true;
    }
    if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
      hasScheduledUpdateInCurrentPhase = true;
    }
  }
}

function startRequestCallbackTimer() {
  if (enableUserTimingAPI) {
    if (supportsUserTiming && !isWaitingForCallback) {
      isWaitingForCallback = true;
      beginMark('(Waiting for async callback...)');
    }
  }
}

function stopRequestCallbackTimer(didExpire, expirationTime) {
  if (enableUserTimingAPI) {
    if (supportsUserTiming) {
      isWaitingForCallback = false;
      var warning = didExpire ? 'React was blocked by main thread' : null;
      endMark('(Waiting for async callback... will force flush in ' + expirationTime + ' ms)', '(Waiting for async callback...)', warning);
    }
  }
}

function startWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, this is the fiber to unwind from.
    currentFiber = fiber;
    if (!beginFiberMark(fiber, null)) {
      return;
    }
    fiber._debugIsCurrentlyTiming = true;
  }
}

function cancelWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // Remember we shouldn't complete measurement for this fiber.
    // Otherwise flamechart will be deep even for small updates.
    fiber._debugIsCurrentlyTiming = false;
    clearFiberMark(fiber, null);
  }
}

function stopWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    endFiberMark(fiber, null, null);
  }
}

function stopFailedWorkTimer(fiber) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
      return;
    }
    // If we pause, its parent is the fiber to unwind from.
    currentFiber = fiber.return;
    if (!fiber._debugIsCurrentlyTiming) {
      return;
    }
    fiber._debugIsCurrentlyTiming = false;
    var warning = fiber.tag === SuspenseComponent || fiber.tag === DehydratedSuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
    endFiberMark(fiber, null, warning);
  }
}

function startPhaseTimer(fiber, phase) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    clearPendingPhaseMeasurement();
    if (!beginFiberMark(fiber, phase)) {
      return;
    }
    currentPhaseFiber = fiber;
    currentPhase = phase;
  }
}

function stopPhaseTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    if (currentPhase !== null && currentPhaseFiber !== null) {
      var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
      endFiberMark(currentPhaseFiber, currentPhase, warning);
    }
    currentPhase = null;
    currentPhaseFiber = null;
  }
}

function startWorkLoopTimer(nextUnitOfWork) {
  if (enableUserTimingAPI) {
    currentFiber = nextUnitOfWork;
    if (!supportsUserTiming) {
      return;
    }
    commitCountInCurrentWorkLoop = 0;
    // This is top level call.
    // Any other measurements are performed within.
    beginMark('(React Tree Reconciliation)');
    // Resume any measurements that were in progress during the last loop.
    resumeTimers();
  }
}

function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var warning = null;
    if (interruptedBy !== null) {
      if (interruptedBy.tag === HostRoot) {
        warning = 'A top-level update interrupted the previous render';
      } else {
        var componentName = getComponentName(interruptedBy.type) || 'Unknown';
        warning = 'An update to ' + componentName + ' interrupted the previous render';
      }
    } else if (commitCountInCurrentWorkLoop > 1) {
      warning = 'There were cascading updates';
    }
    commitCountInCurrentWorkLoop = 0;
    var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)';
    // Pause any measurements until the next loop.
    pauseTimers();
    endMark(label, '(React Tree Reconciliation)', warning);
  }
}

function startCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    isCommitting = true;
    hasScheduledUpdateInCurrentCommit = false;
    labelsInCurrentCommit.clear();
    beginMark('(Committing Changes)');
  }
}

function stopCommitTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }

    var warning = null;
    if (hasScheduledUpdateInCurrentCommit) {
      warning = 'Lifecycle hook scheduled a cascading update';
    } else if (commitCountInCurrentWorkLoop > 0) {
      warning = 'Caused by a cascading update in earlier commit';
    }
    hasScheduledUpdateInCurrentCommit = false;
    commitCountInCurrentWorkLoop++;
    isCommitting = false;
    labelsInCurrentCommit.clear();

    endMark('(Committing Changes)', '(Committing Changes)', warning);
  }
}

function startCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Snapshot Effects)');
  }
}

function stopCommitSnapshotEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Snapshot Effects: ' + count + ' Total)', '(Committing Snapshot Effects)', null);
  }
}

function startCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Committing Host Effects)');
  }
}

function stopCommitHostEffectsTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Committing Host Effects: ' + count + ' Total)', '(Committing Host Effects)', null);
  }
}

function startCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    effectCountInCurrentCommit = 0;
    beginMark('(Calling Lifecycle Methods)');
  }
}

function stopCommitLifeCyclesTimer() {
  if (enableUserTimingAPI) {
    if (!supportsUserTiming) {
      return;
    }
    var count = effectCountInCurrentCommit;
    effectCountInCurrentCommit = 0;
    endMark('(Calling Lifecycle Methods: ' + count + ' Total)', '(Calling Lifecycle Methods)', null);
  }
}

var valueStack = [];

var fiberStack = void 0;

{
  fiberStack = [];
}

var index = -1;

function createCursor(defaultValue) {
  return {
    current: defaultValue
  };
}

function pop(cursor, fiber) {
  if (index < 0) {
    {
      warningWithoutStack$1(false, 'Unexpected pop.');
    }
    return;
  }

  {
    if (fiber !== fiberStack[index]) {
      warningWithoutStack$1(false, 'Unexpected Fiber popped.');
    }
  }

  cursor.current = valueStack[index];

  valueStack[index] = null;

  {
    fiberStack[index] = null;
  }

  index--;
}

function push(cursor, value, fiber) {
  index++;

  valueStack[index] = cursor.current;

  {
    fiberStack[index] = fiber;
  }

  cursor.current = value;
}

function checkThatStackIsEmpty() {
  {
    if (index !== -1) {
      warningWithoutStack$1(false, 'Expected an empty stack. Something was not reset properly.');
    }
  }
}

function resetStackAfterFatalErrorInDev() {
  {
    index = -1;
    valueStack.length = 0;
    fiberStack.length = 0;
  }
}

var warnedAboutMissingGetChildContext = void 0;

{
  warnedAboutMissingGetChildContext = {};
}

var emptyContextObject = {};
{
  Object.freeze(emptyContextObject);
}

// A cursor to the current merged context object on the stack.
var contextStackCursor = createCursor(emptyContextObject);
// A cursor to a boolean indicating whether the context has changed.
var didPerformWorkStackCursor = createCursor(false);
// Keep track of the previous context object that was on the stack.
// We use this to get access to the parent context after we have already
// pushed the next context provider, and now need to merge their contexts.
var previousContext = emptyContextObject;

function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
  if (didPushOwnContextIfProvider && isContextProvider(Component)) {
    // If the fiber is a context provider itself, when we read its context
    // we may have already pushed its own child context on the stack. A context
    // provider should not "see" its own child context. Therefore we read the
    // previous (parent) context instead for a context provider.
    return previousContext;
  }
  return contextStackCursor.current;
}

function cacheContext(workInProgress, unmaskedContext, maskedContext) {
  var instance = workInProgress.stateNode;
  instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
  instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
}

function getMaskedContext(workInProgress, unmaskedContext) {
  var type = workInProgress.type;
  var contextTypes = type.contextTypes;
  if (!contextTypes) {
    return emptyContextObject;
  }

  // Avoid recreating masked context unless unmasked context has changed.
  // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
  // This may trigger infinite loops if componentWillReceiveProps calls setState.
  var instance = workInProgress.stateNode;
  if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
    return instance.__reactInternalMemoizedMaskedChildContext;
  }

  var context = {};
  for (var key in contextTypes) {
    context[key] = unmaskedContext[key];
  }

  {
    var name = getComponentName(type) || 'Unknown';
    checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // Context is created before the class component is instantiated so check for instance.
  if (instance) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return context;
}

function hasContextChanged() {
  return didPerformWorkStackCursor.current;
}

function isContextProvider(type) {
  var childContextTypes = type.childContextTypes;
  return childContextTypes !== null && childContextTypes !== undefined;
}

function popContext(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function popTopLevelContextObject(fiber) {
  pop(didPerformWorkStackCursor, fiber);
  pop(contextStackCursor, fiber);
}

function pushTopLevelContextObject(fiber, context, didChange) {
  !(contextStackCursor.current === emptyContextObject) ? invariant(false, 'Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  push(contextStackCursor, context, fiber);
  push(didPerformWorkStackCursor, didChange, fiber);
}

function processChildContext(fiber, type, parentContext) {
  var instance = fiber.stateNode;
  var childContextTypes = type.childContextTypes;

  // TODO (bvaughn) Replace this behavior with an invariant() in the future.
  // It has only been added in Fiber to match the (unintentional) behavior in Stack.
  if (typeof instance.getChildContext !== 'function') {
    {
      var componentName = getComponentName(type) || 'Unknown';

      if (!warnedAboutMissingGetChildContext[componentName]) {
        warnedAboutMissingGetChildContext[componentName] = true;
        warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
      }
    }
    return parentContext;
  }

  var childContext = void 0;
  {
    setCurrentPhase('getChildContext');
  }
  startPhaseTimer(fiber, 'getChildContext');
  childContext = instance.getChildContext();
  stopPhaseTimer();
  {
    setCurrentPhase(null);
  }
  for (var contextKey in childContext) {
    !(contextKey in childContextTypes) ? invariant(false, '%s.getChildContext(): key "%s" is not defined in childContextTypes.', getComponentName(type) || 'Unknown', contextKey) : void 0;
  }
  {
    var name = getComponentName(type) || 'Unknown';
    checkPropTypes(childContextTypes, childContext, 'child context', name,
    // In practice, there is one case in which we won't get a stack. It's when
    // somebody calls unstable_renderSubtreeIntoContainer() and we process
    // context from the parent component instance. The stack will be missing
    // because it's outside of the reconciliation, and so the pointer has not
    // been set. This is rare and doesn't matter. We'll also remove that API.
    getCurrentFiberStackInDev);
  }

  return _assign({}, parentContext, childContext);
}

function pushContextProvider(workInProgress) {
  var instance = workInProgress.stateNode;
  // We push the context as early as possible to ensure stack integrity.
  // If the instance does not exist yet, we will push null at first,
  // and replace it on the stack later when invalidating the context.
  var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject;

  // Remember the parent context so we can merge with it later.
  // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.
  previousContext = contextStackCursor.current;
  push(contextStackCursor, memoizedMergedChildContext, workInProgress);
  push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);

  return true;
}

function invalidateContextProvider(workInProgress, type, didChange) {
  var instance = workInProgress.stateNode;
  !instance ? invariant(false, 'Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  if (didChange) {
    // Merge parent and own context.
    // Skip this if we're not updating due to sCU.
    // This avoids unnecessarily recomputing memoized values.
    var mergedContext = processChildContext(workInProgress, type, previousContext);
    instance.__reactInternalMemoizedMergedChildContext = mergedContext;

    // Replace the old (or empty) context with the new one.
    // It is important to unwind the context in the reverse order.
    pop(didPerformWorkStackCursor, workInProgress);
    pop(contextStackCursor, workInProgress);
    // Now push the new context and mark that it has changed.
    push(contextStackCursor, mergedContext, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  } else {
    pop(didPerformWorkStackCursor, workInProgress);
    push(didPerformWorkStackCursor, didChange, workInProgress);
  }
}

function findCurrentUnmaskedContext(fiber) {
  // Currently this is only used with renderSubtreeIntoContainer; not sure if it
  // makes sense elsewhere
  !(isFiberMounted(fiber) && fiber.tag === ClassComponent) ? invariant(false, 'Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  var node = fiber;
  do {
    switch (node.tag) {
      case HostRoot:
        return node.stateNode.context;
      case ClassComponent:
        {
          var Component = node.type;
          if (isContextProvider(Component)) {
            return node.stateNode.__reactInternalMemoizedMergedChildContext;
          }
          break;
        }
    }
    node = node.return;
  } while (node !== null);
  invariant(false, 'Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.');
}

var onCommitFiberRoot = null;
var onCommitFiberUnmount = null;
var hasLoggedError = false;

function catchErrors(fn) {
  return function (arg) {
    try {
      return fn(arg);
    } catch (err) {
      if ( true && !hasLoggedError) {
        hasLoggedError = true;
        warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
      }
    }
  };
}

var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

function injectInternals(internals) {
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
    // No DevTools
    return false;
  }
  var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (hook.isDisabled) {
    // This isn't a real property on the hook, but it can be set to opt out
    // of DevTools integration and associated warnings and logs.
    // https://github.com/facebook/react/issues/3877
    return true;
  }
  if (!hook.supportsFiber) {
    {
      warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
    }
    // DevTools exists, even though it doesn't support Fiber.
    return true;
  }
  try {
    var rendererID = hook.inject(internals);
    // We have successfully injected, so now it is safe to set up hooks.
    onCommitFiberRoot = catchErrors(function (root) {
      return hook.onCommitFiberRoot(rendererID, root);
    });
    onCommitFiberUnmount = catchErrors(function (fiber) {
      return hook.onCommitFiberUnmount(rendererID, fiber);
    });
  } catch (err) {
    // Catch all errors because it is unsafe to throw during initialization.
    {
      warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
    }
  }
  // DevTools exists
  return true;
}

function onCommitRoot(root) {
  if (typeof onCommitFiberRoot === 'function') {
    onCommitFiberRoot(root);
  }
}

function onCommitUnmount(fiber) {
  if (typeof onCommitFiberUnmount === 'function') {
    onCommitFiberUnmount(fiber);
  }
}

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var maxSigned31BitInt = 1073741823;

var NoWork = 0;
var Never = 1;
var Sync = maxSigned31BitInt;

var UNIT_SIZE = 10;
var MAGIC_NUMBER_OFFSET = maxSigned31BitInt - 1;

// 1 unit of expiration time represents 10ms.
function msToExpirationTime(ms) {
  // Always add an offset so that we don't clash with the magic number for NoWork.
  return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
}

function expirationTimeToMs(expirationTime) {
  return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
}

function ceiling(num, precision) {
  return ((num / precision | 0) + 1) * precision;
}

function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
  return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
}

var LOW_PRIORITY_EXPIRATION = 5000;
var LOW_PRIORITY_BATCH_SIZE = 250;

function computeAsyncExpiration(currentTime) {
  return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
}

// We intentionally set a higher expiration time for interactive updates in
// dev than in production.
//
// If the main thread is being blocked so long that you hit the expiration,
// it's a problem that could be solved with better scheduling.
//
// People will be more likely to notice this and fix it with the long
// expiration time in development.
//
// In production we opt for better UX at the risk of masking scheduling
// problems, by expiring fast.
var HIGH_PRIORITY_EXPIRATION = 500;
var HIGH_PRIORITY_BATCH_SIZE = 100;

function computeInteractiveExpiration(currentTime) {
  return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
}

var NoContext = 0;
var ConcurrentMode = 1;
var StrictMode = 2;
var ProfileMode = 4;

var hasBadMapPolyfill = void 0;

{
  hasBadMapPolyfill = false;
  try {
    var nonExtensibleObject = Object.preventExtensions({});
    var testMap = new Map([[nonExtensibleObject, null]]);
    var testSet = new Set([nonExtensibleObject]);
    // This is necessary for Rollup to not consider these unused.
    // https://github.com/rollup/rollup/issues/1771
    // TODO: we can remove these if Rollup fixes the bug.
    testMap.set(0, 0);
    testSet.add(0);
  } catch (e) {
    // TODO: Consider warning about bad polyfills
    hasBadMapPolyfill = true;
  }
}

// A Fiber is work on a Component that needs to be done or was done. There can
// be more than one per component.


var debugCounter = void 0;

{
  debugCounter = 1;
}

function FiberNode(tag, pendingProps, key, mode) {
  // Instance
  this.tag = tag;
  this.key = key;
  this.elementType = null;
  this.type = null;
  this.stateNode = null;

  // Fiber
  this.return = null;
  this.child = null;
  this.sibling = null;
  this.index = 0;

  this.ref = null;

  this.pendingProps = pendingProps;
  this.memoizedProps = null;
  this.updateQueue = null;
  this.memoizedState = null;
  this.contextDependencies = null;

  this.mode = mode;

  // Effects
  this.effectTag = NoEffect;
  this.nextEffect = null;

  this.firstEffect = null;
  this.lastEffect = null;

  this.expirationTime = NoWork;
  this.childExpirationTime = NoWork;

  this.alternate = null;

  if (enableProfilerTimer) {
    // Note: The following is done to avoid a v8 performance cliff.
    //
    // Initializing the fields below to smis and later updating them with
    // double values will cause Fibers to end up having separate shapes.
    // This behavior/bug has something to do with Object.preventExtension().
    // Fortunately this only impacts DEV builds.
    // Unfortunately it makes React unusably slow for some applications.
    // To work around this, initialize the fields below with doubles.
    //
    // Learn more about this here:
    // https://github.com/facebook/react/issues/14365
    // https://bugs.chromium.org/p/v8/issues/detail?id=8538
    this.actualDuration = Number.NaN;
    this.actualStartTime = Number.NaN;
    this.selfBaseDuration = Number.NaN;
    this.treeBaseDuration = Number.NaN;

    // It's okay to replace the initial doubles with smis after initialization.
    // This won't trigger the performance cliff mentioned above,
    // and it simplifies other profiler code (including DevTools).
    this.actualDuration = 0;
    this.actualStartTime = -1;
    this.selfBaseDuration = 0;
    this.treeBaseDuration = 0;
  }

  {
    this._debugID = debugCounter++;
    this._debugSource = null;
    this._debugOwner = null;
    this._debugIsCurrentlyTiming = false;
    this._debugHookTypes = null;
    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
      Object.preventExtensions(this);
    }
  }
}

// This is a constructor function, rather than a POJO constructor, still
// please ensure we do the following:
// 1) Nobody should add any instance methods on this. Instance methods can be
//    more difficult to predict when they get optimized and they are almost
//    never inlined properly in static compilers.
// 2) Nobody should rely on `instanceof Fiber` for type testing. We should
//    always know when it is a fiber.
// 3) We might want to experiment with using numeric keys since they are easier
//    to optimize in a non-JIT environment.
// 4) We can easily go from a constructor to a createFiber object literal if that
//    is faster.
// 5) It should be easy to port this to a C struct and keep a C implementation
//    compatible.
var createFiber = function (tag, pendingProps, key, mode) {
  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
  return new FiberNode(tag, pendingProps, key, mode);
};

function shouldConstruct(Component) {
  var prototype = Component.prototype;
  return !!(prototype && prototype.isReactComponent);
}

function isSimpleFunctionComponent(type) {
  return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
}

function resolveLazyComponentTag(Component) {
  if (typeof Component === 'function') {
    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
  } else if (Component !== undefined && Component !== null) {
    var $$typeof = Component.$$typeof;
    if ($$typeof === REACT_FORWARD_REF_TYPE) {
      return ForwardRef;
    }
    if ($$typeof === REACT_MEMO_TYPE) {
      return MemoComponent;
    }
  }
  return IndeterminateComponent;
}

// This is used to create an alternate fiber to do work on.
function createWorkInProgress(current, pendingProps, expirationTime) {
  var workInProgress = current.alternate;
  if (workInProgress === null) {
    // We use a double buffering pooling technique because we know that we'll
    // only ever need at most two versions of a tree. We pool the "other" unused
    // node that we're free to reuse. This is lazily created to avoid allocating
    // extra objects for things that are never updated. It also allow us to
    // reclaim the extra memory if needed.
    workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
    workInProgress.elementType = current.elementType;
    workInProgress.type = current.type;
    workInProgress.stateNode = current.stateNode;

    {
      // DEV-only fields
      workInProgress._debugID = current._debugID;
      workInProgress._debugSource = current._debugSource;
      workInProgress._debugOwner = current._debugOwner;
      workInProgress._debugHookTypes = current._debugHookTypes;
    }

    workInProgress.alternate = current;
    current.alternate = workInProgress;
  } else {
    workInProgress.pendingProps = pendingProps;

    // We already have an alternate.
    // Reset the effect tag.
    workInProgress.effectTag = NoEffect;

    // The effect list is no longer valid.
    workInProgress.nextEffect = null;
    workInProgress.firstEffect = null;
    workInProgress.lastEffect = null;

    if (enableProfilerTimer) {
      // We intentionally reset, rather than copy, actualDuration & actualStartTime.
      // This prevents time from endlessly accumulating in new commits.
      // This has the downside of resetting values for different priority renders,
      // But works for yielding (the common case) and should support resuming.
      workInProgress.actualDuration = 0;
      workInProgress.actualStartTime = -1;
    }
  }

  workInProgress.childExpirationTime = current.childExpirationTime;
  workInProgress.expirationTime = current.expirationTime;

  workInProgress.child = current.child;
  workInProgress.memoizedProps = current.memoizedProps;
  workInProgress.memoizedState = current.memoizedState;
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.contextDependencies = current.contextDependencies;

  // These will be overridden during the parent's reconciliation
  workInProgress.sibling = current.sibling;
  workInProgress.index = current.index;
  workInProgress.ref = current.ref;

  if (enableProfilerTimer) {
    workInProgress.selfBaseDuration = current.selfBaseDuration;
    workInProgress.treeBaseDuration = current.treeBaseDuration;
  }

  return workInProgress;
}

function createHostRootFiber(isConcurrent) {
  var mode = isConcurrent ? ConcurrentMode | StrictMode : NoContext;

  if (enableProfilerTimer && isDevToolsPresent) {
    // Always collect profile timings when DevTools are present.
    // This enables DevTools to start capturing timing at any point–
    // Without some nodes in the tree having empty base times.
    mode |= ProfileMode;
  }

  return createFiber(HostRoot, null, null, mode);
}

function createFiberFromTypeAndProps(type, // React$ElementType
key, pendingProps, owner, mode, expirationTime) {
  var fiber = void 0;

  var fiberTag = IndeterminateComponent;
  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.
  var resolvedType = type;
  if (typeof type === 'function') {
    if (shouldConstruct(type)) {
      fiberTag = ClassComponent;
    }
  } else if (typeof type === 'string') {
    fiberTag = HostComponent;
  } else {
    getTag: switch (type) {
      case REACT_FRAGMENT_TYPE:
        return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);
      case REACT_CONCURRENT_MODE_TYPE:
        return createFiberFromMode(pendingProps, mode | ConcurrentMode | StrictMode, expirationTime, key);
      case REACT_STRICT_MODE_TYPE:
        return createFiberFromMode(pendingProps, mode | StrictMode, expirationTime, key);
      case REACT_PROFILER_TYPE:
        return createFiberFromProfiler(pendingProps, mode, expirationTime, key);
      case REACT_SUSPENSE_TYPE:
        return createFiberFromSuspense(pendingProps, mode, expirationTime, key);
      default:
        {
          if (typeof type === 'object' && type !== null) {
            switch (type.$$typeof) {
              case REACT_PROVIDER_TYPE:
                fiberTag = ContextProvider;
                break getTag;
              case REACT_CONTEXT_TYPE:
                // This is a consumer
                fiberTag = ContextConsumer;
                break getTag;
              case REACT_FORWARD_REF_TYPE:
                fiberTag = ForwardRef;
                break getTag;
              case REACT_MEMO_TYPE:
                fiberTag = MemoComponent;
                break getTag;
              case REACT_LAZY_TYPE:
                fiberTag = LazyComponent;
                resolvedType = null;
                break getTag;
            }
          }
          var info = '';
          {
            if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
              info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
            }
            var ownerName = owner ? getComponentName(owner.type) : null;
            if (ownerName) {
              info += '\n\nCheck the render method of `' + ownerName + '`.';
            }
          }
          invariant(false, 'Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s', type == null ? type : typeof type, info);
        }
    }
  }

  fiber = createFiber(fiberTag, pendingProps, key, mode);
  fiber.elementType = type;
  fiber.type = resolvedType;
  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromElement(element, mode, expirationTime) {
  var owner = null;
  {
    owner = element._owner;
  }
  var type = element.type;
  var key = element.key;
  var pendingProps = element.props;
  var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
  {
    fiber._debugSource = element._source;
    fiber._debugOwner = element._owner;
  }
  return fiber;
}

function createFiberFromFragment(elements, mode, expirationTime, key) {
  var fiber = createFiber(Fragment, elements, key, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
  {
    if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
      warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
    }
  }

  var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
  // TODO: The Profiler fiber shouldn't have a type. It has a tag.
  fiber.elementType = REACT_PROFILER_TYPE;
  fiber.type = REACT_PROFILER_TYPE;
  fiber.expirationTime = expirationTime;

  return fiber;
}

function createFiberFromMode(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(Mode, pendingProps, key, mode);

  // TODO: The Mode fiber shouldn't have a type. It has a tag.
  var type = (mode & ConcurrentMode) === NoContext ? REACT_STRICT_MODE_TYPE : REACT_CONCURRENT_MODE_TYPE;
  fiber.elementType = type;
  fiber.type = type;

  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
  var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);

  // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
  var type = REACT_SUSPENSE_TYPE;
  fiber.elementType = type;
  fiber.type = type;

  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromText(content, mode, expirationTime) {
  var fiber = createFiber(HostText, content, null, mode);
  fiber.expirationTime = expirationTime;
  return fiber;
}

function createFiberFromHostInstanceForDeletion() {
  var fiber = createFiber(HostComponent, null, null, NoContext);
  // TODO: These should not need a type.
  fiber.elementType = 'DELETED';
  fiber.type = 'DELETED';
  return fiber;
}

function createFiberFromPortal(portal, mode, expirationTime) {
  var pendingProps = portal.children !== null ? portal.children : [];
  var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
  fiber.expirationTime = expirationTime;
  fiber.stateNode = {
    containerInfo: portal.containerInfo,
    pendingChildren: null, // Used by persistent updates
    implementation: portal.implementation
  };
  return fiber;
}

// Used for stashing WIP properties to replay failed work in DEV.
function assignFiberPropertiesInDEV(target, source) {
  if (target === null) {
    // This Fiber's initial properties will always be overwritten.
    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
    target = createFiber(IndeterminateComponent, null, null, NoContext);
  }

  // This is intentionally written as a list of all properties.
  // We tried to use Object.assign() instead but this is called in
  // the hottest path, and Object.assign() was too slow:
  // https://github.com/facebook/react/issues/12502
  // This code is DEV-only so size is not a concern.

  target.tag = source.tag;
  target.key = source.key;
  target.elementType = source.elementType;
  target.type = source.type;
  target.stateNode = source.stateNode;
  target.return = source.return;
  target.child = source.child;
  target.sibling = source.sibling;
  target.index = source.index;
  target.ref = source.ref;
  target.pendingProps = source.pendingProps;
  target.memoizedProps = source.memoizedProps;
  target.updateQueue = source.updateQueue;
  target.memoizedState = source.memoizedState;
  target.contextDependencies = source.contextDependencies;
  target.mode = source.mode;
  target.effectTag = source.effectTag;
  target.nextEffect = source.nextEffect;
  target.firstEffect = source.firstEffect;
  target.lastEffect = source.lastEffect;
  target.expirationTime = source.expirationTime;
  target.childExpirationTime = source.childExpirationTime;
  target.alternate = source.alternate;
  if (enableProfilerTimer) {
    target.actualDuration = source.actualDuration;
    target.actualStartTime = source.actualStartTime;
    target.selfBaseDuration = source.selfBaseDuration;
    target.treeBaseDuration = source.treeBaseDuration;
  }
  target._debugID = source._debugID;
  target._debugSource = source._debugSource;
  target._debugOwner = source._debugOwner;
  target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
  target._debugHookTypes = source._debugHookTypes;
  return target;
}

// TODO: This should be lifted into the renderer.


// The following attributes are only used by interaction tracing builds.
// They enable interactions to be associated with their async work,
// And expose interaction metadata to the React DevTools Profiler plugin.
// Note that these attributes are only defined when the enableSchedulerTracing flag is enabled.


// Exported FiberRoot type includes all properties,
// To avoid requiring potentially error-prone :any casts throughout the project.
// Profiling properties are only safe to access in profiling builds (when enableSchedulerTracing is true).
// The types are defined separately within this file to ensure they stay in sync.
// (We don't have to use an inline :any cast when enableSchedulerTracing is disabled.)


function createFiberRoot(containerInfo, isConcurrent, hydrate) {
  // Cyclic construction. This cheats the type system right now because
  // stateNode is any.
  var uninitializedFiber = createHostRootFiber(isConcurrent);

  var root = void 0;
  if (enableSchedulerTracing) {
    root = {
      current: uninitializedFiber,
      containerInfo: containerInfo,
      pendingChildren: null,

      earliestPendingTime: NoWork,
      latestPendingTime: NoWork,
      earliestSuspendedTime: NoWork,
      latestSuspendedTime: NoWork,
      latestPingedTime: NoWork,

      pingCache: null,

      didError: false,

      pendingCommitExpirationTime: NoWork,
      finishedWork: null,
      timeoutHandle: noTimeout,
      context: null,
      pendingContext: null,
      hydrate: hydrate,
      nextExpirationTimeToWorkOn: NoWork,
      expirationTime: NoWork,
      firstBatch: null,
      nextScheduledRoot: null,

      interactionThreadID: tracing.unstable_getThreadID(),
      memoizedInteractions: new Set(),
      pendingInteractionMap: new Map()
    };
  } else {
    root = {
      current: uninitializedFiber,
      containerInfo: containerInfo,
      pendingChildren: null,

      pingCache: null,

      earliestPendingTime: NoWork,
      latestPendingTime: NoWork,
      earliestSuspendedTime: NoWork,
      latestSuspendedTime: NoWork,
      latestPingedTime: NoWork,

      didError: false,

      pendingCommitExpirationTime: NoWork,
      finishedWork: null,
      timeoutHandle: noTimeout,
      context: null,
      pendingContext: null,
      hydrate: hydrate,
      nextExpirationTimeToWorkOn: NoWork,
      expirationTime: NoWork,
      firstBatch: null,
      nextScheduledRoot: null
    };
  }

  uninitializedFiber.stateNode = root;

  // The reason for the way the Flow types are structured in this file,
  // Is to avoid needing :any casts everywhere interaction tracing fields are used.
  // Unfortunately that requires an :any cast for non-interaction tracing capable builds.
  // $FlowFixMe Remove this :any cast and replace it with something better.
  return root;
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

var ReactStrictModeWarnings = {
  discardPendingWarnings: function () {},
  flushPendingDeprecationWarnings: function () {},
  flushPendingUnsafeLifecycleWarnings: function () {},
  recordDeprecationWarnings: function (fiber, instance) {},
  recordUnsafeLifecycleWarnings: function (fiber, instance) {},
  recordLegacyContextWarning: function (fiber, instance) {},
  flushLegacyContextWarning: function () {}
};

{
  var LIFECYCLE_SUGGESTIONS = {
    UNSAFE_componentWillMount: 'componentDidMount',
    UNSAFE_componentWillReceiveProps: 'static getDerivedStateFromProps',
    UNSAFE_componentWillUpdate: 'componentDidUpdate'
  };

  var pendingComponentWillMountWarnings = [];
  var pendingComponentWillReceivePropsWarnings = [];
  var pendingComponentWillUpdateWarnings = [];
  var pendingUnsafeLifecycleWarnings = new Map();
  var pendingLegacyContextWarning = new Map();

  // Tracks components we have already warned about.
  var didWarnAboutDeprecatedLifecycles = new Set();
  var didWarnAboutUnsafeLifecycles = new Set();
  var didWarnAboutLegacyContext = new Set();

  var setToSortedString = function (set) {
    var array = [];
    set.forEach(function (value) {
      array.push(value);
    });
    return array.sort().join(', ');
  };

  ReactStrictModeWarnings.discardPendingWarnings = function () {
    pendingComponentWillMountWarnings = [];
    pendingComponentWillReceivePropsWarnings = [];
    pendingComponentWillUpdateWarnings = [];
    pendingUnsafeLifecycleWarnings = new Map();
    pendingLegacyContextWarning = new Map();
  };

  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
    pendingUnsafeLifecycleWarnings.forEach(function (lifecycleWarningsMap, strictRoot) {
      var lifecyclesWarningMessages = [];

      Object.keys(lifecycleWarningsMap).forEach(function (lifecycle) {
        var lifecycleWarnings = lifecycleWarningsMap[lifecycle];
        if (lifecycleWarnings.length > 0) {
          var componentNames = new Set();
          lifecycleWarnings.forEach(function (fiber) {
            componentNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });

          var formatted = lifecycle.replace('UNSAFE_', '');
          var suggestion = LIFECYCLE_SUGGESTIONS[lifecycle];
          var sortedComponentNames = setToSortedString(componentNames);

          lifecyclesWarningMessages.push(formatted + ': Please update the following components to use ' + (suggestion + ' instead: ' + sortedComponentNames));
        }
      });

      if (lifecyclesWarningMessages.length > 0) {
        var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);

        warningWithoutStack$1(false, 'Unsafe lifecycle methods were found within a strict-mode tree:%s' + '\n\n%s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, lifecyclesWarningMessages.join('\n\n'));
      }
    });

    pendingUnsafeLifecycleWarnings = new Map();
  };

  var findStrictRoot = function (fiber) {
    var maybeStrictRoot = null;

    var node = fiber;
    while (node !== null) {
      if (node.mode & StrictMode) {
        maybeStrictRoot = node;
      }
      node = node.return;
    }

    return maybeStrictRoot;
  };

  ReactStrictModeWarnings.flushPendingDeprecationWarnings = function () {
    if (pendingComponentWillMountWarnings.length > 0) {
      var uniqueNames = new Set();
      pendingComponentWillMountWarnings.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);

      lowPriorityWarning$1(false, 'componentWillMount is deprecated and will be removed in the next major version. ' + 'Use componentDidMount instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillMount.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', sortedNames);

      pendingComponentWillMountWarnings = [];
    }

    if (pendingComponentWillReceivePropsWarnings.length > 0) {
      var _uniqueNames = new Set();
      pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
        _uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames = setToSortedString(_uniqueNames);

      lowPriorityWarning$1(false, 'componentWillReceiveProps is deprecated and will be removed in the next major version. ' + 'Use static getDerivedStateFromProps instead.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames);

      pendingComponentWillReceivePropsWarnings = [];
    }

    if (pendingComponentWillUpdateWarnings.length > 0) {
      var _uniqueNames2 = new Set();
      pendingComponentWillUpdateWarnings.forEach(function (fiber) {
        _uniqueNames2.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutDeprecatedLifecycles.add(fiber.type);
      });

      var _sortedNames2 = setToSortedString(_uniqueNames2);

      lowPriorityWarning$1(false, 'componentWillUpdate is deprecated and will be removed in the next major version. ' + 'Use componentDidUpdate instead. As a temporary workaround, ' + 'you can rename to UNSAFE_componentWillUpdate.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-async-component-lifecycle-hooks', _sortedNames2);

      pendingComponentWillUpdateWarnings = [];
    }
  };

  ReactStrictModeWarnings.recordDeprecationWarnings = function (fiber, instance) {
    // Dedup strategy: Warn once per component.
    if (didWarnAboutDeprecatedLifecycles.has(fiber.type)) {
      return;
    }

    // Don't warn about react-lifecycles-compat polyfilled components.
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
      pendingComponentWillMountWarnings.push(fiber);
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
      pendingComponentWillReceivePropsWarnings.push(fiber);
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
      pendingComponentWillUpdateWarnings.push(fiber);
    }
  };

  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    // This is difficult to track any other way since component names
    // are often vague and are likely to collide between 3rd party libraries.
    // An expand property is probably okay to use here since it's DEV-only,
    // and will only be set in the event of serious warnings.
    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
      return;
    }

    var warningsForRoot = void 0;
    if (!pendingUnsafeLifecycleWarnings.has(strictRoot)) {
      warningsForRoot = {
        UNSAFE_componentWillMount: [],
        UNSAFE_componentWillReceiveProps: [],
        UNSAFE_componentWillUpdate: []
      };

      pendingUnsafeLifecycleWarnings.set(strictRoot, warningsForRoot);
    } else {
      warningsForRoot = pendingUnsafeLifecycleWarnings.get(strictRoot);
    }

    var unsafeLifecycles = [];
    if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillMount === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillMount');
    }
    if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillReceiveProps');
    }
    if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true || typeof instance.UNSAFE_componentWillUpdate === 'function') {
      unsafeLifecycles.push('UNSAFE_componentWillUpdate');
    }

    if (unsafeLifecycles.length > 0) {
      unsafeLifecycles.forEach(function (lifecycle) {
        warningsForRoot[lifecycle].push(fiber);
      });
    }
  };

  ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
    var strictRoot = findStrictRoot(fiber);
    if (strictRoot === null) {
      warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
      return;
    }

    // Dedup strategy: Warn once per component.
    if (didWarnAboutLegacyContext.has(fiber.type)) {
      return;
    }

    var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

    if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
      if (warningsForRoot === undefined) {
        warningsForRoot = [];
        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
      }
      warningsForRoot.push(fiber);
    }
  };

  ReactStrictModeWarnings.flushLegacyContextWarning = function () {
    pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
      var uniqueNames = new Set();
      fiberArray.forEach(function (fiber) {
        uniqueNames.add(getComponentName(fiber.type) || 'Component');
        didWarnAboutLegacyContext.add(fiber.type);
      });

      var sortedNames = setToSortedString(uniqueNames);
      var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);

      warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree: %s' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here:' + '\nhttps://fb.me/react-strict-mode-warnings', strictRootComponentStack, sortedNames);
    });
  };
}

// This lets us hook into Fiber to debug what it's doing.
// See https://github.com/facebook/react/pull/8033.
// This is not part of the public API, not even for React DevTools.
// You may only inject a debugTool if you work on React Fiber itself.
var ReactFiberInstrumentation = {
  debugTool: null
};

var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;

// TODO: Offscreen updates should never suspend. However, a promise that
// suspended inside an offscreen subtree should be able to ping at the priority
// of the outer render.

function markPendingPriorityLevel(root, expirationTime) {
  // If there's a gap between completing a failed root and retrying it,
  // additional updates may be scheduled. Clear `didError`, in case the update
  // is sufficient to fix the error.
  root.didError = false;

  // Update the latest and earliest pending times
  var earliestPendingTime = root.earliestPendingTime;
  if (earliestPendingTime === NoWork) {
    // No other pending updates.
    root.earliestPendingTime = root.latestPendingTime = expirationTime;
  } else {
    if (earliestPendingTime < expirationTime) {
      // This is the earliest pending update.
      root.earliestPendingTime = expirationTime;
    } else {
      var latestPendingTime = root.latestPendingTime;
      if (latestPendingTime > expirationTime) {
        // This is the latest pending update
        root.latestPendingTime = expirationTime;
      }
    }
  }
  findNextExpirationTimeToWorkOn(expirationTime, root);
}

function markCommittedPriorityLevels(root, earliestRemainingTime) {
  root.didError = false;

  if (earliestRemainingTime === NoWork) {
    // Fast path. There's no remaining work. Clear everything.
    root.earliestPendingTime = NoWork;
    root.latestPendingTime = NoWork;
    root.earliestSuspendedTime = NoWork;
    root.latestSuspendedTime = NoWork;
    root.latestPingedTime = NoWork;
    findNextExpirationTimeToWorkOn(NoWork, root);
    return;
  }

  if (earliestRemainingTime < root.latestPingedTime) {
    root.latestPingedTime = NoWork;
  }

  // Let's see if the previous latest known pending level was just flushed.
  var latestPendingTime = root.latestPendingTime;
  if (latestPendingTime !== NoWork) {
    if (latestPendingTime > earliestRemainingTime) {
      // We've flushed all the known pending levels.
      root.earliestPendingTime = root.latestPendingTime = NoWork;
    } else {
      var earliestPendingTime = root.earliestPendingTime;
      if (earliestPendingTime > earliestRemainingTime) {
        // We've flushed the earliest known pending level. Set this to the
        // latest pending time.
        root.earliestPendingTime = root.latestPendingTime;
      }
    }
  }

  // Now let's handle the earliest remaining level in the whole tree. We need to
  // decide whether to treat it as a pending level or as suspended. Check
  // it falls within the range of known suspended levels.

  var earliestSuspendedTime = root.earliestSuspendedTime;
  if (earliestSuspendedTime === NoWork) {
    // There's no suspended work. Treat the earliest remaining level as a
    // pending level.
    markPendingPriorityLevel(root, earliestRemainingTime);
    findNextExpirationTimeToWorkOn(NoWork, root);
    return;
  }

  var latestSuspendedTime = root.latestSuspendedTime;
  if (earliestRemainingTime < latestSuspendedTime) {
    // The earliest remaining level is later than all the suspended work. That
    // means we've flushed all the suspended work.
    root.earliestSuspendedTime = NoWork;
    root.latestSuspendedTime = NoWork;
    root.latestPingedTime = NoWork;

    // There's no suspended work. Treat the earliest remaining level as a
    // pending level.
    markPendingPriorityLevel(root, earliestRemainingTime);
    findNextExpirationTimeToWorkOn(NoWork, root);
    return;
  }

  if (earliestRemainingTime > earliestSuspendedTime) {
    // The earliest remaining time is earlier than all the suspended work.
    // Treat it as a pending update.
    markPendingPriorityLevel(root, earliestRemainingTime);
    findNextExpirationTimeToWorkOn(NoWork, root);
    return;
  }

  // The earliest remaining time falls within the range of known suspended
  // levels. We should treat this as suspended work.
  findNextExpirationTimeToWorkOn(NoWork, root);
}

function hasLowerPriorityWork(root, erroredExpirationTime) {
  var latestPendingTime = root.latestPendingTime;
  var latestSuspendedTime = root.latestSuspendedTime;
  var latestPingedTime = root.latestPingedTime;
  return latestPendingTime !== NoWork && latestPendingTime < erroredExpirationTime || latestSuspendedTime !== NoWork && latestSuspendedTime < erroredExpirationTime || latestPingedTime !== NoWork && latestPingedTime < erroredExpirationTime;
}

function isPriorityLevelSuspended(root, expirationTime) {
  var earliestSuspendedTime = root.earliestSuspendedTime;
  var latestSuspendedTime = root.latestSuspendedTime;
  return earliestSuspendedTime !== NoWork && expirationTime <= earliestSuspendedTime && expirationTime >= latestSuspendedTime;
}

function markSuspendedPriorityLevel(root, suspendedTime) {
  root.didError = false;
  clearPing(root, suspendedTime);

  // First, check the known pending levels and update them if needed.
  var earliestPendingTime = root.earliestPendingTime;
  var latestPendingTime = root.latestPendingTime;
  if (earliestPendingTime === suspendedTime) {
    if (latestPendingTime === suspendedTime) {
      // Both known pending levels were suspended. Clear them.
      root.earliestPendingTime = root.latestPendingTime = NoWork;
    } else {
      // The earliest pending level was suspended. Clear by setting it to the
      // latest pending level.
      root.earliestPendingTime = latestPendingTime;
    }
  } else if (latestPendingTime === suspendedTime) {
    // The latest pending level was suspended. Clear by setting it to the
    // latest pending level.
    root.latestPendingTime = earliestPendingTime;
  }

  // Finally, update the known suspended levels.
  var earliestSuspendedTime = root.earliestSuspendedTime;
  var latestSuspendedTime = root.latestSuspendedTime;
  if (earliestSuspendedTime === NoWork) {
    // No other suspended levels.
    root.earliestSuspendedTime = root.latestSuspendedTime = suspendedTime;
  } else {
    if (earliestSuspendedTime < suspendedTime) {
      // This is the earliest suspended level.
      root.earliestSuspendedTime = suspendedTime;
    } else if (latestSuspendedTime > suspendedTime) {
      // This is the latest suspended level
      root.latestSuspendedTime = suspendedTime;
    }
  }

  findNextExpirationTimeToWorkOn(suspendedTime, root);
}

function markPingedPriorityLevel(root, pingedTime) {
  root.didError = false;

  // TODO: When we add back resuming, we need to ensure the progressed work
  // is thrown out and not reused during the restarted render. One way to
  // invalidate the progressed work is to restart at expirationTime + 1.
  var latestPingedTime = root.latestPingedTime;
  if (latestPingedTime === NoWork || latestPingedTime > pingedTime) {
    root.latestPingedTime = pingedTime;
  }
  findNextExpirationTimeToWorkOn(pingedTime, root);
}

function clearPing(root, completedTime) {
  var latestPingedTime = root.latestPingedTime;
  if (latestPingedTime >= completedTime) {
    root.latestPingedTime = NoWork;
  }
}

function findEarliestOutstandingPriorityLevel(root, renderExpirationTime) {
  var earliestExpirationTime = renderExpirationTime;

  var earliestPendingTime = root.earliestPendingTime;
  var earliestSuspendedTime = root.earliestSuspendedTime;
  if (earliestPendingTime > earliestExpirationTime) {
    earliestExpirationTime = earliestPendingTime;
  }
  if (earliestSuspendedTime > earliestExpirationTime) {
    earliestExpirationTime = earliestSuspendedTime;
  }
  return earliestExpirationTime;
}

function didExpireAtExpirationTime(root, currentTime) {
  var expirationTime = root.expirationTime;
  if (expirationTime !== NoWork && currentTime <= expirationTime) {
    // The root has expired. Flush all work up to the current time.
    root.nextExpirationTimeToWorkOn = currentTime;
  }
}

function findNextExpirationTimeToWorkOn(completedExpirationTime, root) {
  var earliestSuspendedTime = root.earliestSuspendedTime;
  var latestSuspendedTime = root.latestSuspendedTime;
  var earliestPendingTime = root.earliestPendingTime;
  var latestPingedTime = root.latestPingedTime;

  // Work on the earliest pending time. Failing that, work on the latest
  // pinged time.
  var nextExpirationTimeToWorkOn = earliestPendingTime !== NoWork ? earliestPendingTime : latestPingedTime;

  // If there is no pending or pinged work, check if there's suspended work
  // that's lower priority than what we just completed.
  if (nextExpirationTimeToWorkOn === NoWork && (completedExpirationTime === NoWork || latestSuspendedTime < completedExpirationTime)) {
    // The lowest priority suspended work is the work most likely to be
    // committed next. Let's start rendering it again, so that if it times out,
    // it's ready to commit.
    nextExpirationTimeToWorkOn = latestSuspendedTime;
  }

  var expirationTime = nextExpirationTimeToWorkOn;
  if (expirationTime !== NoWork && earliestSuspendedTime > expirationTime) {
    // Expire using the earliest known expiration time.
    expirationTime = earliestSuspendedTime;
  }

  root.nextExpirationTimeToWorkOn = nextExpirationTimeToWorkOn;
  root.expirationTime = expirationTime;
}

function resolveDefaultProps(Component, baseProps) {
  if (Component && Component.defaultProps) {
    // Resolve default props. Taken from ReactElement
    var props = _assign({}, baseProps);
    var defaultProps = Component.defaultProps;
    for (var propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
    return props;
  }
  return baseProps;
}

function readLazyComponentType(lazyComponent) {
  var status = lazyComponent._status;
  var result = lazyComponent._result;
  switch (status) {
    case Resolved:
      {
        var Component = result;
        return Component;
      }
    case Rejected:
      {
        var error = result;
        throw error;
      }
    case Pending:
      {
        var thenable = result;
        throw thenable;
      }
    default:
      {
        lazyComponent._status = Pending;
        var ctor = lazyComponent._ctor;
        var _thenable = ctor();
        _thenable.then(function (moduleObject) {
          if (lazyComponent._status === Pending) {
            var defaultExport = moduleObject.default;
            {
              if (defaultExport === undefined) {
                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            lazyComponent._status = Resolved;
            lazyComponent._result = defaultExport;
          }
        }, function (error) {
          if (lazyComponent._status === Pending) {
            lazyComponent._status = Rejected;
            lazyComponent._result = error;
          }
        });
        // Handle synchronous thenables.
        switch (lazyComponent._status) {
          case Resolved:
            return lazyComponent._result;
          case Rejected:
            throw lazyComponent._result;
        }
        lazyComponent._result = _thenable;
        throw _thenable;
      }
  }
}

var fakeInternalInstance = {};
var isArray$1 = Array.isArray;

// React.Component uses a shared frozen object by default.
// We'll use it to determine whether we need to initialize legacy refs.
var emptyRefsObject = new React.Component().refs;

var didWarnAboutStateAssignmentForComponent = void 0;
var didWarnAboutUninitializedState = void 0;
var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = void 0;
var didWarnAboutLegacyLifecyclesAndDerivedState = void 0;
var didWarnAboutUndefinedDerivedState = void 0;
var warnOnUndefinedDerivedState = void 0;
var warnOnInvalidCallback$1 = void 0;
var didWarnAboutDirectlyAssigningPropsToState = void 0;
var didWarnAboutContextTypeAndContextTypes = void 0;
var didWarnAboutInvalidateContextType = void 0;

{
  didWarnAboutStateAssignmentForComponent = new Set();
  didWarnAboutUninitializedState = new Set();
  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
  didWarnAboutDirectlyAssigningPropsToState = new Set();
  didWarnAboutUndefinedDerivedState = new Set();
  didWarnAboutContextTypeAndContextTypes = new Set();
  didWarnAboutInvalidateContextType = new Set();

  var didWarnOnInvalidCallback = new Set();

  warnOnInvalidCallback$1 = function (callback, callerName) {
    if (callback === null || typeof callback === 'function') {
      return;
    }
    var key = callerName + '_' + callback;
    if (!didWarnOnInvalidCallback.has(key)) {
      didWarnOnInvalidCallback.add(key);
      warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
    }
  };

  warnOnUndefinedDerivedState = function (type, partialState) {
    if (partialState === undefined) {
      var componentName = getComponentName(type) || 'Component';
      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
        didWarnAboutUndefinedDerivedState.add(componentName);
        warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
      }
    }
  };

  // This is so gross but it's at least non-critical and can be removed if
  // it causes problems. This is meant to give a nicer error message for
  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
  // ...)) which otherwise throws a "_processChildContext is not a function"
  // exception.
  Object.defineProperty(fakeInternalInstance, '_processChildContext', {
    enumerable: false,
    value: function () {
      invariant(false, '_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn\'t supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).');
    }
  });
  Object.freeze(fakeInternalInstance);
}

function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
  var prevState = workInProgress.memoizedState;

  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Invoke the function an extra time to help detect side-effects.
      getDerivedStateFromProps(nextProps, prevState);
    }
  }

  var partialState = getDerivedStateFromProps(nextProps, prevState);

  {
    warnOnUndefinedDerivedState(ctor, partialState);
  }
  // Merge the partial state and the previous state.
  var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
  workInProgress.memoizedState = memoizedState;

  // Once the update queue is empty, persist the derived state onto the
  // base state.
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
    updateQueue.baseState = memoizedState;
  }
}

var classComponentUpdater = {
  isMounted: isMounted,
  enqueueSetState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.payload = payload;
    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'setState');
      }
      update.callback = callback;
    }

    flushPassiveEffects();
    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueReplaceState: function (inst, payload, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ReplaceState;
    update.payload = payload;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'replaceState');
      }
      update.callback = callback;
    }

    flushPassiveEffects();
    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  },
  enqueueForceUpdate: function (inst, callback) {
    var fiber = get(inst);
    var currentTime = requestCurrentTime();
    var expirationTime = computeExpirationForFiber(currentTime, fiber);

    var update = createUpdate(expirationTime);
    update.tag = ForceUpdate;

    if (callback !== undefined && callback !== null) {
      {
        warnOnInvalidCallback$1(callback, 'forceUpdate');
      }
      update.callback = callback;
    }

    flushPassiveEffects();
    enqueueUpdate(fiber, update);
    scheduleWork(fiber, expirationTime);
  }
};

function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
  var instance = workInProgress.stateNode;
  if (typeof instance.shouldComponentUpdate === 'function') {
    startPhaseTimer(workInProgress, 'shouldComponentUpdate');
    var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
    stopPhaseTimer();

    {
      !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
    }

    return shouldUpdate;
  }

  if (ctor.prototype && ctor.prototype.isPureReactComponent) {
    return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
  }

  return true;
}

function checkClassInstance(workInProgress, ctor, newProps) {
  var instance = workInProgress.stateNode;
  {
    var name = getComponentName(ctor) || 'Component';
    var renderPresent = instance.render;

    if (!renderPresent) {
      if (ctor.prototype && typeof ctor.prototype.render === 'function') {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
      } else {
        warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
      }
    }

    var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
    !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
    var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
    !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
    var noInstancePropTypes = !instance.propTypes;
    !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
    var noInstanceContextType = !instance.contextType;
    !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;
    var noInstanceContextTypes = !instance.contextTypes;
    !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

    if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
      didWarnAboutContextTypeAndContextTypes.add(ctor);
      warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
    }

    var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
    !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;
    if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
      warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
    }
    var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
    !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
    var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
    !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
    var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
    !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
    var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
    !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
    var hasMutatedProps = instance.props !== newProps;
    !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
    var noInstanceDefaultProps = !instance.defaultProps;
    !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

    if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
      warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
    }

    var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
    !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
    !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
    var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
    !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
    var _state = instance.state;
    if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
      warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
    }
    if (typeof instance.getChildContext === 'function') {
      !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
    }
  }
}

function adoptClassInstance(workInProgress, instance) {
  instance.updater = classComponentUpdater;
  workInProgress.stateNode = instance;
  // The instance needs access to the fiber so that it can schedule updates
  set(instance, workInProgress);
  {
    instance._reactInternalInstance = fakeInternalInstance;
  }
}

function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
  var isLegacyContextConsumer = false;
  var unmaskedContext = emptyContextObject;
  var context = null;
  var contextType = ctor.contextType;

  {
    if ('contextType' in ctor) {
      var isValid =
      // Allow null for conditional declaration
      contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
        didWarnAboutInvalidateContextType.add(ctor);

        var addendum = '';
        if (contextType === undefined) {
          addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
        } else if (typeof contextType !== 'object') {
          addendum = ' However, it is set to a ' + typeof contextType + '.';
        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
          addendum = ' Did you accidentally pass the Context.Provider instead?';
        } else if (contextType._context !== undefined) {
          // <Context.Consumer>
          addendum = ' Did you accidentally pass the Context.Consumer instead?';
        } else {
          addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
        }
        warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
      }
    }
  }

  if (typeof contextType === 'object' && contextType !== null) {
    context = readContext(contextType);
  } else {
    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    var contextTypes = ctor.contextTypes;
    isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
    context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
  }

  // Instantiate twice to help detect side-effects.
  {
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      new ctor(props, context); // eslint-disable-line no-new
    }
  }

  var instance = new ctor(props, context);
  var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
  adoptClassInstance(workInProgress, instance);

  {
    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
      var componentName = getComponentName(ctor) || 'Component';
      if (!didWarnAboutUninitializedState.has(componentName)) {
        didWarnAboutUninitializedState.add(componentName);
        warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
      }
    }

    // If new component APIs are defined, "unsafe" lifecycles won't be called.
    // Warn about these lifecycles if they are present.
    // Don't warn about react-lifecycles-compat polyfilled methods though.
    if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
      var foundWillMountName = null;
      var foundWillReceivePropsName = null;
      var foundWillUpdateName = null;
      if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
        foundWillMountName = 'componentWillMount';
      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
        foundWillMountName = 'UNSAFE_componentWillMount';
      }
      if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
        foundWillReceivePropsName = 'componentWillReceiveProps';
      } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
      }
      if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
        foundWillUpdateName = 'componentWillUpdate';
      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        foundWillUpdateName = 'UNSAFE_componentWillUpdate';
      }
      if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
        var _componentName = getComponentName(ctor) || 'Component';
        var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';
        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
          didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
          warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-async-component-lifecycle-hooks', _componentName, newApiName, foundWillMountName !== null ? '\n  ' + foundWillMountName : '', foundWillReceivePropsName !== null ? '\n  ' + foundWillReceivePropsName : '', foundWillUpdateName !== null ? '\n  ' + foundWillUpdateName : '');
        }
      }
    }
  }

  // Cache unmasked context so we can avoid recreating masked context unless necessary.
  // ReactFiberContext usually updates this cache but can't for newly-created instances.
  if (isLegacyContextConsumer) {
    cacheContext(workInProgress, unmaskedContext, context);
  }

  return instance;
}

function callComponentWillMount(workInProgress, instance) {
  startPhaseTimer(workInProgress, 'componentWillMount');
  var oldState = instance.state;

  if (typeof instance.componentWillMount === 'function') {
    instance.componentWillMount();
  }
  if (typeof instance.UNSAFE_componentWillMount === 'function') {
    instance.UNSAFE_componentWillMount();
  }

  stopPhaseTimer();

  if (oldState !== instance.state) {
    {
      warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
  var oldState = instance.state;
  startPhaseTimer(workInProgress, 'componentWillReceiveProps');
  if (typeof instance.componentWillReceiveProps === 'function') {
    instance.componentWillReceiveProps(newProps, nextContext);
  }
  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
  }
  stopPhaseTimer();

  if (instance.state !== oldState) {
    {
      var componentName = getComponentName(workInProgress.type) || 'Component';
      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
        didWarnAboutStateAssignmentForComponent.add(componentName);
        warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
      }
    }
    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
  }
}

// Invokes the mount life-cycles on a previously never rendered instance.
function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  {
    checkClassInstance(workInProgress, ctor, newProps);
  }

  var instance = workInProgress.stateNode;
  instance.props = newProps;
  instance.state = workInProgress.memoizedState;
  instance.refs = emptyRefsObject;

  var contextType = ctor.contextType;
  if (typeof contextType === 'object' && contextType !== null) {
    instance.context = readContext(contextType);
  } else {
    var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    instance.context = getMaskedContext(workInProgress, unmaskedContext);
  }

  {
    if (instance.state === newProps) {
      var componentName = getComponentName(ctor) || 'Component';
      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
        didWarnAboutDirectlyAssigningPropsToState.add(componentName);
        warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);

      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
    }

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.recordDeprecationWarnings(workInProgress, instance);
    }
  }

  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    instance.state = workInProgress.memoizedState;
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    instance.state = workInProgress.memoizedState;
  }

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
    callComponentWillMount(workInProgress, instance);
    // If we had additional state updates during this life-cycle, let's
    // process them now.
    updateQueue = workInProgress.updateQueue;
    if (updateQueue !== null) {
      processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
      instance.state = workInProgress.memoizedState;
    }
  }

  if (typeof instance.componentDidMount === 'function') {
    workInProgress.effectTag |= Update;
  }
}

function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  instance.props = oldProps;

  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = void 0;
  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }
  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }
      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidMount === 'function') {
      workInProgress.effectTag |= Update;
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;

  return shouldUpdate;
}

// Invokes the update life-cycles and returns false if it shouldn't rerender.
function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
  var instance = workInProgress.stateNode;

  var oldProps = workInProgress.memoizedProps;
  instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);

  var oldContext = instance.context;
  var contextType = ctor.contextType;
  var nextContext = void 0;
  if (typeof contextType === 'object' && contextType !== null) {
    nextContext = readContext(contextType);
  } else {
    var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
  }

  var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
  var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function';

  // Note: During these life-cycles, instance.props/instance.state are what
  // ever the previously attempted to render - not the "current". However,
  // during componentDidUpdate we pass the "current" props.

  // In order to support react-lifecycles-compat polyfilled components,
  // Unsafe lifecycles should not be invoked for components using the new APIs.
  if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
    if (oldProps !== newProps || oldContext !== nextContext) {
      callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
    }
  }

  resetHasForceUpdateBeforeProcessing();

  var oldState = workInProgress.memoizedState;
  var newState = instance.state = oldState;
  var updateQueue = workInProgress.updateQueue;
  if (updateQueue !== null) {
    processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
    newState = workInProgress.memoizedState;
  }

  if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }
    return false;
  }

  if (typeof getDerivedStateFromProps === 'function') {
    applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
    newState = workInProgress.memoizedState;
  }

  var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

  if (shouldUpdate) {
    // In order to support react-lifecycles-compat polyfilled components,
    // Unsafe lifecycles should not be invoked for components using the new APIs.
    if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
      startPhaseTimer(workInProgress, 'componentWillUpdate');
      if (typeof instance.componentWillUpdate === 'function') {
        instance.componentWillUpdate(newProps, newState, nextContext);
      }
      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
      }
      stopPhaseTimer();
    }
    if (typeof instance.componentDidUpdate === 'function') {
      workInProgress.effectTag |= Update;
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      workInProgress.effectTag |= Snapshot;
    }
  } else {
    // If an update was already in progress, we should schedule an Update
    // effect even though we're bailing out, so that cWU/cDU are called.
    if (typeof instance.componentDidUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Update;
      }
    }
    if (typeof instance.getSnapshotBeforeUpdate === 'function') {
      if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
        workInProgress.effectTag |= Snapshot;
      }
    }

    // If shouldComponentUpdate returned false, we should still update the
    // memoized props/state to indicate that this work can be reused.
    workInProgress.memoizedProps = newProps;
    workInProgress.memoizedState = newState;
  }

  // Update the existing instance's state, props, and context pointers even
  // if shouldComponentUpdate returns false.
  instance.props = newProps;
  instance.state = newState;
  instance.context = nextContext;

  return shouldUpdate;
}

var didWarnAboutMaps = void 0;
var didWarnAboutGenerators = void 0;
var didWarnAboutStringRefInStrictMode = void 0;
var ownerHasKeyUseWarning = void 0;
var ownerHasFunctionTypeWarning = void 0;
var warnForMissingKey = function (child) {};

{
  didWarnAboutMaps = false;
  didWarnAboutGenerators = false;
  didWarnAboutStringRefInStrictMode = {};

  /**
   * Warn if there's no key explicitly set on dynamic arrays of children or
   * object keys are not valid. This allows us to keep track of children between
   * updates.
   */
  ownerHasKeyUseWarning = {};
  ownerHasFunctionTypeWarning = {};

  warnForMissingKey = function (child) {
    if (child === null || typeof child !== 'object') {
      return;
    }
    if (!child._store || child._store.validated || child.key != null) {
      return;
    }
    !(typeof child._store === 'object') ? invariant(false, 'React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.') : void 0;
    child._store.validated = true;

    var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();
    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
      return;
    }
    ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

    warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
  };
}

var isArray = Array.isArray;

function coerceRef(returnFiber, current$$1, element) {
  var mixedRef = element.ref;
  if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
    {
      if (returnFiber.mode & StrictMode) {
        var componentName = getComponentName(returnFiber.type) || 'Component';
        if (!didWarnAboutStringRefInStrictMode[componentName]) {
          warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using createRef() instead.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-string-ref', mixedRef, getStackByFiberInDevAndProd(returnFiber));
          didWarnAboutStringRefInStrictMode[componentName] = true;
        }
      }
    }

    if (element._owner) {
      var owner = element._owner;
      var inst = void 0;
      if (owner) {
        var ownerFiber = owner;
        !(ownerFiber.tag === ClassComponent) ? invariant(false, 'Function components cannot have refs. Did you mean to use React.forwardRef()?') : void 0;
        inst = ownerFiber.stateNode;
      }
      !inst ? invariant(false, 'Missing owner for string ref %s. This error is likely caused by a bug in React. Please file an issue.', mixedRef) : void 0;
      var stringRef = '' + mixedRef;
      // Check if previous string ref matches new string ref
      if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
        return current$$1.ref;
      }
      var ref = function (value) {
        var refs = inst.refs;
        if (refs === emptyRefsObject) {
          // This is a lazy pooled frozen object, so we need to initialize.
          refs = inst.refs = {};
        }
        if (value === null) {
          delete refs[stringRef];
        } else {
          refs[stringRef] = value;
        }
      };
      ref._stringRef = stringRef;
      return ref;
    } else {
      !(typeof mixedRef === 'string') ? invariant(false, 'Expected ref to be a function, a string, an object returned by React.createRef(), or null.') : void 0;
      !element._owner ? invariant(false, 'Element ref was specified as a string (%s) but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component\'s render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.', mixedRef) : void 0;
    }
  }
  return mixedRef;
}

function throwOnInvalidObjectType(returnFiber, newChild) {
  if (returnFiber.type !== 'textarea') {
    var addendum = '';
    {
      addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
    }
    invariant(false, 'Objects are not valid as a React child (found: %s).%s', Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild, addendum);
  }
}

function warnOnFunctionType() {
  var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

  if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;

  warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
}

// This wrapper function exists because I expect to clone the code in each path
// to be able to optimize each path individually by branching early. This needs
// a compiler or we can do it manually. Helpers that don't need this branching
// live outside of this function.
function ChildReconciler(shouldTrackSideEffects) {
  function deleteChild(returnFiber, childToDelete) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return;
    }
    // Deletions are added in reversed order so we add it to the front.
    // At this point, the return fiber's effect list is empty except for
    // deletions, so we can just append the deletion to the list. The remaining
    // effects aren't added until the complete phase. Once we implement
    // resuming, this may not be true.
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = childToDelete;
      returnFiber.lastEffect = childToDelete;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
    }
    childToDelete.nextEffect = null;
    childToDelete.effectTag = Deletion;
  }

  function deleteRemainingChildren(returnFiber, currentFirstChild) {
    if (!shouldTrackSideEffects) {
      // Noop.
      return null;
    }

    // TODO: For the shouldClone case, this could be micro-optimized a bit by
    // assuming that after the first child we've already added everything.
    var childToDelete = currentFirstChild;
    while (childToDelete !== null) {
      deleteChild(returnFiber, childToDelete);
      childToDelete = childToDelete.sibling;
    }
    return null;
  }

  function mapRemainingChildren(returnFiber, currentFirstChild) {
    // Add the remaining children to a temporary map so that we can find them by
    // keys quickly. Implicit (null) keys get added to this set with their index
    var existingChildren = new Map();

    var existingChild = currentFirstChild;
    while (existingChild !== null) {
      if (existingChild.key !== null) {
        existingChildren.set(existingChild.key, existingChild);
      } else {
        existingChildren.set(existingChild.index, existingChild);
      }
      existingChild = existingChild.sibling;
    }
    return existingChildren;
  }

  function useFiber(fiber, pendingProps, expirationTime) {
    // We currently set sibling to null and index to 0 here because it is easy
    // to forget to do before returning it. E.g. for the single child case.
    var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
    clone.index = 0;
    clone.sibling = null;
    return clone;
  }

  function placeChild(newFiber, lastPlacedIndex, newIndex) {
    newFiber.index = newIndex;
    if (!shouldTrackSideEffects) {
      // Noop.
      return lastPlacedIndex;
    }
    var current$$1 = newFiber.alternate;
    if (current$$1 !== null) {
      var oldIndex = current$$1.index;
      if (oldIndex < lastPlacedIndex) {
        // This is a move.
        newFiber.effectTag = Placement;
        return lastPlacedIndex;
      } else {
        // This item can stay in place.
        return oldIndex;
      }
    } else {
      // This is an insertion.
      newFiber.effectTag = Placement;
      return lastPlacedIndex;
    }
  }

  function placeSingleChild(newFiber) {
    // This is simpler for the single child case. We only need to do a
    // placement for inserting new children.
    if (shouldTrackSideEffects && newFiber.alternate === null) {
      newFiber.effectTag = Placement;
    }
    return newFiber;
  }

  function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostText) {
      // Insert
      var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateElement(returnFiber, current$$1, element, expirationTime) {
    if (current$$1 !== null && current$$1.elementType === element.type) {
      // Move based on index
      var existing = useFiber(current$$1, element.props, expirationTime);
      existing.ref = coerceRef(returnFiber, current$$1, element);
      existing.return = returnFiber;
      {
        existing._debugSource = element._source;
        existing._debugOwner = element._owner;
      }
      return existing;
    } else {
      // Insert
      var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
      created.ref = coerceRef(returnFiber, current$$1, element);
      created.return = returnFiber;
      return created;
    }
  }

  function updatePortal(returnFiber, current$$1, portal, expirationTime) {
    if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
      // Insert
      var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, portal.children || [], expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
    if (current$$1 === null || current$$1.tag !== Fragment) {
      // Insert
      var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
      created.return = returnFiber;
      return created;
    } else {
      // Update
      var existing = useFiber(current$$1, fragment, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
  }

  function createChild(returnFiber, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
      created.return = returnFiber;
      return created;
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);
            _created.ref = coerceRef(returnFiber, null, newChild);
            _created.return = returnFiber;
            return _created;
          }
        case REACT_PORTAL_TYPE:
          {
            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);
            _created2.return = returnFiber;
            return _created2;
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);
        _created3.return = returnFiber;
        return _created3;
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
    // Update the fiber if the keys match, otherwise return null.

    var key = oldFiber !== null ? oldFiber.key : null;

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys. If the previous node is implicitly keyed
      // we can continue to replace it without aborting even if it is not a text
      // node.
      if (key !== null) {
        return null;
      }
      return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            if (newChild.key === key) {
              if (newChild.type === REACT_FRAGMENT_TYPE) {
                return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
              }
              return updateElement(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
        case REACT_PORTAL_TYPE:
          {
            if (newChild.key === key) {
              return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
            } else {
              return null;
            }
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        if (key !== null) {
          return null;
        }

        return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
    if (typeof newChild === 'string' || typeof newChild === 'number') {
      // Text nodes don't have keys, so we neither have to check the old nor
      // new node for the key. If both are text nodes, they match.
      var matchedFiber = existingChildren.get(newIdx) || null;
      return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
    }

    if (typeof newChild === 'object' && newChild !== null) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          {
            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            if (newChild.type === REACT_FRAGMENT_TYPE) {
              return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
            }
            return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
          }
        case REACT_PORTAL_TYPE:
          {
            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
            return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
          }
      }

      if (isArray(newChild) || getIteratorFn(newChild)) {
        var _matchedFiber3 = existingChildren.get(newIdx) || null;
        return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
      }

      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }

    return null;
  }

  /**
   * Warns if there is a duplicate or missing key
   */
  function warnOnInvalidKey(child, knownKeys) {
    {
      if (typeof child !== 'object' || child === null) {
        return knownKeys;
      }
      switch (child.$$typeof) {
        case REACT_ELEMENT_TYPE:
        case REACT_PORTAL_TYPE:
          warnForMissingKey(child);
          var key = child.key;
          if (typeof key !== 'string') {
            break;
          }
          if (knownKeys === null) {
            knownKeys = new Set();
            knownKeys.add(key);
            break;
          }
          if (!knownKeys.has(key)) {
            knownKeys.add(key);
            break;
          }
          warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
          break;
        default:
          break;
      }
    }
    return knownKeys;
  }

  function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
    // This algorithm can't optimize by searching from both ends since we
    // don't have backpointers on fibers. I'm trying to see how far we can get
    // with that model. If it ends up not being worth the tradeoffs, we can
    // add it later.

    // Even with a two ended optimization, we'd want to optimize for the case
    // where there are few changes and brute force the comparison instead of
    // going for the Map. It'd like to explore hitting that path first in
    // forward-only mode and only go for the Map once we notice that we need
    // lots of look ahead. This doesn't handle reversal as well as two ended
    // search but that's unusual. Besides, for the two ended optimization to
    // work on Iterables, we'd need to copy the whole set.

    // In this first iteration, we'll just live with hitting the bad case
    // (adding everything to a Map) in for every insert/move.

    // If you change this code, also update reconcileChildrenIterator() which
    // uses the same algorithm.

    {
      // First, validate keys.
      var knownKeys = null;
      for (var i = 0; i < newChildren.length; i++) {
        var child = newChildren[i];
        knownKeys = warnOnInvalidKey(child, knownKeys);
      }
    }

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;
    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (oldFiber === null) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (newIdx === newChildren.length) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; newIdx < newChildren.length; newIdx++) {
        var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);
        if (!_newFiber) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber;
        } else {
          previousNewFiber.sibling = _newFiber;
        }
        previousNewFiber = _newFiber;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; newIdx < newChildren.length; newIdx++) {
      var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);
      if (_newFiber2) {
        if (shouldTrackSideEffects) {
          if (_newFiber2.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber2;
        } else {
          previousNewFiber.sibling = _newFiber2;
        }
        previousNewFiber = _newFiber2;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
    // This is the same implementation as reconcileChildrenArray(),
    // but using the iterator instead.

    var iteratorFn = getIteratorFn(newChildrenIterable);
    !(typeof iteratorFn === 'function') ? invariant(false, 'An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.') : void 0;

    {
      // We don't support rendering Generators because it's a mutation.
      // See https://github.com/facebook/react/issues/12995
      if (typeof Symbol === 'function' &&
      // $FlowFixMe Flow doesn't know about toStringTag
      newChildrenIterable[Symbol.toStringTag] === 'Generator') {
        !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
        didWarnAboutGenerators = true;
      }

      // Warn about using Maps as children
      if (newChildrenIterable.entries === iteratorFn) {
        !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
        didWarnAboutMaps = true;
      }

      // First, validate keys.
      // We'll get a different iterator later for the main pass.
      var _newChildren = iteratorFn.call(newChildrenIterable);
      if (_newChildren) {
        var knownKeys = null;
        var _step = _newChildren.next();
        for (; !_step.done; _step = _newChildren.next()) {
          var child = _step.value;
          knownKeys = warnOnInvalidKey(child, knownKeys);
        }
      }
    }

    var newChildren = iteratorFn.call(newChildrenIterable);
    !(newChildren != null) ? invariant(false, 'An iterable object provided no iterator.') : void 0;

    var resultingFirstChild = null;
    var previousNewFiber = null;

    var oldFiber = currentFirstChild;
    var lastPlacedIndex = 0;
    var newIdx = 0;
    var nextOldFiber = null;

    var step = newChildren.next();
    for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
      if (oldFiber.index > newIdx) {
        nextOldFiber = oldFiber;
        oldFiber = null;
      } else {
        nextOldFiber = oldFiber.sibling;
      }
      var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);
      if (newFiber === null) {
        // TODO: This breaks on empty slots like null children. That's
        // unfortunate because it triggers the slow path all the time. We need
        // a better way to communicate whether this was a miss or null,
        // boolean, undefined, etc.
        if (!oldFiber) {
          oldFiber = nextOldFiber;
        }
        break;
      }
      if (shouldTrackSideEffects) {
        if (oldFiber && newFiber.alternate === null) {
          // We matched the slot, but we didn't reuse the existing fiber, so we
          // need to delete the existing child.
          deleteChild(returnFiber, oldFiber);
        }
      }
      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
      if (previousNewFiber === null) {
        // TODO: Move out of the loop. This only happens for the first run.
        resultingFirstChild = newFiber;
      } else {
        // TODO: Defer siblings if we're not at the right index for this slot.
        // I.e. if we had null values before, then we want to defer this
        // for each null value. However, we also don't want to call updateSlot
        // with the previous one.
        previousNewFiber.sibling = newFiber;
      }
      previousNewFiber = newFiber;
      oldFiber = nextOldFiber;
    }

    if (step.done) {
      // We've reached the end of the new children. We can delete the rest.
      deleteRemainingChildren(returnFiber, oldFiber);
      return resultingFirstChild;
    }

    if (oldFiber === null) {
      // If we don't have any more existing children we can choose a fast path
      // since the rest will all be insertions.
      for (; !step.done; newIdx++, step = newChildren.next()) {
        var _newFiber3 = createChild(returnFiber, step.value, expirationTime);
        if (_newFiber3 === null) {
          continue;
        }
        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          // TODO: Move out of the loop. This only happens for the first run.
          resultingFirstChild = _newFiber3;
        } else {
          previousNewFiber.sibling = _newFiber3;
        }
        previousNewFiber = _newFiber3;
      }
      return resultingFirstChild;
    }

    // Add all children to a key map for quick lookups.
    var existingChildren = mapRemainingChildren(returnFiber, oldFiber);

    // Keep scanning and use the map to restore deleted items as moves.
    for (; !step.done; newIdx++, step = newChildren.next()) {
      var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);
      if (_newFiber4 !== null) {
        if (shouldTrackSideEffects) {
          if (_newFiber4.alternate !== null) {
            // The new fiber is a work in progress, but if there exists a
            // current, that means that we reused the fiber. We need to delete
            // it from the child list so that we don't add it to the deletion
            // list.
            existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
          }
        }
        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
        if (previousNewFiber === null) {
          resultingFirstChild = _newFiber4;
        } else {
          previousNewFiber.sibling = _newFiber4;
        }
        previousNewFiber = _newFiber4;
      }
    }

    if (shouldTrackSideEffects) {
      // Any existing children that weren't consumed above were deleted. We need
      // to add them to the deletion list.
      existingChildren.forEach(function (child) {
        return deleteChild(returnFiber, child);
      });
    }

    return resultingFirstChild;
  }

  function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
    // There's no need to check for keys on text nodes since we don't have a
    // way to define them.
    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
      // We already have an existing node so let's just update it and delete
      // the rest.
      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
      var existing = useFiber(currentFirstChild, textContent, expirationTime);
      existing.return = returnFiber;
      return existing;
    }
    // The existing first child is not a text node so we need to create one
    // and delete the existing ones.
    deleteRemainingChildren(returnFiber, currentFirstChild);
    var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
    var key = element.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, child, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    if (element.type === REACT_FRAGMENT_TYPE) {
      var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
      created.return = returnFiber;
      return created;
    } else {
      var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);
      _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
      _created4.return = returnFiber;
      return _created4;
    }
  }

  function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
    var key = portal.key;
    var child = currentFirstChild;
    while (child !== null) {
      // TODO: If key === null and child.key === null, then this only applies to
      // the first item in the list.
      if (child.key === key) {
        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
          deleteRemainingChildren(returnFiber, child.sibling);
          var existing = useFiber(child, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        } else {
          deleteRemainingChildren(returnFiber, child);
          break;
        }
      } else {
        deleteChild(returnFiber, child);
      }
      child = child.sibling;
    }

    var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
    created.return = returnFiber;
    return created;
  }

  // This API will tag the children with the side-effect of the reconciliation
  // itself. They will be added to the side-effect list as we pass through the
  // children and the parent.
  function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
    // This function is not recursive.
    // If the top level item is an array, we treat it as a set of children,
    // not as a fragment. Nested arrays on the other hand will be treated as
    // fragment nodes. Recursion happens at the normal flow.

    // Handle top level unkeyed fragments as if they were arrays.
    // This leads to an ambiguity between <>{[...]}</> and <>...</>.
    // We treat the ambiguous cases above the same.
    var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
    if (isUnkeyedTopLevelFragment) {
      newChild = newChild.props.children;
    }

    // Handle object types
    var isObject = typeof newChild === 'object' && newChild !== null;

    if (isObject) {
      switch (newChild.$$typeof) {
        case REACT_ELEMENT_TYPE:
          return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));
        case REACT_PORTAL_TYPE:
          return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
      }
    }

    if (typeof newChild === 'string' || typeof newChild === 'number') {
      return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
    }

    if (isArray(newChild)) {
      return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (getIteratorFn(newChild)) {
      return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
    }

    if (isObject) {
      throwOnInvalidObjectType(returnFiber, newChild);
    }

    {
      if (typeof newChild === 'function') {
        warnOnFunctionType();
      }
    }
    if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
      // If the new child is undefined, and the return fiber is a composite
      // component, throw an error. If Fiber return types are disabled,
      // we already threw above.
      switch (returnFiber.tag) {
        case ClassComponent:
          {
            {
              var instance = returnFiber.stateNode;
              if (instance.render._isMockFunction) {
                // We allow auto-mocks to proceed as if they're returning null.
                break;
              }
            }
          }
        // Intentionally fall through to the next case, which handles both
        // functions and classes
        // eslint-disable-next-lined no-fallthrough
        case FunctionComponent:
          {
            var Component = returnFiber.type;
            invariant(false, '%s(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.', Component.displayName || Component.name || 'Component');
          }
      }
    }

    // Remaining cases are all treated as empty.
    return deleteRemainingChildren(returnFiber, currentFirstChild);
  }

  return reconcileChildFibers;
}

var reconcileChildFibers = ChildReconciler(true);
var mountChildFibers = ChildReconciler(false);

function cloneChildFibers(current$$1, workInProgress) {
  !(current$$1 === null || workInProgress.child === current$$1.child) ? invariant(false, 'Resuming work not yet implemented.') : void 0;

  if (workInProgress.child === null) {
    return;
  }

  var currentChild = workInProgress.child;
  var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
  workInProgress.child = newChild;

  newChild.return = workInProgress;
  while (currentChild.sibling !== null) {
    currentChild = currentChild.sibling;
    newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
    newChild.return = workInProgress;
  }
  newChild.sibling = null;
}

var NO_CONTEXT = {};

var contextStackCursor$1 = createCursor(NO_CONTEXT);
var contextFiberStackCursor = createCursor(NO_CONTEXT);
var rootInstanceStackCursor = createCursor(NO_CONTEXT);

function requiredContext(c) {
  !(c !== NO_CONTEXT) ? invariant(false, 'Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  return c;
}

function getRootHostContainer() {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  return rootInstance;
}

function pushHostContainer(fiber, nextRootInstance) {
  // Push current root instance onto the stack;
  // This allows us to reset root when portals are popped.
  push(rootInstanceStackCursor, nextRootInstance, fiber);
  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);

  // Finally, we need to push the host context to the stack.
  // However, we can't just call getRootHostContext() and push it because
  // we'd have a different number of entries on the stack depending on
  // whether getRootHostContext() throws somewhere in renderer code or not.
  // So we push an empty value first. This lets us safely unwind on errors.
  push(contextStackCursor$1, NO_CONTEXT, fiber);
  var nextRootContext = getRootHostContext(nextRootInstance);
  // Now that we know this function doesn't throw, replace it.
  pop(contextStackCursor$1, fiber);
  push(contextStackCursor$1, nextRootContext, fiber);
}

function popHostContainer(fiber) {
  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
  pop(rootInstanceStackCursor, fiber);
}

function getHostContext() {
  var context = requiredContext(contextStackCursor$1.current);
  return context;
}

function pushHostContext(fiber) {
  var rootInstance = requiredContext(rootInstanceStackCursor.current);
  var context = requiredContext(contextStackCursor$1.current);
  var nextContext = getChildHostContext(context, fiber.type, rootInstance);

  // Don't push this Fiber's context unless it's unique.
  if (context === nextContext) {
    return;
  }

  // Track the context and the Fiber that provided it.
  // This enables us to pop only Fibers that provide unique contexts.
  push(contextFiberStackCursor, fiber, fiber);
  push(contextStackCursor$1, nextContext, fiber);
}

function popHostContext(fiber) {
  // Do not pop unless this Fiber provided the current context.
  // pushHostContext() only pushes Fibers that provide unique contexts.
  if (contextFiberStackCursor.current !== fiber) {
    return;
  }

  pop(contextStackCursor$1, fiber);
  pop(contextFiberStackCursor, fiber);
}

var NoEffect$1 = /*             */0;
var UnmountSnapshot = /*      */2;
var UnmountMutation = /*      */4;
var MountMutation = /*        */8;
var UnmountLayout = /*        */16;
var MountLayout = /*          */32;
var MountPassive = /*         */64;
var UnmountPassive = /*       */128;

var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;


var didWarnAboutMismatchedHooksForComponent = void 0;
{
  didWarnAboutMismatchedHooksForComponent = new Set();
}

// These are set right before calling the component.
var renderExpirationTime = NoWork;
// The work-in-progress fiber. I've named it differently to distinguish it from
// the work-in-progress hook.
var currentlyRenderingFiber$1 = null;

// Hooks are stored as a linked list on the fiber's memoizedState field. The
// current hook list is the list that belongs to the current fiber. The
// work-in-progress hook list is a new list that will be added to the
// work-in-progress fiber.
var currentHook = null;
var nextCurrentHook = null;
var firstWorkInProgressHook = null;
var workInProgressHook = null;
var nextWorkInProgressHook = null;

var remainingExpirationTime = NoWork;
var componentUpdateQueue = null;
var sideEffectTag = 0;

// Updates scheduled during render will trigger an immediate re-render at the
// end of the current pass. We can't store these updates on the normal queue,
// because if the work is aborted, they should be discarded. Because this is
// a relatively rare case, we also don't want to add an additional field to
// either the hook or queue object types. So we store them in a lazily create
// map of queue -> render-phase updates, which are discarded once the component
// completes without re-rendering.

// Whether an update was scheduled during the currently executing render pass.
var didScheduleRenderPhaseUpdate = false;
// Lazily created map of render-phase updates
var renderPhaseUpdates = null;
// Counter to prevent infinite loops.
var numberOfReRenders = 0;
var RE_RENDER_LIMIT = 25;

// In DEV, this is the name of the currently executing primitive hook
var currentHookNameInDev = null;

// In DEV, this list ensures that hooks are called in the same order between renders.
// The list stores the order of hooks used during the initial render (mount).
// Subsequent renders (updates) reference this list.
var hookTypesDev = null;
var hookTypesUpdateIndexDev = -1;

function mountHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev === null) {
      hookTypesDev = [hookName];
    } else {
      hookTypesDev.push(hookName);
    }
  }
}

function updateHookTypesDev() {
  {
    var hookName = currentHookNameInDev;

    if (hookTypesDev !== null) {
      hookTypesUpdateIndexDev++;
      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
        warnOnHookMismatchInDev(hookName);
      }
    }
  }
}

function warnOnHookMismatchInDev(currentHookName) {
  {
    var componentName = getComponentName(currentlyRenderingFiber$1.type);
    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
      didWarnAboutMismatchedHooksForComponent.add(componentName);

      if (hookTypesDev !== null) {
        var table = '';

        var secondColumnStart = 30;

        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
          var oldHookName = hookTypesDev[i];
          var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;

          var row = i + 1 + '. ' + oldHookName;

          // Extra space so second column lines up
          // lol @ IE not supporting String#repeat
          while (row.length < secondColumnStart) {
            row += ' ';
          }

          row += newHookName + '\n';

          table += row;
        }

        warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
      }
    }
  }
}

function throwInvalidHookError() {
  invariant(false, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.');
}

function areHookInputsEqual(nextDeps, prevDeps) {
  if (prevDeps === null) {
    {
      warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
    }
    return false;
  }

  {
    // Don't bother comparing lengths in prod because these arrays should be
    // passed inline.
    if (nextDeps.length !== prevDeps.length) {
      warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, '[' + nextDeps.join(', ') + ']', '[' + prevDeps.join(', ') + ']');
    }
  }
  for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
    if (is(nextDeps[i], prevDeps[i])) {
      continue;
    }
    return false;
  }
  return true;
}

function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
  renderExpirationTime = nextRenderExpirationTime;
  currentlyRenderingFiber$1 = workInProgress;
  nextCurrentHook = current !== null ? current.memoizedState : null;

  {
    hookTypesDev = current !== null ? current._debugHookTypes : null;
    hookTypesUpdateIndexDev = -1;
  }

  // The following should have already been reset
  // currentHook = null;
  // workInProgressHook = null;

  // remainingExpirationTime = NoWork;
  // componentUpdateQueue = null;

  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;
  // sideEffectTag = 0;

  // TODO Warn if no hooks are used at all during mount, then some are used during update.
  // Currently we will identify the update render as a mount because nextCurrentHook === null.
  // This is tricky because it's valid for certain types of components (e.g. React.lazy)

  // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
  // Non-stateful hooks (e.g. context) don't get added to memoizedState,
  // so nextCurrentHook would be null during updates and mounts.
  {
    if (nextCurrentHook !== null) {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
    } else if (hookTypesDev !== null) {
      // This dispatcher handles an edge case where a component is updating,
      // but no stateful hooks have been used.
      // We want to match the production code behavior (which will use HooksDispatcherOnMount),
      // but with the extra DEV validation to ensure hooks ordering hasn't changed.
      // This dispatcher does that.
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
    } else {
      ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
    }
  }

  var children = Component(props, refOrContext);

  if (didScheduleRenderPhaseUpdate) {
    do {
      didScheduleRenderPhaseUpdate = false;
      numberOfReRenders += 1;

      // Start over from the beginning of the list
      nextCurrentHook = current !== null ? current.memoizedState : null;
      nextWorkInProgressHook = firstWorkInProgressHook;

      currentHook = null;
      workInProgressHook = null;
      componentUpdateQueue = null;

      {
        // Also validate hook order for cascading updates.
        hookTypesUpdateIndexDev = -1;
      }

      ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;

      children = Component(props, refOrContext);
    } while (didScheduleRenderPhaseUpdate);

    renderPhaseUpdates = null;
    numberOfReRenders = 0;
  }

  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  var renderedWork = currentlyRenderingFiber$1;

  renderedWork.memoizedState = firstWorkInProgressHook;
  renderedWork.expirationTime = remainingExpirationTime;
  renderedWork.updateQueue = componentUpdateQueue;
  renderedWork.effectTag |= sideEffectTag;

  {
    renderedWork._debugHookTypes = hookTypesDev;
  }

  // This check uses currentHook so that it works the same in DEV and prod bundles.
  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.
  var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;

  renderExpirationTime = NoWork;
  currentlyRenderingFiber$1 = null;

  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    currentHookNameInDev = null;
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0;

  // These were reset above
  // didScheduleRenderPhaseUpdate = false;
  // renderPhaseUpdates = null;
  // numberOfReRenders = 0;

  !!didRenderTooFewHooks ? invariant(false, 'Rendered fewer hooks than expected. This may be caused by an accidental early return statement.') : void 0;

  return children;
}

function bailoutHooks(current, workInProgress, expirationTime) {
  workInProgress.updateQueue = current.updateQueue;
  workInProgress.effectTag &= ~(Passive | Update);
  if (current.expirationTime <= expirationTime) {
    current.expirationTime = NoWork;
  }
}

function resetHooks() {
  // We can assume the previous dispatcher is always this one, since we set it
  // at the beginning of the render phase and there's no re-entrancy.
  ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;

  // This is used to reset the state of this module when a component throws.
  // It's also called inside mountIndeterminateComponent if we determine the
  // component is a module-style component.
  renderExpirationTime = NoWork;
  currentlyRenderingFiber$1 = null;

  currentHook = null;
  nextCurrentHook = null;
  firstWorkInProgressHook = null;
  workInProgressHook = null;
  nextWorkInProgressHook = null;

  {
    hookTypesDev = null;
    hookTypesUpdateIndexDev = -1;

    currentHookNameInDev = null;
  }

  remainingExpirationTime = NoWork;
  componentUpdateQueue = null;
  sideEffectTag = 0;

  didScheduleRenderPhaseUpdate = false;
  renderPhaseUpdates = null;
  numberOfReRenders = 0;
}

function mountWorkInProgressHook() {
  var hook = {
    memoizedState: null,

    baseState: null,
    queue: null,
    baseUpdate: null,

    next: null
  };

  if (workInProgressHook === null) {
    // This is the first hook in the list
    firstWorkInProgressHook = workInProgressHook = hook;
  } else {
    // Append to the end of the list
    workInProgressHook = workInProgressHook.next = hook;
  }
  return workInProgressHook;
}

function updateWorkInProgressHook() {
  // This function is used both for updates and for re-renders triggered by a
  // render phase update. It assumes there is either a current hook we can
  // clone, or a work-in-progress hook from a previous render pass that we can
  // use as a base. When we reach the end of the base list, we must switch to
  // the dispatcher used for mounts.
  if (nextWorkInProgressHook !== null) {
    // There's already a work-in-progress. Reuse it.
    workInProgressHook = nextWorkInProgressHook;
    nextWorkInProgressHook = workInProgressHook.next;

    currentHook = nextCurrentHook;
    nextCurrentHook = currentHook !== null ? currentHook.next : null;
  } else {
    // Clone from the current hook.
    !(nextCurrentHook !== null) ? invariant(false, 'Rendered more hooks than during the previous render.') : void 0;
    currentHook = nextCurrentHook;

    var newHook = {
      memoizedState: currentHook.memoizedState,

      baseState: currentHook.baseState,
      queue: currentHook.queue,
      baseUpdate: currentHook.baseUpdate,

      next: null
    };

    if (workInProgressHook === null) {
      // This is the first hook in the list.
      workInProgressHook = firstWorkInProgressHook = newHook;
    } else {
      // Append to the end of the list.
      workInProgressHook = workInProgressHook.next = newHook;
    }
    nextCurrentHook = currentHook.next;
  }
  return workInProgressHook;
}

function createFunctionComponentUpdateQueue() {
  return {
    lastEffect: null
  };
}

function basicStateReducer(state, action) {
  return typeof action === 'function' ? action(state) : action;
}

function mountReducer(reducer, initialArg, init) {
  var hook = mountWorkInProgressHook();
  var initialState = void 0;
  if (init !== undefined) {
    initialState = init(initialArg);
  } else {
    initialState = initialArg;
  }
  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: reducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null,
  // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateReducer(reducer, initialArg, init) {
  var hook = updateWorkInProgressHook();
  var queue = hook.queue;
  !(queue !== null) ? invariant(false, 'Should have a queue. This is likely a bug in React. Please file an issue.') : void 0;

  queue.lastRenderedReducer = reducer;

  if (numberOfReRenders > 0) {
    // This is a re-render. Apply the new render phase updates to the previous
    var _dispatch = queue.dispatch;
    if (renderPhaseUpdates !== null) {
      // Render phase updates are stored in a map of queue -> linked list
      var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
      if (firstRenderPhaseUpdate !== undefined) {
        renderPhaseUpdates.delete(queue);
        var newState = hook.memoizedState;
        var update = firstRenderPhaseUpdate;
        do {
          // Process this render phase update. We don't have to check the
          // priority because it will always be the same as the current
          // render's.
          var _action = update.action;
          newState = reducer(newState, _action);
          update = update.next;
        } while (update !== null);

        // Mark that the fiber performed work, but only if the new state is
        // different from the current state.
        if (!is(newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = newState;
        // Don't persist the state accumlated from the render phase updates to
        // the base state unless the queue is empty.
        // TODO: Not sure if this is the desired semantics, but it's what we
        // do for gDSFP. I can't remember why.
        if (hook.baseUpdate === queue.last) {
          hook.baseState = newState;
        }

        queue.lastRenderedState = newState;

        return [newState, _dispatch];
      }
    }
    return [hook.memoizedState, _dispatch];
  }

  // The last update in the entire queue
  var last = queue.last;
  // The last update that is part of the base state.
  var baseUpdate = hook.baseUpdate;
  var baseState = hook.baseState;

  // Find the first unprocessed update.
  var first = void 0;
  if (baseUpdate !== null) {
    if (last !== null) {
      // For the first update, the queue is a circular linked list where
      // `queue.last.next = queue.first`. Once the first update commits, and
      // the `baseUpdate` is no longer empty, we can unravel the list.
      last.next = null;
    }
    first = baseUpdate.next;
  } else {
    first = last !== null ? last.next : null;
  }
  if (first !== null) {
    var _newState = baseState;
    var newBaseState = null;
    var newBaseUpdate = null;
    var prevUpdate = baseUpdate;
    var _update = first;
    var didSkip = false;
    do {
      var updateExpirationTime = _update.expirationTime;
      if (updateExpirationTime < renderExpirationTime) {
        // Priority is insufficient. Skip this update. If this is the first
        // skipped update, the previous update/state is the new base
        // update/state.
        if (!didSkip) {
          didSkip = true;
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        }
        // Update the remaining priority in the queue.
        if (updateExpirationTime > remainingExpirationTime) {
          remainingExpirationTime = updateExpirationTime;
        }
      } else {
        // Process this update.
        if (_update.eagerReducer === reducer) {
          // If this update was processed eagerly, and its reducer matches the
          // current reducer, we can use the eagerly computed state.
          _newState = _update.eagerState;
        } else {
          var _action2 = _update.action;
          _newState = reducer(_newState, _action2);
        }
      }
      prevUpdate = _update;
      _update = _update.next;
    } while (_update !== null && _update !== first);

    if (!didSkip) {
      newBaseUpdate = prevUpdate;
      newBaseState = _newState;
    }

    // Mark that the fiber performed work, but only if the new state is
    // different from the current state.
    if (!is(_newState, hook.memoizedState)) {
      markWorkInProgressReceivedUpdate();
    }

    hook.memoizedState = _newState;
    hook.baseUpdate = newBaseUpdate;
    hook.baseState = newBaseState;

    queue.lastRenderedState = _newState;
  }

  var dispatch = queue.dispatch;
  return [hook.memoizedState, dispatch];
}

function mountState(initialState) {
  var hook = mountWorkInProgressHook();
  if (typeof initialState === 'function') {
    initialState = initialState();
  }
  hook.memoizedState = hook.baseState = initialState;
  var queue = hook.queue = {
    last: null,
    dispatch: null,
    lastRenderedReducer: basicStateReducer,
    lastRenderedState: initialState
  };
  var dispatch = queue.dispatch = dispatchAction.bind(null,
  // Flow doesn't know this is non-null, but we do.
  currentlyRenderingFiber$1, queue);
  return [hook.memoizedState, dispatch];
}

function updateState(initialState) {
  return updateReducer(basicStateReducer, initialState);
}

function pushEffect(tag, create, destroy, deps) {
  var effect = {
    tag: tag,
    create: create,
    destroy: destroy,
    deps: deps,
    // Circular
    next: null
  };
  if (componentUpdateQueue === null) {
    componentUpdateQueue = createFunctionComponentUpdateQueue();
    componentUpdateQueue.lastEffect = effect.next = effect;
  } else {
    var _lastEffect = componentUpdateQueue.lastEffect;
    if (_lastEffect === null) {
      componentUpdateQueue.lastEffect = effect.next = effect;
    } else {
      var firstEffect = _lastEffect.next;
      _lastEffect.next = effect;
      effect.next = firstEffect;
      componentUpdateQueue.lastEffect = effect;
    }
  }
  return effect;
}

function mountRef(initialValue) {
  var hook = mountWorkInProgressHook();
  var ref = { current: initialValue };
  {
    Object.seal(ref);
  }
  hook.memoizedState = ref;
  return ref;
}

function updateRef(initialValue) {
  var hook = updateWorkInProgressHook();
  return hook.memoizedState;
}

function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
}

function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var destroy = undefined;

  if (currentHook !== null) {
    var prevEffect = currentHook.memoizedState;
    destroy = prevEffect.destroy;
    if (nextDeps !== null) {
      var prevDeps = prevEffect.deps;
      if (areHookInputsEqual(nextDeps, prevDeps)) {
        pushEffect(NoEffect$1, create, destroy, nextDeps);
        return;
      }
    }
  }

  sideEffectTag |= fiberEffectTag;
  hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
}

function mountEffect(create, deps) {
  return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function updateEffect(create, deps) {
  return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
}

function mountLayoutEffect(create, deps) {
  return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function updateLayoutEffect(create, deps) {
  return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
}

function imperativeHandleEffect(create, ref) {
  if (typeof ref === 'function') {
    var refCallback = ref;
    var _inst = create();
    refCallback(_inst);
    return function () {
      refCallback(null);
    };
  } else if (ref !== null && ref !== undefined) {
    var refObject = ref;
    {
      !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
    }
    var _inst2 = create();
    refObject.current = _inst2;
    return function () {
      refObject.current = null;
    };
  }
}

function mountImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  }

  // TODO: If deps are provided, should we skip comparing the ref itself?
  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;

  return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function updateImperativeHandle(ref, create, deps) {
  {
    !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
  }

  // TODO: If deps are provided, should we skip comparing the ref itself?
  var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;

  return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
}

function mountDebugValue(value, formatterFn) {
  // This hook is normally a no-op.
  // The react-debug-hooks package injects its own implementation
  // so that e.g. DevTools can display custom hook values.
}

var updateDebugValue = mountDebugValue;

function mountCallback(callback, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function updateCallback(callback, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;
  if (prevState !== null) {
    if (nextDeps !== null) {
      var prevDeps = prevState[1];
      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }
  hook.memoizedState = [callback, nextDeps];
  return callback;
}

function mountMemo(nextCreate, deps) {
  var hook = mountWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

function updateMemo(nextCreate, deps) {
  var hook = updateWorkInProgressHook();
  var nextDeps = deps === undefined ? null : deps;
  var prevState = hook.memoizedState;
  if (prevState !== null) {
    // Assume these are defined. If they're not, areHookInputsEqual will warn.
    if (nextDeps !== null) {
      var prevDeps = prevState[1];
      if (areHookInputsEqual(nextDeps, prevDeps)) {
        return prevState[0];
      }
    }
  }
  var nextValue = nextCreate();
  hook.memoizedState = [nextValue, nextDeps];
  return nextValue;
}

// in a test-like environment, we want to warn if dispatchAction()
// is called outside of a batchedUpdates/TestUtils.act(...) call.
var shouldWarnForUnbatchedSetState = false;

{
  // jest isn't a 'global', it's just exposed to tests via a wrapped function
  // further, this isn't a test file, so flow doesn't recognize the symbol. So...
  // $FlowExpectedError - because requirements don't give a damn about your type sigs.
  if ('undefined' !== typeof jest) {
    shouldWarnForUnbatchedSetState = true;
  }
}

function dispatchAction(fiber, queue, action) {
  !(numberOfReRenders < RE_RENDER_LIMIT) ? invariant(false, 'Too many re-renders. React limits the number of renders to prevent an infinite loop.') : void 0;

  {
    !(arguments.length <= 3) ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
  }

  var alternate = fiber.alternate;
  if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
    // This is a render phase update. Stash it in a lazily-created map of
    // queue -> linked list of updates. After this render pass, we'll restart
    // and apply the stashed updates on top of the work-in-progress hook.
    didScheduleRenderPhaseUpdate = true;
    var update = {
      expirationTime: renderExpirationTime,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };
    if (renderPhaseUpdates === null) {
      renderPhaseUpdates = new Map();
    }
    var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);
    if (firstRenderPhaseUpdate === undefined) {
      renderPhaseUpdates.set(queue, update);
    } else {
      // Append the update to the end of the list.
      var lastRenderPhaseUpdate = firstRenderPhaseUpdate;
      while (lastRenderPhaseUpdate.next !== null) {
        lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
      }
      lastRenderPhaseUpdate.next = update;
    }
  } else {
    flushPassiveEffects();

    var currentTime = requestCurrentTime();
    var _expirationTime = computeExpirationForFiber(currentTime, fiber);

    var _update2 = {
      expirationTime: _expirationTime,
      action: action,
      eagerReducer: null,
      eagerState: null,
      next: null
    };

    // Append the update to the end of the list.
    var _last = queue.last;
    if (_last === null) {
      // This is the first update. Create a circular list.
      _update2.next = _update2;
    } else {
      var first = _last.next;
      if (first !== null) {
        // Still circular.
        _update2.next = first;
      }
      _last.next = _update2;
    }
    queue.last = _update2;

    if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
      // The queue is currently empty, which means we can eagerly compute the
      // next state before entering the render phase. If the new state is the
      // same as the current state, we may be able to bail out entirely.
      var _lastRenderedReducer = queue.lastRenderedReducer;
      if (_lastRenderedReducer !== null) {
        var prevDispatcher = void 0;
        {
          prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
        }
        try {
          var currentState = queue.lastRenderedState;
          var _eagerState = _lastRenderedReducer(currentState, action);
          // Stash the eagerly computed state, and the reducer used to compute
          // it, on the update object. If the reducer hasn't changed by the
          // time we enter the render phase, then the eager state can be used
          // without calling the reducer again.
          _update2.eagerReducer = _lastRenderedReducer;
          _update2.eagerState = _eagerState;
          if (is(_eagerState, currentState)) {
            // Fast path. We can bail out without scheduling React to re-render.
            // It's still possible that we'll need to rebase this update later,
            // if the component re-renders for a different reason and by that
            // time the reducer has changed.
            return;
          }
        } catch (error) {
          // Suppress the error. It will throw again in the render phase.
        } finally {
          {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        }
      }
    }
    {
      if (shouldWarnForUnbatchedSetState === true) {
        warnIfNotCurrentlyBatchingInDev(fiber);
      }
    }
    scheduleWork(fiber, _expirationTime);
  }
}

var ContextOnlyDispatcher = {
  readContext: readContext,

  useCallback: throwInvalidHookError,
  useContext: throwInvalidHookError,
  useEffect: throwInvalidHookError,
  useImperativeHandle: throwInvalidHookError,
  useLayoutEffect: throwInvalidHookError,
  useMemo: throwInvalidHookError,
  useReducer: throwInvalidHookError,
  useRef: throwInvalidHookError,
  useState: throwInvalidHookError,
  useDebugValue: throwInvalidHookError
};

var HooksDispatcherOnMountInDEV = null;
var HooksDispatcherOnMountWithHookTypesInDEV = null;
var HooksDispatcherOnUpdateInDEV = null;
var InvalidNestedHooksDispatcherOnMountInDEV = null;
var InvalidNestedHooksDispatcherOnUpdateInDEV = null;

{
  var warnInvalidContextAccess = function () {
    warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
  };

  var warnInvalidHookAccess = function () {
    warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
  };

  HooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    }
  };

  HooksDispatcherOnMountWithHookTypesInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return mountDebugValue(value, formatterFn);
    }
  };

  HooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    }
  };

  InvalidNestedHooksDispatcherOnMountInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      mountHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
      try {
        return mountState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      mountHookTypesDev();
      return mountDebugValue(value, formatterFn);
    }
  };

  InvalidNestedHooksDispatcherOnUpdateInDEV = {
    readContext: function (context, observedBits) {
      warnInvalidContextAccess();
      return readContext(context, observedBits);
    },
    useCallback: function (callback, deps) {
      currentHookNameInDev = 'useCallback';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateCallback(callback, deps);
    },
    useContext: function (context, observedBits) {
      currentHookNameInDev = 'useContext';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return readContext(context, observedBits);
    },
    useEffect: function (create, deps) {
      currentHookNameInDev = 'useEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateEffect(create, deps);
    },
    useImperativeHandle: function (ref, create, deps) {
      currentHookNameInDev = 'useImperativeHandle';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateImperativeHandle(ref, create, deps);
    },
    useLayoutEffect: function (create, deps) {
      currentHookNameInDev = 'useLayoutEffect';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateLayoutEffect(create, deps);
    },
    useMemo: function (create, deps) {
      currentHookNameInDev = 'useMemo';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateMemo(create, deps);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useReducer: function (reducer, initialArg, init) {
      currentHookNameInDev = 'useReducer';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateReducer(reducer, initialArg, init);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useRef: function (initialValue) {
      currentHookNameInDev = 'useRef';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateRef(initialValue);
    },
    useState: function (initialState) {
      currentHookNameInDev = 'useState';
      warnInvalidHookAccess();
      updateHookTypesDev();
      var prevDispatcher = ReactCurrentDispatcher$1.current;
      ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
      try {
        return updateState(initialState);
      } finally {
        ReactCurrentDispatcher$1.current = prevDispatcher;
      }
    },
    useDebugValue: function (value, formatterFn) {
      currentHookNameInDev = 'useDebugValue';
      warnInvalidHookAccess();
      updateHookTypesDev();
      return updateDebugValue(value, formatterFn);
    }
  };
}

var commitTime = 0;
var profilerStartTime = -1;

function getCommitTime() {
  return commitTime;
}

function recordCommitTime() {
  if (!enableProfilerTimer) {
    return;
  }
  commitTime = scheduler.unstable_now();
}

function startProfilerTimer(fiber) {
  if (!enableProfilerTimer) {
    return;
  }

  profilerStartTime = scheduler.unstable_now();

  if (fiber.actualStartTime < 0) {
    fiber.actualStartTime = scheduler.unstable_now();
  }
}

function stopProfilerTimerIfRunning(fiber) {
  if (!enableProfilerTimer) {
    return;
  }
  profilerStartTime = -1;
}

function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
  if (!enableProfilerTimer) {
    return;
  }

  if (profilerStartTime >= 0) {
    var elapsedTime = scheduler.unstable_now() - profilerStartTime;
    fiber.actualDuration += elapsedTime;
    if (overrideBaseTime) {
      fiber.selfBaseDuration = elapsedTime;
    }
    profilerStartTime = -1;
  }
}

// The deepest Fiber on the stack involved in a hydration context.
// This may have been an insertion or a hydration.
var hydrationParentFiber = null;
var nextHydratableInstance = null;
var isHydrating = false;

function enterHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var parentInstance = fiber.stateNode.containerInfo;
  nextHydratableInstance = getFirstHydratableChild(parentInstance);
  hydrationParentFiber = fiber;
  isHydrating = true;
  return true;
}

function reenterHydrationStateFromDehydratedSuspenseInstance(fiber) {
  if (!supportsHydration) {
    return false;
  }

  var suspenseInstance = fiber.stateNode;
  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
  popToNextHostParent(fiber);
  isHydrating = true;
  return true;
}

function deleteHydratableInstance(returnFiber, instance) {
  {
    switch (returnFiber.tag) {
      case HostRoot:
        didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
        break;
      case HostComponent:
        didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
        break;
    }
  }

  var childToDelete = createFiberFromHostInstanceForDeletion();
  childToDelete.stateNode = instance;
  childToDelete.return = returnFiber;
  childToDelete.effectTag = Deletion;

  // This might seem like it belongs on progressedFirstDeletion. However,
  // these children are not part of the reconciliation list of children.
  // Even if we abort and rereconcile the children, that will try to hydrate
  // again and the nodes are still in the host tree so these will be
  // recreated.
  if (returnFiber.lastEffect !== null) {
    returnFiber.lastEffect.nextEffect = childToDelete;
    returnFiber.lastEffect = childToDelete;
  } else {
    returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
  }
}

function insertNonHydratedInstance(returnFiber, fiber) {
  fiber.effectTag |= Placement;
  {
    switch (returnFiber.tag) {
      case HostRoot:
        {
          var parentContainer = returnFiber.stateNode.containerInfo;
          switch (fiber.tag) {
            case HostComponent:
              var type = fiber.type;
              var props = fiber.pendingProps;
              didNotFindHydratableContainerInstance(parentContainer, type, props);
              break;
            case HostText:
              var text = fiber.pendingProps;
              didNotFindHydratableContainerTextInstance(parentContainer, text);
              break;
            case SuspenseComponent:
              
              break;
          }
          break;
        }
      case HostComponent:
        {
          var parentType = returnFiber.type;
          var parentProps = returnFiber.memoizedProps;
          var parentInstance = returnFiber.stateNode;
          switch (fiber.tag) {
            case HostComponent:
              var _type = fiber.type;
              var _props = fiber.pendingProps;
              didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
              break;
            case HostText:
              var _text = fiber.pendingProps;
              didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
              break;
            case SuspenseComponent:
              didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
              break;
          }
          break;
        }
      default:
        return;
    }
  }
}

function tryHydrate(fiber, nextInstance) {
  switch (fiber.tag) {
    case HostComponent:
      {
        var type = fiber.type;
        var props = fiber.pendingProps;
        var instance = canHydrateInstance(nextInstance, type, props);
        if (instance !== null) {
          fiber.stateNode = instance;
          return true;
        }
        return false;
      }
    case HostText:
      {
        var text = fiber.pendingProps;
        var textInstance = canHydrateTextInstance(nextInstance, text);
        if (textInstance !== null) {
          fiber.stateNode = textInstance;
          return true;
        }
        return false;
      }
    case SuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
          if (suspenseInstance !== null) {
            // Downgrade the tag to a dehydrated component until we've hydrated it.
            fiber.tag = DehydratedSuspenseComponent;
            fiber.stateNode = suspenseInstance;
            return true;
          }
        }
        return false;
      }
    default:
      return false;
  }
}

function tryToClaimNextHydratableInstance(fiber) {
  if (!isHydrating) {
    return;
  }
  var nextInstance = nextHydratableInstance;
  if (!nextInstance) {
    // Nothing to hydrate. Make it an insertion.
    insertNonHydratedInstance(hydrationParentFiber, fiber);
    isHydrating = false;
    hydrationParentFiber = fiber;
    return;
  }
  var firstAttemptedInstance = nextInstance;
  if (!tryHydrate(fiber, nextInstance)) {
    // If we can't hydrate this instance let's try the next one.
    // We use this as a heuristic. It's based on intuition and not data so it
    // might be flawed or unnecessary.
    nextInstance = getNextHydratableSibling(firstAttemptedInstance);
    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
      // Nothing to hydrate. Make it an insertion.
      insertNonHydratedInstance(hydrationParentFiber, fiber);
      isHydrating = false;
      hydrationParentFiber = fiber;
      return;
    }
    // We matched the next one, we'll now assume that the first one was
    // superfluous and we'll delete it. Since we can't eagerly delete it
    // we'll have to schedule a deletion. To do that, this node needs a dummy
    // fiber associated with it.
    deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
  }
  hydrationParentFiber = fiber;
  nextHydratableInstance = getFirstHydratableChild(nextInstance);
}

function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var instance = fiber.stateNode;
  var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber);
  // TODO: Type this specific to this type of component.
  fiber.updateQueue = updatePayload;
  // If the update payload indicates that there is a change or if there
  // is a new ref we mark this as an update.
  if (updatePayload !== null) {
    return true;
  }
  return false;
}

function prepareToHydrateHostTextInstance(fiber) {
  if (!supportsHydration) {
    invariant(false, 'Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }

  var textInstance = fiber.stateNode;
  var textContent = fiber.memoizedProps;
  var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
  {
    if (shouldUpdate) {
      // We assume that prepareToHydrateHostTextInstance is called in a context where the
      // hydration parent is the parent host component of this host text.
      var returnFiber = hydrationParentFiber;
      if (returnFiber !== null) {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;
              didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
              break;
            }
          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;
              didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
              break;
            }
        }
      }
    }
  }
  return shouldUpdate;
}

function skipPastDehydratedSuspenseInstance(fiber) {
  if (!supportsHydration) {
    invariant(false, 'Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.');
  }
  var suspenseInstance = fiber.stateNode;
  !suspenseInstance ? invariant(false, 'Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  nextHydratableInstance = getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
}

function popToNextHostParent(fiber) {
  var parent = fiber.return;
  while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== DehydratedSuspenseComponent) {
    parent = parent.return;
  }
  hydrationParentFiber = parent;
}

function popHydrationState(fiber) {
  if (!supportsHydration) {
    return false;
  }
  if (fiber !== hydrationParentFiber) {
    // We're deeper than the current hydration context, inside an inserted
    // tree.
    return false;
  }
  if (!isHydrating) {
    // If we're not currently hydrating but we're in a hydration context, then
    // we were an insertion and now need to pop up reenter hydration of our
    // siblings.
    popToNextHostParent(fiber);
    isHydrating = true;
    return false;
  }

  var type = fiber.type;

  // If we have any remaining hydratable nodes, we need to delete them now.
  // We only do this deeper than head and body since they tend to have random
  // other nodes in them. We also ignore components with pure text content in
  // side of them.
  // TODO: Better heuristic.
  if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
    var nextInstance = nextHydratableInstance;
    while (nextInstance) {
      deleteHydratableInstance(fiber, nextInstance);
      nextInstance = getNextHydratableSibling(nextInstance);
    }
  }

  popToNextHostParent(fiber);
  nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
  return true;
}

function resetHydrationState() {
  if (!supportsHydration) {
    return;
  }

  hydrationParentFiber = null;
  nextHydratableInstance = null;
  isHydrating = false;
}

var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;

var didReceiveUpdate = false;

var didWarnAboutBadClass = void 0;
var didWarnAboutContextTypeOnFunctionComponent = void 0;
var didWarnAboutGetDerivedStateOnFunctionComponent = void 0;
var didWarnAboutFunctionRefs = void 0;
var didWarnAboutReassigningProps = void 0;

{
  didWarnAboutBadClass = {};
  didWarnAboutContextTypeOnFunctionComponent = {};
  didWarnAboutGetDerivedStateOnFunctionComponent = {};
  didWarnAboutFunctionRefs = {};
  didWarnAboutReassigningProps = false;
}

function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  if (current$$1 === null) {
    // If this is a fresh new component that hasn't been rendered yet, we
    // won't update its child set by applying minimal side-effects. Instead,
    // we will add them all to the child before it gets rendered. That means
    // we can optimize this reconciliation pass by not tracking side-effects.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // If the current child is the same as the work in progress, it means that
    // we haven't yet started any work on these children. Therefore, we use
    // the clone algorithm to create a copy of all the current children.

    // If we had any progressed work already, that is invalid at this point so
    // let's throw it out.
    workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
  }
}

function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
  // This function is fork of reconcileChildren. It's used in cases where we
  // want to reconcile without matching against the existing set. This has the
  // effect of all current children being unmounted; even if the type and key
  // are the same, the old child is unmounted and a new child is created.
  //
  // To do this, we're going to go through the reconcile algorithm twice. In
  // the first pass, we schedule a deletion for all the current children by
  // passing null.
  workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
  // In the second pass, we mount the new children. The trick here is that we
  // pass null in place of where we usually pass the current child set. This has
  // the effect of remounting all children regardless of whether their their
  // identity matches.
  workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
}

function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens after the first render suspends.
  // We'll need to figure out if this is fine or can cause issues.

  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;
      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var render = Component.render;
  var ref = workInProgress.ref;

  // The rest is a fork of updateFunctionComponent
  var nextChildren = void 0;
  prepareToReadContext(workInProgress, renderExpirationTime);
  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
      }
    }
    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  if (current$$1 === null) {
    var type = Component.type;
    if (isSimpleFunctionComponent(type) && Component.compare === null &&
    // SimpleMemoComponent codepath doesn't resolve outer props either.
    Component.defaultProps === undefined) {
      // If this is a plain function component without default props,
      // and with only the default shallow comparison, we upgrade it
      // to a SimpleMemoComponent to allow fast path updates.
      workInProgress.tag = SimpleMemoComponent;
      workInProgress.type = type;
      {
        validateFunctionComponentInDev(workInProgress, type);
      }
      return updateSimpleMemoComponent(current$$1, workInProgress, type, nextProps, updateExpirationTime, renderExpirationTime);
    }
    {
      var innerPropTypes = type.propTypes;
      if (innerPropTypes) {
        // Inner memo component props aren't currently validated in createElement.
        // We could move it there, but we'd still need this for lazy code path.
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(type), getCurrentFiberStackInDev);
      }
    }
    var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
    child.ref = workInProgress.ref;
    child.return = workInProgress;
    workInProgress.child = child;
    return child;
  }
  {
    var _type = Component.type;
    var _innerPropTypes = _type.propTypes;
    if (_innerPropTypes) {
      // Inner memo component props aren't currently validated in createElement.
      // We could move it there, but we'd still need this for lazy code path.
      checkPropTypes(_innerPropTypes, nextProps, // Resolved props
      'prop', getComponentName(_type), getCurrentFiberStackInDev);
    }
  }
  var currentChild = current$$1.child; // This is always exactly one child
  if (updateExpirationTime < renderExpirationTime) {
    // This will be the props with resolved defaultProps,
    // unlike current.memoizedProps which will be the unresolved ones.
    var prevProps = currentChild.memoizedProps;
    // Default to shallow comparison
    var compare = Component.compare;
    compare = compare !== null ? compare : shallowEqual;
    if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    }
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
  newChild.ref = workInProgress.ref;
  newChild.return = workInProgress;
  workInProgress.child = newChild;
  return newChild;
}

function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
  // TODO: current can be non-null here even if the component
  // hasn't yet mounted. This happens when the inner render suspends.
  // We'll need to figure out if this is fine or can cause issues.

  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var outerMemoType = workInProgress.elementType;
      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
        // We warn when you define propTypes on lazy()
        // so let's just skip over it to find memo() outer wrapper.
        // Inner props for memo are validated later.
        outerMemoType = refineResolvedLazyComponent(outerMemoType);
      }
      var outerPropTypes = outerMemoType && outerMemoType.propTypes;
      if (outerPropTypes) {
        checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
        'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
      }
      // Inner propTypes will be validated in the function component path.
    }
  }
  if (current$$1 !== null) {
    var prevProps = current$$1.memoizedProps;
    if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
      didReceiveUpdate = false;
      if (updateExpirationTime < renderExpirationTime) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    }
  }
  return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
}

function updateFragment(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateMode(current$$1, workInProgress, renderExpirationTime) {
  var nextChildren = workInProgress.pendingProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
  if (enableProfilerTimer) {
    workInProgress.effectTag |= Update;
  }
  var nextProps = workInProgress.pendingProps;
  var nextChildren = nextProps.children;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function markRef(current$$1, workInProgress) {
  var ref = workInProgress.ref;
  if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
    // Schedule a Ref effect
    workInProgress.effectTag |= Ref;
  }
}

function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;
      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  var nextChildren = void 0;
  prepareToReadContext(workInProgress, renderExpirationTime);
  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
    if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
      // Only double-render components with Hooks
      if (workInProgress.memoizedState !== null) {
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
      }
    }
    setCurrentPhase(null);
  }

  if (current$$1 !== null && !didReceiveUpdate) {
    bailoutHooks(current$$1, workInProgress, renderExpirationTime);
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
  {
    if (workInProgress.type !== workInProgress.elementType) {
      // Lazy component props can't be validated in createElement
      // because they're only guaranteed to be resolved here.
      var innerPropTypes = Component.propTypes;
      if (innerPropTypes) {
        checkPropTypes(innerPropTypes, nextProps, // Resolved props
        'prop', getComponentName(Component), getCurrentFiberStackInDev);
      }
    }
  }

  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = void 0;
  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }
  prepareToReadContext(workInProgress, renderExpirationTime);

  var instance = workInProgress.stateNode;
  var shouldUpdate = void 0;
  if (instance === null) {
    if (current$$1 !== null) {
      // An class component without an instance only mounts if it suspended
      // inside a non- concurrent tree, in an inconsistent state. We want to
      // tree it like a new mount, even though an empty version of it already
      // committed. Disconnect the alternate pointers.
      current$$1.alternate = null;
      workInProgress.alternate = null;
      // Since this is conceptually a new fiber, schedule a Placement effect
      workInProgress.effectTag |= Placement;
    }
    // In the initial pass we might need to construct the instance.
    constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
    shouldUpdate = true;
  } else if (current$$1 === null) {
    // In a resume, we'll already have an instance we can reuse.
    shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  } else {
    shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
  }
  var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
  {
    var inst = workInProgress.stateNode;
    if (inst.props !== nextProps) {
      !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
      didWarnAboutReassigningProps = true;
    }
  }
  return nextUnitOfWork;
}

function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
  // Refs should update even if shouldComponentUpdate returns false
  markRef(current$$1, workInProgress);

  var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

  if (!shouldUpdate && !didCaptureError) {
    // Context providers should defer to sCU for rendering
    if (hasContext) {
      invalidateContextProvider(workInProgress, Component, false);
    }

    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }

  var instance = workInProgress.stateNode;

  // Rerender
  ReactCurrentOwner$3.current = workInProgress;
  var nextChildren = void 0;
  if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
    // If we captured an error, but getDerivedStateFrom catch is not defined,
    // unmount all the children. componentDidCatch will schedule an update to
    // re-render a fallback. This is temporary until we migrate everyone to
    // the new API.
    // TODO: Warn in a future release.
    nextChildren = null;

    if (enableProfilerTimer) {
      stopProfilerTimerIfRunning(workInProgress);
    }
  } else {
    {
      setCurrentPhase('render');
      nextChildren = instance.render();
      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        instance.render();
      }
      setCurrentPhase(null);
    }
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  if (current$$1 !== null && didCaptureError) {
    // If we're recovering from an error, reconcile without reusing any of
    // the existing children. Conceptually, the normal children and the children
    // that are shown on error are two different sets, so we shouldn't reuse
    // normal children even if their identities match.
    forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  }

  // Memoize state using the values we just used to render.
  // TODO: Restructure so we never read values from the instance.
  workInProgress.memoizedState = instance.state;

  // The context might have changed so we need to recalculate it.
  if (hasContext) {
    invalidateContextProvider(workInProgress, Component, true);
  }

  return workInProgress.child;
}

function pushHostRootContext(workInProgress) {
  var root = workInProgress.stateNode;
  if (root.pendingContext) {
    pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
  } else if (root.context) {
    // Should always be set
    pushTopLevelContextObject(workInProgress, root.context, false);
  }
  pushHostContainer(workInProgress, root.containerInfo);
}

function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
  pushHostRootContext(workInProgress);
  var updateQueue = workInProgress.updateQueue;
  !(updateQueue !== null) ? invariant(false, 'If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var nextProps = workInProgress.pendingProps;
  var prevState = workInProgress.memoizedState;
  var prevChildren = prevState !== null ? prevState.element : null;
  processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
  var nextState = workInProgress.memoizedState;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  var nextChildren = nextState.element;
  if (nextChildren === prevChildren) {
    // If the state is the same as before, that's a bailout because we had
    // no work that expires at this time.
    resetHydrationState();
    return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
  }
  var root = workInProgress.stateNode;
  if ((current$$1 === null || current$$1.child === null) && root.hydrate && enterHydrationState(workInProgress)) {
    // If we don't have any current children this might be the first pass.
    // We always try to hydrate. If this isn't a hydration pass there won't
    // be any children to hydrate which is effectively the same thing as
    // not hydrating.

    // This is a bit of a hack. We track the host root as a placement to
    // know that we're currently in a mounting state. That way isMounted
    // works as expected. We must reset this before committing.
    // TODO: Delete this when we delete isMounted and findDOMNode.
    workInProgress.effectTag |= Placement;

    // Ensure that children mount into this root without tracking
    // side-effects. This ensures that we don't store Placement effects on
    // nodes that will be hydrated.
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    // Otherwise reset hydration state in case we aborted and resumed another
    // root.
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
    resetHydrationState();
  }
  return workInProgress.child;
}

function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContext(workInProgress);

  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }

  var type = workInProgress.type;
  var nextProps = workInProgress.pendingProps;
  var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;

  var nextChildren = nextProps.children;
  var isDirectTextChild = shouldSetTextContent(type, nextProps);

  if (isDirectTextChild) {
    // We special case a direct text child of a host node. This is a common
    // case. We won't handle it as a reified child. We will instead handle
    // this in the host environment that also have access to this prop. That
    // avoids allocating another HostText fiber and traversing it.
    nextChildren = null;
  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
    // If we're switching from a direct text child to a normal child, or to
    // empty, we need to schedule the text content to be reset.
    workInProgress.effectTag |= ContentReset;
  }

  markRef(current$$1, workInProgress);

  // Check the host config to see if the children are offscreen/hidden.
  if (renderExpirationTime !== Never && workInProgress.mode & ConcurrentMode && shouldDeprioritizeSubtree(type, nextProps)) {
    // Schedule this fiber to re-render at offscreen priority. Then bailout.
    workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
    return null;
  }

  reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  return workInProgress.child;
}

function updateHostText(current$$1, workInProgress) {
  if (current$$1 === null) {
    tryToClaimNextHydratableInstance(workInProgress);
  }
  // Nothing to do here. This is terminal. We'll do the completion step
  // immediately after.
  return null;
}

function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
  if (_current !== null) {
    // An lazy component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null;
    // Since this is conceptually a new fiber, schedule a Placement effect
    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps;
  // We can't start a User Timing measurement with correct label yet.
  // Cancel and resume right after we know the tag.
  cancelWorkTimer(workInProgress);
  var Component = readLazyComponentType(elementType);
  // Store the unwrapped component in the type.
  workInProgress.type = Component;
  var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
  startWorkTimer(workInProgress);
  var resolvedProps = resolveDefaultProps(Component, props);
  var child = void 0;
  switch (resolvedTag) {
    case FunctionComponent:
      {
        {
          validateFunctionComponentInDev(workInProgress, Component);
        }
        child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }
    case ClassComponent:
      {
        child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }
    case ForwardRef:
      {
        child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
        break;
      }
    case MemoComponent:
      {
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = Component.propTypes;
            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
              'prop', getComponentName(Component), getCurrentFiberStackInDev);
            }
          }
        }
        child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
        updateExpirationTime, renderExpirationTime);
        break;
      }
    default:
      {
        var hint = '';
        {
          if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
            hint = ' Did you wrap a component in React.lazy() more than once?';
          }
        }
        // This message intentionally doesn't mention ForwardRef or MemoComponent
        // because the fact that it's a separate type of work is an
        // implementation detail.
        invariant(false, 'Element type is invalid. Received a promise that resolves to: %s. Lazy element type must resolve to a class or function.%s', Component, hint);
      }
  }
  return child;
}

function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
  if (_current !== null) {
    // An incomplete component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null;
    // Since this is conceptually a new fiber, schedule a Placement effect
    workInProgress.effectTag |= Placement;
  }

  // Promote the fiber to a class and try rendering again.
  workInProgress.tag = ClassComponent;

  // The rest of this function is a fork of `updateClassComponent`

  // Push context providers early to prevent context stack mismatches.
  // During mounting we don't know the child context yet as the instance doesn't exist.
  // We will invalidate the child context in finishClassComponent() right after rendering.
  var hasContext = void 0;
  if (isContextProvider(Component)) {
    hasContext = true;
    pushContextProvider(workInProgress);
  } else {
    hasContext = false;
  }
  prepareToReadContext(workInProgress, renderExpirationTime);

  constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
  mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);

  return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
}

function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
  if (_current !== null) {
    // An indeterminate component only mounts if it suspended inside a non-
    // concurrent tree, in an inconsistent state. We want to treat it like
    // a new mount, even though an empty version of it already committed.
    // Disconnect the alternate pointers.
    _current.alternate = null;
    workInProgress.alternate = null;
    // Since this is conceptually a new fiber, schedule a Placement effect
    workInProgress.effectTag |= Placement;
  }

  var props = workInProgress.pendingProps;
  var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
  var context = getMaskedContext(workInProgress, unmaskedContext);

  prepareToReadContext(workInProgress, renderExpirationTime);

  var value = void 0;

  {
    if (Component.prototype && typeof Component.prototype.render === 'function') {
      var componentName = getComponentName(Component) || 'Unknown';

      if (!didWarnAboutBadClass[componentName]) {
        warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
        didWarnAboutBadClass[componentName] = true;
      }
    }

    if (workInProgress.mode & StrictMode) {
      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
    }

    ReactCurrentOwner$3.current = workInProgress;
    value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
  }
  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;

  if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
    // Proceed under the assumption that this is a class instance
    workInProgress.tag = ClassComponent;

    // Throw out any hooks that were used.
    resetHooks();

    // Push context providers early to prevent context stack mismatches.
    // During mounting we don't know the child context yet as the instance doesn't exist.
    // We will invalidate the child context in finishClassComponent() right after rendering.
    var hasContext = false;
    if (isContextProvider(Component)) {
      hasContext = true;
      pushContextProvider(workInProgress);
    } else {
      hasContext = false;
    }

    workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;

    var getDerivedStateFromProps = Component.getDerivedStateFromProps;
    if (typeof getDerivedStateFromProps === 'function') {
      applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
    }

    adoptClassInstance(workInProgress, value);
    mountClassInstance(workInProgress, Component, props, renderExpirationTime);
    return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
  } else {
    // Proceed under the assumption that this is a function component
    workInProgress.tag = FunctionComponent;
    {
      if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
        // Only double-render components with Hooks
        if (workInProgress.memoizedState !== null) {
          value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
        }
      }
    }
    reconcileChildren(null, workInProgress, value, renderExpirationTime);
    {
      validateFunctionComponentInDev(workInProgress, Component);
    }
    return workInProgress.child;
  }
}

function validateFunctionComponentInDev(workInProgress, Component) {
  if (Component) {
    !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
  }
  if (workInProgress.ref !== null) {
    var info = '';
    var ownerName = getCurrentFiberOwnerNameInDevOrNull();
    if (ownerName) {
      info += '\n\nCheck the render method of `' + ownerName + '`.';
    }

    var warningKey = ownerName || workInProgress._debugID || '';
    var debugSource = workInProgress._debugSource;
    if (debugSource) {
      warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
    }
    if (!didWarnAboutFunctionRefs[warningKey]) {
      didWarnAboutFunctionRefs[warningKey] = true;
      warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
    }
  }

  if (typeof Component.getDerivedStateFromProps === 'function') {
    var componentName = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {
      warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', componentName);
      didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;
    }
  }

  if (typeof Component.contextType === 'object' && Component.contextType !== null) {
    var _componentName = getComponentName(Component) || 'Unknown';

    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName]) {
      warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName);
      didWarnAboutContextTypeOnFunctionComponent[_componentName] = true;
    }
  }
}

function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
  var mode = workInProgress.mode;
  var nextProps = workInProgress.pendingProps;

  // We should attempt to render the primary children unless this boundary
  // already suspended during this render (`alreadyCaptured` is true).
  var nextState = workInProgress.memoizedState;

  var nextDidTimeout = void 0;
  if ((workInProgress.effectTag & DidCapture) === NoEffect) {
    // This is the first attempt.
    nextState = null;
    nextDidTimeout = false;
  } else {
    // Something in this boundary's subtree already suspended. Switch to
    // rendering the fallback children.
    nextState = {
      timedOutAt: nextState !== null ? nextState.timedOutAt : NoWork
    };
    nextDidTimeout = true;
    workInProgress.effectTag &= ~DidCapture;
  }

  // This next part is a bit confusing. If the children timeout, we switch to
  // showing the fallback children in place of the "primary" children.
  // However, we don't want to delete the primary children because then their
  // state will be lost (both the React state and the host state, e.g.
  // uncontrolled form inputs). Instead we keep them mounted and hide them.
  // Both the fallback children AND the primary children are rendered at the
  // same time. Once the primary children are un-suspended, we can delete
  // the fallback children — don't need to preserve their state.
  //
  // The two sets of children are siblings in the host environment, but
  // semantically, for purposes of reconciliation, they are two separate sets.
  // So we store them using two fragment fibers.
  //
  // However, we want to avoid allocating extra fibers for every placeholder.
  // They're only necessary when the children time out, because that's the
  // only time when both sets are mounted.
  //
  // So, the extra fragment fibers are only used if the children time out.
  // Otherwise, we render the primary children directly. This requires some
  // custom reconciliation logic to preserve the state of the primary
  // children. It's essentially a very basic form of re-parenting.

  // `child` points to the child fiber. In the normal case, this is the first
  // fiber of the primary children set. In the timed-out case, it's a
  // a fragment fiber containing the primary children.
  var child = void 0;
  // `next` points to the next fiber React should render. In the normal case,
  // it's the same as `child`: the first fiber of the primary children set.
  // In the timed-out case, it's a fragment fiber containing the *fallback*
  // children -- we skip over the primary children entirely.
  var next = void 0;
  if (current$$1 === null) {
    if (enableSuspenseServerRenderer) {
      // If we're currently hydrating, try to hydrate this boundary.
      // But only if this has a fallback.
      if (nextProps.fallback !== undefined) {
        tryToClaimNextHydratableInstance(workInProgress);
        // This could've changed the tag if this was a dehydrated suspense component.
        if (workInProgress.tag === DehydratedSuspenseComponent) {
          return updateDehydratedSuspenseComponent(null, workInProgress, renderExpirationTime);
        }
      }
    }

    // This is the initial mount. This branch is pretty simple because there's
    // no previous state that needs to be preserved.
    if (nextDidTimeout) {
      // Mount separate fragments for primary and fallback children.
      var nextFallbackChildren = nextProps.fallback;
      var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);

      if ((workInProgress.mode & ConcurrentMode) === NoContext) {
        // Outside of concurrent mode, we commit the effects from the
        var progressedState = workInProgress.memoizedState;
        var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
        primaryChildFragment.child = progressedPrimaryChild;
      }

      var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
      primaryChildFragment.sibling = fallbackChildFragment;
      child = primaryChildFragment;
      // Skip the primary children, and continue working on the
      // fallback children.
      next = fallbackChildFragment;
      child.return = next.return = workInProgress;
    } else {
      // Mount the primary children without an intermediate fragment fiber.
      var nextPrimaryChildren = nextProps.children;
      child = next = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
    }
  } else {
    // This is an update. This branch is more complicated because we need to
    // ensure the state of the primary children is preserved.
    var prevState = current$$1.memoizedState;
    var prevDidTimeout = prevState !== null;
    if (prevDidTimeout) {
      // The current tree already timed out. That means each child set is
      var currentPrimaryChildFragment = current$$1.child;
      var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
      if (nextDidTimeout) {
        // Still timed out. Reuse the current primary children by cloning
        // its fragment. We're going to skip over these entirely.
        var _nextFallbackChildren = nextProps.fallback;
        var _primaryChildFragment = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

        if ((workInProgress.mode & ConcurrentMode) === NoContext) {
          // Outside of concurrent mode, we commit the effects from the
          var _progressedState = workInProgress.memoizedState;
          var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;
          if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
            _primaryChildFragment.child = _progressedPrimaryChild;
          }
        }

        // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.
        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var treeBaseDuration = 0;
          var hiddenChild = _primaryChildFragment.child;
          while (hiddenChild !== null) {
            treeBaseDuration += hiddenChild.treeBaseDuration;
            hiddenChild = hiddenChild.sibling;
          }
          _primaryChildFragment.treeBaseDuration = treeBaseDuration;
        }

        // Clone the fallback child fragment, too. These we'll continue
        // working on.
        var _fallbackChildFragment = _primaryChildFragment.sibling = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren, currentFallbackChildFragment.expirationTime);
        child = _primaryChildFragment;
        _primaryChildFragment.childExpirationTime = NoWork;
        // Skip the primary children, and continue working on the
        // fallback children.
        next = _fallbackChildFragment;
        child.return = next.return = workInProgress;
      } else {
        // No longer suspended. Switch back to showing the primary children,
        // and remove the intermediate fragment fiber.
        var _nextPrimaryChildren = nextProps.children;
        var currentPrimaryChild = currentPrimaryChildFragment.child;
        var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime);

        // If this render doesn't suspend, we need to delete the fallback
        // children. Wait until the complete phase, after we've confirmed the
        // fallback is no longer needed.
        // TODO: Would it be better to store the fallback fragment on
        // the stateNode?

        // Continue rendering the children, like we normally do.
        child = next = primaryChild;
      }
    } else {
      // The current tree has not already timed out. That means the primary
      // children are not wrapped in a fragment fiber.
      var _currentPrimaryChild = current$$1.child;
      if (nextDidTimeout) {
        // Timed out. Wrap the children in a fragment fiber to keep them
        // separate from the fallback children.
        var _nextFallbackChildren2 = nextProps.fallback;
        var _primaryChildFragment2 = createFiberFromFragment(
        // It shouldn't matter what the pending props are because we aren't
        // going to render this fragment.
        null, mode, NoWork, null);
        _primaryChildFragment2.child = _currentPrimaryChild;

        // Even though we're creating a new fiber, there are no new children,
        // because we're reusing an already mounted tree. So we don't need to
        // schedule a placement.
        // primaryChildFragment.effectTag |= Placement;

        if ((workInProgress.mode & ConcurrentMode) === NoContext) {
          // Outside of concurrent mode, we commit the effects from the
          var _progressedState2 = workInProgress.memoizedState;
          var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;
          _primaryChildFragment2.child = _progressedPrimaryChild2;
        }

        // Because primaryChildFragment is a new fiber that we're inserting as the
        // parent of a new tree, we need to set its treeBaseDuration.
        if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
          // treeBaseDuration is the sum of all the child tree base durations.
          var _treeBaseDuration = 0;
          var _hiddenChild = _primaryChildFragment2.child;
          while (_hiddenChild !== null) {
            _treeBaseDuration += _hiddenChild.treeBaseDuration;
            _hiddenChild = _hiddenChild.sibling;
          }
          _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
        }

        // Create a fragment from the fallback children, too.
        var _fallbackChildFragment2 = _primaryChildFragment2.sibling = createFiberFromFragment(_nextFallbackChildren2, mode, renderExpirationTime, null);
        _fallbackChildFragment2.effectTag |= Placement;
        child = _primaryChildFragment2;
        _primaryChildFragment2.childExpirationTime = NoWork;
        // Skip the primary children, and continue working on the
        // fallback children.
        next = _fallbackChildFragment2;
        child.return = next.return = workInProgress;
      } else {
        // Still haven't timed out.  Continue rendering the children, like we
        // normally do.
        var _nextPrimaryChildren2 = nextProps.children;
        next = child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
      }
    }
    workInProgress.stateNode = current$$1.stateNode;
  }

  workInProgress.memoizedState = nextState;
  workInProgress.child = child;
  return next;
}

function updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
  if (current$$1 === null) {
    // During the first pass, we'll bail out and not drill into the children.
    // Instead, we'll leave the content in place and try to hydrate it later.
    workInProgress.expirationTime = Never;
    return null;
  }
  // We use childExpirationTime to indicate that a child might depend on context, so if
  // any context has changed, we need to treat is as if the input might have changed.
  var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;
  if (didReceiveUpdate || hasContextChanged$$1) {
    // This boundary has changed since the first render. This means that we are now unable to
    // hydrate it. We might still be able to hydrate it using an earlier expiration time but
    // during this render we can't. Instead, we're going to delete the whole subtree and
    // instead inject a new real Suspense boundary to take its place, which may render content
    // or fallback. The real Suspense boundary will suspend for a while so we have some time
    // to ensure it can produce real content, but all state and pending events will be lost.

    // Detach from the current dehydrated boundary.
    current$$1.alternate = null;
    workInProgress.alternate = null;

    // Insert a deletion in the effect list.
    var returnFiber = workInProgress.return;
    !(returnFiber !== null) ? invariant(false, 'Suspense boundaries are never on the root. This is probably a bug in React.') : void 0;
    var last = returnFiber.lastEffect;
    if (last !== null) {
      last.nextEffect = current$$1;
      returnFiber.lastEffect = current$$1;
    } else {
      returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
    }
    current$$1.nextEffect = null;
    current$$1.effectTag = Deletion;

    // Upgrade this work in progress to a real Suspense component.
    workInProgress.tag = SuspenseComponent;
    workInProgress.stateNode = null;
    workInProgress.memoizedState = null;
    // This is now an insertion.
    workInProgress.effectTag |= Placement;
    // Retry as a real Suspense component.
    return updateSuspenseComponent(null, workInProgress, renderExpirationTime);
  }
  if ((workInProgress.effectTag & DidCapture) === NoEffect) {
    // This is the first attempt.
    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress);
    var nextProps = workInProgress.pendingProps;
    var nextChildren = nextProps.children;
    workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    return workInProgress.child;
  } else {
    // Something suspended. Leave the existing children in place.
    // TODO: In non-concurrent mode, should we commit the nodes we have hydrated so far?
    workInProgress.child = null;
    return null;
  }
}

function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
  var nextChildren = workInProgress.pendingProps;
  if (current$$1 === null) {
    // Portals are special because we don't append the children during mount
    // but at commit. Therefore we need to track insertions which the normal
    // flow doesn't do during mount. This doesn't happen at the root because
    // the root always starts with a "current" with a null child.
    // TODO: Consider unifying this with how the root works.
    workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
  } else {
    reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
  }
  return workInProgress.child;
}

function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
  var providerType = workInProgress.type;
  var context = providerType._context;

  var newProps = workInProgress.pendingProps;
  var oldProps = workInProgress.memoizedProps;

  var newValue = newProps.value;

  {
    var providerPropTypes = workInProgress.type.propTypes;

    if (providerPropTypes) {
      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
    }
  }

  pushProvider(workInProgress, newValue);

  if (oldProps !== null) {
    var oldValue = oldProps.value;
    var changedBits = calculateChangedBits(context, newValue, oldValue);
    if (changedBits === 0) {
      // No change. Bailout early if children are the same.
      if (oldProps.children === newProps.children && !hasContextChanged()) {
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }
    } else {
      // The context value changed. Search for matching consumers and schedule
      // them to update.
      propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
    }
  }

  var newChildren = newProps.children;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

var hasWarnedAboutUsingContextAsConsumer = false;

function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
  var context = workInProgress.type;
  // The logic below for Context differs depending on PROD or DEV mode. In
  // DEV mode, we create a separate object for Context.Consumer that acts
  // like a proxy to Context. This proxy object adds unnecessary code in PROD
  // so we use the old behaviour (Context.Consumer references Context) to
  // reduce size and overhead. The separate object references context via
  // a property called "_context", which also gives us the ability to check
  // in DEV mode if this property exists or not and warn if it does not.
  {
    if (context._context === undefined) {
      // This may be because it's a Context (rather than a Consumer).
      // Or it may be because it's older React where they're the same thing.
      // We only want to warn if we're sure it's a new React.
      if (context !== context.Consumer) {
        if (!hasWarnedAboutUsingContextAsConsumer) {
          hasWarnedAboutUsingContextAsConsumer = true;
          warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
        }
      }
    } else {
      context = context._context;
    }
  }
  var newProps = workInProgress.pendingProps;
  var render = newProps.children;

  {
    !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
  }

  prepareToReadContext(workInProgress, renderExpirationTime);
  var newValue = readContext(context, newProps.unstable_observedBits);
  var newChildren = void 0;
  {
    ReactCurrentOwner$3.current = workInProgress;
    setCurrentPhase('render');
    newChildren = render(newValue);
    setCurrentPhase(null);
  }

  // React DevTools reads this flag.
  workInProgress.effectTag |= PerformedWork;
  reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
  return workInProgress.child;
}

function markWorkInProgressReceivedUpdate() {
  didReceiveUpdate = true;
}

function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
  cancelWorkTimer(workInProgress);

  if (current$$1 !== null) {
    // Reuse previous context list
    workInProgress.contextDependencies = current$$1.contextDependencies;
  }

  if (enableProfilerTimer) {
    // Don't update "base" render times for bailouts.
    stopProfilerTimerIfRunning(workInProgress);
  }

  // Check if the children have any pending work.
  var childExpirationTime = workInProgress.childExpirationTime;
  if (childExpirationTime < renderExpirationTime) {
    // The children don't have any work either. We can skip them.
    // TODO: Once we add back resuming, we should check if the children are
    // a work-in-progress set. If so, we need to transfer their effects.
    return null;
  } else {
    // This fiber doesn't have work, but its subtree does. Clone the child
    // fibers and continue.
    cloneChildFibers(current$$1, workInProgress);
    return workInProgress.child;
  }
}

function beginWork(current$$1, workInProgress, renderExpirationTime) {
  var updateExpirationTime = workInProgress.expirationTime;

  if (current$$1 !== null) {
    var oldProps = current$$1.memoizedProps;
    var newProps = workInProgress.pendingProps;

    if (oldProps !== newProps || hasContextChanged()) {
      // If props or context changed, mark the fiber as having performed work.
      // This may be unset if the props are determined to be equal later (memo).
      didReceiveUpdate = true;
    } else if (updateExpirationTime < renderExpirationTime) {
      didReceiveUpdate = false;
      // This fiber does not have any pending work. Bailout without entering
      // the begin phase. There's still some bookkeeping we that needs to be done
      // in this optimized path, mostly pushing stuff onto the stack.
      switch (workInProgress.tag) {
        case HostRoot:
          pushHostRootContext(workInProgress);
          resetHydrationState();
          break;
        case HostComponent:
          pushHostContext(workInProgress);
          break;
        case ClassComponent:
          {
            var Component = workInProgress.type;
            if (isContextProvider(Component)) {
              pushContextProvider(workInProgress);
            }
            break;
          }
        case HostPortal:
          pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
          break;
        case ContextProvider:
          {
            var newValue = workInProgress.memoizedProps.value;
            pushProvider(workInProgress, newValue);
            break;
          }
        case Profiler:
          if (enableProfilerTimer) {
            workInProgress.effectTag |= Update;
          }
          break;
        case SuspenseComponent:
          {
            var state = workInProgress.memoizedState;
            var didTimeout = state !== null;
            if (didTimeout) {
              // If this boundary is currently timed out, we need to decide
              // whether to retry the primary children, or to skip over it and
              // go straight to the fallback. Check the priority of the primary
              var primaryChildFragment = workInProgress.child;
              var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;
              if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                // The primary children have pending work. Use the normal path
                // to attempt to render the primary children again.
                return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
              } else {
                // The primary children do not have pending work with sufficient
                // priority. Bailout.
                var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
                if (child !== null) {
                  // The fallback children have pending work. Skip over the
                  // primary children and work on the fallback.
                  return child.sibling;
                } else {
                  return null;
                }
              }
            }
            break;
          }
        case DehydratedSuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              // We know that this component will suspend again because if it has
              // been unsuspended it has committed as a regular Suspense component.
              // If it needs to be retried, it should have work scheduled on it.
              workInProgress.effectTag |= DidCapture;
              break;
            }
          }
      }
      return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
    }
  } else {
    didReceiveUpdate = false;
  }

  // Before entering the begin phase, clear the expiration time.
  workInProgress.expirationTime = NoWork;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      {
        var elementType = workInProgress.elementType;
        return mountIndeterminateComponent(current$$1, workInProgress, elementType, renderExpirationTime);
      }
    case LazyComponent:
      {
        var _elementType = workInProgress.elementType;
        return mountLazyComponent(current$$1, workInProgress, _elementType, updateExpirationTime, renderExpirationTime);
      }
    case FunctionComponent:
      {
        var _Component = workInProgress.type;
        var unresolvedProps = workInProgress.pendingProps;
        var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
        return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
      }
    case ClassComponent:
      {
        var _Component2 = workInProgress.type;
        var _unresolvedProps = workInProgress.pendingProps;
        var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);
        return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
      }
    case HostRoot:
      return updateHostRoot(current$$1, workInProgress, renderExpirationTime);
    case HostComponent:
      return updateHostComponent(current$$1, workInProgress, renderExpirationTime);
    case HostText:
      return updateHostText(current$$1, workInProgress);
    case SuspenseComponent:
      return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
    case HostPortal:
      return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);
    case ForwardRef:
      {
        var type = workInProgress.type;
        var _unresolvedProps2 = workInProgress.pendingProps;
        var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
        return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
      }
    case Fragment:
      return updateFragment(current$$1, workInProgress, renderExpirationTime);
    case Mode:
      return updateMode(current$$1, workInProgress, renderExpirationTime);
    case Profiler:
      return updateProfiler(current$$1, workInProgress, renderExpirationTime);
    case ContextProvider:
      return updateContextProvider(current$$1, workInProgress, renderExpirationTime);
    case ContextConsumer:
      return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);
    case MemoComponent:
      {
        var _type2 = workInProgress.type;
        var _unresolvedProps3 = workInProgress.pendingProps;
        // Resolve outer props first, then resolve inner props.
        var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
        {
          if (workInProgress.type !== workInProgress.elementType) {
            var outerPropTypes = _type2.propTypes;
            if (outerPropTypes) {
              checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
              'prop', getComponentName(_type2), getCurrentFiberStackInDev);
            }
          }
        }
        _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
        return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
      }
    case SimpleMemoComponent:
      {
        return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
      }
    case IncompleteClassComponent:
      {
        var _Component3 = workInProgress.type;
        var _unresolvedProps4 = workInProgress.pendingProps;
        var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);
        return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
      }
    case DehydratedSuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          return updateDehydratedSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
        }
        break;
      }
  }
  invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
}

var valueCursor = createCursor(null);

var rendererSigil = void 0;
{
  // Use this to detect multiple renderers using the same context
  rendererSigil = {};
}

var currentlyRenderingFiber = null;
var lastContextDependency = null;
var lastContextWithAllBitsObserved = null;

var isDisallowedContextReadInDEV = false;

function resetContextDependences() {
  // This is called right before React yields execution, to ensure `readContext`
  // cannot be called outside the render phase.
  currentlyRenderingFiber = null;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;
  {
    isDisallowedContextReadInDEV = false;
  }
}

function enterDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = true;
  }
}

function exitDisallowedContextReadInDEV() {
  {
    isDisallowedContextReadInDEV = false;
  }
}

function pushProvider(providerFiber, nextValue) {
  var context = providerFiber.type._context;

  if (isPrimaryRenderer) {
    push(valueCursor, context._currentValue, providerFiber);

    context._currentValue = nextValue;
    {
      !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer = rendererSigil;
    }
  } else {
    push(valueCursor, context._currentValue2, providerFiber);

    context._currentValue2 = nextValue;
    {
      !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
      context._currentRenderer2 = rendererSigil;
    }
  }
}

function popProvider(providerFiber) {
  var currentValue = valueCursor.current;

  pop(valueCursor, providerFiber);

  var context = providerFiber.type._context;
  if (isPrimaryRenderer) {
    context._currentValue = currentValue;
  } else {
    context._currentValue2 = currentValue;
  }
}

function calculateChangedBits(context, newValue, oldValue) {
  if (is(oldValue, newValue)) {
    // No change
    return 0;
  } else {
    var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : maxSigned31BitInt;

    {
      !((changedBits & maxSigned31BitInt) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
    }
    return changedBits | 0;
  }
}

function scheduleWorkOnParentPath(parent, renderExpirationTime) {
  // Update the child expiration time of all the ancestors, including
  // the alternates.
  var node = parent;
  while (node !== null) {
    var alternate = node.alternate;
    if (node.childExpirationTime < renderExpirationTime) {
      node.childExpirationTime = renderExpirationTime;
      if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
        alternate.childExpirationTime = renderExpirationTime;
      }
    } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
      alternate.childExpirationTime = renderExpirationTime;
    } else {
      // Neither alternate was updated, which means the rest of the
      // ancestor path already has sufficient priority.
      break;
    }
    node = node.return;
  }
}

function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
  var fiber = workInProgress.child;
  if (fiber !== null) {
    // Set the return pointer of the child to the work-in-progress fiber.
    fiber.return = workInProgress;
  }
  while (fiber !== null) {
    var nextFiber = void 0;

    // Visit this fiber.
    var list = fiber.contextDependencies;
    if (list !== null) {
      nextFiber = fiber.child;

      var dependency = list.first;
      while (dependency !== null) {
        // Check if the context matches.
        if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
          // Match! Schedule an update on this fiber.

          if (fiber.tag === ClassComponent) {
            // Schedule a force update on the work-in-progress.
            var update = createUpdate(renderExpirationTime);
            update.tag = ForceUpdate;
            // TODO: Because we don't have a work-in-progress, this will add the
            // update to the current fiber, too, which means it will persist even if
            // this render is thrown away. Since it's a race condition, not sure it's
            // worth fixing.
            enqueueUpdate(fiber, update);
          }

          if (fiber.expirationTime < renderExpirationTime) {
            fiber.expirationTime = renderExpirationTime;
          }
          var alternate = fiber.alternate;
          if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
            alternate.expirationTime = renderExpirationTime;
          }

          scheduleWorkOnParentPath(fiber.return, renderExpirationTime);

          // Mark the expiration time on the list, too.
          if (list.expirationTime < renderExpirationTime) {
            list.expirationTime = renderExpirationTime;
          }

          // Since we already found a match, we can stop traversing the
          // dependency list.
          break;
        }
        dependency = dependency.next;
      }
    } else if (fiber.tag === ContextProvider) {
      // Don't scan deeper if this is a matching provider
      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
    } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedSuspenseComponent) {
      // If a dehydrated suspense component is in this subtree, we don't know
      // if it will have any context consumers in it. The best we can do is
      // mark it as having updates on its children.
      if (fiber.expirationTime < renderExpirationTime) {
        fiber.expirationTime = renderExpirationTime;
      }
      var _alternate = fiber.alternate;
      if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
        _alternate.expirationTime = renderExpirationTime;
      }
      // This is intentionally passing this fiber as the parent
      // because we want to schedule this fiber as having work
      // on its children. We'll use the childExpirationTime on
      // this fiber to indicate that a context has changed.
      scheduleWorkOnParentPath(fiber, renderExpirationTime);
      nextFiber = fiber.sibling;
    } else {
      // Traverse down.
      nextFiber = fiber.child;
    }

    if (nextFiber !== null) {
      // Set the return pointer of the child to the work-in-progress fiber.
      nextFiber.return = fiber;
    } else {
      // No child. Traverse to next sibling.
      nextFiber = fiber;
      while (nextFiber !== null) {
        if (nextFiber === workInProgress) {
          // We're back to the root of this subtree. Exit.
          nextFiber = null;
          break;
        }
        var sibling = nextFiber.sibling;
        if (sibling !== null) {
          // Set the return pointer of the sibling to the work-in-progress fiber.
          sibling.return = nextFiber.return;
          nextFiber = sibling;
          break;
        }
        // No more siblings. Traverse up.
        nextFiber = nextFiber.return;
      }
    }
    fiber = nextFiber;
  }
}

function prepareToReadContext(workInProgress, renderExpirationTime) {
  currentlyRenderingFiber = workInProgress;
  lastContextDependency = null;
  lastContextWithAllBitsObserved = null;

  var currentDependencies = workInProgress.contextDependencies;
  if (currentDependencies !== null && currentDependencies.expirationTime >= renderExpirationTime) {
    // Context list has a pending update. Mark that this fiber performed work.
    markWorkInProgressReceivedUpdate();
  }

  // Reset the work-in-progress list
  workInProgress.contextDependencies = null;
}

function readContext(context, observedBits) {
  {
    // This warning would fire if you read context inside a Hook like useMemo.
    // Unlike the class check below, it's not enforced in production for perf.
    !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
  }

  if (lastContextWithAllBitsObserved === context) {
    // Nothing to do. We already observe everything in this context.
  } else if (observedBits === false || observedBits === 0) {
    // Do not observe any updates.
  } else {
    var resolvedObservedBits = void 0; // Avoid deopting on observable arguments or heterogeneous types.
    if (typeof observedBits !== 'number' || observedBits === maxSigned31BitInt) {
      // Observe all updates.
      lastContextWithAllBitsObserved = context;
      resolvedObservedBits = maxSigned31BitInt;
    } else {
      resolvedObservedBits = observedBits;
    }

    var contextItem = {
      context: context,
      observedBits: resolvedObservedBits,
      next: null
    };

    if (lastContextDependency === null) {
      !(currentlyRenderingFiber !== null) ? invariant(false, 'Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().') : void 0;

      // This is the first dependency for this component. Create a new list.
      lastContextDependency = contextItem;
      currentlyRenderingFiber.contextDependencies = {
        first: contextItem,
        expirationTime: NoWork
      };
    } else {
      // Append a new context item.
      lastContextDependency = lastContextDependency.next = contextItem;
    }
  }
  return isPrimaryRenderer ? context._currentValue : context._currentValue2;
}

// UpdateQueue is a linked list of prioritized updates.
//
// Like fibers, update queues come in pairs: a current queue, which represents
// the visible state of the screen, and a work-in-progress queue, which can be
// mutated and processed asynchronously before it is committed — a form of
// double buffering. If a work-in-progress render is discarded before finishing,
// we create a new work-in-progress by cloning the current queue.
//
// Both queues share a persistent, singly-linked list structure. To schedule an
// update, we append it to the end of both queues. Each queue maintains a
// pointer to first update in the persistent list that hasn't been processed.
// The work-in-progress pointer always has a position equal to or greater than
// the current queue, since we always work on that one. The current queue's
// pointer is only updated during the commit phase, when we swap in the
// work-in-progress.
//
// For example:
//
//   Current pointer:           A - B - C - D - E - F
//   Work-in-progress pointer:              D - E - F
//                                          ^
//                                          The work-in-progress queue has
//                                          processed more updates than current.
//
// The reason we append to both queues is because otherwise we might drop
// updates without ever processing them. For example, if we only add updates to
// the work-in-progress queue, some updates could be lost whenever a work-in
// -progress render restarts by cloning from current. Similarly, if we only add
// updates to the current queue, the updates will be lost whenever an already
// in-progress queue commits and swaps with the current queue. However, by
// adding to both queues, we guarantee that the update will be part of the next
// work-in-progress. (And because the work-in-progress queue becomes the
// current queue once it commits, there's no danger of applying the same
// update twice.)
//
// Prioritization
// --------------
//
// Updates are not sorted by priority, but by insertion; new updates are always
// appended to the end of the list.
//
// The priority is still important, though. When processing the update queue
// during the render phase, only the updates with sufficient priority are
// included in the result. If we skip an update because it has insufficient
// priority, it remains in the queue to be processed later, during a lower
// priority render. Crucially, all updates subsequent to a skipped update also
// remain in the queue *regardless of their priority*. That means high priority
// updates are sometimes processed twice, at two separate priorities. We also
// keep track of a base state, that represents the state before the first
// update in the queue is applied.
//
// For example:
//
//   Given a base state of '', and the following queue of updates
//
//     A1 - B2 - C1 - D2
//
//   where the number indicates the priority, and the update is applied to the
//   previous state by appending a letter, React will process these updates as
//   two separate renders, one per distinct priority level:
//
//   First render, at priority 1:
//     Base state: ''
//     Updates: [A1, C1]
//     Result state: 'AC'
//
//   Second render, at priority 2:
//     Base state: 'A'            <-  The base state does not include C1,
//                                    because B2 was skipped.
//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
//     Result state: 'ABCD'
//
// Because we process updates in insertion order, and rebase high priority
// updates when preceding updates are skipped, the final result is deterministic
// regardless of priority. Intermediate state may vary according to system
// resources, but the final state is always the same.

var UpdateState = 0;
var ReplaceState = 1;
var ForceUpdate = 2;
var CaptureUpdate = 3;

// Global state that is reset at the beginning of calling `processUpdateQueue`.
// It should only be read right after calling `processUpdateQueue`, via
// `checkHasForceUpdateAfterProcessing`.
var hasForceUpdate = false;

var didWarnUpdateInsideUpdate = void 0;
var currentlyProcessingQueue = void 0;
var resetCurrentlyProcessingQueue = void 0;
{
  didWarnUpdateInsideUpdate = false;
  currentlyProcessingQueue = null;
  resetCurrentlyProcessingQueue = function () {
    currentlyProcessingQueue = null;
  };
}

function createUpdateQueue(baseState) {
  var queue = {
    baseState: baseState,
    firstUpdate: null,
    lastUpdate: null,
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,
    firstEffect: null,
    lastEffect: null,
    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function cloneUpdateQueue(currentQueue) {
  var queue = {
    baseState: currentQueue.baseState,
    firstUpdate: currentQueue.firstUpdate,
    lastUpdate: currentQueue.lastUpdate,

    // TODO: With resuming, if we bail out and resuse the child tree, we should
    // keep these effects.
    firstCapturedUpdate: null,
    lastCapturedUpdate: null,

    firstEffect: null,
    lastEffect: null,

    firstCapturedEffect: null,
    lastCapturedEffect: null
  };
  return queue;
}

function createUpdate(expirationTime) {
  return {
    expirationTime: expirationTime,

    tag: UpdateState,
    payload: null,
    callback: null,

    next: null,
    nextEffect: null
  };
}

function appendUpdateToQueue(queue, update) {
  // Append the update to the end of the list.
  if (queue.lastUpdate === null) {
    // Queue is empty
    queue.firstUpdate = queue.lastUpdate = update;
  } else {
    queue.lastUpdate.next = update;
    queue.lastUpdate = update;
  }
}

function enqueueUpdate(fiber, update) {
  // Update queues are created lazily.
  var alternate = fiber.alternate;
  var queue1 = void 0;
  var queue2 = void 0;
  if (alternate === null) {
    // There's only one fiber.
    queue1 = fiber.updateQueue;
    queue2 = null;
    if (queue1 === null) {
      queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
    }
  } else {
    // There are two owners.
    queue1 = fiber.updateQueue;
    queue2 = alternate.updateQueue;
    if (queue1 === null) {
      if (queue2 === null) {
        // Neither fiber has an update queue. Create new ones.
        queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
      } else {
        // Only one fiber has an update queue. Clone to create a new one.
        queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
      }
    } else {
      if (queue2 === null) {
        // Only one fiber has an update queue. Clone to create a new one.
        queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
      } else {
        // Both owners have an update queue.
      }
    }
  }
  if (queue2 === null || queue1 === queue2) {
    // There's only a single queue.
    appendUpdateToQueue(queue1, update);
  } else {
    // There are two queues. We need to append the update to both queues,
    // while accounting for the persistent structure of the list — we don't
    // want the same update to be added multiple times.
    if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
      // One of the queues is not empty. We must add the update to both queues.
      appendUpdateToQueue(queue1, update);
      appendUpdateToQueue(queue2, update);
    } else {
      // Both queues are non-empty. The last update is the same in both lists,
      // because of structural sharing. So, only append to one of the lists.
      appendUpdateToQueue(queue1, update);
      // But we still need to update the `lastUpdate` pointer of queue2.
      queue2.lastUpdate = update;
    }
  }

  {
    if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
      warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
      didWarnUpdateInsideUpdate = true;
    }
  }
}

function enqueueCapturedUpdate(workInProgress, update) {
  // Captured updates go into a separate list, and only on the work-in-
  // progress queue.
  var workInProgressQueue = workInProgress.updateQueue;
  if (workInProgressQueue === null) {
    workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
  } else {
    // TODO: I put this here rather than createWorkInProgress so that we don't
    // clone the queue unnecessarily. There's probably a better way to
    // structure this.
    workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
  }

  // Append the update to the end of the list.
  if (workInProgressQueue.lastCapturedUpdate === null) {
    // This is the first render phase update
    workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
  } else {
    workInProgressQueue.lastCapturedUpdate.next = update;
    workInProgressQueue.lastCapturedUpdate = update;
  }
}

function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
  var current = workInProgress.alternate;
  if (current !== null) {
    // If the work-in-progress queue is equal to the current queue,
    // we need to clone it first.
    if (queue === current.updateQueue) {
      queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
    }
  }
  return queue;
}

function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
  switch (update.tag) {
    case ReplaceState:
      {
        var _payload = update.payload;
        if (typeof _payload === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload.call(instance, prevState, nextProps);
            }
          }
          var nextState = _payload.call(instance, prevState, nextProps);
          {
            exitDisallowedContextReadInDEV();
          }
          return nextState;
        }
        // State object
        return _payload;
      }
    case CaptureUpdate:
      {
        workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
      }
    // Intentional fallthrough
    case UpdateState:
      {
        var _payload2 = update.payload;
        var partialState = void 0;
        if (typeof _payload2 === 'function') {
          // Updater function
          {
            enterDisallowedContextReadInDEV();
            if (debugRenderPhaseSideEffects || debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
              _payload2.call(instance, prevState, nextProps);
            }
          }
          partialState = _payload2.call(instance, prevState, nextProps);
          {
            exitDisallowedContextReadInDEV();
          }
        } else {
          // Partial state object
          partialState = _payload2;
        }
        if (partialState === null || partialState === undefined) {
          // Null and undefined are treated as no-ops.
          return prevState;
        }
        // Merge the partial state and the previous state.
        return _assign({}, prevState, partialState);
      }
    case ForceUpdate:
      {
        hasForceUpdate = true;
        return prevState;
      }
  }
  return prevState;
}

function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
  hasForceUpdate = false;

  queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);

  {
    currentlyProcessingQueue = queue;
  }

  // These values may change as we process the queue.
  var newBaseState = queue.baseState;
  var newFirstUpdate = null;
  var newExpirationTime = NoWork;

  // Iterate through the list of updates to compute the result.
  var update = queue.firstUpdate;
  var resultState = newBaseState;
  while (update !== null) {
    var updateExpirationTime = update.expirationTime;
    if (updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstUpdate === null) {
        // This is the first skipped update. It will be the first update in
        // the new list.
        newFirstUpdate = update;
        // Since this is the first update that was skipped, the current result
        // is the new base state.
        newBaseState = resultState;
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime < updateExpirationTime) {
        newExpirationTime = updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback = update.callback;
      if (_callback !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastEffect === null) {
          queue.firstEffect = queue.lastEffect = update;
        } else {
          queue.lastEffect.nextEffect = update;
          queue.lastEffect = update;
        }
      }
    }
    // Continue to the next update.
    update = update.next;
  }

  // Separately, iterate though the list of captured updates.
  var newFirstCapturedUpdate = null;
  update = queue.firstCapturedUpdate;
  while (update !== null) {
    var _updateExpirationTime = update.expirationTime;
    if (_updateExpirationTime < renderExpirationTime) {
      // This update does not have sufficient priority. Skip it.
      if (newFirstCapturedUpdate === null) {
        // This is the first skipped captured update. It will be the first
        // update in the new list.
        newFirstCapturedUpdate = update;
        // If this is the first update that was skipped, the current result is
        // the new base state.
        if (newFirstUpdate === null) {
          newBaseState = resultState;
        }
      }
      // Since this update will remain in the list, update the remaining
      // expiration time.
      if (newExpirationTime < _updateExpirationTime) {
        newExpirationTime = _updateExpirationTime;
      }
    } else {
      // This update does have sufficient priority. Process it and compute
      // a new result.
      resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
      var _callback2 = update.callback;
      if (_callback2 !== null) {
        workInProgress.effectTag |= Callback;
        // Set this to null, in case it was mutated during an aborted render.
        update.nextEffect = null;
        if (queue.lastCapturedEffect === null) {
          queue.firstCapturedEffect = queue.lastCapturedEffect = update;
        } else {
          queue.lastCapturedEffect.nextEffect = update;
          queue.lastCapturedEffect = update;
        }
      }
    }
    update = update.next;
  }

  if (newFirstUpdate === null) {
    queue.lastUpdate = null;
  }
  if (newFirstCapturedUpdate === null) {
    queue.lastCapturedUpdate = null;
  } else {
    workInProgress.effectTag |= Callback;
  }
  if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
    // We processed every update, without skipping. That means the new base
    // state is the same as the result state.
    newBaseState = resultState;
  }

  queue.baseState = newBaseState;
  queue.firstUpdate = newFirstUpdate;
  queue.firstCapturedUpdate = newFirstCapturedUpdate;

  // Set the remaining expiration time to be whatever is remaining in the queue.
  // This should be fine because the only two other things that contribute to
  // expiration time are props and context. We're already in the middle of the
  // begin phase by the time we start processing the queue, so we've already
  // dealt with the props. Context in components that specify
  // shouldComponentUpdate is tricky; but we'll have to account for
  // that regardless.
  workInProgress.expirationTime = newExpirationTime;
  workInProgress.memoizedState = resultState;

  {
    currentlyProcessingQueue = null;
  }
}

function callCallback(callback, context) {
  !(typeof callback === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', callback) : void 0;
  callback.call(context);
}

function resetHasForceUpdateBeforeProcessing() {
  hasForceUpdate = false;
}

function checkHasForceUpdateAfterProcessing() {
  return hasForceUpdate;
}

function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
  // If the finished render included captured updates, and there are still
  // lower priority updates left over, we need to keep the captured updates
  // in the queue so that they are rebased and not dropped once we process the
  // queue again at the lower priority.
  if (finishedQueue.firstCapturedUpdate !== null) {
    // Join the captured update list to the end of the normal list.
    if (finishedQueue.lastUpdate !== null) {
      finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
      finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
    }
    // Clear the list of captured updates.
    finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
  }

  // Commit the effects
  commitUpdateEffects(finishedQueue.firstEffect, instance);
  finishedQueue.firstEffect = finishedQueue.lastEffect = null;

  commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
  finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
}

function commitUpdateEffects(effect, instance) {
  while (effect !== null) {
    var _callback3 = effect.callback;
    if (_callback3 !== null) {
      effect.callback = null;
      callCallback(_callback3, instance);
    }
    effect = effect.nextEffect;
  }
}

function createCapturedValue(value, source) {
  // If the value is an error, call this function immediately after it is thrown
  // so the stack is accurate.
  return {
    value: value,
    source: source,
    stack: getStackByFiberInDevAndProd(source)
  };
}

function markUpdate(workInProgress) {
  // Tag the fiber with an update effect. This turns a Placement into
  // a PlacementAndUpdate.
  workInProgress.effectTag |= Update;
}

function markRef$1(workInProgress) {
  workInProgress.effectTag |= Ref;
}

var appendAllChildren = void 0;
var updateHostContainer = void 0;
var updateHostComponent$1 = void 0;
var updateHostText$1 = void 0;
if (supportsMutation) {
  // Mutation mode

  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      if (node.tag === HostComponent || node.tag === HostText) {
        appendInitialChild(parent, node.stateNode);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // If we have an alternate, that means this is an update and we need to
    // schedule a side-effect to do the updates.
    var oldProps = current.memoizedProps;
    if (oldProps === newProps) {
      // In mutation mode, this is sufficient for a bailout because
      // we won't touch this node even if children changed.
      return;
    }

    // If we get updated because one of our children updated, we don't
    // have newProps so we'll have to reuse them.
    // TODO: Split the update API as separate for the props vs. children.
    // Even better would be if children weren't special cased at all tho.
    var instance = workInProgress.stateNode;
    var currentHostContext = getHostContext();
    // TODO: Experiencing an error where oldProps is null. Suggests a host
    // component is hitting the resume path. Figure out why. Possibly
    // related to `hidden`.
    var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
    // TODO: Type this specific to this type of component.
    workInProgress.updateQueue = updatePayload;
    // If the update payload indicates that there is a change or if there
    // is a new ref we mark this as an update. All the work is done in commitWork.
    if (updatePayload) {
      markUpdate(workInProgress);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // If the text differs, mark it as an update. All the work in done in commitWork.
    if (oldText !== newText) {
      markUpdate(workInProgress);
    }
  };
} else if (supportsPersistence) {
  // Persistent host tree mode

  appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;
        if (needsVisibilityToggle) {
          var props = node.memoizedProps;
          var type = node.type;
          if (isHidden) {
            // This child is inside a timed out tree. Hide it.
            instance = cloneHiddenInstance(instance, type, props, node);
          } else {
            // This child was previously inside a timed out tree. If it was not
            // updated during this render, it may need to be unhidden. Clone
            // again to be sure.
            instance = cloneUnhiddenInstance(instance, type, props, node);
          }
          node.stateNode = instance;
        }
        appendInitialChild(parent, instance);
      } else if (node.tag === HostText) {
        var _instance = node.stateNode;
        if (needsVisibilityToggle) {
          var text = node.memoizedProps;
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          if (isHidden) {
            _instance = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
          } else {
            _instance = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
          }
          node.stateNode = _instance;
        }
        appendInitialChild(parent, _instance);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        var current = node.alternate;
        if (current !== null) {
          var oldState = current.memoizedState;
          var newState = node.memoizedState;
          var oldIsHidden = oldState !== null;
          var newIsHidden = newState !== null;
          if (oldIsHidden !== newIsHidden) {
            // The placeholder either just timed out or switched back to the normal
            // children after having previously timed out. Toggle the visibility of
            // the direct host children.
            var primaryChildParent = newIsHidden ? node.child : node;
            if (primaryChildParent !== null) {
              appendAllChildren(parent, primaryChildParent, true, newIsHidden);
            }
            // eslint-disable-next-line no-labels
            break branches;
          }
        }
        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      // $FlowFixMe This is correct but Flow is confused by the labeled break.
      node = node;
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };

  // An unfortunate fork of appendAllChildren because we have two different parent types.
  var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
    // We only have the top Fiber that was created but we need recurse down its
    // children to find all the terminal nodes.
    var node = workInProgress.child;
    while (node !== null) {
      // eslint-disable-next-line no-labels
      branches: if (node.tag === HostComponent) {
        var instance = node.stateNode;
        if (needsVisibilityToggle) {
          var props = node.memoizedProps;
          var type = node.type;
          if (isHidden) {
            // This child is inside a timed out tree. Hide it.
            instance = cloneHiddenInstance(instance, type, props, node);
          } else {
            // This child was previously inside a timed out tree. If it was not
            // updated during this render, it may need to be unhidden. Clone
            // again to be sure.
            instance = cloneUnhiddenInstance(instance, type, props, node);
          }
          node.stateNode = instance;
        }
        appendChildToContainerChildSet(containerChildSet, instance);
      } else if (node.tag === HostText) {
        var _instance2 = node.stateNode;
        if (needsVisibilityToggle) {
          var text = node.memoizedProps;
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          if (isHidden) {
            _instance2 = createHiddenTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
          } else {
            _instance2 = createTextInstance(text, rootContainerInstance, currentHostContext, workInProgress);
          }
          node.stateNode = _instance2;
        }
        appendChildToContainerChildSet(containerChildSet, _instance2);
      } else if (node.tag === HostPortal) {
        // If we have a portal child, then we don't want to traverse
        // down its children. Instead, we'll get insertions from each child in
        // the portal directly.
      } else if (node.tag === SuspenseComponent) {
        var current = node.alternate;
        if (current !== null) {
          var oldState = current.memoizedState;
          var newState = node.memoizedState;
          var oldIsHidden = oldState !== null;
          var newIsHidden = newState !== null;
          if (oldIsHidden !== newIsHidden) {
            // The placeholder either just timed out or switched back to the normal
            // children after having previously timed out. Toggle the visibility of
            // the direct host children.
            var primaryChildParent = newIsHidden ? node.child : node;
            if (primaryChildParent !== null) {
              appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
            }
            // eslint-disable-next-line no-labels
            break branches;
          }
        }
        if (node.child !== null) {
          // Continue traversing like normal
          node.child.return = node;
          node = node.child;
          continue;
        }
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      // $FlowFixMe This is correct but Flow is confused by the labeled break.
      node = node;
      if (node === workInProgress) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === workInProgress) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  };
  updateHostContainer = function (workInProgress) {
    var portalOrRoot = workInProgress.stateNode;
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged) {
      // No changes, just reuse the existing instance.
    } else {
      var container = portalOrRoot.containerInfo;
      var newChildSet = createContainerChildSet(container);
      // If children might have changed, we have to add them all to the set.
      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
      portalOrRoot.pendingChildren = newChildSet;
      // Schedule an update on the container to swap out the container.
      markUpdate(workInProgress);
      finalizeContainerChildren(container, newChildSet);
    }
  };
  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    var currentInstance = current.stateNode;
    var oldProps = current.memoizedProps;
    // If there are no effects associated with this node, then none of our children had any updates.
    // This guarantees that we can reuse all of them.
    var childrenUnchanged = workInProgress.firstEffect === null;
    if (childrenUnchanged && oldProps === newProps) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }
    var recyclableInstance = workInProgress.stateNode;
    var currentHostContext = getHostContext();
    var updatePayload = null;
    if (oldProps !== newProps) {
      updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
    }
    if (childrenUnchanged && updatePayload === null) {
      // No changes, just reuse the existing instance.
      // Note that this might release a previous clone.
      workInProgress.stateNode = currentInstance;
      return;
    }
    var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);
    if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
      markUpdate(workInProgress);
    }
    workInProgress.stateNode = newInstance;
    if (childrenUnchanged) {
      // If there are no other effects in this tree, we need to flag this node as having one.
      // Even though we're not going to use it for anything.
      // Otherwise parents won't know that there are new children to propagate upwards.
      markUpdate(workInProgress);
    } else {
      // If children might have changed, we have to add them all to the set.
      appendAllChildren(newInstance, workInProgress, false, false);
    }
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    if (oldText !== newText) {
      // If the text content differs, we'll create a new text instance for it.
      var rootContainerInstance = getRootHostContainer();
      var currentHostContext = getHostContext();
      workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress);
      // We'll have to mark it as having an effect, even though we won't use the effect for anything.
      // This lets the parents know that at least one of their children has changed.
      markUpdate(workInProgress);
    }
  };
} else {
  // No host operations
  updateHostContainer = function (workInProgress) {
    // Noop
  };
  updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
    // Noop
  };
  updateHostText$1 = function (current, workInProgress, oldText, newText) {
    // Noop
  };
}

function completeWork(current, workInProgress, renderExpirationTime) {
  var newProps = workInProgress.pendingProps;

  switch (workInProgress.tag) {
    case IndeterminateComponent:
      break;
    case LazyComponent:
      break;
    case SimpleMemoComponent:
    case FunctionComponent:
      break;
    case ClassComponent:
      {
        var Component = workInProgress.type;
        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }
        break;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var fiberRoot = workInProgress.stateNode;
        if (fiberRoot.pendingContext) {
          fiberRoot.context = fiberRoot.pendingContext;
          fiberRoot.pendingContext = null;
        }
        if (current === null || current.child === null) {
          // If we hydrated, pop so that we can delete any remaining children
          // that weren't hydrated.
          popHydrationState(workInProgress);
          // This resets the hacky state to fix isMounted before committing.
          // TODO: Delete this when we delete isMounted and findDOMNode.
          workInProgress.effectTag &= ~Placement;
        }
        updateHostContainer(workInProgress);
        break;
      }
    case HostComponent:
      {
        popHostContext(workInProgress);
        var rootContainerInstance = getRootHostContainer();
        var type = workInProgress.type;
        if (current !== null && workInProgress.stateNode != null) {
          updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

          if (current.ref !== workInProgress.ref) {
            markRef$1(workInProgress);
          }
        } else {
          if (!newProps) {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
            break;
          }

          var currentHostContext = getHostContext();
          // TODO: Move createInstance to beginWork and keep it on a context
          // "stack" as the parent. Then append children as we go in beginWork
          // or completeWork depending on we want to add then top->down or
          // bottom->up. Top->down is faster in IE11.
          var wasHydrated = popHydrationState(workInProgress);
          if (wasHydrated) {
            // TODO: Move this and createInstance step into the beginPhase
            // to consolidate.
            if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
              // If changes to the hydrated node needs to be applied at the
              // commit-phase we mark this as such.
              markUpdate(workInProgress);
            }
          } else {
            var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);

            appendAllChildren(instance, workInProgress, false, false);

            // Certain renderers require commit-time effects for initial mount.
            // (eg DOM renderer supports auto-focus for certain elements).
            // Make sure such renderers get scheduled for later work.
            if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
              markUpdate(workInProgress);
            }
            workInProgress.stateNode = instance;
          }

          if (workInProgress.ref !== null) {
            // If there is a ref on a host node we need to schedule a callback
            markRef$1(workInProgress);
          }
        }
        break;
      }
    case HostText:
      {
        var newText = newProps;
        if (current && workInProgress.stateNode != null) {
          var oldText = current.memoizedProps;
          // If we have an alternate, that means this is an update and we need
          // to schedule a side-effect to do the updates.
          updateHostText$1(current, workInProgress, oldText, newText);
        } else {
          if (typeof newText !== 'string') {
            !(workInProgress.stateNode !== null) ? invariant(false, 'We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.') : void 0;
            // This can happen when we abort work.
          }
          var _rootContainerInstance = getRootHostContainer();
          var _currentHostContext = getHostContext();
          var _wasHydrated = popHydrationState(workInProgress);
          if (_wasHydrated) {
            if (prepareToHydrateHostTextInstance(workInProgress)) {
              markUpdate(workInProgress);
            }
          } else {
            workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
          }
        }
        break;
      }
    case ForwardRef:
      break;
    case SuspenseComponent:
      {
        var nextState = workInProgress.memoizedState;
        if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
          // Something suspended. Re-render with the fallback children.
          workInProgress.expirationTime = renderExpirationTime;
          // Do not reset the effect list.
          return workInProgress;
        }

        var nextDidTimeout = nextState !== null;
        var prevDidTimeout = current !== null && current.memoizedState !== null;

        if (current !== null && !nextDidTimeout && prevDidTimeout) {
          // We just switched from the fallback to the normal children. Delete
          // the fallback.
          // TODO: Would it be better to store the fallback fragment on
          var currentFallbackChild = current.child.sibling;
          if (currentFallbackChild !== null) {
            // Deletions go at the beginning of the return fiber's effect list
            var first = workInProgress.firstEffect;
            if (first !== null) {
              workInProgress.firstEffect = currentFallbackChild;
              currentFallbackChild.nextEffect = first;
            } else {
              workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
              currentFallbackChild.nextEffect = null;
            }
            currentFallbackChild.effectTag = Deletion;
          }
        }

        if (nextDidTimeout || prevDidTimeout) {
          // If the children are hidden, or if they were previous hidden, schedule
          // an effect to toggle their visibility. This is also used to attach a
          // retry listener to the promise.
          workInProgress.effectTag |= Update;
        }
        break;
      }
    case Fragment:
      break;
    case Mode:
      break;
    case Profiler:
      break;
    case HostPortal:
      popHostContainer(workInProgress);
      updateHostContainer(workInProgress);
      break;
    case ContextProvider:
      // Pop provider fiber
      popProvider(workInProgress);
      break;
    case ContextConsumer:
      break;
    case MemoComponent:
      break;
    case IncompleteClassComponent:
      {
        // Same as class component case. I put it down here so that the tags are
        // sequential to ensure this switch is compiled to a jump table.
        var _Component = workInProgress.type;
        if (isContextProvider(_Component)) {
          popContext(workInProgress);
        }
        break;
      }
    case DehydratedSuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          if (current === null) {
            var _wasHydrated2 = popHydrationState(workInProgress);
            !_wasHydrated2 ? invariant(false, 'A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.') : void 0;
            skipPastDehydratedSuspenseInstance(workInProgress);
          } else if ((workInProgress.effectTag & DidCapture) === NoEffect) {
            // This boundary did not suspend so it's now hydrated.
            // To handle any future suspense cases, we're going to now upgrade it
            // to a Suspense component. We detach it from the existing current fiber.
            current.alternate = null;
            workInProgress.alternate = null;
            workInProgress.tag = SuspenseComponent;
            workInProgress.memoizedState = null;
            workInProgress.stateNode = null;
          }
        }
        break;
      }
    default:
      invariant(false, 'Unknown unit of work tag. This error is likely caused by a bug in React. Please file an issue.');
  }

  return null;
}

function shouldCaptureSuspense(workInProgress) {
  // In order to capture, the Suspense component must have a fallback prop.
  if (workInProgress.memoizedProps.fallback === undefined) {
    return false;
  }
  // If it was the primary children that just suspended, capture and render the
  // fallback. Otherwise, don't capture and bubble to the next boundary.
  var nextState = workInProgress.memoizedState;
  return nextState === null;
}

// This module is forked in different environments.
// By default, return `true` to log errors to the console.
// Forks can return `false` if this isn't desirable.
function showErrorDialog(capturedError) {
  return true;
}

function logCapturedError(capturedError) {
  var logError = showErrorDialog(capturedError);

  // Allow injected showErrorDialog() to prevent default console.error logging.
  // This enables renderers like ReactNative to better manage redbox behavior.
  if (logError === false) {
    return;
  }

  var error = capturedError.error;
  {
    var componentName = capturedError.componentName,
        componentStack = capturedError.componentStack,
        errorBoundaryName = capturedError.errorBoundaryName,
        errorBoundaryFound = capturedError.errorBoundaryFound,
        willRetry = capturedError.willRetry;

    // Browsers support silencing uncaught errors by calling
    // `preventDefault()` in window `error` handler.
    // We record this information as an expando on the error.

    if (error != null && error._suppressLogging) {
      if (errorBoundaryFound && willRetry) {
        // The error is recoverable and was silenced.
        // Ignore it and don't print the stack addendum.
        // This is handy for testing error boundaries without noise.
        return;
      }
      // The error is fatal. Since the silencing might have
      // been accidental, we'll surface it anyway.
      // However, the browser would have silenced the original error
      // so we'll print it first, and then print the stack addendum.
      console.error(error);
      // For a more detailed description of this block, see:
      // https://github.com/facebook/react/pull/13384
    }

    var componentNameMessage = componentName ? 'The above error occurred in the <' + componentName + '> component:' : 'The above error occurred in one of your React components:';

    var errorBoundaryMessage = void 0;
    // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.
    if (errorBoundaryFound && errorBoundaryName) {
      if (willRetry) {
        errorBoundaryMessage = 'React will try to recreate this component tree from scratch ' + ('using the error boundary you provided, ' + errorBoundaryName + '.');
      } else {
        errorBoundaryMessage = 'This error was initially handled by the error boundary ' + errorBoundaryName + '.\n' + 'Recreating the tree from scratch failed so React will unmount the tree.';
      }
    } else {
      errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
    }
    var combinedMessage = '' + componentNameMessage + componentStack + '\n\n' + ('' + errorBoundaryMessage);

    // In development, we provide our own message with just the component stack.
    // We don't include the original error message and JS stack because the browser
    // has already printed it. Even if the application swallows the error, it is still
    // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.
    console.error(combinedMessage);
  }
}

var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
{
  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
}

var PossiblyWeakSet$1 = typeof WeakSet === 'function' ? WeakSet : Set;

function logError(boundary, errorInfo) {
  var source = errorInfo.source;
  var stack = errorInfo.stack;
  if (stack === null && source !== null) {
    stack = getStackByFiberInDevAndProd(source);
  }

  var capturedError = {
    componentName: source !== null ? getComponentName(source.type) : null,
    componentStack: stack !== null ? stack : '',
    error: errorInfo.value,
    errorBoundary: null,
    errorBoundaryName: null,
    errorBoundaryFound: false,
    willRetry: false
  };

  if (boundary !== null && boundary.tag === ClassComponent) {
    capturedError.errorBoundary = boundary.stateNode;
    capturedError.errorBoundaryName = getComponentName(boundary.type);
    capturedError.errorBoundaryFound = true;
    capturedError.willRetry = true;
  }

  try {
    logCapturedError(capturedError);
  } catch (e) {
    // This method must not throw, or React internal state will get messed up.
    // If console.error is overridden, or logCapturedError() shows a dialog that throws,
    // we want to report this error outside of the normal stack as a last resort.
    // https://github.com/facebook/react/issues/13188
    setTimeout(function () {
      throw e;
    });
  }
}

var callComponentWillUnmountWithTimer = function (current$$1, instance) {
  startPhaseTimer(current$$1, 'componentWillUnmount');
  instance.props = current$$1.memoizedProps;
  instance.state = current$$1.memoizedState;
  instance.componentWillUnmount();
  stopPhaseTimer();
};

// Capture errors so they don't interrupt unmounting.
function safelyCallComponentWillUnmount(current$$1, instance) {
  {
    invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);
    if (hasCaughtError()) {
      var unmountError = clearCaughtError();
      captureCommitPhaseError(current$$1, unmountError);
    }
  }
}

function safelyDetachRef(current$$1) {
  var ref = current$$1.ref;
  if (ref !== null) {
    if (typeof ref === 'function') {
      {
        invokeGuardedCallback(null, ref, null, null);
        if (hasCaughtError()) {
          var refError = clearCaughtError();
          captureCommitPhaseError(current$$1, refError);
        }
      }
    } else {
      ref.current = null;
    }
  }
}

function safelyCallDestroy(current$$1, destroy) {
  {
    invokeGuardedCallback(null, destroy, null);
    if (hasCaughtError()) {
      var error = clearCaughtError();
      captureCommitPhaseError(current$$1, error);
    }
  }
}

function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
        return;
      }
    case ClassComponent:
      {
        if (finishedWork.effectTag & Snapshot) {
          if (current$$1 !== null) {
            var prevProps = current$$1.memoizedProps;
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
            var instance = finishedWork.stateNode;
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }
            var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
            {
              var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
              if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                didWarnSet.add(finishedWork.type);
                warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
              }
            }
            instance.__reactInternalSnapshotBeforeUpdate = snapshot;
            stopPhaseTimer();
          }
        }
        return;
      }
    case HostRoot:
    case HostComponent:
    case HostText:
    case HostPortal:
    case IncompleteClassComponent:
      // Nothing to do for these component types
      return;
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitHookEffectList(unmountTag, mountTag, finishedWork) {
  var updateQueue = finishedWork.updateQueue;
  var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
  if (lastEffect !== null) {
    var firstEffect = lastEffect.next;
    var effect = firstEffect;
    do {
      if ((effect.tag & unmountTag) !== NoEffect$1) {
        // Unmount
        var destroy = effect.destroy;
        effect.destroy = undefined;
        if (destroy !== undefined) {
          destroy();
        }
      }
      if ((effect.tag & mountTag) !== NoEffect$1) {
        // Mount
        var create = effect.create;
        effect.destroy = create();

        {
          var _destroy = effect.destroy;
          if (_destroy !== undefined && typeof _destroy !== 'function') {
            var addendum = void 0;
            if (_destroy === null) {
              addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
            } else if (typeof _destroy.then === 'function') {
              addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + '}, [someId]); // Or [] if effect doesn\'t need props or state\n\n' + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
            } else {
              addendum = ' You returned: ' + _destroy;
            }
            warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
          }
        }
      }
      effect = effect.next;
    } while (effect !== firstEffect);
  }
}

function commitPassiveHookEffects(finishedWork) {
  commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
  commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
}

function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case SimpleMemoComponent:
      {
        commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
        break;
      }
    case ClassComponent:
      {
        var instance = finishedWork.stateNode;
        if (finishedWork.effectTag & Update) {
          if (current$$1 === null) {
            startPhaseTimer(finishedWork, 'componentDidMount');
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }
            instance.componentDidMount();
            stopPhaseTimer();
          } else {
            var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
            var prevState = current$$1.memoizedState;
            startPhaseTimer(finishedWork, 'componentDidUpdate');
            // We could update instance props and state here,
            // but instead we rely on them being set during last render.
            // TODO: revisit this when we implement resuming.
            {
              if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              }
            }
            instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
            stopPhaseTimer();
          }
        }
        var updateQueue = finishedWork.updateQueue;
        if (updateQueue !== null) {
          {
            if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
              !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
              !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
            }
          }
          // We could update instance props and state here,
          // but instead we rely on them being set during last render.
          // TODO: revisit this when we implement resuming.
          commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
        }
        return;
      }
    case HostRoot:
      {
        var _updateQueue = finishedWork.updateQueue;
        if (_updateQueue !== null) {
          var _instance = null;
          if (finishedWork.child !== null) {
            switch (finishedWork.child.tag) {
              case HostComponent:
                _instance = getPublicInstance(finishedWork.child.stateNode);
                break;
              case ClassComponent:
                _instance = finishedWork.child.stateNode;
                break;
            }
          }
          commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
        }
        return;
      }
    case HostComponent:
      {
        var _instance2 = finishedWork.stateNode;

        // Renderers may schedule work to be done after host components are mounted
        // (eg DOM renderer may schedule auto-focus for inputs and form controls).
        // These effects should only be committed when components are first mounted,
        // aka when there is no current/alternate.
        if (current$$1 === null && finishedWork.effectTag & Update) {
          var type = finishedWork.type;
          var props = finishedWork.memoizedProps;
          commitMount(_instance2, type, props, finishedWork);
        }

        return;
      }
    case HostText:
      {
        // We have no life-cycles associated with text.
        return;
      }
    case HostPortal:
      {
        // We have no life-cycles associated with portals.
        return;
      }
    case Profiler:
      {
        if (enableProfilerTimer) {
          var onRender = finishedWork.memoizedProps.onRender;

          if (enableSchedulerTracing) {
            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
          } else {
            onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
          }
        }
        return;
      }
    case SuspenseComponent:
      break;
    case IncompleteClassComponent:
      break;
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function hideOrUnhideAllChildren(finishedWork, isHidden) {
  if (supportsMutation) {
    // We only have the top Fiber that was inserted but we need to recurse down its
    var node = finishedWork;
    while (true) {
      if (node.tag === HostComponent) {
        var instance = node.stateNode;
        if (isHidden) {
          hideInstance(instance);
        } else {
          unhideInstance(node.stateNode, node.memoizedProps);
        }
      } else if (node.tag === HostText) {
        var _instance3 = node.stateNode;
        if (isHidden) {
          hideTextInstance(_instance3);
        } else {
          unhideTextInstance(_instance3, node.memoizedProps);
        }
      } else if (node.tag === SuspenseComponent && node.memoizedState !== null) {
        // Found a nested Suspense component that timed out. Skip over the
        var fallbackChildFragment = node.child.sibling;
        fallbackChildFragment.return = node;
        node = fallbackChildFragment;
        continue;
      } else if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
      if (node === finishedWork) {
        return;
      }
      while (node.sibling === null) {
        if (node.return === null || node.return === finishedWork) {
          return;
        }
        node = node.return;
      }
      node.sibling.return = node.return;
      node = node.sibling;
    }
  }
}

function commitAttachRef(finishedWork) {
  var ref = finishedWork.ref;
  if (ref !== null) {
    var instance = finishedWork.stateNode;
    var instanceToUse = void 0;
    switch (finishedWork.tag) {
      case HostComponent:
        instanceToUse = getPublicInstance(instance);
        break;
      default:
        instanceToUse = instance;
    }
    if (typeof ref === 'function') {
      ref(instanceToUse);
    } else {
      {
        if (!ref.hasOwnProperty('current')) {
          warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
        }
      }

      ref.current = instanceToUse;
    }
  }
}

function commitDetachRef(current$$1) {
  var currentRef = current$$1.ref;
  if (currentRef !== null) {
    if (typeof currentRef === 'function') {
      currentRef(null);
    } else {
      currentRef.current = null;
    }
  }
}

// User-originating errors (lifecycles and refs) should not interrupt
// deletion, so don't let them throw. Host-originating errors should
// interrupt deletion, so it's okay
function commitUnmount(current$$1) {
  onCommitUnmount(current$$1);

  switch (current$$1.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        var updateQueue = current$$1.updateQueue;
        if (updateQueue !== null) {
          var lastEffect = updateQueue.lastEffect;
          if (lastEffect !== null) {
            var firstEffect = lastEffect.next;
            var effect = firstEffect;
            do {
              var destroy = effect.destroy;
              if (destroy !== undefined) {
                safelyCallDestroy(current$$1, destroy);
              }
              effect = effect.next;
            } while (effect !== firstEffect);
          }
        }
        break;
      }
    case ClassComponent:
      {
        safelyDetachRef(current$$1);
        var instance = current$$1.stateNode;
        if (typeof instance.componentWillUnmount === 'function') {
          safelyCallComponentWillUnmount(current$$1, instance);
        }
        return;
      }
    case HostComponent:
      {
        safelyDetachRef(current$$1);
        return;
      }
    case HostPortal:
      {
        // TODO: this is recursive.
        // We are also not using this parent because
        // the portal will get pushed immediately.
        if (supportsMutation) {
          unmountHostComponents(current$$1);
        } else if (supportsPersistence) {
          emptyPortalContainer(current$$1);
        }
        return;
      }
  }
}

function commitNestedUnmounts(root) {
  // While we're inside a removed host node we don't want to call
  // removeChild on the inner nodes because they're removed by the top
  // call anyway. We also want to call componentWillUnmount on all
  // composites before this host node is removed from the tree. Therefore
  var node = root;
  while (true) {
    commitUnmount(node);
    // Visit children because they may contain more composite or host nodes.
    // Skip portals because commitUnmount() currently visits them recursively.
    if (node.child !== null && (
    // If we use mutation we drill down into portals using commitUnmount above.
    // If we don't use mutation we drill down into portals here instead.
    !supportsMutation || node.tag !== HostPortal)) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === root) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === root) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function detachFiber(current$$1) {
  // Cut off the return pointers to disconnect it from the tree. Ideally, we
  // should clear the child pointer of the parent alternate to let this
  // get GC:ed but we don't know which for sure which parent is the current
  // one so we'll settle for GC:ing the subtree of this child. This child
  // itself will be GC:ed when the parent updates the next time.
  current$$1.return = null;
  current$$1.child = null;
  current$$1.memoizedState = null;
  current$$1.updateQueue = null;
  var alternate = current$$1.alternate;
  if (alternate !== null) {
    alternate.return = null;
    alternate.child = null;
    alternate.memoizedState = null;
    alternate.updateQueue = null;
  }
}

function emptyPortalContainer(current$$1) {
  if (!supportsPersistence) {
    return;
  }

  var portal = current$$1.stateNode;
  var containerInfo = portal.containerInfo;

  var emptyChildSet = createContainerChildSet(containerInfo);
  replaceContainerChildren(containerInfo, emptyChildSet);
}

function commitContainer(finishedWork) {
  if (!supportsPersistence) {
    return;
  }

  switch (finishedWork.tag) {
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        return;
      }
    case HostText:
      {
        return;
      }
    case HostRoot:
    case HostPortal:
      {
        var portalOrRoot = finishedWork.stateNode;
        var containerInfo = portalOrRoot.containerInfo,
            _pendingChildren = portalOrRoot.pendingChildren;

        replaceContainerChildren(containerInfo, _pendingChildren);
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function getHostParentFiber(fiber) {
  var parent = fiber.return;
  while (parent !== null) {
    if (isHostParent(parent)) {
      return parent;
    }
    parent = parent.return;
  }
  invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.');
}

function isHostParent(fiber) {
  return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
}

function getHostSibling(fiber) {
  // We're going to search forward into the tree until we find a sibling host
  // node. Unfortunately, if multiple insertions are done in a row we have to
  // search past them. This leads to exponential search for the next sibling.
  var node = fiber;
  siblings: while (true) {
    // If we didn't find anything, let's try the next sibling.
    while (node.sibling === null) {
      if (node.return === null || isHostParent(node.return)) {
        // If we pop out of the root or hit the parent the fiber we are the
        // last sibling.
        return null;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedSuspenseComponent) {
      // If it is not host node and, we might have a host node inside it.
      // Try to search down until we find one.
      if (node.effectTag & Placement) {
        // If we don't have a child, try the siblings instead.
        continue siblings;
      }
      // If we don't have a child, try the siblings instead.
      // We also skip portals because they are not part of this host tree.
      if (node.child === null || node.tag === HostPortal) {
        continue siblings;
      } else {
        node.child.return = node;
        node = node.child;
      }
    }
    // Check if this host node is stable or about to be placed.
    if (!(node.effectTag & Placement)) {
      // Found it!
      return node.stateNode;
    }
  }
}

function commitPlacement(finishedWork) {
  if (!supportsMutation) {
    return;
  }

  // Recursively insert all host nodes into the parent.
  var parentFiber = getHostParentFiber(finishedWork);

  // Note: these two variables *must* always be updated together.
  var parent = void 0;
  var isContainer = void 0;

  switch (parentFiber.tag) {
    case HostComponent:
      parent = parentFiber.stateNode;
      isContainer = false;
      break;
    case HostRoot:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    case HostPortal:
      parent = parentFiber.stateNode.containerInfo;
      isContainer = true;
      break;
    default:
      invariant(false, 'Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.');
  }
  if (parentFiber.effectTag & ContentReset) {
    // Reset the text content of the parent before doing any insertions
    resetTextContent(parent);
    // Clear ContentReset from the effect tag
    parentFiber.effectTag &= ~ContentReset;
  }

  var before = getHostSibling(finishedWork);
  // We only have the top Fiber that was inserted but we need to recurse down its
  // children to find all the terminal nodes.
  var node = finishedWork;
  while (true) {
    if (node.tag === HostComponent || node.tag === HostText) {
      if (before) {
        if (isContainer) {
          insertInContainerBefore(parent, node.stateNode, before);
        } else {
          insertBefore(parent, node.stateNode, before);
        }
      } else {
        if (isContainer) {
          appendChildToContainer(parent, node.stateNode);
        } else {
          appendChild(parent, node.stateNode);
        }
      }
    } else if (node.tag === HostPortal) {
      // If the insertion itself is a portal, then we don't want to traverse
      // down its children. Instead, we'll get insertions from each child in
      // the portal directly.
    } else if (node.child !== null) {
      node.child.return = node;
      node = node.child;
      continue;
    }
    if (node === finishedWork) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === finishedWork) {
        return;
      }
      node = node.return;
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function unmountHostComponents(current$$1) {
  // We only have the top Fiber that was deleted but we need to recurse down its
  var node = current$$1;

  // Each iteration, currentParent is populated with node's host parent if not
  // currentParentIsValid.
  var currentParentIsValid = false;

  // Note: these two variables *must* always be updated together.
  var currentParent = void 0;
  var currentParentIsContainer = void 0;

  while (true) {
    if (!currentParentIsValid) {
      var parent = node.return;
      findParent: while (true) {
        !(parent !== null) ? invariant(false, 'Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        switch (parent.tag) {
          case HostComponent:
            currentParent = parent.stateNode;
            currentParentIsContainer = false;
            break findParent;
          case HostRoot:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
          case HostPortal:
            currentParent = parent.stateNode.containerInfo;
            currentParentIsContainer = true;
            break findParent;
        }
        parent = parent.return;
      }
      currentParentIsValid = true;
    }

    if (node.tag === HostComponent || node.tag === HostText) {
      commitNestedUnmounts(node);
      // After all the children have unmounted, it is now safe to remove the
      // node from the tree.
      if (currentParentIsContainer) {
        removeChildFromContainer(currentParent, node.stateNode);
      } else {
        removeChild(currentParent, node.stateNode);
      }
      // Don't visit children because we already visited them.
    } else if (enableSuspenseServerRenderer && node.tag === DehydratedSuspenseComponent) {
      // Delete the dehydrated suspense boundary and all of its content.
      if (currentParentIsContainer) {
        clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
      } else {
        clearSuspenseBoundary(currentParent, node.stateNode);
      }
    } else if (node.tag === HostPortal) {
      if (node.child !== null) {
        // When we go into a portal, it becomes the parent to remove from.
        // We will reassign it back when we pop the portal on the way up.
        currentParent = node.stateNode.containerInfo;
        currentParentIsContainer = true;
        // Visit children because portals might contain host components.
        node.child.return = node;
        node = node.child;
        continue;
      }
    } else {
      commitUnmount(node);
      // Visit children because we may find more host components below.
      if (node.child !== null) {
        node.child.return = node;
        node = node.child;
        continue;
      }
    }
    if (node === current$$1) {
      return;
    }
    while (node.sibling === null) {
      if (node.return === null || node.return === current$$1) {
        return;
      }
      node = node.return;
      if (node.tag === HostPortal) {
        // When we go out of the portal, we need to restore the parent.
        // Since we don't keep a stack of them, we will search for it.
        currentParentIsValid = false;
      }
    }
    node.sibling.return = node.return;
    node = node.sibling;
  }
}

function commitDeletion(current$$1) {
  if (supportsMutation) {
    // Recursively delete all host nodes from the parent.
    // Detach refs and call componentWillUnmount() on the whole subtree.
    unmountHostComponents(current$$1);
  } else {
    // Detach refs and call componentWillUnmount() on the whole subtree.
    commitNestedUnmounts(current$$1);
  }
  detachFiber(current$$1);
}

function commitWork(current$$1, finishedWork) {
  if (!supportsMutation) {
    switch (finishedWork.tag) {
      case FunctionComponent:
      case ForwardRef:
      case MemoComponent:
      case SimpleMemoComponent:
        {
          // Note: We currently never use MountMutation, but useLayout uses
          // UnmountMutation.
          commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
          return;
        }
    }

    commitContainer(finishedWork);
    return;
  }

  switch (finishedWork.tag) {
    case FunctionComponent:
    case ForwardRef:
    case MemoComponent:
    case SimpleMemoComponent:
      {
        // Note: We currently never use MountMutation, but useLayout uses
        // UnmountMutation.
        commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
        return;
      }
    case ClassComponent:
      {
        return;
      }
    case HostComponent:
      {
        var instance = finishedWork.stateNode;
        if (instance != null) {
          // Commit the work prepared earlier.
          var newProps = finishedWork.memoizedProps;
          // For hydration we reuse the update path but we treat the oldProps
          // as the newProps. The updatePayload will contain the real change in
          // this case.
          var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
          var type = finishedWork.type;
          // TODO: Type the updateQueue to be specific to host components.
          var updatePayload = finishedWork.updateQueue;
          finishedWork.updateQueue = null;
          if (updatePayload !== null) {
            commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
          }
        }
        return;
      }
    case HostText:
      {
        !(finishedWork.stateNode !== null) ? invariant(false, 'This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        var textInstance = finishedWork.stateNode;
        var newText = finishedWork.memoizedProps;
        // For hydration we reuse the update path but we treat the oldProps
        // as the newProps. The updatePayload will contain the real change in
        // this case.
        var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
        commitTextUpdate(textInstance, oldText, newText);
        return;
      }
    case HostRoot:
      {
        return;
      }
    case Profiler:
      {
        return;
      }
    case SuspenseComponent:
      {
        var newState = finishedWork.memoizedState;

        var newDidTimeout = void 0;
        var primaryChildParent = finishedWork;
        if (newState === null) {
          newDidTimeout = false;
        } else {
          newDidTimeout = true;
          primaryChildParent = finishedWork.child;
          if (newState.timedOutAt === NoWork) {
            // If the children had not already timed out, record the time.
            // This is used to compute the elapsed time during subsequent
            // attempts to render the children.
            newState.timedOutAt = requestCurrentTime();
          }
        }

        if (primaryChildParent !== null) {
          hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
        }

        // If this boundary just timed out, then it will have a set of thenables.
        // For each thenable, attach a listener so that when it resolves, React
        // attempts to re-render the boundary in the primary (pre-timeout) state.
        var thenables = finishedWork.updateQueue;
        if (thenables !== null) {
          finishedWork.updateQueue = null;
          var retryCache = finishedWork.stateNode;
          if (retryCache === null) {
            retryCache = finishedWork.stateNode = new PossiblyWeakSet$1();
          }
          thenables.forEach(function (thenable) {
            // Memoize using the boundary fiber to prevent redundant listeners.
            var retry = retryTimedOutBoundary.bind(null, finishedWork, thenable);
            if (enableSchedulerTracing) {
              retry = tracing.unstable_wrap(retry);
            }
            if (!retryCache.has(thenable)) {
              retryCache.add(thenable);
              thenable.then(retry, retry);
            }
          });
        }

        return;
      }
    case IncompleteClassComponent:
      {
        return;
      }
    default:
      {
        invariant(false, 'This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.');
      }
  }
}

function commitResetTextContent(current$$1) {
  if (!supportsMutation) {
    return;
  }
  resetTextContent(current$$1.stateNode);
}

var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;
var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;

function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  // Unmount the root by rendering null.
  update.tag = CaptureUpdate;
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: null };
  var error = errorInfo.value;
  update.callback = function () {
    onUncaughtError(error);
    logError(fiber, errorInfo);
  };
  return update;
}

function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
  var update = createUpdate(expirationTime);
  update.tag = CaptureUpdate;
  var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
  if (typeof getDerivedStateFromError === 'function') {
    var error = errorInfo.value;
    update.payload = function () {
      return getDerivedStateFromError(error);
    };
  }

  var inst = fiber.stateNode;
  if (inst !== null && typeof inst.componentDidCatch === 'function') {
    update.callback = function callback() {
      if (typeof getDerivedStateFromError !== 'function') {
        // To preserve the preexisting retry behavior of error boundaries,
        // we keep track of which ones already failed during this batch.
        // This gets reset before we yield back to the browser.
        // TODO: Warn in strict mode if getDerivedStateFromError is
        // not defined.
        markLegacyErrorBoundaryAsFailed(this);
      }
      var error = errorInfo.value;
      var stack = errorInfo.stack;
      logError(fiber, errorInfo);
      this.componentDidCatch(error, {
        componentStack: stack !== null ? stack : ''
      });
      {
        if (typeof getDerivedStateFromError !== 'function') {
          // If componentDidCatch is the only error boundary method defined,
          // then it needs to call setState to recover from errors.
          // If no state update is scheduled then the boundary will swallow the error.
          !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
        }
      }
    };
  }
  return update;
}

function attachPingListener(root, renderExpirationTime, thenable) {
  // Attach a listener to the promise to "ping" the root and retry. But
  // only if one does not already exist for the current render expiration
  // time (which acts like a "thread ID" here).
  var pingCache = root.pingCache;
  var threadIDs = void 0;
  if (pingCache === null) {
    pingCache = root.pingCache = new PossiblyWeakMap();
    threadIDs = new Set();
    pingCache.set(thenable, threadIDs);
  } else {
    threadIDs = pingCache.get(thenable);
    if (threadIDs === undefined) {
      threadIDs = new Set();
      pingCache.set(thenable, threadIDs);
    }
  }
  if (!threadIDs.has(renderExpirationTime)) {
    // Memoize using the thread ID to prevent redundant listeners.
    threadIDs.add(renderExpirationTime);
    var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
    if (enableSchedulerTracing) {
      ping = tracing.unstable_wrap(ping);
    }
    thenable.then(ping, ping);
  }
}

function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
  // The source fiber did not complete.
  sourceFiber.effectTag |= Incomplete;
  // Its effect list is no longer valid.
  sourceFiber.firstEffect = sourceFiber.lastEffect = null;

  if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
    // This is a thenable.
    var thenable = value;

    // Find the earliest timeout threshold of all the placeholders in the
    // ancestor path. We could avoid this traversal by storing the thresholds on
    // the stack, but we choose not to because we only hit this path if we're
    // IO-bound (i.e. if something suspends). Whereas the stack is used even in
    // the non-IO- bound case.
    var _workInProgress = returnFiber;
    var earliestTimeoutMs = -1;
    var startTimeMs = -1;
    do {
      if (_workInProgress.tag === SuspenseComponent) {
        var current$$1 = _workInProgress.alternate;
        if (current$$1 !== null) {
          var currentState = current$$1.memoizedState;
          if (currentState !== null) {
            // Reached a boundary that already timed out. Do not search
            // any further.
            var timedOutAt = currentState.timedOutAt;
            startTimeMs = expirationTimeToMs(timedOutAt);
            // Do not search any further.
            break;
          }
        }
        var timeoutPropMs = _workInProgress.pendingProps.maxDuration;
        if (typeof timeoutPropMs === 'number') {
          if (timeoutPropMs <= 0) {
            earliestTimeoutMs = 0;
          } else if (earliestTimeoutMs === -1 || timeoutPropMs < earliestTimeoutMs) {
            earliestTimeoutMs = timeoutPropMs;
          }
        }
      }
      // If there is a DehydratedSuspenseComponent we don't have to do anything because
      // if something suspends inside it, we will simply leave that as dehydrated. It
      // will never timeout.
      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null);

    // Schedule the nearest Suspense to re-render the timed out view.
    _workInProgress = returnFiber;
    do {
      if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress)) {
        // Found the nearest boundary.

        // Stash the promise on the boundary fiber. If the boundary times out, we'll
        var thenables = _workInProgress.updateQueue;
        if (thenables === null) {
          var updateQueue = new Set();
          updateQueue.add(thenable);
          _workInProgress.updateQueue = updateQueue;
        } else {
          thenables.add(thenable);
        }

        // If the boundary is outside of concurrent mode, we should *not*
        // suspend the commit. Pretend as if the suspended component rendered
        // null and keep rendering. In the commit phase, we'll schedule a
        // subsequent synchronous update to re-render the Suspense.
        //
        // Note: It doesn't matter whether the component that suspended was
        // inside a concurrent mode tree. If the Suspense is outside of it, we
        // should *not* suspend the commit.
        if ((_workInProgress.mode & ConcurrentMode) === NoEffect) {
          _workInProgress.effectTag |= DidCapture;

          // We're going to commit this fiber even though it didn't complete.
          // But we shouldn't call any lifecycle methods or callbacks. Remove
          // all lifecycle effect tags.
          sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

          if (sourceFiber.tag === ClassComponent) {
            var currentSourceFiber = sourceFiber.alternate;
            if (currentSourceFiber === null) {
              // This is a new mount. Change the tag so it's not mistaken for a
              // completed class component. For example, we should not call
              // componentWillUnmount if it is deleted.
              sourceFiber.tag = IncompleteClassComponent;
            } else {
              // When we try rendering again, we should not reuse the current fiber,
              // since it's known to be in an inconsistent state. Use a force updte to
              // prevent a bail out.
              var update = createUpdate(Sync);
              update.tag = ForceUpdate;
              enqueueUpdate(sourceFiber, update);
            }
          }

          // The source fiber did not complete. Mark it with Sync priority to
          // indicate that it still has pending work.
          sourceFiber.expirationTime = Sync;

          // Exit without suspending.
          return;
        }

        // Confirmed that the boundary is in a concurrent mode tree. Continue
        // with the normal suspend path.

        attachPingListener(root, renderExpirationTime, thenable);

        var absoluteTimeoutMs = void 0;
        if (earliestTimeoutMs === -1) {
          // If no explicit threshold is given, default to an arbitrarily large
          // value. The actual size doesn't matter because the threshold for the
          // whole tree will be clamped to the expiration time.
          absoluteTimeoutMs = maxSigned31BitInt;
        } else {
          if (startTimeMs === -1) {
            // This suspend happened outside of any already timed-out
            // placeholders. We don't know exactly when the update was
            // scheduled, but we can infer an approximate start time from the
            // expiration time. First, find the earliest uncommitted expiration
            // time in the tree, including work that is suspended. Then subtract
            // the offset used to compute an async update's expiration time.
            // This will cause high priority (interactive) work to expire
            // earlier than necessary, but we can account for this by adjusting
            // for the Just Noticeable Difference.
            var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, renderExpirationTime);
            var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
            startTimeMs = earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
          }
          absoluteTimeoutMs = startTimeMs + earliestTimeoutMs;
        }

        // Mark the earliest timeout in the suspended fiber's ancestor path.
        // After completing the root, we'll take the largest of all the
        // suspended fiber's timeouts and use it to compute a timeout for the
        // whole tree.
        renderDidSuspend(root, absoluteTimeoutMs, renderExpirationTime);

        _workInProgress.effectTag |= ShouldCapture;
        _workInProgress.expirationTime = renderExpirationTime;
        return;
      } else if (enableSuspenseServerRenderer && _workInProgress.tag === DehydratedSuspenseComponent) {
        attachPingListener(root, renderExpirationTime, thenable);

        // Since we already have a current fiber, we can eagerly add a retry listener.
        var retryCache = _workInProgress.memoizedState;
        if (retryCache === null) {
          retryCache = _workInProgress.memoizedState = new PossiblyWeakSet();
          var _current = _workInProgress.alternate;
          !_current ? invariant(false, 'A dehydrated suspense boundary must commit before trying to render. This is probably a bug in React.') : void 0;
          _current.memoizedState = retryCache;
        }
        // Memoize using the boundary fiber to prevent redundant listeners.
        if (!retryCache.has(thenable)) {
          retryCache.add(thenable);
          var retry = retryTimedOutBoundary.bind(null, _workInProgress, thenable);
          if (enableSchedulerTracing) {
            retry = tracing.unstable_wrap(retry);
          }
          thenable.then(retry, retry);
        }
        _workInProgress.effectTag |= ShouldCapture;
        _workInProgress.expirationTime = renderExpirationTime;
        return;
      }
      // This boundary already captured during this render. Continue to the next
      // boundary.
      _workInProgress = _workInProgress.return;
    } while (_workInProgress !== null);
    // No boundary was found. Fallthrough to error mode.
    // TODO: Use invariant so the message is stripped in prod?
    value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
  }

  // We didn't find a boundary that could handle this type of exception. Start
  // over and traverse parent path again, this time treating the exception
  // as an error.
  renderDidError();
  value = createCapturedValue(value, sourceFiber);
  var workInProgress = returnFiber;
  do {
    switch (workInProgress.tag) {
      case HostRoot:
        {
          var _errorInfo = value;
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime;
          var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update);
          return;
        }
      case ClassComponent:
        // Capture and retry
        var errorInfo = value;
        var ctor = workInProgress.type;
        var instance = workInProgress.stateNode;
        if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
          workInProgress.effectTag |= ShouldCapture;
          workInProgress.expirationTime = renderExpirationTime;
          // Schedule the error boundary to re-render using updated state
          var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);
          enqueueCapturedUpdate(workInProgress, _update2);
          return;
        }
        break;
      default:
        break;
    }
    workInProgress = workInProgress.return;
  } while (workInProgress !== null);
}

function unwindWork(workInProgress, renderExpirationTime) {
  switch (workInProgress.tag) {
    case ClassComponent:
      {
        var Component = workInProgress.type;
        if (isContextProvider(Component)) {
          popContext(workInProgress);
        }
        var effectTag = workInProgress.effectTag;
        if (effectTag & ShouldCapture) {
          workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
          return workInProgress;
        }
        return null;
      }
    case HostRoot:
      {
        popHostContainer(workInProgress);
        popTopLevelContextObject(workInProgress);
        var _effectTag = workInProgress.effectTag;
        !((_effectTag & DidCapture) === NoEffect) ? invariant(false, 'The root failed to unmount after an error. This is likely a bug in React. Please file an issue.') : void 0;
        workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
        return workInProgress;
      }
    case HostComponent:
      {
        // TODO: popHydrationState
        popHostContext(workInProgress);
        return null;
      }
    case SuspenseComponent:
      {
        var _effectTag2 = workInProgress.effectTag;
        if (_effectTag2 & ShouldCapture) {
          workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture;
          // Captured a suspense effect. Re-render the boundary.
          return workInProgress;
        }
        return null;
      }
    case DehydratedSuspenseComponent:
      {
        if (enableSuspenseServerRenderer) {
          // TODO: popHydrationState
          var _effectTag3 = workInProgress.effectTag;
          if (_effectTag3 & ShouldCapture) {
            workInProgress.effectTag = _effectTag3 & ~ShouldCapture | DidCapture;
            // Captured a suspense effect. Re-render the boundary.
            return workInProgress;
          }
        }
        return null;
      }
    case HostPortal:
      popHostContainer(workInProgress);
      return null;
    case ContextProvider:
      popProvider(workInProgress);
      return null;
    default:
      return null;
  }
}

function unwindInterruptedWork(interruptedWork) {
  switch (interruptedWork.tag) {
    case ClassComponent:
      {
        var childContextTypes = interruptedWork.type.childContextTypes;
        if (childContextTypes !== null && childContextTypes !== undefined) {
          popContext(interruptedWork);
        }
        break;
      }
    case HostRoot:
      {
        popHostContainer(interruptedWork);
        popTopLevelContextObject(interruptedWork);
        break;
      }
    case HostComponent:
      {
        popHostContext(interruptedWork);
        break;
      }
    case HostPortal:
      popHostContainer(interruptedWork);
      break;
    case ContextProvider:
      popProvider(interruptedWork);
      break;
    default:
      break;
  }
}

var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;


var didWarnAboutStateTransition = void 0;
var didWarnSetStateChildContext = void 0;
var warnAboutUpdateOnUnmounted = void 0;
var warnAboutInvalidUpdates = void 0;

if (enableSchedulerTracing) {
  // Provide explicit error message when production+profiling bundle of e.g. react-dom
  // is used with production (non-profiling) bundle of scheduler/tracing
  !(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null) ? invariant(false, 'It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling') : void 0;
}

{
  didWarnAboutStateTransition = false;
  didWarnSetStateChildContext = false;
  var didWarnStateUpdateForUnmountedComponent = {};

  warnAboutUpdateOnUnmounted = function (fiber, isClass) {
    // We show the whole stack but dedupe on the top component's name because
    // the problematic code almost always lies inside that component.
    var componentName = getComponentName(fiber.type) || 'ReactComponent';
    if (didWarnStateUpdateForUnmountedComponent[componentName]) {
      return;
    }
    warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', isClass ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
    didWarnStateUpdateForUnmountedComponent[componentName] = true;
  };

  warnAboutInvalidUpdates = function (instance) {
    switch (phase) {
      case 'getChildContext':
        if (didWarnSetStateChildContext) {
          return;
        }
        warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
        didWarnSetStateChildContext = true;
        break;
      case 'render':
        if (didWarnAboutStateTransition) {
          return;
        }
        warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as within ' + '`render`). Render methods should be a pure function of props and state.');
        didWarnAboutStateTransition = true;
        break;
    }
  };
}

// Used to ensure computeUniqueAsyncExpiration is monotonically decreasing.
var lastUniqueAsyncExpiration = Sync - 1;

var isWorking = false;

// The next work in progress fiber that we're currently working on.
var nextUnitOfWork = null;
var nextRoot = null;
// The time at which we're currently rendering work.
var nextRenderExpirationTime = NoWork;
var nextLatestAbsoluteTimeoutMs = -1;
var nextRenderDidError = false;

// The next fiber with an effect that we're currently committing.
var nextEffect = null;

var isCommitting$1 = false;
var rootWithPendingPassiveEffects = null;
var passiveEffectCallbackHandle = null;
var passiveEffectCallback = null;

var legacyErrorBoundariesThatAlreadyFailed = null;

// Used for performance tracking.
var interruptedBy = null;

var stashedWorkInProgressProperties = void 0;
var replayUnitOfWork = void 0;
var mayReplayFailedUnitOfWork = void 0;
var isReplayingFailedUnitOfWork = void 0;
var originalReplayError = void 0;
var rethrowOriginalError = void 0;
if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
  stashedWorkInProgressProperties = null;
  mayReplayFailedUnitOfWork = true;
  isReplayingFailedUnitOfWork = false;
  originalReplayError = null;
  replayUnitOfWork = function (failedUnitOfWork, thrownValue, isYieldy) {
    if (thrownValue !== null && typeof thrownValue === 'object' && typeof thrownValue.then === 'function') {
      // Don't replay promises. Treat everything else like an error.
      // TODO: Need to figure out a different strategy if/when we add
      // support for catching other types.
      return;
    }

    // Restore the original state of the work-in-progress
    if (stashedWorkInProgressProperties === null) {
      // This should never happen. Don't throw because this code is DEV-only.
      warningWithoutStack$1(false, 'Could not replay rendering after an error. This is likely a bug in React. ' + 'Please file an issue.');
      return;
    }
    assignFiberPropertiesInDEV(failedUnitOfWork, stashedWorkInProgressProperties);

    switch (failedUnitOfWork.tag) {
      case HostRoot:
        popHostContainer(failedUnitOfWork);
        popTopLevelContextObject(failedUnitOfWork);
        break;
      case HostComponent:
        popHostContext(failedUnitOfWork);
        break;
      case ClassComponent:
        {
          var Component = failedUnitOfWork.type;
          if (isContextProvider(Component)) {
            popContext(failedUnitOfWork);
          }
          break;
        }
      case HostPortal:
        popHostContainer(failedUnitOfWork);
        break;
      case ContextProvider:
        popProvider(failedUnitOfWork);
        break;
    }
    // Replay the begin phase.
    isReplayingFailedUnitOfWork = true;
    originalReplayError = thrownValue;
    invokeGuardedCallback(null, workLoop, null, isYieldy);
    isReplayingFailedUnitOfWork = false;
    originalReplayError = null;
    if (hasCaughtError()) {
      var replayError = clearCaughtError();
      if (replayError != null && thrownValue != null) {
        try {
          // Reading the expando property is intentionally
          // inside `try` because it might be a getter or Proxy.
          if (replayError._suppressLogging) {
            // Also suppress logging for the original error.
            thrownValue._suppressLogging = true;
          }
        } catch (inner) {
          // Ignore.
        }
      }
    } else {
      // If the begin phase did not fail the second time, set this pointer
      // back to the original value.
      nextUnitOfWork = failedUnitOfWork;
    }
  };
  rethrowOriginalError = function () {
    throw originalReplayError;
  };
}

function resetStack() {
  if (nextUnitOfWork !== null) {
    var interruptedWork = nextUnitOfWork.return;
    while (interruptedWork !== null) {
      unwindInterruptedWork(interruptedWork);
      interruptedWork = interruptedWork.return;
    }
  }

  {
    ReactStrictModeWarnings.discardPendingWarnings();
    checkThatStackIsEmpty();
  }

  nextRoot = null;
  nextRenderExpirationTime = NoWork;
  nextLatestAbsoluteTimeoutMs = -1;
  nextRenderDidError = false;
  nextUnitOfWork = null;
}

function commitAllHostEffects() {
  while (nextEffect !== null) {
    {
      setCurrentFiber(nextEffect);
    }
    recordEffect();

    var effectTag = nextEffect.effectTag;

    if (effectTag & ContentReset) {
      commitResetTextContent(nextEffect);
    }

    if (effectTag & Ref) {
      var current$$1 = nextEffect.alternate;
      if (current$$1 !== null) {
        commitDetachRef(current$$1);
      }
    }

    // The following switch statement is only concerned about placement,
    // updates, and deletions. To avoid needing to add a case for every
    // possible bitmap value, we remove the secondary effects from the
    // effect tag and switch on that value.
    var primaryEffectTag = effectTag & (Placement | Update | Deletion);
    switch (primaryEffectTag) {
      case Placement:
        {
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          // TODO: findDOMNode doesn't rely on this any more but isMounted
          // does and isMounted is deprecated anyway so we should be able
          // to kill this.
          nextEffect.effectTag &= ~Placement;
          break;
        }
      case PlacementAndUpdate:
        {
          // Placement
          commitPlacement(nextEffect);
          // Clear the "placement" from effect tag so that we know that this is inserted, before
          // any life-cycles like componentDidMount gets called.
          nextEffect.effectTag &= ~Placement;

          // Update
          var _current = nextEffect.alternate;
          commitWork(_current, nextEffect);
          break;
        }
      case Update:
        {
          var _current2 = nextEffect.alternate;
          commitWork(_current2, nextEffect);
          break;
        }
      case Deletion:
        {
          commitDeletion(nextEffect);
          break;
        }
    }
    nextEffect = nextEffect.nextEffect;
  }

  {
    resetCurrentFiber();
  }
}

function commitBeforeMutationLifecycles() {
  while (nextEffect !== null) {
    {
      setCurrentFiber(nextEffect);
    }

    var effectTag = nextEffect.effectTag;
    if (effectTag & Snapshot) {
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitBeforeMutationLifeCycles(current$$1, nextEffect);
    }

    nextEffect = nextEffect.nextEffect;
  }

  {
    resetCurrentFiber();
  }
}

function commitAllLifeCycles(finishedRoot, committedExpirationTime) {
  {
    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
    ReactStrictModeWarnings.flushLegacyContextWarning();

    if (warnAboutDeprecatedLifecycles) {
      ReactStrictModeWarnings.flushPendingDeprecationWarnings();
    }
  }
  while (nextEffect !== null) {
    {
      setCurrentFiber(nextEffect);
    }
    var effectTag = nextEffect.effectTag;

    if (effectTag & (Update | Callback)) {
      recordEffect();
      var current$$1 = nextEffect.alternate;
      commitLifeCycles(finishedRoot, current$$1, nextEffect, committedExpirationTime);
    }

    if (effectTag & Ref) {
      recordEffect();
      commitAttachRef(nextEffect);
    }

    if (effectTag & Passive) {
      rootWithPendingPassiveEffects = finishedRoot;
    }

    nextEffect = nextEffect.nextEffect;
  }
  {
    resetCurrentFiber();
  }
}

function commitPassiveEffects(root, firstEffect) {
  rootWithPendingPassiveEffects = null;
  passiveEffectCallbackHandle = null;
  passiveEffectCallback = null;

  // Set this to true to prevent re-entrancy
  var previousIsRendering = isRendering;
  isRendering = true;

  var effect = firstEffect;
  do {
    {
      setCurrentFiber(effect);
    }

    if (effect.effectTag & Passive) {
      var didError = false;
      var error = void 0;
      {
        invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);
        if (hasCaughtError()) {
          didError = true;
          error = clearCaughtError();
        }
      }
      if (didError) {
        captureCommitPhaseError(effect, error);
      }
    }
    effect = effect.nextEffect;
  } while (effect !== null);
  {
    resetCurrentFiber();
  }

  isRendering = previousIsRendering;

  // Check if work was scheduled by one of the effects
  var rootExpirationTime = root.expirationTime;
  if (rootExpirationTime !== NoWork) {
    requestWork(root, rootExpirationTime);
  }
  // Flush any sync work that was scheduled by effects
  if (!isBatchingUpdates && !isRendering) {
    performSyncWork();
  }
}

function isAlreadyFailedLegacyErrorBoundary(instance) {
  return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
}

function markLegacyErrorBoundaryAsFailed(instance) {
  if (legacyErrorBoundariesThatAlreadyFailed === null) {
    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
  } else {
    legacyErrorBoundariesThatAlreadyFailed.add(instance);
  }
}

function flushPassiveEffects() {
  if (passiveEffectCallbackHandle !== null) {
    cancelPassiveEffects(passiveEffectCallbackHandle);
  }
  if (passiveEffectCallback !== null) {
    // We call the scheduled callback instead of commitPassiveEffects directly
    // to ensure tracing works correctly.
    passiveEffectCallback();
  }
}

function commitRoot(root, finishedWork) {
  isWorking = true;
  isCommitting$1 = true;
  startCommitTimer();

  !(root.current !== finishedWork) ? invariant(false, 'Cannot commit the same tree as before. This is probably a bug related to the return field. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  var committedExpirationTime = root.pendingCommitExpirationTime;
  !(committedExpirationTime !== NoWork) ? invariant(false, 'Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  root.pendingCommitExpirationTime = NoWork;

  // Update the pending priority levels to account for the work that we are
  // about to commit. This needs to happen before calling the lifecycles, since
  // they may schedule additional updates.
  var updateExpirationTimeBeforeCommit = finishedWork.expirationTime;
  var childExpirationTimeBeforeCommit = finishedWork.childExpirationTime;
  var earliestRemainingTimeBeforeCommit = childExpirationTimeBeforeCommit > updateExpirationTimeBeforeCommit ? childExpirationTimeBeforeCommit : updateExpirationTimeBeforeCommit;
  markCommittedPriorityLevels(root, earliestRemainingTimeBeforeCommit);

  var prevInteractions = null;
  if (enableSchedulerTracing) {
    // Restore any pending interactions at this point,
    // So that cascading work triggered during the render phase will be accounted for.
    prevInteractions = tracing.__interactionsRef.current;
    tracing.__interactionsRef.current = root.memoizedInteractions;
  }

  // Reset this to null before calling lifecycles
  ReactCurrentOwner$2.current = null;

  var firstEffect = void 0;
  if (finishedWork.effectTag > PerformedWork) {
    // A fiber's effect list consists only of its children, not itself. So if
    // the root has an effect, we need to add it to the end of the list. The
    // resulting list is the set that would belong to the root's parent, if
    // it had one; that is, all the effects in the tree including the root.
    if (finishedWork.lastEffect !== null) {
      finishedWork.lastEffect.nextEffect = finishedWork;
      firstEffect = finishedWork.firstEffect;
    } else {
      firstEffect = finishedWork;
    }
  } else {
    // There is no effect on the root.
    firstEffect = finishedWork.firstEffect;
  }

  prepareForCommit(root.containerInfo);

  // Invoke instances of getSnapshotBeforeUpdate before mutation.
  nextEffect = firstEffect;
  startCommitSnapshotEffectsTimer();
  while (nextEffect !== null) {
    var didError = false;
    var error = void 0;
    {
      invokeGuardedCallback(null, commitBeforeMutationLifecycles, null);
      if (hasCaughtError()) {
        didError = true;
        error = clearCaughtError();
      }
    }
    if (didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitSnapshotEffectsTimer();

  if (enableProfilerTimer) {
    // Mark the current commit time to be shared by all Profilers in this batch.
    // This enables them to be grouped later.
    recordCommitTime();
  }

  // Commit all the side-effects within a tree. We'll do this in two passes.
  // The first pass performs all the host insertions, updates, deletions and
  // ref unmounts.
  nextEffect = firstEffect;
  startCommitHostEffectsTimer();
  while (nextEffect !== null) {
    var _didError = false;
    var _error = void 0;
    {
      invokeGuardedCallback(null, commitAllHostEffects, null);
      if (hasCaughtError()) {
        _didError = true;
        _error = clearCaughtError();
      }
    }
    if (_didError) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error);
      // Clean-up
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }
  stopCommitHostEffectsTimer();

  resetAfterCommit(root.containerInfo);

  // The work-in-progress tree is now the current tree. This must come after
  // the first pass of the commit phase, so that the previous tree is still
  // current during componentWillUnmount, but before the second pass, so that
  // the finished work is current during componentDidMount/Update.
  root.current = finishedWork;

  // In the second pass we'll perform all life-cycles and ref callbacks.
  // Life-cycles happen as a separate pass so that all placements, updates,
  // and deletions in the entire tree have already been invoked.
  // This pass also triggers any renderer-specific initial effects.
  nextEffect = firstEffect;
  startCommitLifeCyclesTimer();
  while (nextEffect !== null) {
    var _didError2 = false;
    var _error2 = void 0;
    {
      invokeGuardedCallback(null, commitAllLifeCycles, null, root, committedExpirationTime);
      if (hasCaughtError()) {
        _didError2 = true;
        _error2 = clearCaughtError();
      }
    }
    if (_didError2) {
      !(nextEffect !== null) ? invariant(false, 'Should have next effect. This error is likely caused by a bug in React. Please file an issue.') : void 0;
      captureCommitPhaseError(nextEffect, _error2);
      if (nextEffect !== null) {
        nextEffect = nextEffect.nextEffect;
      }
    }
  }

  if (firstEffect !== null && rootWithPendingPassiveEffects !== null) {
    // This commit included a passive effect. These do not need to fire until
    // after the next paint. Schedule an callback to fire them in an async
    // event. To ensure serial execution, the callback will be flushed early if
    // we enter rootWithPendingPassiveEffects commit phase before then.
    var callback = commitPassiveEffects.bind(null, root, firstEffect);
    if (enableSchedulerTracing) {
      // TODO: Avoid this extra callback by mutating the tracing ref directly,
      // like we do at the beginning of commitRoot. I've opted not to do that
      // here because that code is still in flux.
      callback = tracing.unstable_wrap(callback);
    }
    passiveEffectCallbackHandle = scheduler.unstable_runWithPriority(scheduler.unstable_NormalPriority, function () {
      return schedulePassiveEffects(callback);
    });
    passiveEffectCallback = callback;
  }

  isCommitting$1 = false;
  isWorking = false;
  stopCommitLifeCyclesTimer();
  stopCommitTimer();
  onCommitRoot(finishedWork.stateNode);
  if ( true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onCommitWork(finishedWork);
  }

  var updateExpirationTimeAfterCommit = finishedWork.expirationTime;
  var childExpirationTimeAfterCommit = finishedWork.childExpirationTime;
  var earliestRemainingTimeAfterCommit = childExpirationTimeAfterCommit > updateExpirationTimeAfterCommit ? childExpirationTimeAfterCommit : updateExpirationTimeAfterCommit;
  if (earliestRemainingTimeAfterCommit === NoWork) {
    // If there's no remaining work, we can clear the set of already failed
    // error boundaries.
    legacyErrorBoundariesThatAlreadyFailed = null;
  }
  onCommit(root, earliestRemainingTimeAfterCommit);

  if (enableSchedulerTracing) {
    tracing.__interactionsRef.current = prevInteractions;

    var subscriber = void 0;

    try {
      subscriber = tracing.__subscriberRef.current;
      if (subscriber !== null && root.memoizedInteractions.size > 0) {
        var threadID = computeThreadID(committedExpirationTime, root.interactionThreadID);
        subscriber.onWorkStopped(root.memoizedInteractions, threadID);
      }
    } catch (error) {
      // It's not safe for commitRoot() to throw.
      // Store the error for now and we'll re-throw in finishRendering().
      if (!hasUnhandledError) {
        hasUnhandledError = true;
        unhandledError = error;
      }
    } finally {
      // Clear completed interactions from the pending Map.
      // Unless the render was suspended or cascading work was scheduled,
      // In which case– leave pending interactions until the subsequent render.
      var pendingInteractionMap = root.pendingInteractionMap;
      pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
        // Only decrement the pending interaction count if we're done.
        // If there's still work at the current priority,
        // That indicates that we are waiting for suspense data.
        if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
          pendingInteractionMap.delete(scheduledExpirationTime);

          scheduledInteractions.forEach(function (interaction) {
            interaction.__count--;

            if (subscriber !== null && interaction.__count === 0) {
              try {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              } catch (error) {
                // It's not safe for commitRoot() to throw.
                // Store the error for now and we'll re-throw in finishRendering().
                if (!hasUnhandledError) {
                  hasUnhandledError = true;
                  unhandledError = error;
                }
              }
            }
          });
        }
      });
    }
  }
}

function resetChildExpirationTime(workInProgress, renderTime) {
  if (renderTime !== Never && workInProgress.childExpirationTime === Never) {
    // The children of this component are hidden. Don't bubble their
    // expiration times.
    return;
  }

  var newChildExpirationTime = NoWork;

  // Bubble up the earliest expiration time.
  if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
    // We're in profiling mode.
    // Let's use this same traversal to update the render durations.
    var actualDuration = workInProgress.actualDuration;
    var treeBaseDuration = workInProgress.selfBaseDuration;

    // When a fiber is cloned, its actualDuration is reset to 0.
    // This value will only be updated if work is done on the fiber (i.e. it doesn't bailout).
    // When work is done, it should bubble to the parent's actualDuration.
    // If the fiber has not been cloned though, (meaning no work was done),
    // Then this value will reflect the amount of time spent working on a previous render.
    // In that case it should not bubble.
    // We determine whether it was cloned by comparing the child pointer.
    var shouldBubbleActualDurations = workInProgress.alternate === null || workInProgress.child !== workInProgress.alternate.child;

    var child = workInProgress.child;
    while (child !== null) {
      var childUpdateExpirationTime = child.expirationTime;
      var childChildExpirationTime = child.childExpirationTime;
      if (childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childUpdateExpirationTime;
      }
      if (childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = childChildExpirationTime;
      }
      if (shouldBubbleActualDurations) {
        actualDuration += child.actualDuration;
      }
      treeBaseDuration += child.treeBaseDuration;
      child = child.sibling;
    }
    workInProgress.actualDuration = actualDuration;
    workInProgress.treeBaseDuration = treeBaseDuration;
  } else {
    var _child = workInProgress.child;
    while (_child !== null) {
      var _childUpdateExpirationTime = _child.expirationTime;
      var _childChildExpirationTime = _child.childExpirationTime;
      if (_childUpdateExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childUpdateExpirationTime;
      }
      if (_childChildExpirationTime > newChildExpirationTime) {
        newChildExpirationTime = _childChildExpirationTime;
      }
      _child = _child.sibling;
    }
  }

  workInProgress.childExpirationTime = newChildExpirationTime;
}

function completeUnitOfWork(workInProgress) {
  // Attempt to complete the current unit of work, then move to the
  // next sibling. If there are no more siblings, return to the
  // parent fiber.
  while (true) {
    // The current, flushed, state of this fiber is the alternate.
    // Ideally nothing should rely on this, but relying on it here
    // means that we don't need an additional field on the work in
    // progress.
    var current$$1 = workInProgress.alternate;
    {
      setCurrentFiber(workInProgress);
    }

    var returnFiber = workInProgress.return;
    var siblingFiber = workInProgress.sibling;

    if ((workInProgress.effectTag & Incomplete) === NoEffect) {
      if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
        // Don't replay if it fails during completion phase.
        mayReplayFailedUnitOfWork = false;
      }
      // This fiber completed.
      // Remember we're completing this unit so we can find a boundary if it fails.
      nextUnitOfWork = workInProgress;
      if (enableProfilerTimer) {
        if (workInProgress.mode & ProfileMode) {
          startProfilerTimer(workInProgress);
        }
        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
        if (workInProgress.mode & ProfileMode) {
          // Update render duration assuming we didn't error.
          stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
        }
      } else {
        nextUnitOfWork = completeWork(current$$1, workInProgress, nextRenderExpirationTime);
      }
      if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
        // We're out of completion phase so replaying is fine now.
        mayReplayFailedUnitOfWork = true;
      }
      stopWorkTimer(workInProgress);
      resetChildExpirationTime(workInProgress, nextRenderExpirationTime);
      {
        resetCurrentFiber();
      }

      if (nextUnitOfWork !== null) {
        // Completing this fiber spawned new work. Work on that next.
        return nextUnitOfWork;
      }

      if (returnFiber !== null &&
      // Do not append effects to parents if a sibling failed to complete
      (returnFiber.effectTag & Incomplete) === NoEffect) {
        // Append all the effects of the subtree and this fiber onto the effect
        // list of the parent. The completion order of the children affects the
        // side-effect order.
        if (returnFiber.firstEffect === null) {
          returnFiber.firstEffect = workInProgress.firstEffect;
        }
        if (workInProgress.lastEffect !== null) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
          }
          returnFiber.lastEffect = workInProgress.lastEffect;
        }

        // If this fiber had side-effects, we append it AFTER the children's
        // side-effects. We can perform certain side-effects earlier if
        // needed, by doing multiple passes over the effect list. We don't want
        // to schedule our own side-effect on our own list because if end up
        // reusing children we'll schedule this effect onto itself since we're
        // at the end.
        var effectTag = workInProgress.effectTag;
        // Skip both NoWork and PerformedWork tags when creating the effect list.
        // PerformedWork effect is read by React DevTools but shouldn't be committed.
        if (effectTag > PerformedWork) {
          if (returnFiber.lastEffect !== null) {
            returnFiber.lastEffect.nextEffect = workInProgress;
          } else {
            returnFiber.firstEffect = workInProgress;
          }
          returnFiber.lastEffect = workInProgress;
        }
      }

      if ( true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        // We've reached the root.
        return null;
      }
    } else {
      if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
        // Record the render duration for the fiber that errored.
        stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);

        // Include the time spent working on failed children before continuing.
        var actualDuration = workInProgress.actualDuration;
        var child = workInProgress.child;
        while (child !== null) {
          actualDuration += child.actualDuration;
          child = child.sibling;
        }
        workInProgress.actualDuration = actualDuration;
      }

      // This fiber did not complete because something threw. Pop values off
      // the stack without entering the complete phase. If this is a boundary,
      // capture values if possible.
      var next = unwindWork(workInProgress, nextRenderExpirationTime);
      // Because this fiber did not complete, don't reset its expiration time.
      if (workInProgress.effectTag & DidCapture) {
        // Restarting an error boundary
        stopFailedWorkTimer(workInProgress);
      } else {
        stopWorkTimer(workInProgress);
      }

      {
        resetCurrentFiber();
      }

      if (next !== null) {
        stopWorkTimer(workInProgress);
        if ( true && ReactFiberInstrumentation_1.debugTool) {
          ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
        }

        // If completing this work spawned new work, do that next. We'll come
        // back here again.
        // Since we're restarting, remove anything that is not a host effect
        // from the effect tag.
        next.effectTag &= HostEffectMask;
        return next;
      }

      if (returnFiber !== null) {
        // Mark the parent fiber as incomplete and clear its effect list.
        returnFiber.firstEffect = returnFiber.lastEffect = null;
        returnFiber.effectTag |= Incomplete;
      }

      if ( true && ReactFiberInstrumentation_1.debugTool) {
        ReactFiberInstrumentation_1.debugTool.onCompleteWork(workInProgress);
      }

      if (siblingFiber !== null) {
        // If there is more work to do in this returnFiber, do that next.
        return siblingFiber;
      } else if (returnFiber !== null) {
        // If there's no more work in this returnFiber. Complete the returnFiber.
        workInProgress = returnFiber;
        continue;
      } else {
        return null;
      }
    }
  }

  // Without this explicit null return Flow complains of invalid return type
  // TODO Remove the above while(true) loop
  // eslint-disable-next-line no-unreachable
  return null;
}

function performUnitOfWork(workInProgress) {
  // The current, flushed, state of this fiber is the alternate.
  // Ideally nothing should rely on this, but relying on it here
  // means that we don't need an additional field on the work in
  // progress.
  var current$$1 = workInProgress.alternate;

  // See if beginning this work spawns more work.
  startWorkTimer(workInProgress);
  {
    setCurrentFiber(workInProgress);
  }

  if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
    stashedWorkInProgressProperties = assignFiberPropertiesInDEV(stashedWorkInProgressProperties, workInProgress);
  }

  var next = void 0;
  if (enableProfilerTimer) {
    if (workInProgress.mode & ProfileMode) {
      startProfilerTimer(workInProgress);
    }

    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
    workInProgress.memoizedProps = workInProgress.pendingProps;

    if (workInProgress.mode & ProfileMode) {
      // Record the render duration assuming we didn't bailout (or error).
      stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
    }
  } else {
    next = beginWork(current$$1, workInProgress, nextRenderExpirationTime);
    workInProgress.memoizedProps = workInProgress.pendingProps;
  }

  {
    resetCurrentFiber();
    if (isReplayingFailedUnitOfWork) {
      // Currently replaying a failed unit of work. This should be unreachable,
      // because the render phase is meant to be idempotent, and it should
      // have thrown again. Since it didn't, rethrow the original error, so
      // React's internal stack is not misaligned.
      rethrowOriginalError();
    }
  }
  if ( true && ReactFiberInstrumentation_1.debugTool) {
    ReactFiberInstrumentation_1.debugTool.onBeginWork(workInProgress);
  }

  if (next === null) {
    // If this doesn't spawn new work, complete the current work.
    next = completeUnitOfWork(workInProgress);
  }

  ReactCurrentOwner$2.current = null;

  return next;
}

function workLoop(isYieldy) {
  if (!isYieldy) {
    // Flush work without yielding
    while (nextUnitOfWork !== null) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }
  } else {
    // Flush asynchronous work until there's a higher priority event
    while (nextUnitOfWork !== null && !shouldYieldToRenderer()) {
      nextUnitOfWork = performUnitOfWork(nextUnitOfWork);
    }
  }
}

function renderRoot(root, isYieldy) {
  !!isWorking ? invariant(false, 'renderRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  flushPassiveEffects();

  isWorking = true;
  var previousDispatcher = ReactCurrentDispatcher.current;
  ReactCurrentDispatcher.current = ContextOnlyDispatcher;

  var expirationTime = root.nextExpirationTimeToWorkOn;

  // Check if we're starting from a fresh stack, or if we're resuming from
  // previously yielded work.
  if (expirationTime !== nextRenderExpirationTime || root !== nextRoot || nextUnitOfWork === null) {
    // Reset the stack and start working from the root.
    resetStack();
    nextRoot = root;
    nextRenderExpirationTime = expirationTime;
    nextUnitOfWork = createWorkInProgress(nextRoot.current, null, nextRenderExpirationTime);
    root.pendingCommitExpirationTime = NoWork;

    if (enableSchedulerTracing) {
      // Determine which interactions this batch of work currently includes,
      // So that we can accurately attribute time spent working on it,
      var interactions = new Set();
      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
        if (scheduledExpirationTime >= expirationTime) {
          scheduledInteractions.forEach(function (interaction) {
            return interactions.add(interaction);
          });
        }
      });

      // Store the current set of interactions on the FiberRoot for a few reasons:
      // We can re-use it in hot functions like renderRoot() without having to recalculate it.
      // We will also use it in commitWork() to pass to any Profiler onRender() hooks.
      // This also provides DevTools with a way to access it when the onCommitRoot() hook is called.
      root.memoizedInteractions = interactions;

      if (interactions.size > 0) {
        var subscriber = tracing.__subscriberRef.current;
        if (subscriber !== null) {
          var threadID = computeThreadID(expirationTime, root.interactionThreadID);
          try {
            subscriber.onWorkStarted(interactions, threadID);
          } catch (error) {
            // Work thrown by an interaction tracing subscriber should be rethrown,
            // But only once it's safe (to avoid leaving the scheduler in an invalid state).
            // Store the error for now and we'll re-throw in finishRendering().
            if (!hasUnhandledError) {
              hasUnhandledError = true;
              unhandledError = error;
            }
          }
        }
      }
    }
  }

  var prevInteractions = null;
  if (enableSchedulerTracing) {
    // We're about to start new traced work.
    // Restore pending interactions so cascading work triggered during the render phase will be accounted for.
    prevInteractions = tracing.__interactionsRef.current;
    tracing.__interactionsRef.current = root.memoizedInteractions;
  }

  var didFatal = false;

  startWorkLoopTimer(nextUnitOfWork);

  do {
    try {
      workLoop(isYieldy);
    } catch (thrownValue) {
      resetContextDependences();
      resetHooks();

      // Reset in case completion throws.
      // This is only used in DEV and when replaying is on.
      var mayReplay = void 0;
      if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
        mayReplay = mayReplayFailedUnitOfWork;
        mayReplayFailedUnitOfWork = true;
      }

      if (nextUnitOfWork === null) {
        // This is a fatal error.
        didFatal = true;
        onUncaughtError(thrownValue);
      } else {
        if (enableProfilerTimer && nextUnitOfWork.mode & ProfileMode) {
          // Record the time spent rendering before an error was thrown.
          // This avoids inaccurate Profiler durations in the case of a suspended render.
          stopProfilerTimerIfRunningAndRecordDelta(nextUnitOfWork, true);
        }

        {
          // Reset global debug state
          // We assume this is defined in DEV
          resetCurrentlyProcessingQueue();
        }

        if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
          if (mayReplay) {
            var failedUnitOfWork = nextUnitOfWork;
            replayUnitOfWork(failedUnitOfWork, thrownValue, isYieldy);
          }
        }

        // TODO: we already know this isn't true in some cases.
        // At least this shows a nicer error message until we figure out the cause.
        // https://github.com/facebook/react/issues/12449#issuecomment-386727431
        !(nextUnitOfWork !== null) ? invariant(false, 'Failed to replay rendering after an error. This is likely caused by a bug in React. Please file an issue with a reproducing case to help us find it.') : void 0;

        var sourceFiber = nextUnitOfWork;
        var returnFiber = sourceFiber.return;
        if (returnFiber === null) {
          // This is the root. The root could capture its own errors. However,
          // we don't know if it errors before or after we pushed the host
          // context. This information is needed to avoid a stack mismatch.
          // Because we're not sure, treat this as a fatal error. We could track
          // which phase it fails in, but doesn't seem worth it. At least
          // for now.
          didFatal = true;
          onUncaughtError(thrownValue);
        } else {
          throwException(root, returnFiber, sourceFiber, thrownValue, nextRenderExpirationTime);
          nextUnitOfWork = completeUnitOfWork(sourceFiber);
          continue;
        }
      }
    }
    break;
  } while (true);

  if (enableSchedulerTracing) {
    // Traced work is done for now; restore the previous interactions.
    tracing.__interactionsRef.current = prevInteractions;
  }

  // We're done performing work. Time to clean up.
  isWorking = false;
  ReactCurrentDispatcher.current = previousDispatcher;
  resetContextDependences();
  resetHooks();

  // Yield back to main thread.
  if (didFatal) {
    var _didCompleteRoot = false;
    stopWorkLoopTimer(interruptedBy, _didCompleteRoot);
    interruptedBy = null;
    // There was a fatal error.
    {
      resetStackAfterFatalErrorInDev();
    }
    // `nextRoot` points to the in-progress root. A non-null value indicates
    // that we're in the middle of an async render. Set it to null to indicate
    // there's no more work to be done in the current batch.
    nextRoot = null;
    onFatal(root);
    return;
  }

  if (nextUnitOfWork !== null) {
    // There's still remaining async work in this tree, but we ran out of time
    // in the current frame. Yield back to the renderer. Unless we're
    // interrupted by a higher priority update, we'll continue later from where
    // we left off.
    var _didCompleteRoot2 = false;
    stopWorkLoopTimer(interruptedBy, _didCompleteRoot2);
    interruptedBy = null;
    onYield(root);
    return;
  }

  // We completed the whole tree.
  var didCompleteRoot = true;
  stopWorkLoopTimer(interruptedBy, didCompleteRoot);
  var rootWorkInProgress = root.current.alternate;
  !(rootWorkInProgress !== null) ? invariant(false, 'Finished root should have a work-in-progress. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  // `nextRoot` points to the in-progress root. A non-null value indicates
  // that we're in the middle of an async render. Set it to null to indicate
  // there's no more work to be done in the current batch.
  nextRoot = null;
  interruptedBy = null;

  if (nextRenderDidError) {
    // There was an error
    if (hasLowerPriorityWork(root, expirationTime)) {
      // There's lower priority work. If so, it may have the effect of fixing
      // the exception that was just thrown. Exit without committing. This is
      // similar to a suspend, but without a timeout because we're not waiting
      // for a promise to resolve. React will restart at the lower
      // priority level.
      markSuspendedPriorityLevel(root, expirationTime);
      var suspendedExpirationTime = expirationTime;
      var rootExpirationTime = root.expirationTime;
      onSuspend(root, rootWorkInProgress, suspendedExpirationTime, rootExpirationTime, -1 // Indicates no timeout
      );
      return;
    } else if (
    // There's no lower priority work, but we're rendering asynchronously.
    // Synchronously attempt to render the same level one more time. This is
    // similar to a suspend, but without a timeout because we're not waiting
    // for a promise to resolve.
    !root.didError && isYieldy) {
      root.didError = true;
      var _suspendedExpirationTime = root.nextExpirationTimeToWorkOn = expirationTime;
      var _rootExpirationTime = root.expirationTime = Sync;
      onSuspend(root, rootWorkInProgress, _suspendedExpirationTime, _rootExpirationTime, -1 // Indicates no timeout
      );
      return;
    }
  }

  if (isYieldy && nextLatestAbsoluteTimeoutMs !== -1) {
    // The tree was suspended.
    var _suspendedExpirationTime2 = expirationTime;
    markSuspendedPriorityLevel(root, _suspendedExpirationTime2);

    // Find the earliest uncommitted expiration time in the tree, including
    // work that is suspended. The timeout threshold cannot be longer than
    // the overall expiration.
    var earliestExpirationTime = findEarliestOutstandingPriorityLevel(root, expirationTime);
    var earliestExpirationTimeMs = expirationTimeToMs(earliestExpirationTime);
    if (earliestExpirationTimeMs < nextLatestAbsoluteTimeoutMs) {
      nextLatestAbsoluteTimeoutMs = earliestExpirationTimeMs;
    }

    // Subtract the current time from the absolute timeout to get the number
    // of milliseconds until the timeout. In other words, convert an absolute
    // timestamp to a relative time. This is the value that is passed
    // to `setTimeout`.
    var currentTimeMs = expirationTimeToMs(requestCurrentTime());
    var msUntilTimeout = nextLatestAbsoluteTimeoutMs - currentTimeMs;
    msUntilTimeout = msUntilTimeout < 0 ? 0 : msUntilTimeout;

    // TODO: Account for the Just Noticeable Difference

    var _rootExpirationTime2 = root.expirationTime;
    onSuspend(root, rootWorkInProgress, _suspendedExpirationTime2, _rootExpirationTime2, msUntilTimeout);
    return;
  }

  // Ready to commit.
  onComplete(root, rootWorkInProgress, expirationTime);
}

function captureCommitPhaseError(sourceFiber, value) {
  var expirationTime = Sync;
  var fiber = sourceFiber.return;
  while (fiber !== null) {
    switch (fiber.tag) {
      case ClassComponent:
        var ctor = fiber.type;
        var instance = fiber.stateNode;
        if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
          var errorInfo = createCapturedValue(value, sourceFiber);
          var update = createClassErrorUpdate(fiber, errorInfo, expirationTime);
          enqueueUpdate(fiber, update);
          scheduleWork(fiber, expirationTime);
          return;
        }
        break;
      case HostRoot:
        {
          var _errorInfo = createCapturedValue(value, sourceFiber);
          var _update = createRootErrorUpdate(fiber, _errorInfo, expirationTime);
          enqueueUpdate(fiber, _update);
          scheduleWork(fiber, expirationTime);
          return;
        }
    }
    fiber = fiber.return;
  }

  if (sourceFiber.tag === HostRoot) {
    // Error was thrown at the root. There is no parent, so the root
    // itself should capture it.
    var rootFiber = sourceFiber;
    var _errorInfo2 = createCapturedValue(value, rootFiber);
    var _update2 = createRootErrorUpdate(rootFiber, _errorInfo2, expirationTime);
    enqueueUpdate(rootFiber, _update2);
    scheduleWork(rootFiber, expirationTime);
  }
}

function computeThreadID(expirationTime, interactionThreadID) {
  // Interaction threads are unique per root and expiration time.
  return expirationTime * 1000 + interactionThreadID;
}

// Creates a unique async expiration time.
function computeUniqueAsyncExpiration() {
  var currentTime = requestCurrentTime();
  var result = computeAsyncExpiration(currentTime);
  if (result >= lastUniqueAsyncExpiration) {
    // Since we assume the current time monotonically increases, we only hit
    // this branch when computeUniqueAsyncExpiration is fired multiple times
    // within a 200ms window (or whatever the async bucket size is).
    result = lastUniqueAsyncExpiration - 1;
  }
  lastUniqueAsyncExpiration = result;
  return lastUniqueAsyncExpiration;
}

function computeExpirationForFiber(currentTime, fiber) {
  var priorityLevel = scheduler.unstable_getCurrentPriorityLevel();

  var expirationTime = void 0;
  if ((fiber.mode & ConcurrentMode) === NoContext) {
    // Outside of concurrent mode, updates are always synchronous.
    expirationTime = Sync;
  } else if (isWorking && !isCommitting$1) {
    // During render phase, updates expire during as the current render.
    expirationTime = nextRenderExpirationTime;
  } else {
    switch (priorityLevel) {
      case scheduler.unstable_ImmediatePriority:
        expirationTime = Sync;
        break;
      case scheduler.unstable_UserBlockingPriority:
        expirationTime = computeInteractiveExpiration(currentTime);
        break;
      case scheduler.unstable_NormalPriority:
        // This is a normal, concurrent update
        expirationTime = computeAsyncExpiration(currentTime);
        break;
      case scheduler.unstable_LowPriority:
      case scheduler.unstable_IdlePriority:
        expirationTime = Never;
        break;
      default:
        invariant(false, 'Unknown priority level. This error is likely caused by a bug in React. Please file an issue.');
    }

    // If we're in the middle of rendering a tree, do not update at the same
    // expiration time that is already rendering.
    if (nextRoot !== null && expirationTime === nextRenderExpirationTime) {
      expirationTime -= 1;
    }
  }

  // Keep track of the lowest pending interactive expiration time. This
  // allows us to synchronously flush all interactive updates
  // when needed.
  // TODO: Move this to renderer?
  if (priorityLevel === scheduler.unstable_UserBlockingPriority && (lowestPriorityPendingInteractiveExpirationTime === NoWork || expirationTime < lowestPriorityPendingInteractiveExpirationTime)) {
    lowestPriorityPendingInteractiveExpirationTime = expirationTime;
  }

  return expirationTime;
}

function renderDidSuspend(root, absoluteTimeoutMs, suspendedTime) {
  // Schedule the timeout.
  if (absoluteTimeoutMs >= 0 && nextLatestAbsoluteTimeoutMs < absoluteTimeoutMs) {
    nextLatestAbsoluteTimeoutMs = absoluteTimeoutMs;
  }
}

function renderDidError() {
  nextRenderDidError = true;
}

function pingSuspendedRoot(root, thenable, pingTime) {
  // A promise that previously suspended React from committing has resolved.
  // If React is still suspended, try again at the previous level (pingTime).

  var pingCache = root.pingCache;
  if (pingCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    pingCache.delete(thenable);
  }

  if (nextRoot !== null && nextRenderExpirationTime === pingTime) {
    // Received a ping at the same priority level at which we're currently
    // rendering. Restart from the root.
    nextRoot = null;
  } else {
    // Confirm that the root is still suspended at this level. Otherwise exit.
    if (isPriorityLevelSuspended(root, pingTime)) {
      // Ping at the original level
      markPingedPriorityLevel(root, pingTime);
      var rootExpirationTime = root.expirationTime;
      if (rootExpirationTime !== NoWork) {
        requestWork(root, rootExpirationTime);
      }
    }
  }
}

function retryTimedOutBoundary(boundaryFiber, thenable) {
  // The boundary fiber (a Suspense component) previously timed out and was
  // rendered in its fallback state. One of the promises that suspended it has
  // resolved, which means at least part of the tree was likely unblocked. Try
  var retryCache = void 0;
  if (enableSuspenseServerRenderer) {
    switch (boundaryFiber.tag) {
      case SuspenseComponent:
        retryCache = boundaryFiber.stateNode;
        break;
      case DehydratedSuspenseComponent:
        retryCache = boundaryFiber.memoizedState;
        break;
      default:
        invariant(false, 'Pinged unknown suspense boundary type. This is probably a bug in React.');
    }
  } else {
    retryCache = boundaryFiber.stateNode;
  }
  if (retryCache !== null) {
    // The thenable resolved, so we no longer need to memoize, because it will
    // never be thrown again.
    retryCache.delete(thenable);
  }

  var currentTime = requestCurrentTime();
  var retryTime = computeExpirationForFiber(currentTime, boundaryFiber);
  var root = scheduleWorkToRoot(boundaryFiber, retryTime);
  if (root !== null) {
    markPendingPriorityLevel(root, retryTime);
    var rootExpirationTime = root.expirationTime;
    if (rootExpirationTime !== NoWork) {
      requestWork(root, rootExpirationTime);
    }
  }
}

function scheduleWorkToRoot(fiber, expirationTime) {
  recordScheduleUpdate();

  {
    if (fiber.tag === ClassComponent) {
      var instance = fiber.stateNode;
      warnAboutInvalidUpdates(instance);
    }
  }

  // Update the source fiber's expiration time
  if (fiber.expirationTime < expirationTime) {
    fiber.expirationTime = expirationTime;
  }
  var alternate = fiber.alternate;
  if (alternate !== null && alternate.expirationTime < expirationTime) {
    alternate.expirationTime = expirationTime;
  }
  // Walk the parent path to the root and update the child expiration time.
  var node = fiber.return;
  var root = null;
  if (node === null && fiber.tag === HostRoot) {
    root = fiber.stateNode;
  } else {
    while (node !== null) {
      alternate = node.alternate;
      if (node.childExpirationTime < expirationTime) {
        node.childExpirationTime = expirationTime;
        if (alternate !== null && alternate.childExpirationTime < expirationTime) {
          alternate.childExpirationTime = expirationTime;
        }
      } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
        alternate.childExpirationTime = expirationTime;
      }
      if (node.return === null && node.tag === HostRoot) {
        root = node.stateNode;
        break;
      }
      node = node.return;
    }
  }

  if (enableSchedulerTracing) {
    if (root !== null) {
      var interactions = tracing.__interactionsRef.current;
      if (interactions.size > 0) {
        var pendingInteractionMap = root.pendingInteractionMap;
        var pendingInteractions = pendingInteractionMap.get(expirationTime);
        if (pendingInteractions != null) {
          interactions.forEach(function (interaction) {
            if (!pendingInteractions.has(interaction)) {
              // Update the pending async work count for previously unscheduled interaction.
              interaction.__count++;
            }

            pendingInteractions.add(interaction);
          });
        } else {
          pendingInteractionMap.set(expirationTime, new Set(interactions));

          // Update the pending async work count for the current interactions.
          interactions.forEach(function (interaction) {
            interaction.__count++;
          });
        }

        var subscriber = tracing.__subscriberRef.current;
        if (subscriber !== null) {
          var threadID = computeThreadID(expirationTime, root.interactionThreadID);
          subscriber.onWorkScheduled(interactions, threadID);
        }
      }
    }
  }
  return root;
}

function warnIfNotCurrentlyBatchingInDev(fiber) {
  {
    if (isRendering === false && isBatchingUpdates === false) {
      warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see in the browser." + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
    }
  }
}

function scheduleWork(fiber, expirationTime) {
  var root = scheduleWorkToRoot(fiber, expirationTime);
  if (root === null) {
    {
      switch (fiber.tag) {
        case ClassComponent:
          warnAboutUpdateOnUnmounted(fiber, true);
          break;
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          warnAboutUpdateOnUnmounted(fiber, false);
          break;
      }
    }
    return;
  }

  if (!isWorking && nextRenderExpirationTime !== NoWork && expirationTime > nextRenderExpirationTime) {
    // This is an interruption. (Used for performance tracking.)
    interruptedBy = fiber;
    resetStack();
  }
  markPendingPriorityLevel(root, expirationTime);
  if (
  // If we're in the render phase, we don't need to schedule this root
  // for an update, because we'll do it before we exit...
  !isWorking || isCommitting$1 ||
  // ...unless this is a different root than the one we're rendering.
  nextRoot !== root) {
    var rootExpirationTime = root.expirationTime;
    requestWork(root, rootExpirationTime);
  }
  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
    // Reset this back to zero so subsequent updates don't throw.
    nestedUpdateCount = 0;
    invariant(false, 'Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.');
  }
}

function syncUpdates(fn, a, b, c, d) {
  return scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
    return fn(a, b, c, d);
  });
}

// TODO: Everything below this is written as if it has been lifted to the
// renderers. I'll do this in a follow-up.

// Linked-list of roots
var firstScheduledRoot = null;
var lastScheduledRoot = null;

var callbackExpirationTime = NoWork;
var callbackID = void 0;
var isRendering = false;
var nextFlushedRoot = null;
var nextFlushedExpirationTime = NoWork;
var lowestPriorityPendingInteractiveExpirationTime = NoWork;
var hasUnhandledError = false;
var unhandledError = null;

var isBatchingUpdates = false;
var isUnbatchingUpdates = false;

var completedBatches = null;

var originalStartTimeMs = scheduler.unstable_now();
var currentRendererTime = msToExpirationTime(originalStartTimeMs);
var currentSchedulerTime = currentRendererTime;

// Use these to prevent an infinite loop of nested updates
var NESTED_UPDATE_LIMIT = 50;
var nestedUpdateCount = 0;
var lastCommittedRootDuringThisBatch = null;

function recomputeCurrentRendererTime() {
  var currentTimeMs = scheduler.unstable_now() - originalStartTimeMs;
  currentRendererTime = msToExpirationTime(currentTimeMs);
}

function scheduleCallbackWithExpirationTime(root, expirationTime) {
  if (callbackExpirationTime !== NoWork) {
    // A callback is already scheduled. Check its expiration time (timeout).
    if (expirationTime < callbackExpirationTime) {
      // Existing callback has sufficient timeout. Exit.
      return;
    } else {
      if (callbackID !== null) {
        // Existing callback has insufficient timeout. Cancel and schedule a
        // new one.
        scheduler.unstable_cancelCallback(callbackID);
      }
    }
    // The request callback timer is already running. Don't start a new one.
  } else {
    startRequestCallbackTimer();
  }

  callbackExpirationTime = expirationTime;
  var currentMs = scheduler.unstable_now() - originalStartTimeMs;
  var expirationTimeMs = expirationTimeToMs(expirationTime);
  var timeout = expirationTimeMs - currentMs;
  callbackID = scheduler.unstable_scheduleCallback(performAsyncWork, { timeout: timeout });
}

// For every call to renderRoot, one of onFatal, onComplete, onSuspend, and
// onYield is called upon exiting. We use these in lieu of returning a tuple.
// I've also chosen not to inline them into renderRoot because these will
// eventually be lifted into the renderer.
function onFatal(root) {
  root.finishedWork = null;
}

function onComplete(root, finishedWork, expirationTime) {
  root.pendingCommitExpirationTime = expirationTime;
  root.finishedWork = finishedWork;
}

function onSuspend(root, finishedWork, suspendedExpirationTime, rootExpirationTime, msUntilTimeout) {
  root.expirationTime = rootExpirationTime;
  if (msUntilTimeout === 0 && !shouldYieldToRenderer()) {
    // Don't wait an additional tick. Commit the tree immediately.
    root.pendingCommitExpirationTime = suspendedExpirationTime;
    root.finishedWork = finishedWork;
  } else if (msUntilTimeout > 0) {
    // Wait `msUntilTimeout` milliseconds before committing.
    root.timeoutHandle = scheduleTimeout(onTimeout.bind(null, root, finishedWork, suspendedExpirationTime), msUntilTimeout);
  }
}

function onYield(root) {
  root.finishedWork = null;
}

function onTimeout(root, finishedWork, suspendedExpirationTime) {
  // The root timed out. Commit it.
  root.pendingCommitExpirationTime = suspendedExpirationTime;
  root.finishedWork = finishedWork;
  // Read the current time before entering the commit phase. We can be
  // certain this won't cause tearing related to batching of event updates
  // because we're at the top of a timer event.
  recomputeCurrentRendererTime();
  currentSchedulerTime = currentRendererTime;
  flushRoot(root, suspendedExpirationTime);
}

function onCommit(root, expirationTime) {
  root.expirationTime = expirationTime;
  root.finishedWork = null;
}

function requestCurrentTime() {
  // requestCurrentTime is called by the scheduler to compute an expiration
  // time.
  //
  // Expiration times are computed by adding to the current time (the start
  // time). However, if two updates are scheduled within the same event, we
  // should treat their start times as simultaneous, even if the actual clock
  // time has advanced between the first and second call.

  // In other words, because expiration times determine how updates are batched,
  // we want all updates of like priority that occur within the same event to
  // receive the same expiration time. Otherwise we get tearing.
  //
  // We keep track of two separate times: the current "renderer" time and the
  // current "scheduler" time. The renderer time can be updated whenever; it
  // only exists to minimize the calls performance.now.
  //
  // But the scheduler time can only be updated if there's no pending work, or
  // if we know for certain that we're not in the middle of an event.

  if (isRendering) {
    // We're already rendering. Return the most recently read time.
    return currentSchedulerTime;
  }
  // Check if there's pending work.
  findHighestPriorityRoot();
  if (nextFlushedExpirationTime === NoWork || nextFlushedExpirationTime === Never) {
    // If there's no pending work, or if the pending work is offscreen, we can
    // read the current time without risk of tearing.
    recomputeCurrentRendererTime();
    currentSchedulerTime = currentRendererTime;
    return currentSchedulerTime;
  }
  // There's already pending work. We might be in the middle of a browser
  // event. If we were to read the current time, it could cause multiple updates
  // within the same event to receive different expiration times, leading to
  // tearing. Return the last read time. During the next idle callback, the
  // time will be updated.
  return currentSchedulerTime;
}

// requestWork is called by the scheduler whenever a root receives an update.
// It's up to the renderer to call renderRoot at some point in the future.
function requestWork(root, expirationTime) {
  addRootToSchedule(root, expirationTime);
  if (isRendering) {
    // Prevent reentrancy. Remaining work will be scheduled at the end of
    // the currently rendering batch.
    return;
  }

  if (isBatchingUpdates) {
    // Flush work at the end of the batch.
    if (isUnbatchingUpdates) {
      // ...unless we're inside unbatchedUpdates, in which case we should
      // flush it now.
      nextFlushedRoot = root;
      nextFlushedExpirationTime = Sync;
      performWorkOnRoot(root, Sync, false);
    }
    return;
  }

  // TODO: Get rid of Sync and use current time?
  if (expirationTime === Sync) {
    performSyncWork();
  } else {
    scheduleCallbackWithExpirationTime(root, expirationTime);
  }
}

function addRootToSchedule(root, expirationTime) {
  // Add the root to the schedule.
  // Check if this root is already part of the schedule.
  if (root.nextScheduledRoot === null) {
    // This root is not already scheduled. Add it.
    root.expirationTime = expirationTime;
    if (lastScheduledRoot === null) {
      firstScheduledRoot = lastScheduledRoot = root;
      root.nextScheduledRoot = root;
    } else {
      lastScheduledRoot.nextScheduledRoot = root;
      lastScheduledRoot = root;
      lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
    }
  } else {
    // This root is already scheduled, but its priority may have increased.
    var remainingExpirationTime = root.expirationTime;
    if (expirationTime > remainingExpirationTime) {
      // Update the priority.
      root.expirationTime = expirationTime;
    }
  }
}

function findHighestPriorityRoot() {
  var highestPriorityWork = NoWork;
  var highestPriorityRoot = null;
  if (lastScheduledRoot !== null) {
    var previousScheduledRoot = lastScheduledRoot;
    var root = firstScheduledRoot;
    while (root !== null) {
      var remainingExpirationTime = root.expirationTime;
      if (remainingExpirationTime === NoWork) {
        // This root no longer has work. Remove it from the scheduler.

        // TODO: This check is redudant, but Flow is confused by the branch
        // below where we set lastScheduledRoot to null, even though we break
        // from the loop right after.
        !(previousScheduledRoot !== null && lastScheduledRoot !== null) ? invariant(false, 'Should have a previous and last root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
        if (root === root.nextScheduledRoot) {
          // This is the only root in the list.
          root.nextScheduledRoot = null;
          firstScheduledRoot = lastScheduledRoot = null;
          break;
        } else if (root === firstScheduledRoot) {
          // This is the first root in the list.
          var next = root.nextScheduledRoot;
          firstScheduledRoot = next;
          lastScheduledRoot.nextScheduledRoot = next;
          root.nextScheduledRoot = null;
        } else if (root === lastScheduledRoot) {
          // This is the last root in the list.
          lastScheduledRoot = previousScheduledRoot;
          lastScheduledRoot.nextScheduledRoot = firstScheduledRoot;
          root.nextScheduledRoot = null;
          break;
        } else {
          previousScheduledRoot.nextScheduledRoot = root.nextScheduledRoot;
          root.nextScheduledRoot = null;
        }
        root = previousScheduledRoot.nextScheduledRoot;
      } else {
        if (remainingExpirationTime > highestPriorityWork) {
          // Update the priority, if it's higher
          highestPriorityWork = remainingExpirationTime;
          highestPriorityRoot = root;
        }
        if (root === lastScheduledRoot) {
          break;
        }
        if (highestPriorityWork === Sync) {
          // Sync is highest priority by definition so
          // we can stop searching.
          break;
        }
        previousScheduledRoot = root;
        root = root.nextScheduledRoot;
      }
    }
  }

  nextFlushedRoot = highestPriorityRoot;
  nextFlushedExpirationTime = highestPriorityWork;
}

// TODO: This wrapper exists because many of the older tests (the ones that use
// flushDeferredPri) rely on the number of times `shouldYield` is called. We
// should get rid of it.
var didYield = false;
function shouldYieldToRenderer() {
  if (didYield) {
    return true;
  }
  if (scheduler.unstable_shouldYield()) {
    didYield = true;
    return true;
  }
  return false;
}

function performAsyncWork() {
  try {
    if (!shouldYieldToRenderer()) {
      // The callback timed out. That means at least one update has expired.
      // Iterate through the root schedule. If they contain expired work, set
      // the next render expiration time to the current time. This has the effect
      // of flushing all expired work in a single batch, instead of flushing each
      // level one at a time.
      if (firstScheduledRoot !== null) {
        recomputeCurrentRendererTime();
        var root = firstScheduledRoot;
        do {
          didExpireAtExpirationTime(root, currentRendererTime);
          // The root schedule is circular, so this is never null.
          root = root.nextScheduledRoot;
        } while (root !== firstScheduledRoot);
      }
    }
    performWork(NoWork, true);
  } finally {
    didYield = false;
  }
}

function performSyncWork() {
  performWork(Sync, false);
}

function performWork(minExpirationTime, isYieldy) {
  // Keep working on roots until there's no more work, or until there's a higher
  // priority event.
  findHighestPriorityRoot();

  if (isYieldy) {
    recomputeCurrentRendererTime();
    currentSchedulerTime = currentRendererTime;

    if (enableUserTimingAPI) {
      var didExpire = nextFlushedExpirationTime > currentRendererTime;
      var timeout = expirationTimeToMs(nextFlushedExpirationTime);
      stopRequestCallbackTimer(didExpire, timeout);
    }

    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime && !(didYield && currentRendererTime > nextFlushedExpirationTime)) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, currentRendererTime > nextFlushedExpirationTime);
      findHighestPriorityRoot();
      recomputeCurrentRendererTime();
      currentSchedulerTime = currentRendererTime;
    }
  } else {
    while (nextFlushedRoot !== null && nextFlushedExpirationTime !== NoWork && minExpirationTime <= nextFlushedExpirationTime) {
      performWorkOnRoot(nextFlushedRoot, nextFlushedExpirationTime, false);
      findHighestPriorityRoot();
    }
  }

  // We're done flushing work. Either we ran out of time in this callback,
  // or there's no more work left with sufficient priority.

  // If we're inside a callback, set this to false since we just completed it.
  if (isYieldy) {
    callbackExpirationTime = NoWork;
    callbackID = null;
  }
  // If there's work left over, schedule a new callback.
  if (nextFlushedExpirationTime !== NoWork) {
    scheduleCallbackWithExpirationTime(nextFlushedRoot, nextFlushedExpirationTime);
  }

  // Clean-up.
  finishRendering();
}

function flushRoot(root, expirationTime) {
  !!isRendering ? invariant(false, 'work.commit(): Cannot commit while already rendering. This likely means you attempted to commit from inside a lifecycle method.') : void 0;
  // Perform work on root as if the given expiration time is the current time.
  // This has the effect of synchronously flushing all work up to and
  // including the given time.
  nextFlushedRoot = root;
  nextFlushedExpirationTime = expirationTime;
  performWorkOnRoot(root, expirationTime, false);
  // Flush any sync work that was scheduled by lifecycles
  performSyncWork();
}

function finishRendering() {
  nestedUpdateCount = 0;
  lastCommittedRootDuringThisBatch = null;

  if (completedBatches !== null) {
    var batches = completedBatches;
    completedBatches = null;
    for (var i = 0; i < batches.length; i++) {
      var batch = batches[i];
      try {
        batch._onComplete();
      } catch (error) {
        if (!hasUnhandledError) {
          hasUnhandledError = true;
          unhandledError = error;
        }
      }
    }
  }

  if (hasUnhandledError) {
    var error = unhandledError;
    unhandledError = null;
    hasUnhandledError = false;
    throw error;
  }
}

function performWorkOnRoot(root, expirationTime, isYieldy) {
  !!isRendering ? invariant(false, 'performWorkOnRoot was called recursively. This error is likely caused by a bug in React. Please file an issue.') : void 0;

  isRendering = true;

  // Check if this is async work or sync/expired work.
  if (!isYieldy) {
    // Flush work without yielding.
    // TODO: Non-yieldy work does not necessarily imply expired work. A renderer
    // may want to perform some work without yielding, but also without
    // requiring the root to complete (by triggering placeholders).

    var finishedWork = root.finishedWork;
    if (finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, finishedWork, expirationTime);
    } else {
      root.finishedWork = null;
      // If this root previously suspended, clear its existing timeout, since
      // we're about to try rendering again.
      var timeoutHandle = root.timeoutHandle;
      if (timeoutHandle !== noTimeout) {
        root.timeoutHandle = noTimeout;
        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
        cancelTimeout(timeoutHandle);
      }
      renderRoot(root, isYieldy);
      finishedWork = root.finishedWork;
      if (finishedWork !== null) {
        // We've completed the root. Commit it.
        completeRoot(root, finishedWork, expirationTime);
      }
    }
  } else {
    // Flush async work.
    var _finishedWork = root.finishedWork;
    if (_finishedWork !== null) {
      // This root is already complete. We can commit it.
      completeRoot(root, _finishedWork, expirationTime);
    } else {
      root.finishedWork = null;
      // If this root previously suspended, clear its existing timeout, since
      // we're about to try rendering again.
      var _timeoutHandle = root.timeoutHandle;
      if (_timeoutHandle !== noTimeout) {
        root.timeoutHandle = noTimeout;
        // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above
        cancelTimeout(_timeoutHandle);
      }
      renderRoot(root, isYieldy);
      _finishedWork = root.finishedWork;
      if (_finishedWork !== null) {
        // We've completed the root. Check the if we should yield one more time
        // before committing.
        if (!shouldYieldToRenderer()) {
          // Still time left. Commit the root.
          completeRoot(root, _finishedWork, expirationTime);
        } else {
          // There's no time left. Mark this root as complete. We'll come
          // back and commit it later.
          root.finishedWork = _finishedWork;
        }
      }
    }
  }

  isRendering = false;
}

function completeRoot(root, finishedWork, expirationTime) {
  // Check if there's a batch that matches this expiration time.
  var firstBatch = root.firstBatch;
  if (firstBatch !== null && firstBatch._expirationTime >= expirationTime) {
    if (completedBatches === null) {
      completedBatches = [firstBatch];
    } else {
      completedBatches.push(firstBatch);
    }
    if (firstBatch._defer) {
      // This root is blocked from committing by a batch. Unschedule it until
      // we receive another update.
      root.finishedWork = finishedWork;
      root.expirationTime = NoWork;
      return;
    }
  }

  // Commit the root.
  root.finishedWork = null;

  // Check if this is a nested update (a sync update scheduled during the
  // commit phase).
  if (root === lastCommittedRootDuringThisBatch) {
    // If the next root is the same as the previous root, this is a nested
    // update. To prevent an infinite loop, increment the nested update count.
    nestedUpdateCount++;
  } else {
    // Reset whenever we switch roots.
    lastCommittedRootDuringThisBatch = root;
    nestedUpdateCount = 0;
  }
  scheduler.unstable_runWithPriority(scheduler.unstable_ImmediatePriority, function () {
    commitRoot(root, finishedWork);
  });
}

function onUncaughtError(error) {
  !(nextFlushedRoot !== null) ? invariant(false, 'Should be working on a root. This error is likely caused by a bug in React. Please file an issue.') : void 0;
  // Unschedule this root so we don't work on it again until there's
  // another update.
  nextFlushedRoot.expirationTime = NoWork;
  if (!hasUnhandledError) {
    hasUnhandledError = true;
    unhandledError = error;
  }
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function batchedUpdates$1(fn, a) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return fn(a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

// TODO: Batching should be implemented at the renderer level, not inside
// the reconciler.
function unbatchedUpdates(fn, a) {
  if (isBatchingUpdates && !isUnbatchingUpdates) {
    isUnbatchingUpdates = true;
    try {
      return fn(a);
    } finally {
      isUnbatchingUpdates = false;
    }
  }
  return fn(a);
}

// TODO: Batching should be implemented at the renderer level, not within
// the reconciler.
function flushSync(fn, a) {
  !!isRendering ? invariant(false, 'flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.') : void 0;
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return syncUpdates(fn, a);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    performSyncWork();
  }
}

function interactiveUpdates$1(fn, a, b) {
  // If there are any pending interactive updates, synchronously flush them.
  // This needs to happen before we read any handlers, because the effect of
  // the previous event may influence which handlers are called during
  // this event.
  if (!isBatchingUpdates && !isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPriorityPendingInteractiveExpirationTime, false);
    lowestPriorityPendingInteractiveExpirationTime = NoWork;
  }
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    return scheduler.unstable_runWithPriority(scheduler.unstable_UserBlockingPriority, function () {
      return fn(a, b);
    });
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

function flushInteractiveUpdates$1() {
  if (!isRendering && lowestPriorityPendingInteractiveExpirationTime !== NoWork) {
    // Synchronously flush pending interactive updates.
    performWork(lowestPriorityPendingInteractiveExpirationTime, false);
    lowestPriorityPendingInteractiveExpirationTime = NoWork;
  }
}

function flushControlled(fn) {
  var previousIsBatchingUpdates = isBatchingUpdates;
  isBatchingUpdates = true;
  try {
    syncUpdates(fn);
  } finally {
    isBatchingUpdates = previousIsBatchingUpdates;
    if (!isBatchingUpdates && !isRendering) {
      performSyncWork();
    }
  }
}

// 0 is PROD, 1 is DEV.
// Might add PROFILE later.


var didWarnAboutNestedUpdates = void 0;
var didWarnAboutFindNodeInStrictMode = void 0;

{
  didWarnAboutNestedUpdates = false;
  didWarnAboutFindNodeInStrictMode = {};
}

function getContextForSubtree(parentComponent) {
  if (!parentComponent) {
    return emptyContextObject;
  }

  var fiber = get(parentComponent);
  var parentContext = findCurrentUnmaskedContext(fiber);

  if (fiber.tag === ClassComponent) {
    var Component = fiber.type;
    if (isContextProvider(Component)) {
      return processChildContext(fiber, Component, parentContext);
    }
  }

  return parentContext;
}

function scheduleRootUpdate(current$$1, element, expirationTime, callback) {
  {
    if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
      didWarnAboutNestedUpdates = true;
      warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
    }
  }

  var update = createUpdate(expirationTime);
  // Caution: React DevTools currently depends on this property
  // being called "element".
  update.payload = { element: element };

  callback = callback === undefined ? null : callback;
  if (callback !== null) {
    !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
    update.callback = callback;
  }

  flushPassiveEffects();
  enqueueUpdate(current$$1, update);
  scheduleWork(current$$1, expirationTime);

  return expirationTime;
}

function updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback) {
  // TODO: If this is a nested container, this won't be the root.
  var current$$1 = container.current;

  {
    if (ReactFiberInstrumentation_1.debugTool) {
      if (current$$1.alternate === null) {
        ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
      } else if (element === null) {
        ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
      } else {
        ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
      }
    }
  }

  var context = getContextForSubtree(parentComponent);
  if (container.context === null) {
    container.context = context;
  } else {
    container.pendingContext = context;
  }

  return scheduleRootUpdate(current$$1, element, expirationTime, callback);
}

function findHostInstance(component) {
  var fiber = get(component);
  if (fiber === undefined) {
    if (typeof component.render === 'function') {
      invariant(false, 'Unable to find node on an unmounted component.');
    } else {
      invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
    }
  }
  var hostFiber = findCurrentHostFiber(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

function findHostInstanceWithWarning(component, methodName) {
  {
    var fiber = get(component);
    if (fiber === undefined) {
      if (typeof component.render === 'function') {
        invariant(false, 'Unable to find node on an unmounted component.');
      } else {
        invariant(false, 'Argument appears to not be a ReactComponent. Keys: %s', Object.keys(component));
      }
    }
    var hostFiber = findCurrentHostFiber(fiber);
    if (hostFiber === null) {
      return null;
    }
    if (hostFiber.mode & StrictMode) {
      var componentName = getComponentName(fiber.type) || 'Component';
      if (!didWarnAboutFindNodeInStrictMode[componentName]) {
        didWarnAboutFindNodeInStrictMode[componentName] = true;
        if (fiber.mode & StrictMode) {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        } else {
          warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference.' + '\n%s' + '\n\nLearn more about using refs safely here:' + '\nhttps://fb.me/react-strict-mode-find-node', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
        }
      }
    }
    return hostFiber.stateNode;
  }
  return findHostInstance(component);
}

function createContainer(containerInfo, isConcurrent, hydrate) {
  return createFiberRoot(containerInfo, isConcurrent, hydrate);
}

function updateContainer(element, container, parentComponent, callback) {
  var current$$1 = container.current;
  var currentTime = requestCurrentTime();
  var expirationTime = computeExpirationForFiber(currentTime, current$$1);
  return updateContainerAtExpirationTime(element, container, parentComponent, expirationTime, callback);
}

function getPublicRootInstance(container) {
  var containerFiber = container.current;
  if (!containerFiber.child) {
    return null;
  }
  switch (containerFiber.child.tag) {
    case HostComponent:
      return getPublicInstance(containerFiber.child.stateNode);
    default:
      return containerFiber.child.stateNode;
  }
}

function findHostInstanceWithNoPortals(fiber) {
  var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
  if (hostFiber === null) {
    return null;
  }
  return hostFiber.stateNode;
}

var overrideProps = null;

{
  var copyWithSetImpl = function (obj, path, idx, value) {
    if (idx >= path.length) {
      return value;
    }
    var key = path[idx];
    var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj);
    // $FlowFixMe number or string is fine here
    updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
    return updated;
  };

  var copyWithSet = function (obj, path, value) {
    return copyWithSetImpl(obj, path, 0, value);
  };

  // Support DevTools props for function components, forwardRef, memo, host components, etc.
  overrideProps = function (fiber, path, value) {
    flushPassiveEffects();
    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
    if (fiber.alternate) {
      fiber.alternate.pendingProps = fiber.pendingProps;
    }
    scheduleWork(fiber, Sync);
  };
}

function injectIntoDevTools(devToolsConfig) {
  var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
  var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;


  return injectInternals(_assign({}, devToolsConfig, {
    overrideProps: overrideProps,
    currentDispatcherRef: ReactCurrentDispatcher,
    findHostInstanceByFiber: function (fiber) {
      var hostFiber = findCurrentHostFiber(fiber);
      if (hostFiber === null) {
        return null;
      }
      return hostFiber.stateNode;
    },
    findFiberByHostInstance: function (instance) {
      if (!findFiberByHostInstance) {
        // Might not be implemented by the renderer.
        return null;
      }
      return findFiberByHostInstance(instance);
    }
  }));
}

// This file intentionally does *not* have the Flow annotation.
// Don't add it. See `./inline-typed.js` for an explanation.

function createPortal$1(children, containerInfo,
// TODO: figure out the API for cross-renderer implementation.
implementation) {
  var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  return {
    // This tag allow us to uniquely identify this as a React Portal
    $$typeof: REACT_PORTAL_TYPE,
    key: key == null ? null : '' + key,
    children: children,
    containerInfo: containerInfo,
    implementation: implementation
  };
}

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.8.6';

// TODO: This type is shared between the reconciler and ReactDOM, but will
// eventually be lifted out to the renderer.

var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;

var topLevelUpdateWarnings = void 0;
var warnOnInvalidCallback = void 0;
var didWarnAboutUnstableCreatePortal = false;

{
  if (typeof Map !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Map has no prototype
  Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' ||
  // $FlowIssue Flow incorrectly thinks Set has no prototype
  Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
    warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
  }

  topLevelUpdateWarnings = function (container) {
    if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
      var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);
      if (hostInstance) {
        !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
      }
    }

    var isRootRenderedBySomeReact = !!container._reactRootContainer;
    var rootEl = getReactRootElementInContainer(container);
    var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));

    !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;

    !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
  };

  warnOnInvalidCallback = function (callback, callerName) {
    !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
  };
}

setRestoreImplementation(restoreControlledState$1);

function ReactBatch(root) {
  var expirationTime = computeUniqueAsyncExpiration();
  this._expirationTime = expirationTime;
  this._root = root;
  this._next = null;
  this._callbacks = null;
  this._didComplete = false;
  this._hasChildren = false;
  this._children = null;
  this._defer = true;
}
ReactBatch.prototype.render = function (children) {
  !this._defer ? invariant(false, 'batch.render: Cannot render a batch that already committed.') : void 0;
  this._hasChildren = true;
  this._children = children;
  var internalRoot = this._root._internalRoot;
  var expirationTime = this._expirationTime;
  var work = new ReactWork();
  updateContainerAtExpirationTime(children, internalRoot, null, expirationTime, work._onCommit);
  return work;
};
ReactBatch.prototype.then = function (onComplete) {
  if (this._didComplete) {
    onComplete();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onComplete);
};
ReactBatch.prototype.commit = function () {
  var internalRoot = this._root._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  !(this._defer && firstBatch !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;

  if (!this._hasChildren) {
    // This batch is empty. Return.
    this._next = null;
    this._defer = false;
    return;
  }

  var expirationTime = this._expirationTime;

  // Ensure this is the first batch in the list.
  if (firstBatch !== this) {
    // This batch is not the earliest batch. We need to move it to the front.
    // Update its expiration time to be the expiration time of the earliest
    // batch, so that we can flush it without flushing the other batches.
    if (this._hasChildren) {
      expirationTime = this._expirationTime = firstBatch._expirationTime;
      // Rendering this batch again ensures its children will be the final state
      // when we flush (updates are processed in insertion order: last
      // update wins).
      // TODO: This forces a restart. Should we print a warning?
      this.render(this._children);
    }

    // Remove the batch from the list.
    var previous = null;
    var batch = firstBatch;
    while (batch !== this) {
      previous = batch;
      batch = batch._next;
    }
    !(previous !== null) ? invariant(false, 'batch.commit: Cannot commit a batch multiple times.') : void 0;
    previous._next = batch._next;

    // Add it to the front.
    this._next = firstBatch;
    firstBatch = internalRoot.firstBatch = this;
  }

  // Synchronously flush all the work up to this batch's expiration time.
  this._defer = false;
  flushRoot(internalRoot, expirationTime);

  // Pop the batch from the list.
  var next = this._next;
  this._next = null;
  firstBatch = internalRoot.firstBatch = next;

  // Append the next earliest batch's children to the update queue.
  if (firstBatch !== null && firstBatch._hasChildren) {
    firstBatch.render(firstBatch._children);
  }
};
ReactBatch.prototype._onComplete = function () {
  if (this._didComplete) {
    return;
  }
  this._didComplete = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback = callbacks[i];
    _callback();
  }
};

function ReactWork() {
  this._callbacks = null;
  this._didCommit = false;
  // TODO: Avoid need to bind by replacing callbacks in the update queue with
  // list of Work objects.
  this._onCommit = this._onCommit.bind(this);
}
ReactWork.prototype.then = function (onCommit) {
  if (this._didCommit) {
    onCommit();
    return;
  }
  var callbacks = this._callbacks;
  if (callbacks === null) {
    callbacks = this._callbacks = [];
  }
  callbacks.push(onCommit);
};
ReactWork.prototype._onCommit = function () {
  if (this._didCommit) {
    return;
  }
  this._didCommit = true;
  var callbacks = this._callbacks;
  if (callbacks === null) {
    return;
  }
  // TODO: Error handling.
  for (var i = 0; i < callbacks.length; i++) {
    var _callback2 = callbacks[i];
    !(typeof _callback2 === 'function') ? invariant(false, 'Invalid argument passed as callback. Expected a function. Instead received: %s', _callback2) : void 0;
    _callback2();
  }
};

function ReactRoot(container, isConcurrent, hydrate) {
  var root = createContainer(container, isConcurrent, hydrate);
  this._internalRoot = root;
}
ReactRoot.prototype.render = function (children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.unmount = function (callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(null, root, null, work._onCommit);
  return work;
};
ReactRoot.prototype.legacy_renderSubtreeIntoContainer = function (parentComponent, children, callback) {
  var root = this._internalRoot;
  var work = new ReactWork();
  callback = callback === undefined ? null : callback;
  {
    warnOnInvalidCallback(callback, 'render');
  }
  if (callback !== null) {
    work.then(callback);
  }
  updateContainer(children, root, parentComponent, work._onCommit);
  return work;
};
ReactRoot.prototype.createBatch = function () {
  var batch = new ReactBatch(this);
  var expirationTime = batch._expirationTime;

  var internalRoot = this._internalRoot;
  var firstBatch = internalRoot.firstBatch;
  if (firstBatch === null) {
    internalRoot.firstBatch = batch;
    batch._next = null;
  } else {
    // Insert sorted by expiration time then insertion order
    var insertAfter = null;
    var insertBefore = firstBatch;
    while (insertBefore !== null && insertBefore._expirationTime >= expirationTime) {
      insertAfter = insertBefore;
      insertBefore = insertBefore._next;
    }
    batch._next = insertBefore;
    if (insertAfter !== null) {
      insertAfter._next = batch;
    }
  }

  return batch;
};

/**
 * True if the supplied DOM node is a valid node element.
 *
 * @param {?DOMElement} node The candidate DOM node.
 * @return {boolean} True if the DOM is a valid DOM node.
 * @internal
 */
function isValidContainer(node) {
  return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
}

function getReactRootElementInContainer(container) {
  if (!container) {
    return null;
  }

  if (container.nodeType === DOCUMENT_NODE) {
    return container.documentElement;
  } else {
    return container.firstChild;
  }
}

function shouldHydrateDueToLegacyHeuristic(container) {
  var rootElement = getReactRootElementInContainer(container);
  return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
}

setBatchingImplementation(batchedUpdates$1, interactiveUpdates$1, flushInteractiveUpdates$1);

var warnedAboutHydrateAPI = false;

function legacyCreateRootFromDOMContainer(container, forceHydrate) {
  var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container);
  // First clear any existing content.
  if (!shouldHydrate) {
    var warned = false;
    var rootSibling = void 0;
    while (rootSibling = container.lastChild) {
      {
        if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
          warned = true;
          warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
        }
      }
      container.removeChild(rootSibling);
    }
  }
  {
    if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
      warnedAboutHydrateAPI = true;
      lowPriorityWarning$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
    }
  }
  // Legacy roots are not async by default.
  var isConcurrent = false;
  return new ReactRoot(container, isConcurrent, shouldHydrate);
}

function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
  {
    topLevelUpdateWarnings(container);
  }

  // TODO: Without `any` type, Flow says "Property cannot be accessed on any
  // member of intersection type." Whyyyyyy.
  var root = container._reactRootContainer;
  if (!root) {
    // Initial mount
    root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
    if (typeof callback === 'function') {
      var originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        originalCallback.call(instance);
      };
    }
    // Initial mount should not be batched.
    unbatchedUpdates(function () {
      if (parentComponent != null) {
        root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
      } else {
        root.render(children, callback);
      }
    });
  } else {
    if (typeof callback === 'function') {
      var _originalCallback = callback;
      callback = function () {
        var instance = getPublicRootInstance(root._internalRoot);
        _originalCallback.call(instance);
      };
    }
    // Update
    if (parentComponent != null) {
      root.legacy_renderSubtreeIntoContainer(parentComponent, children, callback);
    } else {
      root.render(children, callback);
    }
  }
  return getPublicRootInstance(root._internalRoot);
}

function createPortal$$1(children, container) {
  var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

  !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
  // TODO: pass ReactDOM portal implementation as third argument
  return createPortal$1(children, container, null, key);
}

var ReactDOM = {
  createPortal: createPortal$$1,

  findDOMNode: function (componentOrElement) {
    {
      var owner = ReactCurrentOwner.current;
      if (owner !== null && owner.stateNode !== null) {
        var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
        !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
        owner.stateNode._warnedAboutRefsInRender = true;
      }
    }
    if (componentOrElement == null) {
      return null;
    }
    if (componentOrElement.nodeType === ELEMENT_NODE) {
      return componentOrElement;
    }
    {
      return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
    }
    return findHostInstance(componentOrElement);
  },
  hydrate: function (element, container, callback) {
    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
    {
      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    }
    // TODO: throw or warn if we couldn't hydrate?
    return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
  },
  render: function (element, container, callback) {
    !isValidContainer(container) ? invariant(false, 'Target container is not a DOM element.') : void 0;
    {
      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. ' + 'Did you mean to call root.render(element)?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    }
    return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
  },
  unstable_renderSubtreeIntoContainer: function (parentComponent, element, containerNode, callback) {
    !isValidContainer(containerNode) ? invariant(false, 'Target container is not a DOM element.') : void 0;
    !(parentComponent != null && has(parentComponent)) ? invariant(false, 'parentComponent must be a valid React Component') : void 0;
    return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
  },
  unmountComponentAtNode: function (container) {
    !isValidContainer(container) ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : void 0;

    {
      !!container._reactHasBeenPassedToCreateRootDEV ? warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.%s(). This is not supported. Did you mean to call root.unmount()?', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    }

    if (container._reactRootContainer) {
      {
        var rootEl = getReactRootElementInContainer(container);
        var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
        !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
      }

      // Unmount should not be batched.
      unbatchedUpdates(function () {
        legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
          container._reactRootContainer = null;
        });
      });
      // If you call unmountComponentAtNode twice in quick succession, you'll
      // get `true` twice. That's probably fine?
      return true;
    } else {
      {
        var _rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl));

        // Check if the container itself is a React root node.
        var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;

        !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
      }

      return false;
    }
  },


  // Temporary alias since we already shipped React 16 RC with it.
  // TODO: remove in React 17.
  unstable_createPortal: function () {
    if (!didWarnAboutUnstableCreatePortal) {
      didWarnAboutUnstableCreatePortal = true;
      lowPriorityWarning$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
    }
    return createPortal$$1.apply(undefined, arguments);
  },


  unstable_batchedUpdates: batchedUpdates$1,

  unstable_interactiveUpdates: interactiveUpdates$1,

  flushSync: flushSync,

  unstable_createRoot: createRoot,
  unstable_flushControlled: flushControlled,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
    // Keep in sync with ReactDOMUnstableNativeDependencies.js
    // and ReactTestUtils.js. This is an array for better minification.
    Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch]
  }
};

function createRoot(container, options) {
  var functionName = enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot';
  !isValidContainer(container) ? invariant(false, '%s(...): Target container is not a DOM element.', functionName) : void 0;
  {
    !!container._reactRootContainer ? warningWithoutStack$1(false, 'You are calling ReactDOM.%s() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.', enableStableConcurrentModeAPIs ? 'createRoot' : 'unstable_createRoot') : void 0;
    container._reactHasBeenPassedToCreateRootDEV = true;
  }
  var hydrate = options != null && options.hydrate === true;
  return new ReactRoot(container, true, hydrate);
}

if (enableStableConcurrentModeAPIs) {
  ReactDOM.createRoot = createRoot;
  ReactDOM.unstable_createRoot = undefined;
}

var foundDevTools = injectIntoDevTools({
  findFiberByHostInstance: getClosestInstanceFromNode,
  bundleType: 1,
  version: ReactVersion,
  rendererPackageName: 'react-dom'
});

{
  if (!foundDevTools && canUseDOM && window.top === window.self) {
    // If we're in Chrome or Firefox, provide a download link if not installed.
    if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
      var protocol = window.location.protocol;
      // Don't warn in exotic cases like chrome-extension://.
      if (/^(https?|file):$/.test(protocol)) {
        console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
      }
    }
  }
}



var ReactDOM$2 = Object.freeze({
	default: ReactDOM
});

var ReactDOM$3 = ( ReactDOM$2 && ReactDOM ) || ReactDOM$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var reactDom = ReactDOM$3.default || ReactDOM$3;

module.exports = reactDom;
  })();
}


/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||
    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'
  ) {
    return;
  }
  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }
  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}


/***/ }),

/***/ "./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;
var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

function typeOf(object) {
  if (typeof object === 'object' && object !== null) {
    var $$typeof = object.$$typeof;
    switch ($$typeof) {
      case REACT_ELEMENT_TYPE:
        var type = object.type;

        switch (type) {
          case REACT_ASYNC_MODE_TYPE:
          case REACT_CONCURRENT_MODE_TYPE:
          case REACT_FRAGMENT_TYPE:
          case REACT_PROFILER_TYPE:
          case REACT_STRICT_MODE_TYPE:
          case REACT_SUSPENSE_TYPE:
            return type;
          default:
            var $$typeofType = type && type.$$typeof;

            switch ($$typeofType) {
              case REACT_CONTEXT_TYPE:
              case REACT_FORWARD_REF_TYPE:
              case REACT_PROVIDER_TYPE:
                return $$typeofType;
              default:
                return $$typeof;
            }
        }
      case REACT_LAZY_TYPE:
      case REACT_MEMO_TYPE:
      case REACT_PORTAL_TYPE:
        return $$typeof;
    }
  }

  return undefined;
}

// AsyncMode is deprecated along with isAsyncMode
var AsyncMode = REACT_ASYNC_MODE_TYPE;
var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
var ContextConsumer = REACT_CONTEXT_TYPE;
var ContextProvider = REACT_PROVIDER_TYPE;
var Element = REACT_ELEMENT_TYPE;
var ForwardRef = REACT_FORWARD_REF_TYPE;
var Fragment = REACT_FRAGMENT_TYPE;
var Lazy = REACT_LAZY_TYPE;
var Memo = REACT_MEMO_TYPE;
var Portal = REACT_PORTAL_TYPE;
var Profiler = REACT_PROFILER_TYPE;
var StrictMode = REACT_STRICT_MODE_TYPE;
var Suspense = REACT_SUSPENSE_TYPE;

var hasWarnedAboutDeprecatedIsAsyncMode = false;

// AsyncMode should be deprecated
function isAsyncMode(object) {
  {
    if (!hasWarnedAboutDeprecatedIsAsyncMode) {
      hasWarnedAboutDeprecatedIsAsyncMode = true;
      lowPriorityWarning$1(false, 'The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
    }
  }
  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
}
function isConcurrentMode(object) {
  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
}
function isContextConsumer(object) {
  return typeOf(object) === REACT_CONTEXT_TYPE;
}
function isContextProvider(object) {
  return typeOf(object) === REACT_PROVIDER_TYPE;
}
function isElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}
function isForwardRef(object) {
  return typeOf(object) === REACT_FORWARD_REF_TYPE;
}
function isFragment(object) {
  return typeOf(object) === REACT_FRAGMENT_TYPE;
}
function isLazy(object) {
  return typeOf(object) === REACT_LAZY_TYPE;
}
function isMemo(object) {
  return typeOf(object) === REACT_MEMO_TYPE;
}
function isPortal(object) {
  return typeOf(object) === REACT_PORTAL_TYPE;
}
function isProfiler(object) {
  return typeOf(object) === REACT_PROFILER_TYPE;
}
function isStrictMode(object) {
  return typeOf(object) === REACT_STRICT_MODE_TYPE;
}
function isSuspense(object) {
  return typeOf(object) === REACT_SUSPENSE_TYPE;
}

exports.typeOf = typeOf;
exports.AsyncMode = AsyncMode;
exports.ConcurrentMode = ConcurrentMode;
exports.ContextConsumer = ContextConsumer;
exports.ContextProvider = ContextProvider;
exports.Element = Element;
exports.ForwardRef = ForwardRef;
exports.Fragment = Fragment;
exports.Lazy = Lazy;
exports.Memo = Memo;
exports.Portal = Portal;
exports.Profiler = Profiler;
exports.StrictMode = StrictMode;
exports.Suspense = Suspense;
exports.isValidElementType = isValidElementType;
exports.isAsyncMode = isAsyncMode;
exports.isConcurrentMode = isConcurrentMode;
exports.isContextConsumer = isContextConsumer;
exports.isContextProvider = isContextProvider;
exports.isElement = isElement;
exports.isForwardRef = isForwardRef;
exports.isFragment = isFragment;
exports.isLazy = isLazy;
exports.isMemo = isMemo;
exports.isPortal = isPortal;
exports.isProfiler = isProfiler;
exports.isStrictMode = isStrictMode;
exports.isSuspense = isSuspense;
  })();
}


/***/ }),

/***/ "./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ "./node_modules/react-is/cjs/react-is.development.js");
}


/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/SpeechRecognition.js":
/*!************************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/SpeechRecognition.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

exports.default = SpeechRecognition;

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function SpeechRecognition(options) {
  var SpeechRecognitionInner = function SpeechRecognitionInner(WrappedComponent) {
    var BrowserSpeechRecognition = typeof window !== 'undefined' && (window.SpeechRecognition || window.webkitSpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition || window.oSpeechRecognition);
    var recognition = BrowserSpeechRecognition ? new BrowserSpeechRecognition() : null;
    var browserSupportsSpeechRecognition = recognition !== null;
    var listening = undefined;
    if (!browserSupportsSpeechRecognition || options && options.autoStart === false) {
      listening = false;
    } else {
      recognition.start();
      listening = true;
    }
    var pauseAfterDisconnect = false;
    var interimTranscript = '';
    var finalTranscript = '';

    return (function (_Component) {
      _inherits(SpeechRecognitionContainer, _Component);

      function SpeechRecognitionContainer(props) {
        _classCallCheck(this, SpeechRecognitionContainer);

        var _this = _possibleConstructorReturn(this, (SpeechRecognitionContainer.__proto__ || Object.getPrototypeOf(SpeechRecognitionContainer)).call(this, props));

        _this.disconnect = function (disconnectType) {
          if (recognition) {
            switch (disconnectType) {
              case 'ABORT':
                pauseAfterDisconnect = true;
                recognition.abort();
                break;
              case 'RESET':
                pauseAfterDisconnect = false;
                recognition.abort();
                break;
              case 'STOP':
              default:
                pauseAfterDisconnect = true;
                recognition.stop();
            }
          }
        };

        _this.resetTranscript = function () {
          interimTranscript = '';
          finalTranscript = '';
          _this.disconnect('RESET');
          _this.setState({ interimTranscript: interimTranscript, finalTranscript: finalTranscript });
        };

        _this.startListening = function () {
          if (recognition && !listening) {
            if (!recognition.continuous) {
              _this.resetTranscript();
            }
            try {
              recognition.start();
            } catch (DOMException) {
              // Tried to start recognition after it has already started - safe to swallow this error
            }
            listening = true;
            _this.setState({ listening: listening });
          }
        };

        _this.abortListening = function () {
          listening = false;
          _this.setState({ listening: listening });
          _this.disconnect('ABORT');
        };

        _this.stopListening = function () {
          listening = false;
          _this.setState({ listening: listening });
          _this.disconnect('STOP');
        };

        if (browserSupportsSpeechRecognition) {
          recognition.continuous = options.continuous !== false;
          recognition.interimResults = true;
          recognition.onresult = _this.updateTranscript.bind(_this);
          recognition.onend = _this.onRecognitionDisconnect.bind(_this);
        }

        _this.state = {
          interimTranscript: interimTranscript,
          finalTranscript: finalTranscript,
          listening: listening
        };
        return _this;
      }

      _createClass(SpeechRecognitionContainer, [{
        key: 'onRecognitionDisconnect',
        value: function onRecognitionDisconnect() {
          listening = false;
          if (pauseAfterDisconnect) {
            this.setState({ listening: listening });
          } else if (recognition) {
            if (recognition.continuous) {
              this.startListening();
            } else {
              this.setState({ listening: listening });
            }
          }
          pauseAfterDisconnect = false;
        }
      }, {
        key: 'updateTranscript',
        value: function updateTranscript(event) {
          interimTranscript = '';
          for (var i = event.resultIndex; i < event.results.length; ++i) {
            if (event.results[i].isFinal) {
              finalTranscript = this.concatTranscripts(finalTranscript, event.results[i][0].transcript);
            } else {
              interimTranscript = this.concatTranscripts(interimTranscript, event.results[i][0].transcript);
            }
          }
          this.setState({ finalTranscript: finalTranscript, interimTranscript: interimTranscript });
        }
      }, {
        key: 'concatTranscripts',
        value: function concatTranscripts() {
          for (var _len = arguments.length, transcriptParts = Array(_len), _key = 0; _key < _len; _key++) {
            transcriptParts[_key] = arguments[_key];
          }

          return transcriptParts.map(function (t) {
            return t.trim();
          }).join(' ').trim();
        }
      }, {
        key: 'render',
        value: function render() {
          var transcript = this.concatTranscripts(finalTranscript, interimTranscript);

          return _react2.default.createElement(WrappedComponent, _extends({
            resetTranscript: this.resetTranscript,
            startListening: this.startListening,
            abortListening: this.abortListening,
            stopListening: this.stopListening,
            transcript: transcript,
            recognition: recognition,
            browserSupportsSpeechRecognition: browserSupportsSpeechRecognition
          }, this.state, this.props));
        }
      }]);

      return SpeechRecognitionContainer;
    })(_react.Component);
  };

  if (typeof options === 'function') {
    return SpeechRecognitionInner(options);
  } else {
    return SpeechRecognitionInner;
  }
}

/***/ }),

/***/ "./node_modules/react-speech-recognition/lib/index.js":
/*!************************************************************!*\
  !*** ./node_modules/react-speech-recognition/lib/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _SpeechRecognition = __webpack_require__(/*! ./SpeechRecognition */ "./node_modules/react-speech-recognition/lib/SpeechRecognition.js");

var _SpeechRecognition2 = _interopRequireDefault(_SpeechRecognition);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _SpeechRecognition2.default;

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.8.6
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");
var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

// TODO: this is special because it gets imported during build.

var ReactVersion = '16.8.6';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
var hasSymbol = typeof Symbol === 'function' && Symbol.for;

var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace;

var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;

var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
var FAUX_ITERATOR_SYMBOL = '@@iterator';

function getIteratorFn(maybeIterable) {
  if (maybeIterable === null || typeof maybeIterable !== 'object') {
    return null;
  }
  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
  if (typeof maybeIterator === 'function') {
    return maybeIterator;
  }
  return null;
}

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var validateFormat = function () {};

{
  validateFormat = function (format) {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  };
}

function invariant(condition, format, a, b, c, d, e, f) {
  validateFormat(format);

  if (!condition) {
    var error = void 0;
    if (format === undefined) {
      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(format.replace(/%s/g, function () {
        return args[argIndex++];
      }));
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
}

// Relying on the `invariant()` implementation lets us
// preserve the format and params in the www builds.

/**
 * Forked from fbjs/warning:
 * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
 *
 * Only change is we use console.warn instead of console.error,
 * and do nothing when 'console' is not supported.
 * This really simplifies the code.
 * ---
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var lowPriorityWarning = function () {};

{
  var printWarning = function (format) {
    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    var argIndex = 0;
    var message = 'Warning: ' + format.replace(/%s/g, function () {
      return args[argIndex++];
    });
    if (typeof console !== 'undefined') {
      console.warn(message);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };

  lowPriorityWarning = function (condition, format) {
    if (format === undefined) {
      throw new Error('`lowPriorityWarning(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (!condition) {
      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
        args[_key2 - 2] = arguments[_key2];
      }

      printWarning.apply(undefined, [format].concat(args));
    }
  };
}

var lowPriorityWarning$1 = lowPriorityWarning;

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warningWithoutStack = function () {};

{
  warningWithoutStack = function (condition, format) {
    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    if (format === undefined) {
      throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
    }
    if (args.length > 8) {
      // Check before the condition to catch violations early.
      throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
    }
    if (condition) {
      return;
    }
    if (typeof console !== 'undefined') {
      var argsWithFormat = args.map(function (item) {
        return '' + item;
      });
      argsWithFormat.unshift('Warning: ' + format);

      // We intentionally don't use spread (or .apply) directly because it
      // breaks IE9: https://github.com/facebook/react/issues/13610
      Function.prototype.apply.call(console.error, console, argsWithFormat);
    }
    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      var argIndex = 0;
      var message = 'Warning: ' + format.replace(/%s/g, function () {
        return args[argIndex++];
      });
      throw new Error(message);
    } catch (x) {}
  };
}

var warningWithoutStack$1 = warningWithoutStack;

var didWarnStateUpdateForUnmountedComponent = {};

function warnNoop(publicInstance, callerName) {
  {
    var _constructor = publicInstance.constructor;
    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
    var warningKey = componentName + '.' + callerName;
    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
      return;
    }
    warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
    didWarnStateUpdateForUnmountedComponent[warningKey] = true;
  }
}

/**
 * This is the abstract API for an update queue.
 */
var ReactNoopUpdateQueue = {
  /**
   * Checks whether or not this composite component is mounted.
   * @param {ReactClass} publicInstance The instance we want to test.
   * @return {boolean} True if mounted, false otherwise.
   * @protected
   * @final
   */
  isMounted: function (publicInstance) {
    return false;
  },

  /**
   * Forces an update. This should only be invoked when it is known with
   * certainty that we are **not** in a DOM transaction.
   *
   * You may want to call this when you know that some deeper aspect of the
   * component's state has changed but `setState` was not called.
   *
   * This will not invoke `shouldComponentUpdate`, but it will invoke
   * `componentWillUpdate` and `componentDidUpdate`.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueForceUpdate: function (publicInstance, callback, callerName) {
    warnNoop(publicInstance, 'forceUpdate');
  },

  /**
   * Replaces all of the state. Always use this or `setState` to mutate state.
   * You should treat `this.state` as immutable.
   *
   * There is no guarantee that `this.state` will be immediately updated, so
   * accessing `this.state` after calling this method may return the old value.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} completeState Next state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} callerName name of the calling function in the public API.
   * @internal
   */
  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
    warnNoop(publicInstance, 'replaceState');
  },

  /**
   * Sets a subset of the state. This only exists because _pendingState is
   * internal. This provides a merging strategy that is not available to deep
   * properties which is confusing. TODO: Expose pendingState or don't use it
   * during the merge.
   *
   * @param {ReactClass} publicInstance The instance that should rerender.
   * @param {object} partialState Next partial state to be merged with state.
   * @param {?function} callback Called after component is updated.
   * @param {?string} Name of the calling function in the public API.
   * @internal
   */
  enqueueSetState: function (publicInstance, partialState, callback, callerName) {
    warnNoop(publicInstance, 'setState');
  }
};

var emptyObject = {};
{
  Object.freeze(emptyObject);
}

/**
 * Base class helpers for the updating state of a component.
 */
function Component(props, context, updater) {
  this.props = props;
  this.context = context;
  // If a component has string refs, we will assign a different object later.
  this.refs = emptyObject;
  // We initialize the default updater but the real one gets injected by the
  // renderer.
  this.updater = updater || ReactNoopUpdateQueue;
}

Component.prototype.isReactComponent = {};

/**
 * Sets a subset of the state. Always use this to mutate
 * state. You should treat `this.state` as immutable.
 *
 * There is no guarantee that `this.state` will be immediately updated, so
 * accessing `this.state` after calling this method may return the old value.
 *
 * There is no guarantee that calls to `setState` will run synchronously,
 * as they may eventually be batched together.  You can provide an optional
 * callback that will be executed when the call to setState is actually
 * completed.
 *
 * When a function is provided to setState, it will be called at some point in
 * the future (not synchronously). It will be called with the up to date
 * component arguments (state, props, context). These values can be different
 * from this.* because your function may be called after receiveProps but before
 * shouldComponentUpdate, and this new state, props, and context will not yet be
 * assigned to this.
 *
 * @param {object|function} partialState Next partial state or function to
 *        produce next partial state to be merged with current state.
 * @param {?function} callback Called after state is updated.
 * @final
 * @protected
 */
Component.prototype.setState = function (partialState, callback) {
  !(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null) ? invariant(false, 'setState(...): takes an object of state variables to update or a function which returns an object of state variables.') : void 0;
  this.updater.enqueueSetState(this, partialState, callback, 'setState');
};

/**
 * Forces an update. This should only be invoked when it is known with
 * certainty that we are **not** in a DOM transaction.
 *
 * You may want to call this when you know that some deeper aspect of the
 * component's state has changed but `setState` was not called.
 *
 * This will not invoke `shouldComponentUpdate`, but it will invoke
 * `componentWillUpdate` and `componentDidUpdate`.
 *
 * @param {?function} callback Called after update is complete.
 * @final
 * @protected
 */
Component.prototype.forceUpdate = function (callback) {
  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
};

/**
 * Deprecated APIs. These APIs used to exist on classic React classes but since
 * we would like to deprecate them, we're not going to move them over to this
 * modern base class. Instead, we define a getter that warns if it's accessed.
 */
{
  var deprecatedAPIs = {
    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
  };
  var defineDeprecationWarning = function (methodName, info) {
    Object.defineProperty(Component.prototype, methodName, {
      get: function () {
        lowPriorityWarning$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
        return undefined;
      }
    });
  };
  for (var fnName in deprecatedAPIs) {
    if (deprecatedAPIs.hasOwnProperty(fnName)) {
      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
    }
  }
}

function ComponentDummy() {}
ComponentDummy.prototype = Component.prototype;

/**
 * Convenience component with default shallow equality check for sCU.
 */
function PureComponent(props, context, updater) {
  this.props = props;
  this.context = context;
  // If a component has string refs, we will assign a different object later.
  this.refs = emptyObject;
  this.updater = updater || ReactNoopUpdateQueue;
}

var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
pureComponentPrototype.constructor = PureComponent;
// Avoid an extra prototype jump for these methods.
_assign(pureComponentPrototype, Component.prototype);
pureComponentPrototype.isPureReactComponent = true;

// an immutable object with a single mutable value
function createRef() {
  var refObject = {
    current: null
  };
  {
    Object.seal(refObject);
  }
  return refObject;
}

/**
 * Keeps track of the current dispatcher.
 */
var ReactCurrentDispatcher = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

/**
 * Keeps track of the current owner.
 *
 * The current owner is the component who should own any components that are
 * currently being constructed.
 */
var ReactCurrentOwner = {
  /**
   * @internal
   * @type {ReactComponent}
   */
  current: null
};

var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

var describeComponentFrame = function (name, source, ownerName) {
  var sourceInfo = '';
  if (source) {
    var path = source.fileName;
    var fileName = path.replace(BEFORE_SLASH_RE, '');
    {
      // In DEV, include code for a common special case:
      // prefer "folder/index.js" instead of just "index.js".
      if (/^index\./.test(fileName)) {
        var match = path.match(BEFORE_SLASH_RE);
        if (match) {
          var pathBeforeSlash = match[1];
          if (pathBeforeSlash) {
            var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
            fileName = folderName + '/' + fileName;
          }
        }
      }
    }
    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
  } else if (ownerName) {
    sourceInfo = ' (created by ' + ownerName + ')';
  }
  return '\n    in ' + (name || 'Unknown') + sourceInfo;
};

var Resolved = 1;


function refineResolvedLazyComponent(lazyComponent) {
  return lazyComponent._status === Resolved ? lazyComponent._result : null;
}

function getWrappedName(outerType, innerType, wrapperName) {
  var functionName = innerType.displayName || innerType.name || '';
  return outerType.displayName || (functionName !== '' ? wrapperName + '(' + functionName + ')' : wrapperName);
}

function getComponentName(type) {
  if (type == null) {
    // Host root, text node or just invalid type.
    return null;
  }
  {
    if (typeof type.tag === 'number') {
      warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
    }
  }
  if (typeof type === 'function') {
    return type.displayName || type.name || null;
  }
  if (typeof type === 'string') {
    return type;
  }
  switch (type) {
    case REACT_CONCURRENT_MODE_TYPE:
      return 'ConcurrentMode';
    case REACT_FRAGMENT_TYPE:
      return 'Fragment';
    case REACT_PORTAL_TYPE:
      return 'Portal';
    case REACT_PROFILER_TYPE:
      return 'Profiler';
    case REACT_STRICT_MODE_TYPE:
      return 'StrictMode';
    case REACT_SUSPENSE_TYPE:
      return 'Suspense';
  }
  if (typeof type === 'object') {
    switch (type.$$typeof) {
      case REACT_CONTEXT_TYPE:
        return 'Context.Consumer';
      case REACT_PROVIDER_TYPE:
        return 'Context.Provider';
      case REACT_FORWARD_REF_TYPE:
        return getWrappedName(type, type.render, 'ForwardRef');
      case REACT_MEMO_TYPE:
        return getComponentName(type.type);
      case REACT_LAZY_TYPE:
        {
          var thenable = type;
          var resolvedThenable = refineResolvedLazyComponent(thenable);
          if (resolvedThenable) {
            return getComponentName(resolvedThenable);
          }
        }
    }
  }
  return null;
}

var ReactDebugCurrentFrame = {};

var currentlyValidatingElement = null;

function setCurrentlyValidatingElement(element) {
  {
    currentlyValidatingElement = element;
  }
}

{
  // Stack implementation injected by the current renderer.
  ReactDebugCurrentFrame.getCurrentStack = null;

  ReactDebugCurrentFrame.getStackAddendum = function () {
    var stack = '';

    // Add an extra top frame while an element is being validated
    if (currentlyValidatingElement) {
      var name = getComponentName(currentlyValidatingElement.type);
      var owner = currentlyValidatingElement._owner;
      stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
    }

    // Delegate to the injected renderer-specific implementation
    var impl = ReactDebugCurrentFrame.getCurrentStack;
    if (impl) {
      stack += impl() || '';
    }

    return stack;
  };
}

var ReactSharedInternals = {
  ReactCurrentDispatcher: ReactCurrentDispatcher,
  ReactCurrentOwner: ReactCurrentOwner,
  // Used by renderers to avoid bundling object-assign twice in UMD bundles:
  assign: _assign
};

{
  _assign(ReactSharedInternals, {
    // These should not be included in production.
    ReactDebugCurrentFrame: ReactDebugCurrentFrame,
    // Shim for React DOM 16.0.0 which still destructured (but not used) this.
    // TODO: remove in React 17.0.
    ReactComponentTreeHook: {}
  });
}

/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = warningWithoutStack$1;

{
  warning = function (condition, format) {
    if (condition) {
      return;
    }
    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
    var stack = ReactDebugCurrentFrame.getStackAddendum();
    // eslint-disable-next-line react-internal/warning-and-invariant-args

    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      args[_key - 2] = arguments[_key];
    }

    warningWithoutStack$1.apply(undefined, [false, format + '%s'].concat(args, [stack]));
  };
}

var warning$1 = warning;

var hasOwnProperty = Object.prototype.hasOwnProperty;

var RESERVED_PROPS = {
  key: true,
  ref: true,
  __self: true,
  __source: true
};

var specialPropKeyWarningShown = void 0;
var specialPropRefWarningShown = void 0;

function hasValidRef(config) {
  {
    if (hasOwnProperty.call(config, 'ref')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.ref !== undefined;
}

function hasValidKey(config) {
  {
    if (hasOwnProperty.call(config, 'key')) {
      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;
      if (getter && getter.isReactWarning) {
        return false;
      }
    }
  }
  return config.key !== undefined;
}

function defineKeyPropWarningGetter(props, displayName) {
  var warnAboutAccessingKey = function () {
    if (!specialPropKeyWarningShown) {
      specialPropKeyWarningShown = true;
      warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingKey.isReactWarning = true;
  Object.defineProperty(props, 'key', {
    get: warnAboutAccessingKey,
    configurable: true
  });
}

function defineRefPropWarningGetter(props, displayName) {
  var warnAboutAccessingRef = function () {
    if (!specialPropRefWarningShown) {
      specialPropRefWarningShown = true;
      warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
    }
  };
  warnAboutAccessingRef.isReactWarning = true;
  Object.defineProperty(props, 'ref', {
    get: warnAboutAccessingRef,
    configurable: true
  });
}

/**
 * Factory method to create a new React element. This no longer adheres to
 * the class pattern, so do not use new to call it. Also, no instanceof check
 * will work. Instead test $$typeof field against Symbol.for('react.element') to check
 * if something is a React Element.
 *
 * @param {*} type
 * @param {*} key
 * @param {string|object} ref
 * @param {*} self A *temporary* helper to detect places where `this` is
 * different from the `owner` when React.createElement is called, so that we
 * can warn. We want to get rid of owner and replace string `ref`s with arrow
 * functions, and as long as `this` and owner are the same, there will be no
 * change in behavior.
 * @param {*} source An annotation object (added by a transpiler or otherwise)
 * indicating filename, line number, and/or other information.
 * @param {*} owner
 * @param {*} props
 * @internal
 */
var ReactElement = function (type, key, ref, self, source, owner, props) {
  var element = {
    // This tag allows us to uniquely identify this as a React Element
    $$typeof: REACT_ELEMENT_TYPE,

    // Built-in properties that belong on the element
    type: type,
    key: key,
    ref: ref,
    props: props,

    // Record the component responsible for creating this element.
    _owner: owner
  };

  {
    // The validation flag is currently mutative. We put it on
    // an external backing store so that we can freeze the whole object.
    // This can be replaced with a WeakMap once they are implemented in
    // commonly used development environments.
    element._store = {};

    // To make comparing ReactElements easier for testing purposes, we make
    // the validation flag non-enumerable (where possible, which should
    // include every environment we run tests in), so the test framework
    // ignores it.
    Object.defineProperty(element._store, 'validated', {
      configurable: false,
      enumerable: false,
      writable: true,
      value: false
    });
    // self and source are DEV only properties.
    Object.defineProperty(element, '_self', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: self
    });
    // Two elements created in two different places should be considered
    // equal for testing purposes and therefore we hide it from enumeration.
    Object.defineProperty(element, '_source', {
      configurable: false,
      enumerable: false,
      writable: false,
      value: source
    });
    if (Object.freeze) {
      Object.freeze(element.props);
      Object.freeze(element);
    }
  }

  return element;
};

/**
 * Create and return a new ReactElement of the given type.
 * See https://reactjs.org/docs/react-api.html#createelement
 */
function createElement(type, config, children) {
  var propName = void 0;

  // Reserved names are extracted
  var props = {};

  var key = null;
  var ref = null;
  var self = null;
  var source = null;

  if (config != null) {
    if (hasValidRef(config)) {
      ref = config.ref;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    self = config.__self === undefined ? null : config.__self;
    source = config.__source === undefined ? null : config.__source;
    // Remaining properties are added to a new props object
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        props[propName] = config[propName];
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    {
      if (Object.freeze) {
        Object.freeze(childArray);
      }
    }
    props.children = childArray;
  }

  // Resolve default props
  if (type && type.defaultProps) {
    var defaultProps = type.defaultProps;
    for (propName in defaultProps) {
      if (props[propName] === undefined) {
        props[propName] = defaultProps[propName];
      }
    }
  }
  {
    if (key || ref) {
      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;
      if (key) {
        defineKeyPropWarningGetter(props, displayName);
      }
      if (ref) {
        defineRefPropWarningGetter(props, displayName);
      }
    }
  }
  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
}

/**
 * Return a function that produces ReactElements of a given type.
 * See https://reactjs.org/docs/react-api.html#createfactory
 */


function cloneAndReplaceKey(oldElement, newKey) {
  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);

  return newElement;
}

/**
 * Clone and return a new ReactElement using element as the starting point.
 * See https://reactjs.org/docs/react-api.html#cloneelement
 */
function cloneElement(element, config, children) {
  !!(element === null || element === undefined) ? invariant(false, 'React.cloneElement(...): The argument must be a React element, but you passed %s.', element) : void 0;

  var propName = void 0;

  // Original props are copied
  var props = _assign({}, element.props);

  // Reserved names are extracted
  var key = element.key;
  var ref = element.ref;
  // Self is preserved since the owner is preserved.
  var self = element._self;
  // Source is preserved since cloneElement is unlikely to be targeted by a
  // transpiler, and the original source is probably a better indicator of the
  // true owner.
  var source = element._source;

  // Owner will be preserved, unless ref is overridden
  var owner = element._owner;

  if (config != null) {
    if (hasValidRef(config)) {
      // Silently steal the ref from the parent.
      ref = config.ref;
      owner = ReactCurrentOwner.current;
    }
    if (hasValidKey(config)) {
      key = '' + config.key;
    }

    // Remaining properties override existing props
    var defaultProps = void 0;
    if (element.type && element.type.defaultProps) {
      defaultProps = element.type.defaultProps;
    }
    for (propName in config) {
      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
        if (config[propName] === undefined && defaultProps !== undefined) {
          // Resolve default props
          props[propName] = defaultProps[propName];
        } else {
          props[propName] = config[propName];
        }
      }
    }
  }

  // Children can be more than one argument, and those are transferred onto
  // the newly allocated props object.
  var childrenLength = arguments.length - 2;
  if (childrenLength === 1) {
    props.children = children;
  } else if (childrenLength > 1) {
    var childArray = Array(childrenLength);
    for (var i = 0; i < childrenLength; i++) {
      childArray[i] = arguments[i + 2];
    }
    props.children = childArray;
  }

  return ReactElement(element.type, key, ref, self, source, owner, props);
}

/**
 * Verifies the object is a ReactElement.
 * See https://reactjs.org/docs/react-api.html#isvalidelement
 * @param {?object} object
 * @return {boolean} True if `object` is a ReactElement.
 * @final
 */
function isValidElement(object) {
  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
}

var SEPARATOR = '.';
var SUBSEPARATOR = ':';

/**
 * Escape and wrap key so it is safe to use as a reactid
 *
 * @param {string} key to be escaped.
 * @return {string} the escaped key.
 */
function escape(key) {
  var escapeRegex = /[=:]/g;
  var escaperLookup = {
    '=': '=0',
    ':': '=2'
  };
  var escapedString = ('' + key).replace(escapeRegex, function (match) {
    return escaperLookup[match];
  });

  return '$' + escapedString;
}

/**
 * TODO: Test that a single child and an array with one item have the same key
 * pattern.
 */

var didWarnAboutMaps = false;

var userProvidedKeyEscapeRegex = /\/+/g;
function escapeUserProvidedKey(text) {
  return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
}

var POOL_SIZE = 10;
var traverseContextPool = [];
function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
  if (traverseContextPool.length) {
    var traverseContext = traverseContextPool.pop();
    traverseContext.result = mapResult;
    traverseContext.keyPrefix = keyPrefix;
    traverseContext.func = mapFunction;
    traverseContext.context = mapContext;
    traverseContext.count = 0;
    return traverseContext;
  } else {
    return {
      result: mapResult,
      keyPrefix: keyPrefix,
      func: mapFunction,
      context: mapContext,
      count: 0
    };
  }
}

function releaseTraverseContext(traverseContext) {
  traverseContext.result = null;
  traverseContext.keyPrefix = null;
  traverseContext.func = null;
  traverseContext.context = null;
  traverseContext.count = 0;
  if (traverseContextPool.length < POOL_SIZE) {
    traverseContextPool.push(traverseContext);
  }
}

/**
 * @param {?*} children Children tree container.
 * @param {!string} nameSoFar Name of the key path so far.
 * @param {!function} callback Callback to invoke with each child found.
 * @param {?*} traverseContext Used to pass information throughout the traversal
 * process.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
  var type = typeof children;

  if (type === 'undefined' || type === 'boolean') {
    // All of the above are perceived as null.
    children = null;
  }

  var invokeCallback = false;

  if (children === null) {
    invokeCallback = true;
  } else {
    switch (type) {
      case 'string':
      case 'number':
        invokeCallback = true;
        break;
      case 'object':
        switch (children.$$typeof) {
          case REACT_ELEMENT_TYPE:
          case REACT_PORTAL_TYPE:
            invokeCallback = true;
        }
    }
  }

  if (invokeCallback) {
    callback(traverseContext, children,
    // If it's the only child, treat the name as if it was wrapped in an array
    // so that it's consistent if the number of children grows.
    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
    return 1;
  }

  var child = void 0;
  var nextName = void 0;
  var subtreeCount = 0; // Count of children found in the current subtree.
  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      child = children[i];
      nextName = nextNamePrefix + getComponentKey(child, i);
      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
    }
  } else {
    var iteratorFn = getIteratorFn(children);
    if (typeof iteratorFn === 'function') {
      {
        // Warn about using Maps as children
        if (iteratorFn === children.entries) {
          !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
          didWarnAboutMaps = true;
        }
      }

      var iterator = iteratorFn.call(children);
      var step = void 0;
      var ii = 0;
      while (!(step = iterator.next()).done) {
        child = step.value;
        nextName = nextNamePrefix + getComponentKey(child, ii++);
        subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
      }
    } else if (type === 'object') {
      var addendum = '';
      {
        addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
      }
      var childrenString = '' + children;
      invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum);
    }
  }

  return subtreeCount;
}

/**
 * Traverses children that are typically specified as `props.children`, but
 * might also be specified through attributes:
 *
 * - `traverseAllChildren(this.props.children, ...)`
 * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
 *
 * The `traverseContext` is an optional argument that is passed through the
 * entire traversal. It can be used to store accumulations or anything else that
 * the callback might find relevant.
 *
 * @param {?*} children Children tree object.
 * @param {!function} callback To invoke upon traversing each child.
 * @param {?*} traverseContext Context for traversal.
 * @return {!number} The number of children in this subtree.
 */
function traverseAllChildren(children, callback, traverseContext) {
  if (children == null) {
    return 0;
  }

  return traverseAllChildrenImpl(children, '', callback, traverseContext);
}

/**
 * Generate a key string that identifies a component within a set.
 *
 * @param {*} component A component that could contain a manual key.
 * @param {number} index Index that is used if a manual key is not provided.
 * @return {string}
 */
function getComponentKey(component, index) {
  // Do some typechecking here since we call this blindly. We want to ensure
  // that we don't block potential future ES APIs.
  if (typeof component === 'object' && component !== null && component.key != null) {
    // Explicit key
    return escape(component.key);
  }
  // Implicit key determined by the index in the set
  return index.toString(36);
}

function forEachSingleChild(bookKeeping, child, name) {
  var func = bookKeeping.func,
      context = bookKeeping.context;

  func.call(context, child, bookKeeping.count++);
}

/**
 * Iterates through children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
 *
 * The provided forEachFunc(child, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} forEachFunc
 * @param {*} forEachContext Context for forEachContext.
 */
function forEachChildren(children, forEachFunc, forEachContext) {
  if (children == null) {
    return children;
  }
  var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
  traverseAllChildren(children, forEachSingleChild, traverseContext);
  releaseTraverseContext(traverseContext);
}

function mapSingleChildIntoContext(bookKeeping, child, childKey) {
  var result = bookKeeping.result,
      keyPrefix = bookKeeping.keyPrefix,
      func = bookKeeping.func,
      context = bookKeeping.context;


  var mappedChild = func.call(context, child, bookKeeping.count++);
  if (Array.isArray(mappedChild)) {
    mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
      return c;
    });
  } else if (mappedChild != null) {
    if (isValidElement(mappedChild)) {
      mappedChild = cloneAndReplaceKey(mappedChild,
      // Keep both the (mapped) and old keys if they differ, just as
      // traverseAllChildren used to do for objects as children
      keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
    }
    result.push(mappedChild);
  }
}

function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
  var escapedPrefix = '';
  if (prefix != null) {
    escapedPrefix = escapeUserProvidedKey(prefix) + '/';
  }
  var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
  traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
  releaseTraverseContext(traverseContext);
}

/**
 * Maps children that are typically specified as `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenmap
 *
 * The provided mapFunction(child, key, index) will be called for each
 * leaf child.
 *
 * @param {?*} children Children tree container.
 * @param {function(*, int)} func The map function.
 * @param {*} context Context for mapFunction.
 * @return {object} Object containing the ordered map of results.
 */
function mapChildren(children, func, context) {
  if (children == null) {
    return children;
  }
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, func, context);
  return result;
}

/**
 * Count the number of children that are typically specified as
 * `props.children`.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrencount
 *
 * @param {?*} children Children tree container.
 * @return {number} The number of children.
 */
function countChildren(children) {
  return traverseAllChildren(children, function () {
    return null;
  }, null);
}

/**
 * Flatten a children object (typically specified as `props.children`) and
 * return an array with appropriately re-keyed children.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
 */
function toArray(children) {
  var result = [];
  mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
    return child;
  });
  return result;
}

/**
 * Returns the first child in a collection of children and verifies that there
 * is only one child in the collection.
 *
 * See https://reactjs.org/docs/react-api.html#reactchildrenonly
 *
 * The current implementation of this function assumes that a single child gets
 * passed without a wrapper, but the purpose of this helper function is to
 * abstract away the particular structure of children.
 *
 * @param {?object} children Child collection structure.
 * @return {ReactElement} The first and only `ReactElement` contained in the
 * structure.
 */
function onlyChild(children) {
  !isValidElement(children) ? invariant(false, 'React.Children.only expected to receive a single React element child.') : void 0;
  return children;
}

function createContext(defaultValue, calculateChangedBits) {
  if (calculateChangedBits === undefined) {
    calculateChangedBits = null;
  } else {
    {
      !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
    }
  }

  var context = {
    $$typeof: REACT_CONTEXT_TYPE,
    _calculateChangedBits: calculateChangedBits,
    // As a workaround to support multiple concurrent renderers, we categorize
    // some renderers as primary and others as secondary. We only expect
    // there to be two concurrent renderers at most: React Native (primary) and
    // Fabric (secondary); React DOM (primary) and React ART (secondary).
    // Secondary renderers store their context values on separate fields.
    _currentValue: defaultValue,
    _currentValue2: defaultValue,
    // Used to track how many concurrent renderers this context currently
    // supports within in a single renderer. Such as parallel server rendering.
    _threadCount: 0,
    // These are circular
    Provider: null,
    Consumer: null
  };

  context.Provider = {
    $$typeof: REACT_PROVIDER_TYPE,
    _context: context
  };

  var hasWarnedAboutUsingNestedContextConsumers = false;
  var hasWarnedAboutUsingConsumerProvider = false;

  {
    // A separate object, but proxies back to the original context object for
    // backwards compatibility. It has a different $$typeof, so we can properly
    // warn for the incorrect usage of Context as a Consumer.
    var Consumer = {
      $$typeof: REACT_CONTEXT_TYPE,
      _context: context,
      _calculateChangedBits: context._calculateChangedBits
    };
    // $FlowFixMe: Flow complains about not setting a value, which is intentional here
    Object.defineProperties(Consumer, {
      Provider: {
        get: function () {
          if (!hasWarnedAboutUsingConsumerProvider) {
            hasWarnedAboutUsingConsumerProvider = true;
            warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
          }
          return context.Provider;
        },
        set: function (_Provider) {
          context.Provider = _Provider;
        }
      },
      _currentValue: {
        get: function () {
          return context._currentValue;
        },
        set: function (_currentValue) {
          context._currentValue = _currentValue;
        }
      },
      _currentValue2: {
        get: function () {
          return context._currentValue2;
        },
        set: function (_currentValue2) {
          context._currentValue2 = _currentValue2;
        }
      },
      _threadCount: {
        get: function () {
          return context._threadCount;
        },
        set: function (_threadCount) {
          context._threadCount = _threadCount;
        }
      },
      Consumer: {
        get: function () {
          if (!hasWarnedAboutUsingNestedContextConsumers) {
            hasWarnedAboutUsingNestedContextConsumers = true;
            warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
          }
          return context.Consumer;
        }
      }
    });
    // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty
    context.Consumer = Consumer;
  }

  {
    context._currentRenderer = null;
    context._currentRenderer2 = null;
  }

  return context;
}

function lazy(ctor) {
  var lazyType = {
    $$typeof: REACT_LAZY_TYPE,
    _ctor: ctor,
    // React uses these fields to store the result.
    _status: -1,
    _result: null
  };

  {
    // In production, this would just set it on the object.
    var defaultProps = void 0;
    var propTypes = void 0;
    Object.defineProperties(lazyType, {
      defaultProps: {
        configurable: true,
        get: function () {
          return defaultProps;
        },
        set: function (newDefaultProps) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          defaultProps = newDefaultProps;
          // Match production behavior more closely:
          Object.defineProperty(lazyType, 'defaultProps', {
            enumerable: true
          });
        }
      },
      propTypes: {
        configurable: true,
        get: function () {
          return propTypes;
        },
        set: function (newPropTypes) {
          warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
          propTypes = newPropTypes;
          // Match production behavior more closely:
          Object.defineProperty(lazyType, 'propTypes', {
            enumerable: true
          });
        }
      }
    });
  }

  return lazyType;
}

function forwardRef(render) {
  {
    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
      warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
    } else if (typeof render !== 'function') {
      warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
    } else {
      !(
      // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
      render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
    }

    if (render != null) {
      !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
    }
  }

  return {
    $$typeof: REACT_FORWARD_REF_TYPE,
    render: render
  };
}

function isValidElementType(type) {
  return typeof type === 'string' || typeof type === 'function' ||
  // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE);
}

function memo(type, compare) {
  {
    if (!isValidElementType(type)) {
      warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
    }
  }
  return {
    $$typeof: REACT_MEMO_TYPE,
    type: type,
    compare: compare === undefined ? null : compare
  };
}

function resolveDispatcher() {
  var dispatcher = ReactCurrentDispatcher.current;
  !(dispatcher !== null) ? invariant(false, 'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.') : void 0;
  return dispatcher;
}

function useContext(Context, unstable_observedBits) {
  var dispatcher = resolveDispatcher();
  {
    !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0;

    // TODO: add a more generic warning for invalid values.
    if (Context._context !== undefined) {
      var realContext = Context._context;
      // Don't deduplicate because this legitimately causes bugs
      // and nobody should be using this in existing code.
      if (realContext.Consumer === Context) {
        warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
      } else if (realContext.Provider === Context) {
        warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
      }
    }
  }
  return dispatcher.useContext(Context, unstable_observedBits);
}

function useState(initialState) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useState(initialState);
}

function useReducer(reducer, initialArg, init) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useReducer(reducer, initialArg, init);
}

function useRef(initialValue) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useRef(initialValue);
}

function useEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useEffect(create, inputs);
}

function useLayoutEffect(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useLayoutEffect(create, inputs);
}

function useCallback(callback, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useCallback(callback, inputs);
}

function useMemo(create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useMemo(create, inputs);
}

function useImperativeHandle(ref, create, inputs) {
  var dispatcher = resolveDispatcher();
  return dispatcher.useImperativeHandle(ref, create, inputs);
}

function useDebugValue(value, formatterFn) {
  {
    var dispatcher = resolveDispatcher();
    return dispatcher.useDebugValue(value, formatterFn);
  }
}

/**
 * ReactElementValidator provides a wrapper around a element factory
 * which validates the props passed to the element. This is intended to be
 * used only in DEV and could be replaced by a static type checker for languages
 * that support it.
 */

var propTypesMisspellWarningShown = void 0;

{
  propTypesMisspellWarningShown = false;
}

function getDeclarationErrorAddendum() {
  if (ReactCurrentOwner.current) {
    var name = getComponentName(ReactCurrentOwner.current.type);
    if (name) {
      return '\n\nCheck the render method of `' + name + '`.';
    }
  }
  return '';
}

function getSourceInfoErrorAddendum(elementProps) {
  if (elementProps !== null && elementProps !== undefined && elementProps.__source !== undefined) {
    var source = elementProps.__source;
    var fileName = source.fileName.replace(/^.*[\\\/]/, '');
    var lineNumber = source.lineNumber;
    return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
  }
  return '';
}

/**
 * Warn if there's no key explicitly set on dynamic arrays of children or
 * object keys are not valid. This allows us to keep track of children between
 * updates.
 */
var ownerHasKeyUseWarning = {};

function getCurrentComponentErrorInfo(parentType) {
  var info = getDeclarationErrorAddendum();

  if (!info) {
    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;
    if (parentName) {
      info = '\n\nCheck the top-level render call using <' + parentName + '>.';
    }
  }
  return info;
}

/**
 * Warn if the element doesn't have an explicit key assigned to it.
 * This element is in an array. The array could grow and shrink or be
 * reordered. All children that haven't already been validated are required to
 * have a "key" property assigned to it. Error statuses are cached so a warning
 * will only be shown once.
 *
 * @internal
 * @param {ReactElement} element Element that requires a key.
 * @param {*} parentType element's parent's type.
 */
function validateExplicitKey(element, parentType) {
  if (!element._store || element._store.validated || element.key != null) {
    return;
  }
  element._store.validated = true;

  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
    return;
  }
  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;

  // Usually the current owner is the offender, but if it accepts children as a
  // property, it may be the creator of the child that's responsible for
  // assigning it a key.
  var childOwner = '';
  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
    // Give the component that originally created this child.
    childOwner = ' It was passed a child from ' + getComponentName(element._owner.type) + '.';
  }

  setCurrentlyValidatingElement(element);
  {
    warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
  }
  setCurrentlyValidatingElement(null);
}

/**
 * Ensure that every element either is passed in a static location, in an
 * array with an explicit keys property defined, or in an object literal
 * with valid key property.
 *
 * @internal
 * @param {ReactNode} node Statically passed child of any type.
 * @param {*} parentType node's parent's type.
 */
function validateChildKeys(node, parentType) {
  if (typeof node !== 'object') {
    return;
  }
  if (Array.isArray(node)) {
    for (var i = 0; i < node.length; i++) {
      var child = node[i];
      if (isValidElement(child)) {
        validateExplicitKey(child, parentType);
      }
    }
  } else if (isValidElement(node)) {
    // This element was passed in a valid location.
    if (node._store) {
      node._store.validated = true;
    }
  } else if (node) {
    var iteratorFn = getIteratorFn(node);
    if (typeof iteratorFn === 'function') {
      // Entry iterators used to provide implicit keys,
      // but now we print a separate warning for them later.
      if (iteratorFn !== node.entries) {
        var iterator = iteratorFn.call(node);
        var step = void 0;
        while (!(step = iterator.next()).done) {
          if (isValidElement(step.value)) {
            validateExplicitKey(step.value, parentType);
          }
        }
      }
    }
  }
}

/**
 * Given an element, validate that its props follow the propTypes definition,
 * provided by the type.
 *
 * @param {ReactElement} element
 */
function validatePropTypes(element) {
  var type = element.type;
  if (type === null || type === undefined || typeof type === 'string') {
    return;
  }
  var name = getComponentName(type);
  var propTypes = void 0;
  if (typeof type === 'function') {
    propTypes = type.propTypes;
  } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE ||
  // Note: Memo only checks outer props here.
  // Inner props are checked in the reconciler.
  type.$$typeof === REACT_MEMO_TYPE)) {
    propTypes = type.propTypes;
  } else {
    return;
  }
  if (propTypes) {
    setCurrentlyValidatingElement(element);
    checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
    setCurrentlyValidatingElement(null);
  } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
    propTypesMisspellWarningShown = true;
    warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
  }
  if (typeof type.getDefaultProps === 'function') {
    !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
  }
}

/**
 * Given a fragment, validate that it can only be provided with fragment props
 * @param {ReactElement} fragment
 */
function validateFragmentProps(fragment) {
  setCurrentlyValidatingElement(fragment);

  var keys = Object.keys(fragment.props);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (key !== 'children' && key !== 'key') {
      warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
      break;
    }
  }

  if (fragment.ref !== null) {
    warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
  }

  setCurrentlyValidatingElement(null);
}

function createElementWithValidation(type, props, children) {
  var validType = isValidElementType(type);

  // We warn in this case but don't throw. We expect the element creation to
  // succeed and there will likely be errors in render.
  if (!validType) {
    var info = '';
    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
      info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
    }

    var sourceInfo = getSourceInfoErrorAddendum(props);
    if (sourceInfo) {
      info += sourceInfo;
    } else {
      info += getDeclarationErrorAddendum();
    }

    var typeString = void 0;
    if (type === null) {
      typeString = 'null';
    } else if (Array.isArray(type)) {
      typeString = 'array';
    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
      typeString = '<' + (getComponentName(type.type) || 'Unknown') + ' />';
      info = ' Did you accidentally export a JSX literal instead of a component?';
    } else {
      typeString = typeof type;
    }

    warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
  }

  var element = createElement.apply(this, arguments);

  // The result can be nullish if a mock or a custom function is used.
  // TODO: Drop this when these are no longer allowed as the type argument.
  if (element == null) {
    return element;
  }

  // Skip key warning if the type isn't valid since our key validation logic
  // doesn't expect a non-string/function type and can throw confusing errors.
  // We don't want exception behavior to differ between dev and prod.
  // (Rendering will throw with a helpful message and as soon as the type is
  // fixed, the key warnings will appear.)
  if (validType) {
    for (var i = 2; i < arguments.length; i++) {
      validateChildKeys(arguments[i], type);
    }
  }

  if (type === REACT_FRAGMENT_TYPE) {
    validateFragmentProps(element);
  } else {
    validatePropTypes(element);
  }

  return element;
}

function createFactoryWithValidation(type) {
  var validatedFactory = createElementWithValidation.bind(null, type);
  validatedFactory.type = type;
  // Legacy hook: remove it
  {
    Object.defineProperty(validatedFactory, 'type', {
      enumerable: false,
      get: function () {
        lowPriorityWarning$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
        Object.defineProperty(this, 'type', {
          value: type
        });
        return type;
      }
    });
  }

  return validatedFactory;
}

function cloneElementWithValidation(element, props, children) {
  var newElement = cloneElement.apply(this, arguments);
  for (var i = 2; i < arguments.length; i++) {
    validateChildKeys(arguments[i], newElement.type);
  }
  validatePropTypes(newElement);
  return newElement;
}

// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:


// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.


// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


// Gather advanced timing metrics for Profiler subtrees.


// Trace which interactions trigger each commit.


// Only used in www builds.
 // TODO: true? Here it might just be false.

// Only used in www builds.


// Only used in www builds.


// React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties


// These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
var enableStableConcurrentModeAPIs = false;

var React = {
  Children: {
    map: mapChildren,
    forEach: forEachChildren,
    count: countChildren,
    toArray: toArray,
    only: onlyChild
  },

  createRef: createRef,
  Component: Component,
  PureComponent: PureComponent,

  createContext: createContext,
  forwardRef: forwardRef,
  lazy: lazy,
  memo: memo,

  useCallback: useCallback,
  useContext: useContext,
  useEffect: useEffect,
  useImperativeHandle: useImperativeHandle,
  useDebugValue: useDebugValue,
  useLayoutEffect: useLayoutEffect,
  useMemo: useMemo,
  useReducer: useReducer,
  useRef: useRef,
  useState: useState,

  Fragment: REACT_FRAGMENT_TYPE,
  StrictMode: REACT_STRICT_MODE_TYPE,
  Suspense: REACT_SUSPENSE_TYPE,

  createElement: createElementWithValidation,
  cloneElement: cloneElementWithValidation,
  createFactory: createFactoryWithValidation,
  isValidElement: isValidElement,

  version: ReactVersion,

  unstable_ConcurrentMode: REACT_CONCURRENT_MODE_TYPE,
  unstable_Profiler: REACT_PROFILER_TYPE,

  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
};

// Note: some APIs are added with feature flags.
// Make sure that stable builds for open source
// don't modify the React object to avoid deopts.
// Also let's not expose their names in stable builds.

if (enableStableConcurrentModeAPIs) {
  React.ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
  React.Profiler = REACT_PROFILER_TYPE;
  React.unstable_ConcurrentMode = undefined;
  React.unstable_Profiler = undefined;
}



var React$2 = Object.freeze({
	default: React
});

var React$3 = ( React$2 && React ) || React$2;

// TODO: decide on the top-level export form.
// This is hacky but makes it work with both Rollup and Jest.
var react = React$3.default || React$3;

module.exports = react;
  })();
}


/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}


/***/ }),

/***/ "./node_modules/recompose/shallowEqual.js":
/*!************************************************!*\
  !*** ./node_modules/recompose/shallowEqual.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.__esModule = true;

var _shallowEqual = __webpack_require__(/*! fbjs/lib/shallowEqual */ "./node_modules/fbjs/lib/shallowEqual.js");

var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _shallowEqual2.default;

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler-tracing.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler-tracing.development.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.13.6
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

// Helps identify side effects in begin-phase lifecycle hooks and setState reducers:


// In some cases, StrictMode should also double-render lifecycles.
// This can be confusing for tests though,
// And it can be bad for performance in production.
// This feature flag can be used to control the behavior:


// To preserve the "Pause on caught exceptions" behavior of the debugger, we
// replay the begin phase of a failed component inside invokeGuardedCallback.


// Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:


// Gather advanced timing metrics for Profiler subtrees.


// Trace which interactions trigger each commit.
var enableSchedulerTracing = true;

// Only used in www builds.
 // TODO: true? Here it might just be false.

// Only used in www builds.


// Only used in www builds.


// React Fire: prevent the value and checked attributes from syncing
// with their related DOM properties


// These APIs will no longer be "unstable" in the upcoming 16.7 release,
// Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

var DEFAULT_THREAD_ID = 0;

// Counters used to generate unique IDs.
var interactionIDCounter = 0;
var threadIDCounter = 0;

// Set of currently traced interactions.
// Interactions "stack"–
// Meaning that newly traced interactions are appended to the previously active set.
// When an interaction goes out of scope, the previous set (if any) is restored.
exports.__interactionsRef = null;

// Listener(s) to notify when interactions begin and end.
exports.__subscriberRef = null;

if (enableSchedulerTracing) {
  exports.__interactionsRef = {
    current: new Set()
  };
  exports.__subscriberRef = {
    current: null
  };
}

function unstable_clear(callback) {
  if (!enableSchedulerTracing) {
    return callback();
  }

  var prevInteractions = exports.__interactionsRef.current;
  exports.__interactionsRef.current = new Set();

  try {
    return callback();
  } finally {
    exports.__interactionsRef.current = prevInteractions;
  }
}

function unstable_getCurrent() {
  if (!enableSchedulerTracing) {
    return null;
  } else {
    return exports.__interactionsRef.current;
  }
}

function unstable_getThreadID() {
  return ++threadIDCounter;
}

function unstable_trace(name, timestamp, callback) {
  var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback();
  }

  var interaction = {
    __count: 1,
    id: interactionIDCounter++,
    name: name,
    timestamp: timestamp
  };

  var prevInteractions = exports.__interactionsRef.current;

  // Traced interactions should stack/accumulate.
  // To do that, clone the current interactions.
  // The previous set will be restored upon completion.
  var interactions = new Set(prevInteractions);
  interactions.add(interaction);
  exports.__interactionsRef.current = interactions;

  var subscriber = exports.__subscriberRef.current;
  var returnValue = void 0;

  try {
    if (subscriber !== null) {
      subscriber.onInteractionTraced(interaction);
    }
  } finally {
    try {
      if (subscriber !== null) {
        subscriber.onWorkStarted(interactions, threadID);
      }
    } finally {
      try {
        returnValue = callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;

        try {
          if (subscriber !== null) {
            subscriber.onWorkStopped(interactions, threadID);
          }
        } finally {
          interaction.__count--;

          // If no async work was scheduled for this interaction,
          // Notify subscribers that it's completed.
          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        }
      }
    }
  }

  return returnValue;
}

function unstable_wrap(callback) {
  var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

  if (!enableSchedulerTracing) {
    return callback;
  }

  var wrappedInteractions = exports.__interactionsRef.current;

  var subscriber = exports.__subscriberRef.current;
  if (subscriber !== null) {
    subscriber.onWorkScheduled(wrappedInteractions, threadID);
  }

  // Update the pending async work count for the current interactions.
  // Update after calling subscribers in case of error.
  wrappedInteractions.forEach(function (interaction) {
    interaction.__count++;
  });

  var hasRun = false;

  function wrapped() {
    var prevInteractions = exports.__interactionsRef.current;
    exports.__interactionsRef.current = wrappedInteractions;

    subscriber = exports.__subscriberRef.current;

    try {
      var returnValue = void 0;

      try {
        if (subscriber !== null) {
          subscriber.onWorkStarted(wrappedInteractions, threadID);
        }
      } finally {
        try {
          returnValue = callback.apply(undefined, arguments);
        } finally {
          exports.__interactionsRef.current = prevInteractions;

          if (subscriber !== null) {
            subscriber.onWorkStopped(wrappedInteractions, threadID);
          }
        }
      }

      return returnValue;
    } finally {
      if (!hasRun) {
        // We only expect a wrapped function to be executed once,
        // But in the event that it's executed more than once–
        // Only decrement the outstanding interaction counts once.
        hasRun = true;

        // Update pending async counts for all wrapped interactions.
        // If this was the last scheduled async work for any of them,
        // Mark them as completed.
        wrappedInteractions.forEach(function (interaction) {
          interaction.__count--;

          if (subscriber !== null && interaction.__count === 0) {
            subscriber.onInteractionScheduledWorkCompleted(interaction);
          }
        });
      }
    }
  }

  wrapped.cancel = function cancel() {
    subscriber = exports.__subscriberRef.current;

    try {
      if (subscriber !== null) {
        subscriber.onWorkCanceled(wrappedInteractions, threadID);
      }
    } finally {
      // Update pending async counts for all wrapped interactions.
      // If this was the last scheduled async work for any of them,
      // Mark them as completed.
      wrappedInteractions.forEach(function (interaction) {
        interaction.__count--;

        if (subscriber && interaction.__count === 0) {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        }
      });
    }
  };

  return wrapped;
}

var subscribers = null;
if (enableSchedulerTracing) {
  subscribers = new Set();
}

function unstable_subscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.add(subscriber);

    if (subscribers.size === 1) {
      exports.__subscriberRef.current = {
        onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
        onInteractionTraced: onInteractionTraced,
        onWorkCanceled: onWorkCanceled,
        onWorkScheduled: onWorkScheduled,
        onWorkStarted: onWorkStarted,
        onWorkStopped: onWorkStopped
      };
    }
  }
}

function unstable_unsubscribe(subscriber) {
  if (enableSchedulerTracing) {
    subscribers.delete(subscriber);

    if (subscribers.size === 0) {
      exports.__subscriberRef.current = null;
    }
  }
}

function onInteractionTraced(interaction) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionTraced(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onInteractionScheduledWorkCompleted(interaction) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onInteractionScheduledWorkCompleted(interaction);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkScheduled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkScheduled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStarted(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStarted(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkStopped(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkStopped(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

function onWorkCanceled(interactions, threadID) {
  var didCatchError = false;
  var caughtError = null;

  subscribers.forEach(function (subscriber) {
    try {
      subscriber.onWorkCanceled(interactions, threadID);
    } catch (error) {
      if (!didCatchError) {
        didCatchError = true;
        caughtError = error;
      }
    }
  });

  if (didCatchError) {
    throw caughtError;
  }
}

exports.unstable_clear = unstable_clear;
exports.unstable_getCurrent = unstable_getCurrent;
exports.unstable_getThreadID = unstable_getThreadID;
exports.unstable_trace = unstable_trace;
exports.unstable_wrap = unstable_wrap;
exports.unstable_subscribe = unstable_subscribe;
exports.unstable_unsubscribe = unstable_unsubscribe;
  })();
}


/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/** @license React v0.13.6
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */





if (true) {
  (function() {
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var enableSchedulerDebugging = false;

/* eslint-disable no-var */

// TODO: Use symbols?
var ImmediatePriority = 1;
var UserBlockingPriority = 2;
var NormalPriority = 3;
var LowPriority = 4;
var IdlePriority = 5;

// Max 31 bit integer. The max integer size in V8 for 32-bit systems.
// Math.pow(2, 30) - 1
// 0b111111111111111111111111111111
var maxSigned31BitInt = 1073741823;

// Times out immediately
var IMMEDIATE_PRIORITY_TIMEOUT = -1;
// Eventually times out
var USER_BLOCKING_PRIORITY = 250;
var NORMAL_PRIORITY_TIMEOUT = 5000;
var LOW_PRIORITY_TIMEOUT = 10000;
// Never times out
var IDLE_PRIORITY = maxSigned31BitInt;

// Callbacks are stored as a circular, doubly linked list.
var firstCallbackNode = null;

var currentDidTimeout = false;
// Pausing the scheduler is useful for debugging.
var isSchedulerPaused = false;

var currentPriorityLevel = NormalPriority;
var currentEventStartTime = -1;
var currentExpirationTime = -1;

// This is set when a callback is being executed, to prevent re-entrancy.
var isExecutingCallback = false;

var isHostCallbackScheduled = false;

var hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';

function ensureHostCallbackIsScheduled() {
  if (isExecutingCallback) {
    // Don't schedule work yet; wait until the next time we yield.
    return;
  }
  // Schedule the host callback using the earliest expiration in the list.
  var expirationTime = firstCallbackNode.expirationTime;
  if (!isHostCallbackScheduled) {
    isHostCallbackScheduled = true;
  } else {
    // Cancel the existing host callback.
    cancelHostCallback();
  }
  requestHostCallback(flushWork, expirationTime);
}

function flushFirstCallback() {
  var flushedNode = firstCallbackNode;

  // Remove the node from the list before calling the callback. That way the
  // list is in a consistent state even if the callback throws.
  var next = firstCallbackNode.next;
  if (firstCallbackNode === next) {
    // This is the last callback in the list.
    firstCallbackNode = null;
    next = null;
  } else {
    var lastCallbackNode = firstCallbackNode.previous;
    firstCallbackNode = lastCallbackNode.next = next;
    next.previous = lastCallbackNode;
  }

  flushedNode.next = flushedNode.previous = null;

  // Now it's safe to call the callback.
  var callback = flushedNode.callback;
  var expirationTime = flushedNode.expirationTime;
  var priorityLevel = flushedNode.priorityLevel;
  var previousPriorityLevel = currentPriorityLevel;
  var previousExpirationTime = currentExpirationTime;
  currentPriorityLevel = priorityLevel;
  currentExpirationTime = expirationTime;
  var continuationCallback;
  try {
    continuationCallback = callback();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
    currentExpirationTime = previousExpirationTime;
  }

  // A callback may return a continuation. The continuation should be scheduled
  // with the same priority and expiration as the just-finished callback.
  if (typeof continuationCallback === 'function') {
    var continuationNode = {
      callback: continuationCallback,
      priorityLevel: priorityLevel,
      expirationTime: expirationTime,
      next: null,
      previous: null
    };

    // Insert the new callback into the list, sorted by its expiration. This is
    // almost the same as the code in `scheduleCallback`, except the callback
    // is inserted into the list *before* callbacks of equal expiration instead
    // of after.
    if (firstCallbackNode === null) {
      // This is the first callback in the list.
      firstCallbackNode = continuationNode.next = continuationNode.previous = continuationNode;
    } else {
      var nextAfterContinuation = null;
      var node = firstCallbackNode;
      do {
        if (node.expirationTime >= expirationTime) {
          // This callback expires at or after the continuation. We will insert
          // the continuation *before* this callback.
          nextAfterContinuation = node;
          break;
        }
        node = node.next;
      } while (node !== firstCallbackNode);

      if (nextAfterContinuation === null) {
        // No equal or lower priority callback was found, which means the new
        // callback is the lowest priority callback in the list.
        nextAfterContinuation = firstCallbackNode;
      } else if (nextAfterContinuation === firstCallbackNode) {
        // The new callback is the highest priority callback in the list.
        firstCallbackNode = continuationNode;
        ensureHostCallbackIsScheduled();
      }

      var previous = nextAfterContinuation.previous;
      previous.next = nextAfterContinuation.previous = continuationNode;
      continuationNode.next = nextAfterContinuation;
      continuationNode.previous = previous;
    }
  }
}

function flushImmediateWork() {
  if (
  // Confirm we've exited the outer most event handler
  currentEventStartTime === -1 && firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority) {
    isExecutingCallback = true;
    try {
      do {
        flushFirstCallback();
      } while (
      // Keep flushing until there are no more immediate callbacks
      firstCallbackNode !== null && firstCallbackNode.priorityLevel === ImmediatePriority);
    } finally {
      isExecutingCallback = false;
      if (firstCallbackNode !== null) {
        // There's still work remaining. Request another callback.
        ensureHostCallbackIsScheduled();
      } else {
        isHostCallbackScheduled = false;
      }
    }
  }
}

function flushWork(didTimeout) {
  // Exit right away if we're currently paused

  if (enableSchedulerDebugging && isSchedulerPaused) {
    return;
  }

  isExecutingCallback = true;
  var previousDidTimeout = currentDidTimeout;
  currentDidTimeout = didTimeout;
  try {
    if (didTimeout) {
      // Flush all the expired callbacks without yielding.
      while (firstCallbackNode !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
        // TODO Wrap in feature flag
        // Read the current time. Flush all the callbacks that expire at or
        // earlier than that time. Then read the current time again and repeat.
        // This optimizes for as few performance.now calls as possible.
        var currentTime = exports.unstable_now();
        if (firstCallbackNode.expirationTime <= currentTime) {
          do {
            flushFirstCallback();
          } while (firstCallbackNode !== null && firstCallbackNode.expirationTime <= currentTime && !(enableSchedulerDebugging && isSchedulerPaused));
          continue;
        }
        break;
      }
    } else {
      // Keep flushing callbacks until we run out of time in the frame.
      if (firstCallbackNode !== null) {
        do {
          if (enableSchedulerDebugging && isSchedulerPaused) {
            break;
          }
          flushFirstCallback();
        } while (firstCallbackNode !== null && !shouldYieldToHost());
      }
    }
  } finally {
    isExecutingCallback = false;
    currentDidTimeout = previousDidTimeout;
    if (firstCallbackNode !== null) {
      // There's still work remaining. Request another callback.
      ensureHostCallbackIsScheduled();
    } else {
      isHostCallbackScheduled = false;
    }
    // Before exiting, flush all the immediate work that was scheduled.
    flushImmediateWork();
  }
}

function unstable_runWithPriority(priorityLevel, eventHandler) {
  switch (priorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
    case LowPriority:
    case IdlePriority:
      break;
    default:
      priorityLevel = NormalPriority;
  }

  var previousPriorityLevel = currentPriorityLevel;
  var previousEventStartTime = currentEventStartTime;
  currentPriorityLevel = priorityLevel;
  currentEventStartTime = exports.unstable_now();

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
    currentEventStartTime = previousEventStartTime;

    // Before exiting, flush all the immediate work that was scheduled.
    flushImmediateWork();
  }
}

function unstable_next(eventHandler) {
  var priorityLevel = void 0;
  switch (currentPriorityLevel) {
    case ImmediatePriority:
    case UserBlockingPriority:
    case NormalPriority:
      // Shift down to normal priority
      priorityLevel = NormalPriority;
      break;
    default:
      // Anything lower than normal priority should remain at the current level.
      priorityLevel = currentPriorityLevel;
      break;
  }

  var previousPriorityLevel = currentPriorityLevel;
  var previousEventStartTime = currentEventStartTime;
  currentPriorityLevel = priorityLevel;
  currentEventStartTime = exports.unstable_now();

  try {
    return eventHandler();
  } finally {
    currentPriorityLevel = previousPriorityLevel;
    currentEventStartTime = previousEventStartTime;

    // Before exiting, flush all the immediate work that was scheduled.
    flushImmediateWork();
  }
}

function unstable_wrapCallback(callback) {
  var parentPriorityLevel = currentPriorityLevel;
  return function () {
    // This is a fork of runWithPriority, inlined for performance.
    var previousPriorityLevel = currentPriorityLevel;
    var previousEventStartTime = currentEventStartTime;
    currentPriorityLevel = parentPriorityLevel;
    currentEventStartTime = exports.unstable_now();

    try {
      return callback.apply(this, arguments);
    } finally {
      currentPriorityLevel = previousPriorityLevel;
      currentEventStartTime = previousEventStartTime;
      flushImmediateWork();
    }
  };
}

function unstable_scheduleCallback(callback, deprecated_options) {
  var startTime = currentEventStartTime !== -1 ? currentEventStartTime : exports.unstable_now();

  var expirationTime;
  if (typeof deprecated_options === 'object' && deprecated_options !== null && typeof deprecated_options.timeout === 'number') {
    // FIXME: Remove this branch once we lift expiration times out of React.
    expirationTime = startTime + deprecated_options.timeout;
  } else {
    switch (currentPriorityLevel) {
      case ImmediatePriority:
        expirationTime = startTime + IMMEDIATE_PRIORITY_TIMEOUT;
        break;
      case UserBlockingPriority:
        expirationTime = startTime + USER_BLOCKING_PRIORITY;
        break;
      case IdlePriority:
        expirationTime = startTime + IDLE_PRIORITY;
        break;
      case LowPriority:
        expirationTime = startTime + LOW_PRIORITY_TIMEOUT;
        break;
      case NormalPriority:
      default:
        expirationTime = startTime + NORMAL_PRIORITY_TIMEOUT;
    }
  }

  var newNode = {
    callback: callback,
    priorityLevel: currentPriorityLevel,
    expirationTime: expirationTime,
    next: null,
    previous: null
  };

  // Insert the new callback into the list, ordered first by expiration, then
  // by insertion. So the new callback is inserted any other callback with
  // equal expiration.
  if (firstCallbackNode === null) {
    // This is the first callback in the list.
    firstCallbackNode = newNode.next = newNode.previous = newNode;
    ensureHostCallbackIsScheduled();
  } else {
    var next = null;
    var node = firstCallbackNode;
    do {
      if (node.expirationTime > expirationTime) {
        // The new callback expires before this one.
        next = node;
        break;
      }
      node = node.next;
    } while (node !== firstCallbackNode);

    if (next === null) {
      // No callback with a later expiration was found, which means the new
      // callback has the latest expiration in the list.
      next = firstCallbackNode;
    } else if (next === firstCallbackNode) {
      // The new callback has the earliest expiration in the entire list.
      firstCallbackNode = newNode;
      ensureHostCallbackIsScheduled();
    }

    var previous = next.previous;
    previous.next = next.previous = newNode;
    newNode.next = next;
    newNode.previous = previous;
  }

  return newNode;
}

function unstable_pauseExecution() {
  isSchedulerPaused = true;
}

function unstable_continueExecution() {
  isSchedulerPaused = false;
  if (firstCallbackNode !== null) {
    ensureHostCallbackIsScheduled();
  }
}

function unstable_getFirstCallbackNode() {
  return firstCallbackNode;
}

function unstable_cancelCallback(callbackNode) {
  var next = callbackNode.next;
  if (next === null) {
    // Already cancelled.
    return;
  }

  if (next === callbackNode) {
    // This is the only scheduled callback. Clear the list.
    firstCallbackNode = null;
  } else {
    // Remove the callback from its position in the list.
    if (callbackNode === firstCallbackNode) {
      firstCallbackNode = next;
    }
    var previous = callbackNode.previous;
    previous.next = next;
    next.previous = previous;
  }

  callbackNode.next = callbackNode.previous = null;
}

function unstable_getCurrentPriorityLevel() {
  return currentPriorityLevel;
}

function unstable_shouldYield() {
  return !currentDidTimeout && (firstCallbackNode !== null && firstCallbackNode.expirationTime < currentExpirationTime || shouldYieldToHost());
}

// The remaining code is essentially a polyfill for requestIdleCallback. It
// works by scheduling a requestAnimationFrame, storing the time for the start
// of the frame, then scheduling a postMessage which gets scheduled after paint.
// Within the postMessage handler do as much work as possible until time + frame
// rate. By separating the idle call into a separate event tick we ensure that
// layout, paint and other browser work is counted against the available time.
// The frame rate is dynamically adjusted.

// We capture a local reference to any global, in case it gets polyfilled after
// this module is initially evaluated. We want to be using a
// consistent implementation.
var localDate = Date;

// This initialization code may run even on server environments if a component
// just imports ReactDOM (e.g. for findDOMNode). Some environments might not
// have setTimeout or clearTimeout. However, we always expect them to be defined
// on the client. https://github.com/facebook/react/pull/13088
var localSetTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
var localClearTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;

// We don't expect either of these to necessarily be defined, but we will error
// later if they are missing on the client.
var localRequestAnimationFrame = typeof requestAnimationFrame === 'function' ? requestAnimationFrame : undefined;
var localCancelAnimationFrame = typeof cancelAnimationFrame === 'function' ? cancelAnimationFrame : undefined;

// requestAnimationFrame does not run when the tab is in the background. If
// we're backgrounded we prefer for that work to happen so that the page
// continues to load in the background. So we also schedule a 'setTimeout' as
// a fallback.
// TODO: Need a better heuristic for backgrounded work.
var ANIMATION_FRAME_TIMEOUT = 100;
var rAFID;
var rAFTimeoutID;
var requestAnimationFrameWithTimeout = function (callback) {
  // schedule rAF and also a setTimeout
  rAFID = localRequestAnimationFrame(function (timestamp) {
    // cancel the setTimeout
    localClearTimeout(rAFTimeoutID);
    callback(timestamp);
  });
  rAFTimeoutID = localSetTimeout(function () {
    // cancel the requestAnimationFrame
    localCancelAnimationFrame(rAFID);
    callback(exports.unstable_now());
  }, ANIMATION_FRAME_TIMEOUT);
};

if (hasNativePerformanceNow) {
  var Performance = performance;
  exports.unstable_now = function () {
    return Performance.now();
  };
} else {
  exports.unstable_now = function () {
    return localDate.now();
  };
}

var requestHostCallback;
var cancelHostCallback;
var shouldYieldToHost;

var globalValue = null;
if (typeof window !== 'undefined') {
  globalValue = window;
} else if (typeof global !== 'undefined') {
  globalValue = global;
}

if (globalValue && globalValue._schedMock) {
  // Dynamic injection, only for testing purposes.
  var globalImpl = globalValue._schedMock;
  requestHostCallback = globalImpl[0];
  cancelHostCallback = globalImpl[1];
  shouldYieldToHost = globalImpl[2];
  exports.unstable_now = globalImpl[3];
} else if (
// If Scheduler runs in a non-DOM environment, it falls back to a naive
// implementation using setTimeout.
typeof window === 'undefined' ||
// Check if MessageChannel is supported, too.
typeof MessageChannel !== 'function') {
  // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
  // fallback to a naive implementation.
  var _callback = null;
  var _flushCallback = function (didTimeout) {
    if (_callback !== null) {
      try {
        _callback(didTimeout);
      } finally {
        _callback = null;
      }
    }
  };
  requestHostCallback = function (cb, ms) {
    if (_callback !== null) {
      // Protect against re-entrancy.
      setTimeout(requestHostCallback, 0, cb);
    } else {
      _callback = cb;
      setTimeout(_flushCallback, 0, false);
    }
  };
  cancelHostCallback = function () {
    _callback = null;
  };
  shouldYieldToHost = function () {
    return false;
  };
} else {
  if (typeof console !== 'undefined') {
    // TODO: Remove fb.me link
    if (typeof localRequestAnimationFrame !== 'function') {
      console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
    if (typeof localCancelAnimationFrame !== 'function') {
      console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
    }
  }

  var scheduledHostCallback = null;
  var isMessageEventScheduled = false;
  var timeoutTime = -1;

  var isAnimationFrameScheduled = false;

  var isFlushingHostCallback = false;

  var frameDeadline = 0;
  // We start out assuming that we run at 30fps but then the heuristic tracking
  // will adjust this value to a faster fps if we get more frequent animation
  // frames.
  var previousFrameTime = 33;
  var activeFrameTime = 33;

  shouldYieldToHost = function () {
    return frameDeadline <= exports.unstable_now();
  };

  // We use the postMessage trick to defer idle work until after the repaint.
  var channel = new MessageChannel();
  var port = channel.port2;
  channel.port1.onmessage = function (event) {
    isMessageEventScheduled = false;

    var prevScheduledCallback = scheduledHostCallback;
    var prevTimeoutTime = timeoutTime;
    scheduledHostCallback = null;
    timeoutTime = -1;

    var currentTime = exports.unstable_now();

    var didTimeout = false;
    if (frameDeadline - currentTime <= 0) {
      // There's no time left in this idle period. Check if the callback has
      // a timeout and whether it's been exceeded.
      if (prevTimeoutTime !== -1 && prevTimeoutTime <= currentTime) {
        // Exceeded the timeout. Invoke the callback even though there's no
        // time left.
        didTimeout = true;
      } else {
        // No timeout.
        if (!isAnimationFrameScheduled) {
          // Schedule another animation callback so we retry later.
          isAnimationFrameScheduled = true;
          requestAnimationFrameWithTimeout(animationTick);
        }
        // Exit without invoking the callback.
        scheduledHostCallback = prevScheduledCallback;
        timeoutTime = prevTimeoutTime;
        return;
      }
    }

    if (prevScheduledCallback !== null) {
      isFlushingHostCallback = true;
      try {
        prevScheduledCallback(didTimeout);
      } finally {
        isFlushingHostCallback = false;
      }
    }
  };

  var animationTick = function (rafTime) {
    if (scheduledHostCallback !== null) {
      // Eagerly schedule the next animation callback at the beginning of the
      // frame. If the scheduler queue is not empty at the end of the frame, it
      // will continue flushing inside that callback. If the queue *is* empty,
      // then it will exit immediately. Posting the callback at the start of the
      // frame ensures it's fired within the earliest possible frame. If we
      // waited until the end of the frame to post the callback, we risk the
      // browser skipping a frame and not firing the callback until the frame
      // after that.
      requestAnimationFrameWithTimeout(animationTick);
    } else {
      // No pending work. Exit.
      isAnimationFrameScheduled = false;
      return;
    }

    var nextFrameTime = rafTime - frameDeadline + activeFrameTime;
    if (nextFrameTime < activeFrameTime && previousFrameTime < activeFrameTime) {
      if (nextFrameTime < 8) {
        // Defensive coding. We don't support higher frame rates than 120hz.
        // If the calculated frame time gets lower than 8, it is probably a bug.
        nextFrameTime = 8;
      }
      // If one frame goes long, then the next one can be short to catch up.
      // If two frames are short in a row, then that's an indication that we
      // actually have a higher frame rate than what we're currently optimizing.
      // We adjust our heuristic dynamically accordingly. For example, if we're
      // running on 120hz display or 90hz VR display.
      // Take the max of the two in case one of them was an anomaly due to
      // missed frame deadlines.
      activeFrameTime = nextFrameTime < previousFrameTime ? previousFrameTime : nextFrameTime;
    } else {
      previousFrameTime = nextFrameTime;
    }
    frameDeadline = rafTime + activeFrameTime;
    if (!isMessageEventScheduled) {
      isMessageEventScheduled = true;
      port.postMessage(undefined);
    }
  };

  requestHostCallback = function (callback, absoluteTimeout) {
    scheduledHostCallback = callback;
    timeoutTime = absoluteTimeout;
    if (isFlushingHostCallback || absoluteTimeout < 0) {
      // Don't wait for the next frame. Continue working ASAP, in a new event.
      port.postMessage(undefined);
    } else if (!isAnimationFrameScheduled) {
      // If rAF didn't already schedule one, we need to schedule a frame.
      // TODO: If this rAF doesn't materialize because the browser throttles, we
      // might want to still have setTimeout trigger rIC as a backup to ensure
      // that we keep performing work.
      isAnimationFrameScheduled = true;
      requestAnimationFrameWithTimeout(animationTick);
    }
  };

  cancelHostCallback = function () {
    scheduledHostCallback = null;
    isMessageEventScheduled = false;
    timeoutTime = -1;
  };
}

exports.unstable_ImmediatePriority = ImmediatePriority;
exports.unstable_UserBlockingPriority = UserBlockingPriority;
exports.unstable_NormalPriority = NormalPriority;
exports.unstable_IdlePriority = IdlePriority;
exports.unstable_LowPriority = LowPriority;
exports.unstable_runWithPriority = unstable_runWithPriority;
exports.unstable_next = unstable_next;
exports.unstable_scheduleCallback = unstable_scheduleCallback;
exports.unstable_cancelCallback = unstable_cancelCallback;
exports.unstable_wrapCallback = unstable_wrapCallback;
exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
exports.unstable_shouldYield = unstable_shouldYield;
exports.unstable_continueExecution = unstable_continueExecution;
exports.unstable_pauseExecution = unstable_pauseExecution;
exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
  })();
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js */ "../../../../usr/local/lib/node_modules/@enact/cli/node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ "./node_modules/scheduler/cjs/scheduler.development.js");
}


/***/ }),

/***/ "./node_modules/scheduler/tracing.js":
/*!*******************************************!*\
  !*** ./node_modules/scheduler/tracing.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler-tracing.development.js */ "./node_modules/scheduler/cjs/scheduler-tracing.development.js");
}


/***/ }),

/***/ "./node_modules/string.prototype.trim/implementation.js":
/*!**************************************************************!*\
  !*** ./node_modules/string.prototype.trim/implementation.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var ES = __webpack_require__(/*! es-abstract/es5 */ "./node_modules/es-abstract/es5.js");
var replace = bind.call(Function.call, String.prototype.replace);

var leftWhitespace = /^[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+/;
var rightWhitespace = /[\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF]+$/;

module.exports = function trim() {
	var S = ES.ToString(ES.CheckObjectCoercible(this));
	return replace(replace(S, leftWhitespace, ''), rightWhitespace, '');
};


/***/ }),

/***/ "./node_modules/string.prototype.trim/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/string.prototype.trim/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(/*! function-bind */ "./node_modules/function-bind/index.js");
var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");

var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/string.prototype.trim/implementation.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/string.prototype.trim/polyfill.js");
var shim = __webpack_require__(/*! ./shim */ "./node_modules/string.prototype.trim/shim.js");

var boundTrim = bind.call(Function.call, getPolyfill());

define(boundTrim, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = boundTrim;


/***/ }),

/***/ "./node_modules/string.prototype.trim/polyfill.js":
/*!********************************************************!*\
  !*** ./node_modules/string.prototype.trim/polyfill.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var implementation = __webpack_require__(/*! ./implementation */ "./node_modules/string.prototype.trim/implementation.js");

var zeroWidthSpace = '\u200b';

module.exports = function getPolyfill() {
	if (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {
		return String.prototype.trim;
	}
	return implementation;
};


/***/ }),

/***/ "./node_modules/string.prototype.trim/shim.js":
/*!****************************************************!*\
  !*** ./node_modules/string.prototype.trim/shim.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var define = __webpack_require__(/*! define-properties */ "./node_modules/define-properties/index.js");
var getPolyfill = __webpack_require__(/*! ./polyfill */ "./node_modules/string.prototype.trim/polyfill.js");

module.exports = function shimStringTrim() {
	var polyfill = getPolyfill();
	define(String.prototype, { trim: polyfill }, { trim: function () { return String.prototype.trim !== polyfill; } });
	return polyfill;
};


/***/ }),

/***/ "./node_modules/warning/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/warning/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright 2014-2015, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */



/**
 * Similar to invariant but only logs a warning if the condition is not met.
 * This can be used to log issues in development environments in critical
 * paths. Removing the logging code for production environments will keep the
 * same logic and follow the same code paths.
 */

var warning = function() {};

if (true) {
  warning = function(condition, format, args) {
    var len = arguments.length;
    args = new Array(len > 2 ? len - 2 : 0);
    for (var key = 2; key < len; key++) {
      args[key - 2] = arguments[key];
    }
    if (format === undefined) {
      throw new Error(
        '`warning(condition, format, ...args)` requires a warning ' +
        'message argument'
      );
    }

    if (format.length < 10 || (/^[s\W]*$/).test(format)) {
      throw new Error(
        'The warning format should be able to uniquely identify this ' +
        'warning. Please, use a more descriptive format than: ' + format
      );
    }

    if (!condition) {
      var argIndex = 0;
      var message = 'Warning: ' +
        format.replace(/%s/g, function() {
          return args[argIndex++];
        });
      if (typeof console !== 'undefined') {
        console.error(message);
      }
      try {
        // This error was thrown as a convenience so that you can use this stack
        // to find the callsite that caused this warning to fire.
        throw new Error(message);
      } catch(x) {}
    }
  };
}

module.exports = warning;


/***/ }),

/***/ "./node_modules/xhr/index.js":
/*!***********************************!*\
  !*** ./node_modules/xhr/index.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var window = __webpack_require__(/*! global/window */ "./node_modules/global/window.js")
var isFunction = __webpack_require__(/*! is-function */ "./node_modules/is-function/index.js")
var parseHeaders = __webpack_require__(/*! parse-headers */ "./node_modules/parse-headers/parse-headers.js")
var xtend = __webpack_require__(/*! xtend */ "./node_modules/xtend/immutable.js")

module.exports = createXHR
// Allow use of default import syntax in TypeScript
module.exports.default = createXHR;
createXHR.XMLHttpRequest = window.XMLHttpRequest || noop
createXHR.XDomainRequest = "withCredentials" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest

forEachArray(["get", "put", "post", "patch", "head", "delete"], function(method) {
    createXHR[method === "delete" ? "del" : method] = function(uri, options, callback) {
        options = initParams(uri, options, callback)
        options.method = method.toUpperCase()
        return _createXHR(options)
    }
})

function forEachArray(array, iterator) {
    for (var i = 0; i < array.length; i++) {
        iterator(array[i])
    }
}

function isEmpty(obj){
    for(var i in obj){
        if(obj.hasOwnProperty(i)) return false
    }
    return true
}

function initParams(uri, options, callback) {
    var params = uri

    if (isFunction(options)) {
        callback = options
        if (typeof uri === "string") {
            params = {uri:uri}
        }
    } else {
        params = xtend(options, {uri: uri})
    }

    params.callback = callback
    return params
}

function createXHR(uri, options, callback) {
    options = initParams(uri, options, callback)
    return _createXHR(options)
}

function _createXHR(options) {
    if(typeof options.callback === "undefined"){
        throw new Error("callback argument missing")
    }

    var called = false
    var callback = function cbOnce(err, response, body){
        if(!called){
            called = true
            options.callback(err, response, body)
        }
    }

    function readystatechange() {
        if (xhr.readyState === 4) {
            setTimeout(loadFunc, 0)
        }
    }

    function getBody() {
        // Chrome with requestType=blob throws errors arround when even testing access to responseText
        var body = undefined

        if (xhr.response) {
            body = xhr.response
        } else {
            body = xhr.responseText || getXml(xhr)
        }

        if (isJson) {
            try {
                body = JSON.parse(body)
            } catch (e) {}
        }

        return body
    }

    function errorFunc(evt) {
        clearTimeout(timeoutTimer)
        if(!(evt instanceof Error)){
            evt = new Error("" + (evt || "Unknown XMLHttpRequest Error") )
        }
        evt.statusCode = 0
        return callback(evt, failureResponse)
    }

    // will load the data & process the response in a special response object
    function loadFunc() {
        if (aborted) return
        var status
        clearTimeout(timeoutTimer)
        if(options.useXDR && xhr.status===undefined) {
            //IE8 CORS GET successful response doesn't have a status field, but body is fine
            status = 200
        } else {
            status = (xhr.status === 1223 ? 204 : xhr.status)
        }
        var response = failureResponse
        var err = null

        if (status !== 0){
            response = {
                body: getBody(),
                statusCode: status,
                method: method,
                headers: {},
                url: uri,
                rawRequest: xhr
            }
            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE
                response.headers = parseHeaders(xhr.getAllResponseHeaders())
            }
        } else {
            err = new Error("Internal XMLHttpRequest Error")
        }
        return callback(err, response, response.body)
    }

    var xhr = options.xhr || null

    if (!xhr) {
        if (options.cors || options.useXDR) {
            xhr = new createXHR.XDomainRequest()
        }else{
            xhr = new createXHR.XMLHttpRequest()
        }
    }

    var key
    var aborted
    var uri = xhr.url = options.uri || options.url
    var method = xhr.method = options.method || "GET"
    var body = options.body || options.data
    var headers = xhr.headers = options.headers || {}
    var sync = !!options.sync
    var isJson = false
    var timeoutTimer
    var failureResponse = {
        body: undefined,
        headers: {},
        statusCode: 0,
        method: method,
        url: uri,
        rawRequest: xhr
    }

    if ("json" in options && options.json !== false) {
        isJson = true
        headers["accept"] || headers["Accept"] || (headers["Accept"] = "application/json") //Don't override existing accept header declared by user
        if (method !== "GET" && method !== "HEAD") {
            headers["content-type"] || headers["Content-Type"] || (headers["Content-Type"] = "application/json") //Don't override existing accept header declared by user
            body = JSON.stringify(options.json === true ? body : options.json)
        }
    }

    xhr.onreadystatechange = readystatechange
    xhr.onload = loadFunc
    xhr.onerror = errorFunc
    // IE9 must have onprogress be set to a unique function.
    xhr.onprogress = function () {
        // IE must die
    }
    xhr.onabort = function(){
        aborted = true;
    }
    xhr.ontimeout = errorFunc
    xhr.open(method, uri, !sync, options.username, options.password)
    //has to be after open
    if(!sync) {
        xhr.withCredentials = !!options.withCredentials
    }
    // Cannot set timeout with sync request
    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly
    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent
    if (!sync && options.timeout > 0 ) {
        timeoutTimer = setTimeout(function(){
            if (aborted) return
            aborted = true//IE9 may still call readystatechange
            xhr.abort("timeout")
            var e = new Error("XMLHttpRequest timeout")
            e.code = "ETIMEDOUT"
            errorFunc(e)
        }, options.timeout )
    }

    if (xhr.setRequestHeader) {
        for(key in headers){
            if(headers.hasOwnProperty(key)){
                xhr.setRequestHeader(key, headers[key])
            }
        }
    } else if (options.headers && !isEmpty(options.headers)) {
        throw new Error("Headers cannot be set on an XDomainRequest object")
    }

    if ("responseType" in options) {
        xhr.responseType = options.responseType
    }

    if ("beforeSend" in options &&
        typeof options.beforeSend === "function"
    ) {
        options.beforeSend(xhr)
    }

    // Microsoft Edge browser sends "undefined" when send is called with undefined value.
    // XMLHttpRequest spec says to pass null as body to indicate no body
    // See https://github.com/naugtur/xhr/issues/100.
    xhr.send(body || null)

    return xhr


}

function getXml(xhr) {
    // xhr.responseXML will throw Exception "InvalidStateError" or "DOMException"
    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.
    try {
        if (xhr.responseType === "document") {
            return xhr.responseXML
        }
        var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === "parsererror"
        if (xhr.responseType === "" && !firefoxBugTakenEffect) {
            return xhr.responseXML
        }
    } catch (e) {}

    return null
}

function noop() {}


/***/ }),

/***/ "./node_modules/xtend/immutable.js":
/*!*****************************************!*\
  !*** ./node_modules/xtend/immutable.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = extend

var hasOwnProperty = Object.prototype.hasOwnProperty;

function extend() {
    var target = {}

    for (var i = 0; i < arguments.length; i++) {
        var source = arguments[i]

        for (var key in source) {
            if (hasOwnProperty.call(source, key)) {
                target[key] = source[key]
            }
        }
    }

    return target
}


/***/ }),

/***/ "./src/App/App.js":
/*!************************!*\
  !*** ./src/App/App.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enact_core_kind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js");
/* harmony import */ var _enact_core_kind__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_enact_core_kind__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _enact_moonstone_MoonstoneDecorator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @enact/moonstone/MoonstoneDecorator */ "./node_modules/@enact/moonstone/MoonstoneDecorator/MoonstoneDecorator.js");
/* harmony import */ var _enact_moonstone_MoonstoneDecorator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_enact_moonstone_MoonstoneDecorator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @enact/moonstone/Panels */ "./node_modules/@enact/moonstone/Panels/index.js");
/* harmony import */ var _enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _views_MainPanel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../views/MainPanel */ "./src/views/MainPanel.js");
/* harmony import */ var _App_module_less__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./App.module.less */ "./src/App/App.module.less");
/* harmony import */ var _App_module_less__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_App_module_less__WEBPACK_IMPORTED_MODULE_5__);
var _jsxFileName = "/home/cdi/final/SteApp/src/App/App.js";






var App = _enact_core_kind__WEBPACK_IMPORTED_MODULE_0___default()({
  name: 'App',
  styles: {
    css: _App_module_less__WEBPACK_IMPORTED_MODULE_5___default.a,
    className: 'app'
  },
  render: function render(props) {
    return react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement("div", Object.assign({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 11
      },
      __self: this
    }), react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_2___default.a, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 12
      },
      __self: this
    }, react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement(_views_MainPanel__WEBPACK_IMPORTED_MODULE_4__["default"], {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      },
      __self: this
    })));
  }
});
/* harmony default export */ __webpack_exports__["default"] = (_enact_moonstone_MoonstoneDecorator__WEBPACK_IMPORTED_MODULE_1___default()(App));

/***/ }),

/***/ "./src/App/App.module.less":
/*!*********************************!*\
  !*** ./src/App/App.module.less ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"app":"App_app__1rnCC"};

/***/ }),

/***/ "./src/components/SpeechRecognition.js":
/*!*********************************************!*\
  !*** ./src/components/SpeechRecognition.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react_speech_recognition__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-speech-recognition */ "./node_modules/react-speech-recognition/lib/index.js");
/* harmony import */ var react_speech_recognition__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_speech_recognition__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enact_moonstone_Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @enact/moonstone/Button */ "./node_modules/@enact/moonstone/Button/Button.js");
/* harmony import */ var _enact_moonstone_Button__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_enact_moonstone_Button__WEBPACK_IMPORTED_MODULE_3__);
var _jsxFileName = "/home/cdi/final/SteApp/src/components/SpeechRecognition.js";




var propTypes = {
  transcript: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string,
  resetTranscript: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.func,
  browserSupportsSpeechRecognition: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool
};

var SpeechText = function SpeechText(_ref) {
  var transcript = _ref.transcript,
      resetTranscript = _ref.resetTranscript,
      browserSupportsSpeechRecognition = _ref.browserSupportsSpeechRecognition;

  if (!browserSupportsSpeechRecognition) {
    return null;
  }

  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 21
    },
    __self: this
  }, react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_enact_moonstone_Button__WEBPACK_IMPORTED_MODULE_3___default.a, {
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22
    },
    __self: this
  }, "Speak"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_enact_moonstone_Button__WEBPACK_IMPORTED_MODULE_3___default.a, {
    onClick: resetTranscript,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 22
    },
    __self: this
  }, "Reset"), react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {
    className: "GetText",
    __source: {
      fileName: _jsxFileName,
      lineNumber: 23
    },
    __self: this
  }, transcript));
};

SpeechText.propTypes = propTypes;
/* harmony default export */ __webpack_exports__["default"] = (react_speech_recognition__WEBPACK_IMPORTED_MODULE_2___default()(SpeechText));

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ "./node_modules/react-dom/index.js");
/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _App__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./App */ "./src/App/App.js");
var _jsxFileName = "/home/cdi/final/SteApp/src/index.js";



var appElement = react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(_App__WEBPACK_IMPORTED_MODULE_2__["default"], {
  __source: {
    fileName: _jsxFileName,
    lineNumber: 5
  },
  __self: undefined
}); // In a browser environment, render instead of exporting

if (typeof window !== 'undefined') {
  Object(react_dom__WEBPACK_IMPORTED_MODULE_1__["render"])(appElement, document.getElementById('root'));
}

/* harmony default export */ __webpack_exports__["default"] = (appElement);

/***/ }),

/***/ "./src/views/MainPanel.js":
/*!********************************!*\
  !*** ./src/views/MainPanel.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _enact_core_kind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @enact/core/kind */ "./node_modules/@enact/core/kind/kind.js");
/* harmony import */ var _enact_core_kind__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_enact_core_kind__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @enact/moonstone/Panels */ "./node_modules/@enact/moonstone/Panels/index.js");
/* harmony import */ var _enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _enact_moonstone_Marquee__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @enact/moonstone/Marquee */ "./node_modules/@enact/moonstone/Marquee/Marquee.js");
/* harmony import */ var _enact_moonstone_Marquee__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_enact_moonstone_Marquee__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _components_SpeechRecognition__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../components/SpeechRecognition */ "./src/components/SpeechRecognition.js");
var _jsxFileName = "/home/cdi/final/SteApp/src/views/MainPanel.js";
//import Button from '@enact/moonstone/Button';





var MainPanel = _enact_core_kind__WEBPACK_IMPORTED_MODULE_0___default()({
  name: 'MainPanel',
  render: function render(props) {
    return react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_1__["Panel"], Object.assign({}, props, {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 10
      },
      __self: this
    }), react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_enact_moonstone_Panels__WEBPACK_IMPORTED_MODULE_1__["Header"], {
      title: "LG HACKATHON",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 11
      },
      __self: this
    }), react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_enact_moonstone_Marquee__WEBPACK_IMPORTED_MODULE_3___default.a, {
      marqueeOn: "render",
      __source: {
        fileName: _jsxFileName,
        lineNumber: 12
      },
      __self: this
    }, "Welcome to LG Hackathon. This is a notepad app for tv where users can turn there speech to text...Welcome to LG Hackathon. This is a notepad app for tv where users can turn there speech to text.....Welcome to LG Hackathon. This is a notepad app for tv where users can turn there speech to text....Welcome to LG Hackathon. This is a notepad app for tv where users can turn there speech to text"), react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement(_components_SpeechRecognition__WEBPACK_IMPORTED_MODULE_4__["default"], {
      __source: {
        fileName: _jsxFileName,
        lineNumber: 13
      },
      __self: this
    }));
  }
});
/* harmony default export */ __webpack_exports__["default"] = (MainPanel);

/***/ }),

/***/ 0:
/*!**************************************************************************!*\
  !*** multi /usr/local/lib/node_modules/@enact/cli/config/polyfills.js . ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! /usr/local/lib/node_modules/@enact/cli/config/polyfills.js */"../../../../usr/local/lib/node_modules/@enact/cli/config/polyfills.js");
module.exports = __webpack_require__(/*! /home/cdi/final/SteApp */"./src/index.js");


/***/ })

/******/ });
//# sourceMappingURL=main.js.map