"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _hoc = _interopRequireDefault(require("../hoc"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

/* eslint-disable enact/display-name */
describe('hoc', function () {
  var defaultConfig = {
    color: 'blue'
  };
  var HoC = (0, _hoc["default"])(defaultConfig, function (config, Wrapped) {
    return function (props) {
      return _react["default"].createElement(Wrapped, Object.assign({}, props, config));
    };
  });
  var NullHoC = (0, _hoc["default"])(null, function (config, Wrapped) {
    return function () {
      return _react["default"].createElement(Wrapped, config);
    };
  });
  test('should support HoC factory function as first argument to hoc()', function () {
    var ImplicitNullHoC = (0, _hoc["default"])(function (config, Wrapped) {
      return function () {
        return _react["default"].createElement(Wrapped, config);
      };
    });
    var Component = ImplicitNullHoC('span');
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(Component, null));
    var expected = 'span';
    var actual = subject.name();
    expect(actual).toBe(expected);
  });
  test('should support DOM node name as first argument to HoC', function () {
    var Component = HoC('span');
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(Component, null));
    var expected = 'span';
    var actual = subject.name();
    expect(actual).toBe(expected);
  });
  test('should support React component as first argument to HoC', function () {
    function Thing() {
      return _react["default"].createElement("div", null);
    }

    var Component = HoC(Thing);
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(Component, null));
    var expected = 'Thing';
    var actual = subject.name();
    expect(actual).toBe(expected);
  });
  test('should use default config when instance config is omitted', function () {
    var Component = HoC('span');
    var subject = (0, _enzyme.mount)(_react["default"].createElement(Component, null));
    var expected = defaultConfig.color;
    var actual = subject.find('span').prop('color');
    expect(actual).toBe(expected);
  });
  test('should overwrite default config with instance config', function () {
    var instanceConfig = {
      color: 'green'
    };
    var Component = HoC(instanceConfig, 'div');
    var subject = (0, _enzyme.mount)(_react["default"].createElement(Component, null));
    var expected = instanceConfig.color;
    var actual = subject.find('div').prop('color');
    expect(actual).toBe(expected);
  });
  test('should allow construction without default or instance configs', function () {
    var Component = NullHoC('div');
    var subject = (0, _enzyme.mount)(_react["default"].createElement(Component, null));
    var expected = 1;
    var actual = subject.find('div').length;
    expect(actual).toBe(expected);
  });
  test('should allow construction without default config', function () {
    var instanceConfig = {
      color: 'green'
    };
    var Component = NullHoC(instanceConfig, 'div');
    var subject = (0, _enzyme.mount)(_react["default"].createElement(Component, null));
    var expected = instanceConfig.color;
    var actual = subject.find('div').prop('color');
    expect(actual).toBe(expected);
  });
});