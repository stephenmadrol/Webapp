// Type definitions for spotlight/SpotlightContainerDecorator

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

/**
 * The class name to apply to the default component to focus in a container.
 */
export declare var spotlightDefaultClass: string;
export interface SpotlightContainerDecoratorConfig extends Object {
  /**
 * When  `true` , allows focus to move outside the container to the next spottable element when
holding 5 way keys.
 */
  continue5WayHold?: boolean;
  /**
   * The selector for the default spottable element within the container.
   */
  defaultElement?: string;
  /**
 * Directs which element receives focus when gaining focus from another container. If
 `'default-element'` , the default focused item will be selected. If  `'last-focused'` , the
container will focus the last focused item; if the container has never had focus, the default
element will receive focus. If  `null` , the default 5-way behavior will be applied.
 */
  enterTo?: string;
  /**
   * Whether the container will preserve the id when it unmounts.
   */
  preserveId?: boolean;
}
export interface SpotlightContainerDecoratorProps {
  /**
   * When  `true` , controls in the container cannot be navigated.
   */
  spotlightDisabled?: boolean;
  /**
   * Used to identify this component within the Spotlight system.
   *
   * If the value is  `null` , an id will be generated.
   */
  spotlightId?: string;
  /**
   * Whether or not the container is in muted mode.
   */
  spotlightMuted?: boolean;
  /**
 * Restricts or prioritizes navigation when focus attempts to leave the container. It
can be either 'none', 'self-first', or 'self-only'. Specifying 'self-first' indicates that
elements within the container will have a higher likelihood to be chosen as the next
navigable element. Specifying 'self-only' indicates that elements in other containers
cannot be navigated to by using 5-way navigation - however, elements in other containers
can still receive focus by calling  `Spotlight.focus(elem)`  explicitly. Specying 'none'
indicates there should be no restrictions when 5-way navigating the container.
 */
  spotlightRestrict?: string;
}
export function SpotlightContainerDecorator<P>(
  config: SpotlightContainerDecoratorConfig,
  Component: React.ComponentType<P> | string
): React.ComponentType<P & SpotlightContainerDecoratorProps>;

export function SpotlightContainerDecorator<P>(
  Component: React.ComponentType<P> | string
): React.ComponentType<P & SpotlightContainerDecoratorProps>;
