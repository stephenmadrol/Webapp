// Type definitions for moonstone/Divider

import * as React from "react";
import { UppercaseProps as i18n_Uppercase_UppercaseProps } from "@enact/i18n/Uppercase";
import { MarqueeDecoratorProps as moonstone_Marquee_MarqueeDecoratorProps } from "@enact/moonstone/Marquee";
import { SkinnableProps as moonstone_Skinnable_SkinnableProps } from "@enact/moonstone/Skinnable";

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

export interface DividerBaseProps {
  /**
 * The text for the label of the divider.
 * 
 * A divider with no children (text content) will render simply as a horizontal line, with
even spacing above and below.
 */
  children?: React.ReactNode;
  /**
 * The size of the spacing around the divider.
 * 
 * Allowed values include:
 * *  `'normal'`  (default) - slightly larger than the standard spotlight spacing.
 * *  `'small'`  - same size as spotlight spacing.
 * *  `'medium'`  - 2x spotlight.
 * *  `'large'`  - 3x spotlight.
 * *  `'none'`  - no spacing at all. Neighboring elements will directly touch the divider.
 * 
 * _Note:_  Spacing is separate from margin with regard to  `margin-top` . It ensures a
consistent distance from the bottom horizontal line. It's safe to use  `margin-top`  to add
additional spacing above the divider.
 */
  spacing?: string;
}
/**
 * A labeled divider component.
 * 
 * This component is most often not used directly but may be composed within another component as it
is within  Divider  .
 */

export class DividerBase extends React.Component<
  DividerBaseProps & React.HTMLProps<HTMLElement>
> {}

export interface DividerDecoratorProps
  extends Merge<
    Merge<
      i18n_Uppercase_UppercaseProps,
      moonstone_Marquee_MarqueeDecoratorProps
    >,
    moonstone_Skinnable_SkinnableProps
  > {}
export function DividerDecorator<P>(
  Component: React.ComponentType<P> | string
): React.ComponentType<P & DividerDecoratorProps>;

export interface DividerProps
  extends Merge<DividerBaseProps, DividerDecoratorProps> {
  /**
   * The casing mode applied to the  `children`  text.
   */
  casing?: string;
  /**
   * Marquee animation trigger.
   *
   * Allowed values include:
   * *  `'hover'`  - Marquee begins when the pointer enters the component
   * *  `'render'`  - Marquee begins when the component is rendered
   */
  marqueeOn?: string;
}
/**
 * A labeled divider component, ready to use in Moonstone applications.
 * 
 * `Divider`  may be used as a header to group related components.
 * 
 * Usage:
 * ```
<Divider
  casing="preserve"
  spacing="medium"
>
  Related Settings
</Divider>
<CheckboxItem>A Setting</CheckboxItem>
<CheckboxItem>A Second Setting</CheckboxItem>
```
 */

export class Divider extends React.Component<
  DividerProps & React.HTMLProps<HTMLElement>
> {}

export default Divider;
