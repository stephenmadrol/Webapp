"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ToggleIcon = _interopRequireDefault(require("../ToggleIcon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var tap = function tap(node) {
  node.simulate('mousedown');
  node.simulate('mouseup');
};

describe('ToggleIcon Specs', function () {
  test('should call onToggle when tapped', function () {
    var handleToggle = jest.fn();
    var subject = (0, _enzyme.mount)(_react["default"].createElement(_ToggleIcon["default"], {
      onToggle: handleToggle
    }, "star"));
    tap(subject);
    var expected = 1;
    var actual = handleToggle.mock.calls.length;
    expect(expected).toBe(actual);
  });
  test('should call onClick when clicked', function () {
    var handleClick = jest.fn();
    var subject = (0, _enzyme.mount)(_react["default"].createElement(_ToggleIcon["default"], {
      onClick: handleClick
    }, "star"));
    subject.simulate('click');
    var expected = 1;
    var actual = handleClick.mock.calls.length;
    expect(expected).toBe(actual);
  });
  test('should call onTap when tapped', function () {
    var handleTap = jest.fn();
    var subject = (0, _enzyme.mount)(_react["default"].createElement(_ToggleIcon["default"], {
      onTap: handleTap
    }, "star"));
    tap(subject);
    var expected = 1;
    var actual = handleTap.mock.calls.length;
    expect(expected).toBe(actual);
  });
  test('should call both onToggle and onTap when tapped', function () {
    var handleBoth = jest.fn();
    var subject = (0, _enzyme.mount)(_react["default"].createElement(_ToggleIcon["default"], {
      onTap: handleBoth,
      onToggle: handleBoth
    }, "star"));
    tap(subject);
    var expected = 2;
    var actual = handleBoth.mock.calls.length;
    expect(expected).toBe(actual);
  });
});