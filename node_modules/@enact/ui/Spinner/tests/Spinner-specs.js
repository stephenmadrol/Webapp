"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _Spinner = require("../Spinner");

var _SpinnerModule = _interopRequireDefault(require("../Spinner.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('Spinner Specs', function () {
  test('should have centered class when centered prop equals true', function () {
    var spinner = (0, _enzyme.shallow)(_react["default"].createElement(_Spinner.SpinnerBase, {
      component: "div",
      centered: true
    }, "Loading..."));
    var expected = true;
    var actual = spinner.find(".".concat(_SpinnerModule["default"].spinner)).hasClass(_SpinnerModule["default"].centered);
    expect(actual).toBe(expected);
  });
  test('should not have content class when Spinner has no children', function () {
    var spinner = (0, _enzyme.shallow)(_react["default"].createElement(_Spinner.SpinnerBase, {
      component: "div"
    }));
    var expected = false;
    var actual = spinner.find(".".concat(_SpinnerModule["default"].spinner)).hasClass(_SpinnerModule["default"].content);
    expect(actual).toBe(expected);
  });
  test('should have no scrim class when blockClickOn prop equals container', function () {
    var spinner = (0, _enzyme.shallow)(_react["default"].createElement(_Spinner.SpinnerBase, {
      component: "div",
      blockClickOn: "container"
    }));
    var expected = false;
    var actual = spinner.find(".".concat(_SpinnerModule["default"].scrim)).exists();
    expect(actual).toBe(expected);
  });
  test('should have scrim class when blockClickOn prop equals container and when scrim prop equals true', function () {
    var spinner = (0, _enzyme.shallow)(_react["default"].createElement(_Spinner.SpinnerBase, {
      component: "div",
      blockClickOn: "container",
      scrim: true
    }));
    var expected = true;
    var actual = spinner.find(".".concat(_SpinnerModule["default"].scrim)).exists();
    expect(actual).toBe(expected);
  });
  test('should have FloatingLayer when blockClickOn prop equals screen', function () {
    var spinner = (0, _enzyme.shallow)(_react["default"].createElement(_Spinner.SpinnerBase, {
      component: "div",
      blockClickOn: "screen"
    }));
    var expected = true; // FloatingLayer is wrapped by Cancelable so it's undiscoverable by name with shallow
    // mounting

    var actual = spinner.find('Cancelable').exists();
    expect(actual).toBe(expected);
  });
});