"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "Announce", {
  enumerable: true,
  get: function get() {
    return _Announce["default"];
  }
});
exports.AnnounceDecorator = exports["default"] = void 0;

var _Announce = _interopRequireDefault(require("./Announce"));

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

/**
 * Default config for {@link ui/AnnounceDecorator.AnnounceDecorator}.
 *
 * @memberof ui/AnnounceDecorator.AnnounceDecorator
 * @hocconfig
 * @private
 */
var defaultConfig = {
  /**
   * Configures the prop name to pass the announce function.
   *
   * @type {String}
   * @default 'announce'
   * @memberof ui/AnnounceDecorator.AnnounceDecorator.defaultConfig
   */
  prop: 'announce'
};
/**
 * A higher-order component that provides a function to its wrapped component which can be
 * called to alert the user for accessibility notifications.
 *
 * By default, the function is passed in the `announce` prop but may be customized by specifying the
 * `prop` config member.
 *
 * Example:
 * ```
 * import AnnounceDecorator from '@enact/ui/AnnounceDecorator';
 * import React from 'react';
 *
 * const Example = AnnounceDecorator(class extends React.Component {
 *   static propTypes = {
 *     // passed by AnnounceDecorator
 *     announce: PropTypes.func
 *   }
 *
 *   notify = () => {
 *     const {announce} = this.props;
 *     announce('this text will be alerted to user by TTS');
 *   }
 *
 *   render () {
 *     <div>
 *       <button onClick={this.notify}>Notify on Click</button>
 *     </div>
 *   }
 * });
 * ```
 *
 * @class AnnounceDecorator
 * @memberof ui/AnnounceDecorator
 * @hoc
 * @public
 */

var AnnounceDecorator = (0, _hoc["default"])(defaultConfig, function (_ref, Wrapped) {
  var _class, _temp;

  var prop = _ref.prop;
  return _temp = _class =
  /*#__PURE__*/
  function (_React$Component) {
    _inherits(_class, _React$Component);

    function _class() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, _class);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(_class)).call.apply(_getPrototypeOf2, [this].concat(args)));

      _this.announce = function (message) {
        if (_this.announceRef) {
          _this.announceRef.announce(message);
        }
      };

      _this.setAnnounceRef = function (node) {
        _this.announceRef = node;
      };

      return _this;
    }

    _createClass(_class, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
            children = _this$props.children,
            rest = _objectWithoutProperties(_this$props, ["children"]);

        rest[prop] = this.announce;
        return _react["default"].createElement(Wrapped, rest, children, _react["default"].createElement(_Announce["default"], {
          ref: this.setAnnounceRef
        }));
      }
    }]);

    return _class;
  }(_react["default"].Component), _class.displayName = 'AnnounceDecorator', _class.propTypes =
  /** @lends ui/AnnounceDecorator.AnnounceDecorator.prototype */
  {
    /**
     * The wrapped component's children.
     *
     * An instance of {@link ui/AnnounceDecorator.Announce} will be appended to `children`.
     *
     * @type {Node}
     * @public
     */
    children: _propTypes["default"].node
  }, _temp;
});
exports.AnnounceDecorator = AnnounceDecorator;
var _default = AnnounceDecorator;
exports["default"] = _default;