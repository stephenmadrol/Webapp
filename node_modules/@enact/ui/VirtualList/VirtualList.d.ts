// Type definitions for ui/VirtualList

import * as React from "react";
import { gridListItemSizeShape as ui_VirtualList_gridListItemSizeShape } from "@enact/ui/VirtualList";

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

/**
 * The shape for the grid list item size
in a list for  VirtualGridList  .
 */
export interface gridListItemSizeShape {
  /**
   * The minimum width of the grid list item.
   */
  minWidth: number
  /**
   * The minimum height of the grid list item.
   */;
  minHeight: number;
}
export interface VirtualListProps extends VirtualListBaseProps {
  /**
 * Size of an item for the  `VirtualList` .
 * 
 * Valid value is a number. If the direction for the list is vertical,
 `itemSize`  means the height of an item. For horizontal, it means the width of an item.
 * 
 * Example:
 * ```
<VirtualList itemSize={ri.scale(72)} />
```
 */
  itemSize: number;
}
/**
 * An unstyled scrollable virtual list component with touch support.
 */

export class VirtualList extends React.Component<
  VirtualListProps & React.HTMLProps<HTMLElement>
> {}

export interface VirtualListBaseProps {
  /**
 * The rendering function called for each item in the list.
 * 
 * Note : The list does  not  always render a component whenever its render function is called
due to performance optimization.
 * 
 * Example:
 * ```
renderItem = ({index, ...rest}) => {
	delete rest.data;

	return (
		<MyComponent index={index} {...rest} />
	);
}
```
 */
  itemRenderer: Function;
  /**
   * Additional props included in the object passed to the  `itemsRenderer`  callback.
   */
  childProps?: object;
  /**
   * Client size of the list; valid values are an object that has  `clientWidth`  and  `clientHeight` .
   */
  clientSize?: object;
  /**
   * The number of items of data the list contains.
   */
  dataSize?: number;
  /**
   * The layout direction of the list.
   *
   * Valid values are:
   * *  `'horizontal'` , and
   * *  `'vertical'` .
   */
  direction?: string;
  /**
   * The spacing between items.
   */
  spacing?: number;
}
/**
 * The base version of the virtual list component.
 */

export class VirtualListBase extends React.Component<
  VirtualListBaseProps & React.HTMLProps<HTMLElement>
> {}

export interface VirtualGridListProps extends VirtualListBaseProps {
  /**
 * Size of an item for the  `VirtualGridList` .
 * *  Valid value is an object that has  `minWidth`  and  `minHeight`  as properties.
 * 
 * Example:
 * ```
<VirtualGridList
	itemSize={{
		minWidth: ri.scale(180),
		minHeight: ri.scale(270)
	}}
/>
```
 */
  itemSize: ui_VirtualList_gridListItemSizeShape;
}
/**
 * An unstyled scrollable virtual grid list component with touch support.
 */

export class VirtualGridList extends React.Component<
  VirtualGridListProps & React.HTMLProps<HTMLElement>
> {}

export default VirtualList;
