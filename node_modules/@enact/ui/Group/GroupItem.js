"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pickGroupItemProps = exports.GroupItemBase = exports.GroupItem = exports["default"] = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _react = _interopRequireDefault(require("react"));

var _selection = require("../internal/selection");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * Pick the `GroupItem`-specific props into a [private]{@link /developer-guide/glossary/#private} `itemProps` key to be extracted by
 * `GroupItem` before passing the remaining on to the repeated `childComponent`
 *
 * @function
 * @param {Object} props `Group` props
 * @returns {Object} `GroupItem` props
 * @private
 */
var pickGroupItemProps = function pickGroupItemProps(props) {
  return {
    $$GroupItem: {
      childComponent: props.childComponent,
      childProp: props.childProp,
      childSelect: props.childSelect,
      indexProp: props.indexProp,
      onSelect: props.onSelect,
      select: props.select,
      selected: props.selected,
      selectedProp: props.selectedProp
    }
  };
};
/**
 * {@link ui/Group.GroupItem} is a stateless component that is used within a
 * {@link ui/Group.Group}.  It supports passing the configurable selected property and
 * handler to its configured `childComponent`.
 *
 * **Note**: It receives its properties through the `$$GroupItem` property passed from `Group`'s
 * {@link ui/Repeater.Repeater}.
 *
 * @class GroupItemBase
 * @memberof ui/Group
 * @ui
 * @private
 */


exports.pickGroupItemProps = pickGroupItemProps;
var GroupItemBase = (0, _kind["default"])({
  name: 'GroupItem',
  // TODO: Add propTypes

  /* eslint-disable enact/prop-types */
  handlers: {
    handleSelect: function handleSelect(ev, props) {
      var _props$$$GroupItem = props.$$GroupItem,
          childProp = _props$$$GroupItem.childProp,
          indexProp = _props$$$GroupItem.indexProp,
          onSelect = _props$$$GroupItem.onSelect,
          select = _props$$$GroupItem.select,
          selected = _props$$$GroupItem.selected;

      if (onSelect) {
        var index = props[indexProp];
        var data = props[childProp];
        onSelect({
          data: data,
          selected: (0, _selection.select)(select, index, selected)
        });
      }
    }
  },
  render: function render(props) {
    var _props$$$GroupItem2 = props.$$GroupItem,
        Component = _props$$$GroupItem2.childComponent,
        childSelect = _props$$$GroupItem2.childSelect,
        indexProp = _props$$$GroupItem2.indexProp,
        selected = _props$$$GroupItem2.selected,
        selectedProp = _props$$$GroupItem2.selectedProp,
        handleSelect = props.handleSelect,
        rest = _objectWithoutProperties(props, ["$$GroupItem", "handleSelect"]);

    if (selectedProp) {
      var index = rest[indexProp];
      rest[selectedProp] = (0, _selection.isSelected)(index, selected);
    }

    if (childSelect) {
      rest[childSelect] = handleSelect;
    }

    return _react["default"].createElement(Component, rest);
  }
});
exports.GroupItemBase = exports.GroupItem = GroupItemBase;
var _default = GroupItemBase;
exports["default"] = _default;