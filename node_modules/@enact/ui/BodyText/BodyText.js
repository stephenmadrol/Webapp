"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BodyTextDecorator = exports.BodyTextBase = exports.BodyText = exports["default"] = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _propTypes = _interopRequireDefault(require("@enact/core/internal/prop-types"));

var _propTypes2 = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _ForwardRef = _interopRequireDefault(require("../ForwardRef"));

var _BodyTextModule = _interopRequireDefault(require("./BodyText.module.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 * A simple, unstyled text block component, without
 * [BodyTextDecorator](ui/BodyText.BodyTextDecorator) applied.
 *
 * @class BodyTextBase
 * @memberof ui/BodyText
 * @ui
 * @public
 */
var BodyTextBase = (0, _kind["default"])({
  name: 'ui:BodyText',
  propTypes:
  /** @lends ui/BodyText.BodyTextBase.prototype */
  {
    /**
     * Centers the contents.
     *
     * Applies the `centered` CSS class which can be customized by
     * [theming]{@link /docs/developer-guide/theming/}.
     *
     * @type {Boolean}
     * @default false
     * @public
     */
    centered: _propTypes2["default"].bool,

    /**
     * The type of component to use to render the item. May be a DOM node name (e.g 'div',
     * 'p', etc.) or a custom component.
     *
     * @type {Component}
     * @default 'p'
     * @public
     */
    component: _propTypes["default"].renderable,

    /**
     * Called with a reference to [component]{@link ui/BodyText.BodyText#component}
     *
     * @private
     */
    componentRef: _propTypes2["default"].func,

    /**
     * Customizes the component by mapping the supplied collection of CSS class names to the
     * corresponding internal Elements and states of this component.
     *
     * The following classes are supported:
     *
     * * `bodyText` - The root class name
     * * `centered` - Applied when `centered` prop is `true`
     *
     * @type {Object}
     * @public
     */
    css: _propTypes2["default"].object
  },
  defaultProps: {
    centered: false,
    component: 'p'
  },
  styles: {
    css: _BodyTextModule["default"],
    className: 'bodyText',
    publicClassNames: true
  },
  computed: {
    className: function className(_ref) {
      var centered = _ref.centered,
          styler = _ref.styler;
      return styler.append({
        centered: centered
      });
    }
  },
  render: function render(_ref2) {
    var Component = _ref2.component,
        componentRef = _ref2.componentRef,
        rest = _objectWithoutProperties(_ref2, ["component", "componentRef"]);

    delete rest.centered;
    return _react["default"].createElement(Component, Object.assign({
      ref: componentRef
    }, rest));
  }
});
/**
 * Applies BodyText behaviors.
 *
 * @hoc
 * @memberof ui/BodyText
 * @mixes ui/ForwardRef.ForwardRef
 * @public
 */

exports.BodyTextBase = BodyTextBase;
var BodyTextDecorator = (0, _ForwardRef["default"])({
  prop: 'componentRef'
});
/**
 * A simple, unstyled text block component.
 *
 * @class BodyText
 * @memberof ui/BodyText
 * @ui
 * @public
 */

exports.BodyTextDecorator = BodyTextDecorator;
var BodyText = BodyTextDecorator(BodyTextBase);
exports.BodyText = BodyText;
var _default = BodyText;
exports["default"] = _default;