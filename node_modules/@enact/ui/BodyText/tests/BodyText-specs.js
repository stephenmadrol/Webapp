"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _BodyText = _interopRequireWildcard(require("../BodyText"));

var _Layout = require("../../Layout");

var _BodyTextModule = _interopRequireDefault(require("../BodyText.module.css"));

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj["default"] = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('BodyText Specs', function () {
  test('should render a single <p> tag', function () {
    var msg = 'Hello BodyText!';
    var bodyText = (0, _enzyme.mount)(_react["default"].createElement(_BodyText["default"], null, msg));
    var bodyTextTag = bodyText.find('p');
    var expected = 1;
    var actual = bodyTextTag.length;
    expect(actual).toBe(expected);
  });
  test('should render BodyText with content', function () {
    var content = 'Hello BodyText!';
    var bodyTextTag = (0, _enzyme.mount)(_react["default"].createElement(_BodyText["default"], null, content));
    var expected = content;
    var actual = bodyTextTag.text();
    expect(actual).toBe(expected);
  });
  test('should not include the centered class by default', function () {
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(_BodyText.BodyTextBase, null));
    var expected = false;
    var actual = subject.hasClass(_BodyTextModule["default"].centered);
    expect(actual).toBe(expected);
  });
  test('should include the centered class if `centered` is true', function () {
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(_BodyText.BodyTextBase, {
      centered: true
    }));
    var expected = true;
    var actual = subject.hasClass(_BodyTextModule["default"].centered);
    expect(actual).toBe(expected);
  });
  test('should support changing the component element to a different DOM node', function () {
    var componentTag = 'address';
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(_BodyText.BodyTextBase, {
      component: componentTag
    }));
    var expected = componentTag;
    var actual = subject.getElement().type;
    expect(actual).toBe(expected);
  });
  test('should support changing the component element to a functional component', function () {
    var component = _Layout.Cell;
    var subject = (0, _enzyme.shallow)(_react["default"].createElement(_BodyText.BodyTextBase, {
      component: component
    }));
    var expected = component;
    var actual = subject.getElement().type;
    expect(actual).toBe(expected);
  });
});