// Type definitions for i18n/Uppercase

type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;
type Merge<M, N> = Omit<M, Extract<keyof M, keyof N>> & N;

export interface UppercaseProps {
  /**
 * Configures the mode of uppercasing that should be performed.
 * 
 * Options are:
   `'upper'`  to capitalize all characters.
   `'preserve'`  to maintain the original casing.
   `'word'`  to capitalize the first letter of each word.
   `'sentence'`  to capitalize the first letter of the string.
 */
  casing?: string;
}
export function Uppercase<P>(
  Component: React.ComponentType<P> | string
): React.ComponentType<P & UppercaseProps>;

export default Uppercase;
