{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computed = exports[\"default\"] = void 0;\n/**\n * Accepts an object of computed property configurations and a property object, passes the property\n * object through each computed property handler, and merges the resulting computed properties with\n * the original properties.\n *\n * ```\n * const cfg = {\n *   sum: ({x,y,z}) => x+y+z,\n *   product: ({x,y,z}) => x*y*z\n * }\n * const props = {\n *   x: 2,\n *   y: 3,\n *   z: 4\n * }\n * computed(cfg)(props) // => {x: 2, y: 3, z: 4, sum: 9, product: 24}\n * ```\n *\n * @method computed\n * @param   {Object}    cfg  Configuration object mapping transformation functions to property names\n *\n * @returns {Function}       Function that accepts a props object and mutates it to include the\n *                           computed props\n * @private\n */\n\nvar computed = function computed(cfg, optProps) {\n  var keys = Object.keys(cfg);\n\n  var renderComputed = function renderComputed(props) {\n    var updated = {};\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    for (var i = keys.length - 1; i >= 0; i--) {\n      updated[keys[i]] = cfg[keys[i]].apply(cfg, [props].concat(args));\n    }\n\n    return Object.assign(props, updated);\n  }; // maintain compatibility with 1.x\n\n\n  if (optProps) {\n    return renderComputed(optProps);\n  }\n\n  return renderComputed;\n};\n\nexports.computed = computed;\nvar _default = computed;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\core\\kind\\computed.js"],"names":["Object","defineProperty","exports","value","computed","cfg","optProps","keys","renderComputed","props","updated","_len","arguments","length","args","Array","_key","i","apply","concat","assign","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBF,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA7C;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,IAAIE,QAAQ,GAAG,SAASA,QAAT,CAAkBC,GAAlB,EAAuBC,QAAvB,EAAiC;AAC9C,MAAIC,IAAI,GAAGP,MAAM,CAACO,IAAP,CAAYF,GAAZ,CAAX;;AAEA,MAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,QAAIC,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,SAAK,IAAIC,CAAC,GAAGV,IAAI,CAACM,MAAL,GAAc,CAA3B,EAA8BI,CAAC,IAAI,CAAnC,EAAsCA,CAAC,EAAvC,EAA2C;AACzCP,MAAAA,OAAO,CAACH,IAAI,CAACU,CAAD,CAAL,CAAP,GAAmBZ,GAAG,CAACE,IAAI,CAACU,CAAD,CAAL,CAAH,CAAaC,KAAb,CAAmBb,GAAnB,EAAwB,CAACI,KAAD,EAAQU,MAAR,CAAeL,IAAf,CAAxB,CAAnB;AACD;;AAED,WAAOd,MAAM,CAACoB,MAAP,CAAcX,KAAd,EAAqBC,OAArB,CAAP;AACD,GAZD,CAH8C,CAe3C;;;AAGH,MAAIJ,QAAJ,EAAc;AACZ,WAAOE,cAAc,CAACF,QAAD,CAArB;AACD;;AAED,SAAOE,cAAP;AACD,CAvBD;;AAyBAN,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACA,IAAIiB,QAAQ,GAAGjB,QAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBmB,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computed = exports[\"default\"] = void 0;\n\n/**\n * Accepts an object of computed property configurations and a property object, passes the property\n * object through each computed property handler, and merges the resulting computed properties with\n * the original properties.\n *\n * ```\n * const cfg = {\n *   sum: ({x,y,z}) => x+y+z,\n *   product: ({x,y,z}) => x*y*z\n * }\n * const props = {\n *   x: 2,\n *   y: 3,\n *   z: 4\n * }\n * computed(cfg)(props) // => {x: 2, y: 3, z: 4, sum: 9, product: 24}\n * ```\n *\n * @method computed\n * @param   {Object}    cfg  Configuration object mapping transformation functions to property names\n *\n * @returns {Function}       Function that accepts a props object and mutates it to include the\n *                           computed props\n * @private\n */\nvar computed = function computed(cfg, optProps) {\n  var keys = Object.keys(cfg);\n\n  var renderComputed = function renderComputed(props) {\n    var updated = {};\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    for (var i = keys.length - 1; i >= 0; i--) {\n      updated[keys[i]] = cfg[keys[i]].apply(cfg, [props].concat(args));\n    }\n\n    return Object.assign(props, updated);\n  }; // maintain compatibility with 1.x\n\n\n  if (optProps) {\n    return renderComputed(optProps);\n  }\n\n  return renderComputed;\n};\n\nexports.computed = computed;\nvar _default = computed;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}