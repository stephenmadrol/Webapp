{"ast":null,"code":"var _jsxFileName = \"/home/cdi/SteApp/src/views/compoName.js\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { Announce } from '@enact/ui/AnnounceDecorator';\nimport React from 'react';\n\nvar compoName =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(compoName, _React$Component);\n\n  function compoName() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, compoName);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(compoName)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.notify = function () {\n      if (_this.announce) {\n        _this.announce.announce('this text will be alerted to user by TTS');\n      }\n    };\n\n    _this.setAnnounceRef = function (announce) {\n      _this.announce = announce;\n    };\n\n    return _this;\n  }\n\n  _createClass(compoName, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.notify,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Notify on Click\"), React.createElement(Announce, {\n        ref: this.setAnnounceRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return compoName;\n}(React.Component);\n\n;\nexport default compoName;","map":{"version":3,"sources":["/home/cdi/SteApp/src/views/compoName.js"],"names":["Announce","React","compoName","notify","announce","setAnnounceRef","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAQA,QAAR,QAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,S;;;;;;;;;;;;;;;;;;UACJC,M,GAAS,YAAM;AACb,UAAI,MAAKC,QAAT,EAAmB;AACjB,cAAKA,QAAL,CAAcA,QAAd,CAAuB,0CAAvB;AACD;AACF,K;;UAEDC,c,GAAiB,UAACD,QAAD,EAAc;AAC7B,YAAKA,QAAL,GAAgBA,QAAhB;AACD,K;;;;;;;6BAES;AAAE,aACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKD,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAE,KAAKE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADU;AAKV;;;;EAhBoBJ,KAAK,CAACK,S;;AAiB7B;AACD,eAAeJ,SAAf","sourcesContent":["import {Announce} from '@enact/ui/AnnounceDecorator';\nimport React from 'react';\n\nclass compoName extends React.Component {\n  notify = () => {\n    if (this.announce) {\n      this.announce.announce('this text will be alerted to user by TTS');\n    }\n  }\n\n  setAnnounceRef = (announce) => {\n    this.announce = announce;\n  }\n\n  render () { return (\n    <div>\n      <button onClick={this.notify}>Notify on Click</button>\n      <Announce ref={this.setAnnounceRef} />\n    </div>\n  )}\n};\nexport default compoName;"]},"metadata":{},"sourceType":"module"}