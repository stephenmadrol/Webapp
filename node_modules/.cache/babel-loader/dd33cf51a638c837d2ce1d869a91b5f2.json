{"ast":null,"code":"\"use strict\";\n/*\n * thaisolar.js - Represent a Thai solar calendar object.\n *\n * Copyright © 2013-2015,2018, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends ilib.js Calendar.js GregorianCal.js MathUtils.js */\n\nvar ilib = require(\"./ilib.js\");\n\nvar MathUtils = require(\"./MathUtils.js\");\n\nvar Calendar = require(\"./Calendar.js\");\n\nvar GregorianCal = require(\"./GregorianCal.js\");\n/**\n * @class\n * Construct a new Thai solar calendar object. This class encodes information about\n * a Thai solar calendar.<p>\n *\n * @param {Object=} options Options governing the construction of this instance\n * @constructor\n * @extends Calendar\n */\n\n\nvar ThaiSolarCal = function ThaiSolarCal(options) {\n  this.type = \"thaisolar\";\n\n  if (options && typeof options.onLoad === \"function\") {\n    options.onLoad(this);\n  }\n};\n\nThaiSolarCal.prototype = new GregorianCal({\n  noinstance: true\n});\nThaiSolarCal.prototype.parent = GregorianCal;\nThaiSolarCal.prototype.constructor = ThaiSolarCal;\n/**\n * Return true if the given year is a leap year in the Thai solar calendar.\n * The year parameter may be given as a number, or as a ThaiSolarDate object.\n * @param {number|ThaiSolarDate} year the year for which the leap year information is being sought\n * @return {boolean} true if the given year is a leap year\n */\n\nThaiSolarCal.prototype.isLeapYear = function (year) {\n  var y = typeof year === 'number' ? year : year.getYears();\n  y -= 543;\n  var centuries = MathUtils.mod(y, 400);\n  return MathUtils.mod(y, 4) === 0 && centuries !== 100 && centuries !== 200 && centuries !== 300;\n};\n/* register this calendar for the factory method */\n\n\nCalendar._constructors[\"thaisolar\"] = ThaiSolarCal;\nmodule.exports = ThaiSolarCal;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\i18n\\ilib\\lib\\ThaiSolarCal.js"],"names":["ilib","require","MathUtils","Calendar","GregorianCal","ThaiSolarCal","options","type","onLoad","prototype","noinstance","parent","constructor","isLeapYear","year","y","getYears","centuries","mod","_constructors","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAvB;;AAEA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,eAAD,CAAtB;;AAEA,IAAIG,YAAY,GAAGH,OAAO,CAAC,mBAAD,CAA1B;AACA;;;;;;;;;;;AAWA,IAAII,YAAY,GAAG,SAASA,YAAT,CAAsBC,OAAtB,EAA+B;AAChD,OAAKC,IAAL,GAAY,WAAZ;;AAEA,MAAID,OAAO,IAAI,OAAOA,OAAO,CAACE,MAAf,KAA0B,UAAzC,EAAqD;AACnDF,IAAAA,OAAO,CAACE,MAAR,CAAe,IAAf;AACD;AACF,CAND;;AAQAH,YAAY,CAACI,SAAb,GAAyB,IAAIL,YAAJ,CAAiB;AACxCM,EAAAA,UAAU,EAAE;AAD4B,CAAjB,CAAzB;AAGAL,YAAY,CAACI,SAAb,CAAuBE,MAAvB,GAAgCP,YAAhC;AACAC,YAAY,CAACI,SAAb,CAAuBG,WAAvB,GAAqCP,YAArC;AACA;;;;;;;AAOAA,YAAY,CAACI,SAAb,CAAuBI,UAAvB,GAAoC,UAAUC,IAAV,EAAgB;AAClD,MAAIC,CAAC,GAAG,OAAOD,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACE,QAAL,EAA1C;AACAD,EAAAA,CAAC,IAAI,GAAL;AACA,MAAIE,SAAS,GAAGf,SAAS,CAACgB,GAAV,CAAcH,CAAd,EAAiB,GAAjB,CAAhB;AACA,SAAOb,SAAS,CAACgB,GAAV,CAAcH,CAAd,EAAiB,CAAjB,MAAwB,CAAxB,IAA6BE,SAAS,KAAK,GAA3C,IAAkDA,SAAS,KAAK,GAAhE,IAAuEA,SAAS,KAAK,GAA5F;AACD,CALD;AAMA;;;AAGAd,QAAQ,CAACgB,aAAT,CAAuB,WAAvB,IAAsCd,YAAtC;AACAe,MAAM,CAACC,OAAP,GAAiBhB,YAAjB","sourcesContent":["\"use strict\";\n\n/*\n * thaisolar.js - Represent a Thai solar calendar object.\n *\n * Copyright © 2013-2015,2018, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends ilib.js Calendar.js GregorianCal.js MathUtils.js */\nvar ilib = require(\"./ilib.js\");\n\nvar MathUtils = require(\"./MathUtils.js\");\n\nvar Calendar = require(\"./Calendar.js\");\n\nvar GregorianCal = require(\"./GregorianCal.js\");\n/**\n * @class\n * Construct a new Thai solar calendar object. This class encodes information about\n * a Thai solar calendar.<p>\n *\n * @param {Object=} options Options governing the construction of this instance\n * @constructor\n * @extends Calendar\n */\n\n\nvar ThaiSolarCal = function ThaiSolarCal(options) {\n  this.type = \"thaisolar\";\n\n  if (options && typeof options.onLoad === \"function\") {\n    options.onLoad(this);\n  }\n};\n\nThaiSolarCal.prototype = new GregorianCal({\n  noinstance: true\n});\nThaiSolarCal.prototype.parent = GregorianCal;\nThaiSolarCal.prototype.constructor = ThaiSolarCal;\n/**\n * Return true if the given year is a leap year in the Thai solar calendar.\n * The year parameter may be given as a number, or as a ThaiSolarDate object.\n * @param {number|ThaiSolarDate} year the year for which the leap year information is being sought\n * @return {boolean} true if the given year is a leap year\n */\n\nThaiSolarCal.prototype.isLeapYear = function (year) {\n  var y = typeof year === 'number' ? year : year.getYears();\n  y -= 543;\n  var centuries = MathUtils.mod(y, 400);\n  return MathUtils.mod(y, 4) === 0 && centuries !== 100 && centuries !== 200 && centuries !== 300;\n};\n/* register this calendar for the factory method */\n\n\nCalendar._constructors[\"thaisolar\"] = ThaiSolarCal;\nmodule.exports = ThaiSolarCal;"]},"metadata":{},"sourceType":"module"}