{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.$L = $L;\nexports.toIString = toIString;\nexports[\"default\"] = void 0;\n\nrequire(\"../src/glue\");\n\nvar _resBundle = require(\"../src/resBundle\");\n/**\n * Provides functions to map to translated strings.\n *\n * Usage:\n * ```\n * import $L, {toIString} from '@enact/i18n/$L';\n * $L('Close');        // => \"Close\" in the current locale\n * toIString('Close'); // => an ilib IString representing \"Close\" in the current locale\n * ```\n *\n * @module i18n/$L\n * @exports $L\n * @exports $toIString\n */\n\n/**\n * Maps a string or key/value object to a translated string for the current locale.\n *\n * @function\n * @memberof i18n/$L\n * @param  {String|Object} str Source string\n *\n * @returns {ilib.IString} The translated string\n */\n\n\nfunction toIString(str) {\n  var rb = (0, _resBundle.getResBundle)();\n  return (0, _resBundle.getIStringFromBundle)(str, rb);\n}\n/**\n * Maps a string or key/value object to a translated string for the current locale.\n *\n * @function\n * @memberof i18n/$L\n * @param  {String|Object} str Source string\n *\n * @returns {String} The translated string\n */\n\n\nfunction $L(str) {\n  return String(toIString(str));\n}\n\nvar _default = $L;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/cdi/stephen/node_modules/@enact/i18n/$L/$L.js"],"names":["Object","defineProperty","exports","value","$L","toIString","require","_resBundle","str","rb","getResBundle","getIStringFromBundle","String","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,EAAR,GAAaA,EAAb;AACAF,OAAO,CAACG,SAAR,GAAoBA,SAApB;AACAH,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEAI,OAAO,CAAC,aAAD,CAAP;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,kBAAD,CAAxB;AAEA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AASA,SAASD,SAAT,CAAmBG,GAAnB,EAAwB;AACtB,MAAIC,EAAE,GAAG,CAAC,GAAGF,UAAU,CAACG,YAAf,GAAT;AACA,SAAO,CAAC,GAAGH,UAAU,CAACI,oBAAf,EAAqCH,GAArC,EAA0CC,EAA1C,CAAP;AACD;AACD;;;;;;;;;;;AAWA,SAASL,EAAT,CAAYI,GAAZ,EAAiB;AACf,SAAOI,MAAM,CAACP,SAAS,CAACG,GAAD,CAAV,CAAb;AACD;;AAED,IAAIK,QAAQ,GAAGT,EAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBW,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.$L = $L;\nexports.toIString = toIString;\nexports[\"default\"] = void 0;\n\nrequire(\"../src/glue\");\n\nvar _resBundle = require(\"../src/resBundle\");\n\n/**\n * Provides functions to map to translated strings.\n *\n * Usage:\n * ```\n * import $L, {toIString} from '@enact/i18n/$L';\n * $L('Close');        // => \"Close\" in the current locale\n * toIString('Close'); // => an ilib IString representing \"Close\" in the current locale\n * ```\n *\n * @module i18n/$L\n * @exports $L\n * @exports $toIString\n */\n\n/**\n * Maps a string or key/value object to a translated string for the current locale.\n *\n * @function\n * @memberof i18n/$L\n * @param  {String|Object} str Source string\n *\n * @returns {ilib.IString} The translated string\n */\nfunction toIString(str) {\n  var rb = (0, _resBundle.getResBundle)();\n  return (0, _resBundle.getIStringFromBundle)(str, rb);\n}\n/**\n * Maps a string or key/value object to a translated string for the current locale.\n *\n * @function\n * @memberof i18n/$L\n * @param  {String|Object} str Source string\n *\n * @returns {String} The translated string\n */\n\n\nfunction $L(str) {\n  return String(toIString(str));\n}\n\nvar _default = $L;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}