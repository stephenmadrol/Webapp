{"ast":null,"code":"\"use strict\";\n/*\n * coptic.js - Represent a Coptic calendar object.\n * \n * Copyright © 2015,2018, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends ilib.js Calendar.js Locale.js Utils.js EthiopicCal.js */\n\nvar ilib = require(\"./ilib.js\");\n\nvar Utils = require(\"./Utils.js\");\n\nvar Locale = require(\"./Locale.js\");\n\nvar Calendar = require(\"./Calendar.js\");\n\nvar EthiopicCal = require(\"./EthiopicCal.js\");\n/**\n * @class\n * Construct a new Coptic calendar object. This class encodes information about\n * a Coptic calendar.<p>\n * \n * @param {Object=} options Options governing the construction of this instance\n * @constructor\n * @extends EthiopicCal\n */\n\n\nvar CopticCal = function CopticCal(options) {\n  this.type = \"coptic\";\n\n  if (options && typeof options.onLoad === \"function\") {\n    options.onLoad(this);\n  }\n};\n\nCopticCal.prototype = new EthiopicCal();\nCopticCal.prototype.parent = EthiopicCal;\nCopticCal.prototype.constructor = CopticCal;\n/* register this calendar for the factory method */\n\nCalendar._constructors[\"coptic\"] = CopticCal;\nmodule.exports = CopticCal;","map":{"version":3,"sources":["/home/cdi/final/SteApp/node_modules/@enact/i18n/ilib/lib/CopticCal.js"],"names":["ilib","require","Utils","Locale","Calendar","EthiopicCal","CopticCal","options","type","onLoad","prototype","parent","constructor","_constructors","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;AACA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,YAAD,CAAnB;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,aAAD,CAApB;;AAEA,IAAIG,QAAQ,GAAGH,OAAO,CAAC,eAAD,CAAtB;;AAEA,IAAII,WAAW,GAAGJ,OAAO,CAAC,kBAAD,CAAzB;AACA;;;;;;;;;;;AAWA,IAAIK,SAAS,GAAG,SAASA,SAAT,CAAmBC,OAAnB,EAA4B;AAC1C,OAAKC,IAAL,GAAY,QAAZ;;AAEA,MAAID,OAAO,IAAI,OAAOA,OAAO,CAACE,MAAf,KAA0B,UAAzC,EAAqD;AACnDF,IAAAA,OAAO,CAACE,MAAR,CAAe,IAAf;AACD;AACF,CAND;;AAQAH,SAAS,CAACI,SAAV,GAAsB,IAAIL,WAAJ,EAAtB;AACAC,SAAS,CAACI,SAAV,CAAoBC,MAApB,GAA6BN,WAA7B;AACAC,SAAS,CAACI,SAAV,CAAoBE,WAApB,GAAkCN,SAAlC;AACA;;AAEAF,QAAQ,CAACS,aAAT,CAAuB,QAAvB,IAAmCP,SAAnC;AACAQ,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["\"use strict\";\n\n/*\n * coptic.js - Represent a Coptic calendar object.\n * \n * Copyright © 2015,2018, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends ilib.js Calendar.js Locale.js Utils.js EthiopicCal.js */\nvar ilib = require(\"./ilib.js\");\n\nvar Utils = require(\"./Utils.js\");\n\nvar Locale = require(\"./Locale.js\");\n\nvar Calendar = require(\"./Calendar.js\");\n\nvar EthiopicCal = require(\"./EthiopicCal.js\");\n/**\n * @class\n * Construct a new Coptic calendar object. This class encodes information about\n * a Coptic calendar.<p>\n * \n * @param {Object=} options Options governing the construction of this instance\n * @constructor\n * @extends EthiopicCal\n */\n\n\nvar CopticCal = function CopticCal(options) {\n  this.type = \"coptic\";\n\n  if (options && typeof options.onLoad === \"function\") {\n    options.onLoad(this);\n  }\n};\n\nCopticCal.prototype = new EthiopicCal();\nCopticCal.prototype.parent = EthiopicCal;\nCopticCal.prototype.constructor = CopticCal;\n/* register this calendar for the factory method */\n\nCalendar._constructors[\"coptic\"] = CopticCal;\nmodule.exports = CopticCal;"]},"metadata":{},"sourceType":"module"}