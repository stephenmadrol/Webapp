{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IconButtonDecorator = exports.IconButtonBase = exports.IconButton = exports[\"default\"] = void 0;\n\nvar _kind = _interopRequireDefault(require(\"@enact/core/kind\"));\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ComponentOverride = _interopRequireDefault(require(\"../ComponentOverride\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _IconButtonModule = _interopRequireDefault(require(\"./IconButton.module.css\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * A ui-styled button without any behavior.\n *\n * @class IconButtonBase\n * @memberof ui/IconButton\n * @ui\n * @public\n */\n\n\nvar IconButtonBase = (0, _kind[\"default\"])({\n  name: 'ui:IconButton',\n  propTypes:\n  /** @lends ui/IconButton.IconButtonBase.prototype */\n  {\n    /**\n     * This is the root component used to render the button and will receive all props except\n     * `icon`.\n     *\n     * @type {Component|Element}\n     * @required\n     * @public\n     */\n    buttonComponent: _propTypes[\"default\"].componentOverride.isRequired,\n\n    /**\n     * The component used to render the [icon]{@link ui/IconButton.IconButtonBase.icon}.\n     *\n     * This component will receive the `small` property set on the `IconButton` as well as the\n     * `icon` class to customize its styling.\n     *\n     * @type {Component}\n     * @required\n     * @public\n     */\n    iconComponent: _propTypes[\"default\"].component.isRequired,\n\n    /**\n     * Additional children that follow the icon.\n     *\n     * If `icon` isn't specified but `children` is, `children` is used as the icon's value.\n     *\n     * @see {@link ui/Icon.Icon#children}\n     * @type {Node}\n     * @public\n     */\n    children: _propTypes2[\"default\"].node,\n\n    /**\n     * Customizes the component by mapping the supplied collection of CSS class names to the\n     * corresponding internal Elements and states of this component.\n     *\n     * The following classes are supported:\n     *\n     * * `iconButton` - The root component class\n     * * `icon` - The [icon component]{@link ui/IconButton.IconButtonBase.iconComponent} class\n     * * `small` - Applied when `small` prop is `true`\n     * * `pressed` - Applied when `pressed` prop is `true`\n     *\n     * @type {Object}\n     * @public\n     */\n    css: _propTypes2[\"default\"].object,\n\n    /**\n     * Disables IconButton.\n     *\n     * When `true`, the button is shown as disabled and does not generate\n     * `onClick` [events]{@link /docs/developer-guide/glossary/#event}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes2[\"default\"].bool,\n\n    /**\n     * The icon displayed within the IconButton.\n     *\n     * If not specified, `children` is used as the icon value instead.\n     *\n     * @type {String}\n     * @public\n     */\n    icon: _propTypes2[\"default\"].string,\n\n    /**\n     * Applies the `pressed` CSS class.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    pressed: _propTypes2[\"default\"].bool,\n\n    /**\n     * Applies the `selected` CSS class.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    selected: _propTypes2[\"default\"].bool,\n\n    /**\n     * Applies the `small` CSS class.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    small: _propTypes2[\"default\"].bool\n  },\n  defaultProps: {\n    disabled: false,\n    pressed: false,\n    selected: false,\n    small: false\n  },\n  styles: {\n    css: _IconButtonModule[\"default\"],\n    className: 'iconButton',\n    publicClassNames: true\n  },\n  computed: {\n    className: function className(_ref) {\n      var small = _ref.small,\n          styler = _ref.styler;\n      return styler.append({\n        small: small\n      });\n    }\n  },\n  render: function render(_ref2) {\n    var buttonComponent = _ref2.buttonComponent,\n        children = _ref2.children,\n        css = _ref2.css,\n        icon = _ref2.icon,\n        Icon = _ref2.iconComponent,\n        small = _ref2.small,\n        rest = _objectWithoutProperties(_ref2, [\"buttonComponent\", \"children\", \"css\", \"icon\", \"iconComponent\", \"small\"]); // To support the simpler use case of only specifying the icon as the children within\n    // <IconButton>, this falls back on using children if icon isn't specified.\n\n\n    if (!icon && children) {\n      icon = children;\n      children = null;\n    }\n\n    return (0, _ComponentOverride[\"default\"])(_objectSpread({}, rest, {\n      component: buttonComponent,\n      small: small,\n      minWidth: false,\n      children: [_react[\"default\"].createElement(Icon, {\n        key: \"icon\",\n        small: small,\n        className: css.icon\n      }, icon)].concat(_toConsumableArray(_react[\"default\"].Children.toArray(children)))\n    }));\n  }\n});\n/**\n * A higher-order component that adds universal button behaviors to an [IconButtonBase]{@link ui/IconButton.IconButtonBase}.\n *\n * @hoc\n * @memberof ui/IconButton\n * @mixes ui/Touchable.Touchable\n * @public\n */\n\nexports.IconButtonBase = IconButtonBase;\nvar IconButtonDecorator = (0, _Touchable[\"default\"])({\n  activeProp: 'pressed'\n});\n/**\n * A minimally styled, but interactive, Button ready for customization by a theme.\n *\n * Example:\n * ```\n * <IconButton small>\n *     plus\n * </IconButton>\n * ```\n *\n * @class IconButton\n * @memberof ui/IconButton\n * @extends ui/IconButton.IconButtonBase\n * @mixes ui/IconButton.IconButtonDecorator\n * @ui\n * @public\n */\n\nexports.IconButtonDecorator = IconButtonDecorator;\nvar IconButton = IconButtonDecorator(IconButtonBase);\nexports.IconButton = IconButton;\nvar _default = IconButton;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\ui\\IconButton\\IconButton.js"],"names":["Object","defineProperty","exports","value","IconButtonDecorator","IconButtonBase","IconButton","_kind","_interopRequireDefault","require","_propTypes","_propTypes2","_react","_ComponentOverride","_Touchable","_IconButtonModule","obj","__esModule","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","prototype","toString","call","Array","from","isArray","i","arr2","length","_objectSpread","target","arguments","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","name","propTypes","buttonComponent","componentOverride","isRequired","iconComponent","component","children","node","css","object","disabled","bool","icon","string","pressed","selected","small","defaultProps","styles","className","publicClassNames","computed","_ref","styler","append","render","_ref2","Icon","rest","minWidth","createElement","Children","toArray","activeProp","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IconButtonDecorator = exports.IconButtonBase = exports.IconButton = exports[\"default\"] = void 0;\n\nvar _kind = _interopRequireDefault(require(\"@enact/core/kind\"));\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _ComponentOverride = _interopRequireDefault(require(\"../ComponentOverride\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _IconButtonModule = _interopRequireDefault(require(\"./IconButton.module.css\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * A ui-styled button without any behavior.\n *\n * @class IconButtonBase\n * @memberof ui/IconButton\n * @ui\n * @public\n */\nvar IconButtonBase = (0, _kind[\"default\"])({\n  name: 'ui:IconButton',\n  propTypes:\n  /** @lends ui/IconButton.IconButtonBase.prototype */\n  {\n    /**\n     * This is the root component used to render the button and will receive all props except\n     * `icon`.\n     *\n     * @type {Component|Element}\n     * @required\n     * @public\n     */\n    buttonComponent: _propTypes[\"default\"].componentOverride.isRequired,\n\n    /**\n     * The component used to render the [icon]{@link ui/IconButton.IconButtonBase.icon}.\n     *\n     * This component will receive the `small` property set on the `IconButton` as well as the\n     * `icon` class to customize its styling.\n     *\n     * @type {Component}\n     * @required\n     * @public\n     */\n    iconComponent: _propTypes[\"default\"].component.isRequired,\n\n    /**\n     * Additional children that follow the icon.\n     *\n     * If `icon` isn't specified but `children` is, `children` is used as the icon's value.\n     *\n     * @see {@link ui/Icon.Icon#children}\n     * @type {Node}\n     * @public\n     */\n    children: _propTypes2[\"default\"].node,\n\n    /**\n     * Customizes the component by mapping the supplied collection of CSS class names to the\n     * corresponding internal Elements and states of this component.\n     *\n     * The following classes are supported:\n     *\n     * * `iconButton` - The root component class\n     * * `icon` - The [icon component]{@link ui/IconButton.IconButtonBase.iconComponent} class\n     * * `small` - Applied when `small` prop is `true`\n     * * `pressed` - Applied when `pressed` prop is `true`\n     *\n     * @type {Object}\n     * @public\n     */\n    css: _propTypes2[\"default\"].object,\n\n    /**\n     * Disables IconButton.\n     *\n     * When `true`, the button is shown as disabled and does not generate\n     * `onClick` [events]{@link /docs/developer-guide/glossary/#event}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes2[\"default\"].bool,\n\n    /**\n     * The icon displayed within the IconButton.\n     *\n     * If not specified, `children` is used as the icon value instead.\n     *\n     * @type {String}\n     * @public\n     */\n    icon: _propTypes2[\"default\"].string,\n\n    /**\n     * Applies the `pressed` CSS class.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    pressed: _propTypes2[\"default\"].bool,\n\n    /**\n     * Applies the `selected` CSS class.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    selected: _propTypes2[\"default\"].bool,\n\n    /**\n     * Applies the `small` CSS class.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    small: _propTypes2[\"default\"].bool\n  },\n  defaultProps: {\n    disabled: false,\n    pressed: false,\n    selected: false,\n    small: false\n  },\n  styles: {\n    css: _IconButtonModule[\"default\"],\n    className: 'iconButton',\n    publicClassNames: true\n  },\n  computed: {\n    className: function className(_ref) {\n      var small = _ref.small,\n          styler = _ref.styler;\n      return styler.append({\n        small: small\n      });\n    }\n  },\n  render: function render(_ref2) {\n    var buttonComponent = _ref2.buttonComponent,\n        children = _ref2.children,\n        css = _ref2.css,\n        icon = _ref2.icon,\n        Icon = _ref2.iconComponent,\n        small = _ref2.small,\n        rest = _objectWithoutProperties(_ref2, [\"buttonComponent\", \"children\", \"css\", \"icon\", \"iconComponent\", \"small\"]);\n\n    // To support the simpler use case of only specifying the icon as the children within\n    // <IconButton>, this falls back on using children if icon isn't specified.\n    if (!icon && children) {\n      icon = children;\n      children = null;\n    }\n\n    return (0, _ComponentOverride[\"default\"])(_objectSpread({}, rest, {\n      component: buttonComponent,\n      small: small,\n      minWidth: false,\n      children: [_react[\"default\"].createElement(Icon, {\n        key: \"icon\",\n        small: small,\n        className: css.icon\n      }, icon)].concat(_toConsumableArray(_react[\"default\"].Children.toArray(children)))\n    }));\n  }\n});\n/**\n * A higher-order component that adds universal button behaviors to an [IconButtonBase]{@link ui/IconButton.IconButtonBase}.\n *\n * @hoc\n * @memberof ui/IconButton\n * @mixes ui/Touchable.Touchable\n * @public\n */\n\nexports.IconButtonBase = IconButtonBase;\nvar IconButtonDecorator = (0, _Touchable[\"default\"])({\n  activeProp: 'pressed'\n});\n/**\n * A minimally styled, but interactive, Button ready for customization by a theme.\n *\n * Example:\n * ```\n * <IconButton small>\n *     plus\n * </IconButton>\n * ```\n *\n * @class IconButton\n * @memberof ui/IconButton\n * @extends ui/IconButton.IconButtonBase\n * @mixes ui/IconButton.IconButtonDecorator\n * @ui\n * @public\n */\n\nexports.IconButtonDecorator = IconButtonDecorator;\nvar IconButton = IconButtonDecorator(IconButtonBase);\nexports.IconButton = IconButton;\nvar _default = IconButton;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}