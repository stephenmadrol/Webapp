{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/home/cdi/stephen/src/views/VideoPlayer.js\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n/**\n * Provides Moonstone-themed video player components.\n *\n * @module moonstone/VideoPlayer\n * @exports Video\n * @exports VideoPlayer\n * @exports VideoPlayerBase\n * @exports MediaControls\n */\nimport ApiDecorator from '@enact/core/internal/ApiDecorator';\nimport { on, off } from '@enact/core/dispatcher';\nimport { memoize } from '@enact/core/util';\nimport { adaptEvent, call, forKey, forward, forwardWithPrevent, handle, preventDefault, stopImmediate, returnsTrue } from '@enact/core/handle';\nimport { is } from '@enact/core/keymap';\nimport { platform } from '@enact/core/platform';\nimport EnactPropTypes from '@enact/core/internal/prop-types';\nimport { perfNow, Job } from '@enact/core/util';\nimport { I18nContextDecorator } from '@enact/i18n/I18nDecorator';\nimport { toUpperCase } from '@enact/i18n/util';\nimport Spotlight from '@enact/spotlight';\nimport { SpotlightContainerDecorator } from '@enact/spotlight/SpotlightContainerDecorator';\nimport { Spottable } from '@enact/spotlight/Spottable';\nimport Announce from '@enact/ui/AnnounceDecorator/Announce';\nimport ComponentOverride from '@enact/ui/ComponentOverride';\nimport { FloatingLayerDecorator } from '@enact/ui/FloatingLayer';\nimport { FloatingLayerContext } from '@enact/ui/FloatingLayer/FloatingLayerDecorator';\nimport Media from '@enact/ui/Media';\nimport Slottable from '@enact/ui/Slottable';\nimport Touchable from '@enact/ui/Touchable';\nimport DurationFmt from 'ilib/lib/DurationFmt';\nimport equals from 'ramda/src/equals';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'recompose/shallowEqual';\nimport $L from '../internal/$L';\nimport Skinnable from '@enact/ui/Skinnable';\nimport Spinner from '@enact/ui/Spinner';\nimport { calcNumberValueOfPlaybackRate, secondsToTime } from './util';\nimport Overlay from './Overlay';\nimport MediaControls from './MediaControls';\nimport MediaTitle from './MediaTitle';\nimport MediaSlider from './MediaSlider';\nimport FeedbackContent from './FeedbackContent';\nimport FeedbackTooltip from './FeedbackTooltip';\nimport Times from './Times';\nimport Video from './Video';\nimport css from './VideoPlayer.module.less';\nvar SpottableDiv = Touchable(Spottable('div'));\nvar RootContainer = SpotlightContainerDecorator({\n  enterTo: 'default-element',\n  defaultElement: [\".\".concat(css.controlsHandleAbove), \".\".concat(css.controlsFrame)]\n}, 'div');\nvar ControlsContainer = SpotlightContainerDecorator({\n  enterTo: '',\n  straightOnly: true\n}, 'div');\nvar memoGetDurFmt = memoize(function () {\n  return (\n    /* locale */\n    new DurationFmt({\n      length: 'medium',\n      style: 'clock',\n      useNative: false\n    })\n  );\n});\n\nvar getDurFmt = function getDurFmt(locale) {\n  if (typeof window === 'undefined') return null;\n  return memoGetDurFmt(locale);\n};\n\nvar forwardWithState = function forwardWithState(type) {\n  return adaptEvent(call('addStateToEvent'), forwardWithPrevent(type));\n}; // provide forwarding of events on media controls\n\n\nvar forwardControlsAvailable = forward('onControlsAvailable');\nvar forwardPlay = forwardWithState('onPlay');\nvar forwardPause = forwardWithState('onPause');\nvar forwardRewind = forwardWithState('onRewind');\nvar forwardFastForward = forwardWithState('onFastForward');\nvar forwardJumpBackward = forwardWithState('onJumpBackward');\nvar forwardJumpForward = forwardWithState('onJumpForward');\nvar AnnounceState = {\n  // Video is loaded but additional announcements have not been made\n  READY: 0,\n  // The title should be announced\n  TITLE: 1,\n  // The title has been announce\n  TITLE_READ: 2,\n  // The infoComponents should be announce\n  INFO: 3,\n  // All announcements have been made\n  DONE: 4\n};\n/**\n * Every callback sent by [VideoPlayer]{@link moonstone/VideoPlayer} receives a status package,\n * which includes an object with the following key/value pairs as the first argument:\n *\n * @typedef {Object} videoStatus\n * @memberof moonstone/VideoPlayer\n * @property {String} type - Type of event that triggered this callback\n * @property {Number} currentTime - Playback index of the media in seconds\n * @property {Number} duration - Media's entire duration in seconds\n * @property {Boolean} paused - Playing vs paused state. `true` means the media is paused\n * @property {Number} playbackRate - Current playback rate, as a number\n * @property {Number} proportionLoaded - A value between `0` and `1` representing the proportion of the media that has loaded\n * @property {Number} proportionPlayed - A value between `0` and `1` representing the proportion of the media that has already been shown\n *\n * @public\n */\n\n/**\n * A set of playback rates when media fast forwards, rewinds, slow-fowards, or slow-rewinds.\n *\n * The number used for each operation is proportional to the normal playing speed, 1. If the rate\n * is less than 1, it will play slower than normal speed, and, if it is larger than 1, it will play\n * faster. If it is negative, it will play backward.\n *\n * The order of numbers represents the incremental order of rates that will be used for each\n * operation. Note that all rates are expressed as strings and fractions are used rather than decimals\n * (e.g.: `'1/2'`, not `'0.5'`).\n *\n * @typedef {Object} playbackRateHash\n * @memberof moonstone/VideoPlayer\n * @property {String[]} fastForward - An array of playback rates when media fast forwards\n * @property {String[]} rewind - An array of playback rates when media rewinds\n * @property {String[]} slowForward - An array of playback rates when media slow-forwards\n * @property {String[]} slowRewind - An array of playback rates when media slow-rewinds\n *\n * @public\n */\n\n/**\n * A player for video {@link moonstone/VideoPlayer.VideoPlayerBase}.\n *\n * @class VideoPlayerBase\n * @memberof moonstone/VideoPlayer\n * @ui\n * @public\n */\n\nvar VideoPlayerBase = (_temp = _class =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoPlayerBase, _React$Component);\n\n  function VideoPlayerBase(_props) {\n    var _this;\n\n    _classCallCheck(this, VideoPlayerBase);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VideoPlayerBase).call(this, _props)); // Internal State\n\n    _this.announceJob = new Job(function (msg) {\n      return _this.announceRef && _this.announceRef.announce(msg);\n    }, 200);\n\n    _this.announce = function (msg) {\n      _this.announceJob.start(msg);\n    };\n\n    _this.getHeightForElement = function (elementName) {\n      var element = _this.player.querySelector(\".\".concat(css[elementName]));\n\n      if (element) {\n        return element.offsetHeight;\n      } else {\n        return 0;\n      }\n    };\n\n    _this.activityDetected = function () {\n      // console.count('activityDetected');\n      _this.startAutoCloseTimeout();\n    };\n\n    _this.startAutoCloseTimeout = function () {\n      // If this.state.more is used as a reference for when this function should fire, timing for\n      // detection of when \"more\" is pressed vs when the state is updated is mismatched. Using an\n      // instance variable that's only set and used for this express purpose seems cleanest.\n      if (_this.props.autoCloseTimeout && _this.state.mediaControlsVisible) {\n        _this.autoCloseJob.startAfter(_this.props.autoCloseTimeout);\n      }\n    };\n\n    _this.stopAutoCloseTimeout = function () {\n      _this.autoCloseJob.stop();\n    };\n\n    _this.generateId = function () {\n      return Math.random().toString(36).substr(2, 8);\n    };\n\n    _this.markAnnounceRead = function () {\n      if (_this.state.announce === AnnounceState.TITLE) {\n        _this.setState({\n          announce: AnnounceState.TITLE_READ\n        });\n      } else if (_this.state.announce === AnnounceState.INFO) {\n        _this.setState({\n          announce: AnnounceState.DONE\n        });\n      }\n\n      return true;\n    };\n\n    _this.showControls = function () {\n      if (_this.props.disabled) {\n        return;\n      }\n\n      _this.startDelayedFeedbackHide();\n\n      _this.startDelayedTitleHide();\n\n      _this.setState(function (_ref) {\n        var announce = _ref.announce;\n\n        if (announce === AnnounceState.READY) {\n          // if we haven't read the title yet, do so this time\n          announce = AnnounceState.TITLE;\n        } else if (announce === AnnounceState.TITLE) {\n          // if we have read the title, advance to INFO so title isn't read again\n          announce = AnnounceState.TITLE_READ;\n        }\n\n        return {\n          announce: announce,\n          bottomControlsRendered: true,\n          feedbackAction: 'idle',\n          feedbackVisible: true,\n          mediaControlsVisible: true,\n          mediaSliderVisible: true,\n          miniFeedbackVisible: false,\n          titleVisible: true\n        };\n      });\n    };\n\n    _this.hideControls = function () {\n      _this.stopDelayedFeedbackHide();\n\n      _this.stopDelayedMiniFeedbackHide();\n\n      _this.stopDelayedTitleHide();\n\n      _this.stopAutoCloseTimeout();\n\n      _this.setState({\n        feedbackAction: 'idle',\n        feedbackVisible: false,\n        mediaControlsVisible: false,\n        mediaSliderVisible: false,\n        miniFeedbackVisible: false,\n        infoVisible: false\n      });\n\n      _this.markAnnounceRead();\n    };\n\n    _this.toggleControls = function () {\n      if (_this.state.mediaControlsVisible) {\n        _this.hideControls();\n      } else {\n        _this.showControls();\n      }\n    };\n\n    _this.doAutoClose = function () {\n      _this.stopDelayedFeedbackHide();\n\n      _this.stopDelayedTitleHide();\n\n      _this.setState(function (_ref2) {\n        var mediaSliderVisible = _ref2.mediaSliderVisible,\n            miniFeedbackVisible = _ref2.miniFeedbackVisible;\n        return {\n          feedbackVisible: false,\n          mediaControlsVisible: false,\n          mediaSliderVisible: mediaSliderVisible && miniFeedbackVisible,\n          infoVisible: false\n        };\n      });\n\n      _this.markAnnounceRead();\n    };\n\n    _this.autoCloseJob = new Job(_this.doAutoClose);\n\n    _this.startDelayedTitleHide = function () {\n      if (_this.props.titleHideDelay) {\n        _this.hideTitleJob.startAfter(_this.props.titleHideDelay);\n      }\n    };\n\n    _this.stopDelayedTitleHide = function () {\n      _this.hideTitleJob.stop();\n    };\n\n    _this.hideTitle = function () {\n      _this.setState({\n        titleVisible: false\n      });\n    };\n\n    _this.hideTitleJob = new Job(_this.hideTitle);\n\n    _this.startDelayedFeedbackHide = function () {\n      if (_this.props.feedbackHideDelay) {\n        _this.hideFeedbackJob.startAfter(_this.props.feedbackHideDelay);\n      }\n    };\n\n    _this.stopDelayedFeedbackHide = function () {\n      _this.hideFeedbackJob.stop();\n    };\n\n    _this.showFeedback = function () {\n      if (_this.state.mediaControlsVisible) {\n        _this.setState({\n          feedbackVisible: true\n        });\n      } else {\n        var shouldShowSlider = _this.pulsedPlaybackState !== null || calcNumberValueOfPlaybackRate(_this.playbackRate) !== 1;\n\n        if (_this.showMiniFeedback && (!_this.state.miniFeedbackVisible || _this.state.mediaSliderVisible !== shouldShowSlider)) {\n          _this.setState(function (_ref3) {\n            var loading = _ref3.loading,\n                duration = _ref3.duration,\n                error = _ref3.error;\n            return {\n              mediaSliderVisible: shouldShowSlider && !_this.props.noMediaSliderFeedback,\n              miniFeedbackVisible: !(loading || !duration || error)\n            };\n          });\n        }\n      }\n    };\n\n    _this.hideFeedback = function () {\n      if (_this.state.feedbackVisible && _this.state.feedbackAction !== 'focus') {\n        _this.setState({\n          feedbackVisible: false,\n          feedbackAction: 'idle'\n        });\n      }\n    };\n\n    _this.hideFeedbackJob = new Job(_this.hideFeedback);\n\n    _this.startDelayedMiniFeedbackHide = function () {\n      var delay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.props.miniFeedbackHideDelay;\n\n      if (delay) {\n        _this.hideMiniFeedbackJob.startAfter(delay);\n      }\n    };\n\n    _this.stopDelayedMiniFeedbackHide = function () {\n      _this.hideMiniFeedbackJob.stop();\n    };\n\n    _this.hideMiniFeedback = function () {\n      if (_this.state.miniFeedbackVisible) {\n        _this.showMiniFeedback = false;\n\n        _this.setState({\n          mediaSliderVisible: false,\n          miniFeedbackVisible: false\n        });\n      }\n    };\n\n    _this.hideMiniFeedbackJob = new Job(_this.hideMiniFeedback);\n    _this.handle = handle.bind(_assertThisInitialized(_this));\n\n    _this.showControlsFromPointer = function () {\n      Spotlight.setPointerMode(false);\n\n      _this.showControls();\n    };\n\n    _this.clearPulsedPlayback = function () {\n      _this.pulsedPlaybackRate = null;\n      _this.pulsedPlaybackState = null;\n    };\n\n    _this.shouldShowMiniFeedback = function (ev) {\n      if (ev.type === 'keyup') {\n        _this.showMiniFeedback = true;\n      }\n\n      return true;\n    };\n\n    _this.handleLoadStart = function () {\n      _this.firstPlayReadFlag = true;\n      _this.prevCommand = _this.props.noAutoPlay ? 'pause' : 'play';\n      _this.speedIndex = 0;\n\n      _this.setState({\n        announce: AnnounceState.READY,\n        currentTime: 0,\n        sourceUnavailable: true,\n        proportionPlayed: 0,\n        proportionLoaded: 0\n      });\n\n      if (!_this.props.noAutoShowMediaControls) {\n        if (!_this.state.bottomControlsRendered) {\n          _this.renderBottomControl.idle();\n        } else {\n          _this.showControls();\n        }\n      }\n    };\n\n    _this.handlePlay = _this.handle(forwardPlay, _this.shouldShowMiniFeedback, function () {\n      return _this.play();\n    });\n    _this.handlePause = _this.handle(forwardPause, _this.shouldShowMiniFeedback, function () {\n      return _this.pause();\n    });\n    _this.handleRewind = _this.handle(forwardRewind, _this.shouldShowMiniFeedback, function () {\n      return _this.rewind();\n    });\n    _this.handleFastForward = _this.handle(forwardFastForward, _this.shouldShowMiniFeedback, function () {\n      return _this.fastForward();\n    });\n\n    _this.handleJump = function (_ref4) {\n      var keyCode = _ref4.keyCode;\n\n      if (_this.props.seekDisabled) {\n        forward('onSeekFailed', {}, _this.props);\n      } else {\n        var jumpBy = (is('left', keyCode) ? -1 : 1) * _this.props.jumpBy;\n        var time = Math.min(_this.state.duration, Math.max(0, _this.state.currentTime + jumpBy));\n        if (_this.preventTimeChange(time)) return;\n        _this.showMiniFeedback = true;\n\n        _this.jump(jumpBy);\n\n        _this.announceJob.startAfter(500, secondsToTime(_this.video.currentTime, getDurFmt(_this.props.locale), {\n          includeHour: true\n        }));\n      }\n    };\n\n    _this.handleGlobalKeyDown = _this.handle(returnsTrue(_this.activityDetected), forKey('down'), function () {\n      return !_this.state.mediaControlsVisible && !Spotlight.getCurrent() && Spotlight.getPointerMode() && !_this.props.spotlightDisabled;\n    }, preventDefault, stopImmediate, _this.showControlsFromPointer);\n\n    _this.handleEvent = function () {\n      var el = _this.video;\n      var updatedState = {\n        // Standard media properties\n        currentTime: el.currentTime,\n        duration: el.duration,\n        paused: el.playbackRate !== 1 || el.paused,\n        playbackRate: el.playbackRate,\n        // Non-standard state computed from properties\n        error: el.error,\n        loading: el.loading,\n        proportionLoaded: el.proportionLoaded,\n        proportionPlayed: el.proportionPlayed || 0,\n        sliderTooltipTime: _this.sliderScrubbing ? _this.sliderKnobProportion * el.duration : el.currentTime,\n        // note: `el.loading && this.state.sourceUnavailable == false` is equivalent to `oncanplaythrough`\n        sourceUnavailable: el.loading && _this.state.sourceUnavailable || el.error\n      }; // If there's an error, we're obviously not loading, no matter what the readyState is.\n\n      if (updatedState.error) updatedState.loading = false;\n      var isRewind = _this.prevCommand === 'rewind' || _this.prevCommand === 'slowRewind';\n      var isForward = _this.prevCommand === 'fastForward' || _this.prevCommand === 'slowForward';\n\n      if (_this.props.pauseAtEnd && (el.currentTime === 0 && isRewind || el.currentTime === el.duration && isForward)) {\n        _this.pause();\n      }\n\n      _this.setState(updatedState);\n    };\n\n    _this.renderBottomControl = new Job(function () {\n      if (!_this.state.bottomControlsRendered) {\n        _this.setState({\n          bottomControlsRendered: true\n        });\n      }\n    });\n\n    _this.getMediaState = function () {\n      return {\n        currentTime: _this.state.currentTime,\n        duration: _this.state.duration,\n        paused: _this.state.paused,\n        playbackRate: _this.video.playbackRate,\n        proportionLoaded: _this.state.proportionLoaded,\n        proportionPlayed: _this.state.proportionPlayed\n      };\n    };\n\n    _this.send = function (action, props) {\n      _this.clearPulsedPlayback();\n\n      _this.showFeedback();\n\n      _this.startDelayedFeedbackHide();\n\n      _this.video[action](props);\n    };\n\n    _this.play = function () {\n      if (_this.state.sourceUnavailable) {\n        return;\n      }\n\n      _this.speedIndex = 0; // must happen before send() to ensure feedback uses the right value\n      // TODO: refactor into this.state member\n\n      _this.prevCommand = 'play';\n\n      _this.setPlaybackRate(1);\n\n      _this.send('play');\n\n      _this.announce($L('Play'));\n\n      _this.startDelayedMiniFeedbackHide(5000);\n    };\n\n    _this.pause = function () {\n      if (_this.state.sourceUnavailable) {\n        return;\n      }\n\n      _this.speedIndex = 0; // must happen before send() to ensure feedback uses the right value\n      // TODO: refactor into this.state member\n\n      _this.prevCommand = 'pause';\n\n      _this.setPlaybackRate(1);\n\n      _this.send('pause');\n\n      _this.announce($L('Pause'));\n\n      _this.stopDelayedMiniFeedbackHide();\n    };\n\n    _this.seek = function (timeIndex) {\n      if (!_this.props.seekDisabled && !isNaN(_this.video.duration) && !_this.state.sourceUnavailable) {\n        _this.video.currentTime = timeIndex;\n      } else {\n        forward('onSeekFailed', {}, _this.props);\n      }\n    };\n\n    _this.jump = function (distance) {\n      if (_this.state.sourceUnavailable) {\n        return;\n      }\n\n      _this.pulsedPlaybackRate = toUpperCase(new DurationFmt({\n        length: 'long'\n      }).format({\n        second: _this.props.jumpBy\n      }));\n      _this.pulsedPlaybackState = distance > 0 ? 'jumpForward' : 'jumpBackward';\n\n      _this.showFeedback();\n\n      _this.startDelayedFeedbackHide();\n\n      _this.seek(_this.state.currentTime + distance);\n\n      _this.startDelayedMiniFeedbackHide();\n    };\n\n    _this.fastForward = function () {\n      if (_this.state.sourceUnavailable) {\n        return;\n      }\n\n      var shouldResumePlayback = false;\n\n      switch (_this.prevCommand) {\n        case 'slowForward':\n          if (_this.speedIndex === _this.playbackRates.length - 1) {\n            // reached to the end of array => fastforward\n            _this.selectPlaybackRates('fastForward');\n\n            _this.speedIndex = 0;\n            _this.prevCommand = 'fastForward';\n          } else {\n            _this.speedIndex = _this.clampPlaybackRate(_this.speedIndex + 1);\n          }\n\n          break;\n\n        case 'pause':\n          _this.selectPlaybackRates('slowForward');\n\n          if (_this.state.paused) {\n            shouldResumePlayback = true;\n          }\n\n          _this.speedIndex = 0;\n          _this.prevCommand = 'slowForward';\n          break;\n\n        case 'fastForward':\n          _this.speedIndex = _this.clampPlaybackRate(_this.speedIndex + 1);\n          _this.prevCommand = 'fastForward';\n          break;\n\n        default:\n          _this.selectPlaybackRates('fastForward');\n\n          _this.speedIndex = 0;\n          _this.prevCommand = 'fastForward';\n\n          if (_this.state.paused) {\n            shouldResumePlayback = true;\n          }\n\n          break;\n      }\n\n      _this.setPlaybackRate(_this.selectPlaybackRate(_this.speedIndex));\n\n      if (shouldResumePlayback) _this.send('play');\n\n      _this.stopDelayedFeedbackHide();\n\n      _this.stopDelayedMiniFeedbackHide();\n\n      _this.clearPulsedPlayback();\n\n      _this.showFeedback();\n    };\n\n    _this.rewind = function () {\n      if (_this.state.sourceUnavailable) {\n        return;\n      }\n\n      var rateForSlowRewind = _this.props.playbackRateHash['slowRewind'];\n      var shouldResumePlayback = false,\n          command = 'rewind';\n\n      if (_this.video.currentTime === 0) {\n        // Do not rewind if currentTime is 0. We're already at the beginning.\n        return;\n      }\n\n      switch (_this.prevCommand) {\n        case 'slowRewind':\n          if (_this.speedIndex === _this.playbackRates.length - 1) {\n            // reached to the end of array => go to rewind\n            _this.selectPlaybackRates(command);\n\n            _this.speedIndex = 0;\n            _this.prevCommand = command;\n          } else {\n            _this.speedIndex = _this.clampPlaybackRate(_this.speedIndex + 1);\n          }\n\n          break;\n\n        case 'pause':\n          // If it's possible to slowRewind, do it, otherwise just leave it as normal rewind : QEVENTSEVT-17386\n          if (rateForSlowRewind && rateForSlowRewind.length >= 0) {\n            command = 'slowRewind';\n          }\n\n          _this.selectPlaybackRates(command);\n\n          if (_this.state.paused && _this.state.duration > _this.state.currentTime) {\n            shouldResumePlayback = true;\n          }\n\n          _this.speedIndex = 0;\n          _this.prevCommand = command;\n          break;\n\n        case 'rewind':\n          _this.speedIndex = _this.clampPlaybackRate(_this.speedIndex + 1);\n          _this.prevCommand = command;\n          break;\n\n        default:\n          _this.selectPlaybackRates(command);\n\n          _this.speedIndex = 0;\n          _this.prevCommand = command;\n          break;\n      }\n\n      _this.setPlaybackRate(_this.selectPlaybackRate(_this.speedIndex));\n\n      if (shouldResumePlayback) _this.send('play');\n\n      _this.stopDelayedFeedbackHide();\n\n      _this.stopDelayedMiniFeedbackHide();\n\n      _this.clearPulsedPlayback();\n\n      _this.showFeedback();\n    };\n\n    _this.videoProxy = typeof Proxy !== 'function' ? null : new Proxy({}, {\n      get: function get(target, name) {\n        var value = _this.video[name];\n\n        if (typeof value === 'function') {\n          value = value.bind(_this.video);\n        }\n\n        return value;\n      },\n      set: function set(target, name, value) {\n        return _this.video[name] = value;\n      }\n    });\n\n    _this.getVideoNode = function () {\n      return _this.videoProxy || _this.video;\n    };\n\n    _this.areControlsVisible = function () {\n      return _this.state.mediaControlsVisible;\n    };\n\n    _this.selectPlaybackRates = function (cmd) {\n      _this.playbackRates = _this.props.playbackRateHash[cmd];\n    };\n\n    _this.clampPlaybackRate = function (idx) {\n      if (!_this.playbackRates) {\n        return;\n      }\n\n      return idx % _this.playbackRates.length;\n    };\n\n    _this.selectPlaybackRate = function (idx) {\n      return _this.playbackRates[idx];\n    };\n\n    _this.setPlaybackRate = function (rate) {\n      // Stop rewind (if happenning)\n      _this.stopRewindJob(); // Make sure rate is a string\n\n\n      _this.playbackRate = rate = String(rate);\n      var pbNumber = calcNumberValueOfPlaybackRate(rate);\n\n      if (!platform.webos) {\n        // ReactDOM throws error for setting negative value for playbackRate\n        _this.video.playbackRate = pbNumber < 0 ? 0 : pbNumber; // For supporting cross browser behavior\n\n        if (pbNumber < 0) {\n          _this.beginRewind();\n        }\n      } else {\n        // Set native playback rate\n        _this.video.playbackRate = pbNumber;\n      }\n    };\n\n    _this.rewindManually = function () {\n      var now = perfNow(),\n          distance = now - _this.rewindBeginTime,\n          pbRate = calcNumberValueOfPlaybackRate(_this.playbackRate),\n          adjustedDistance = distance * pbRate / 1000;\n\n      _this.jump(adjustedDistance);\n\n      _this.stopDelayedMiniFeedbackHide();\n\n      _this.clearPulsedPlayback();\n\n      _this.startRewindJob(); // Issue another rewind tick\n\n    };\n\n    _this.rewindJob = new Job(_this.rewindManually, 100);\n\n    _this.startRewindJob = function () {\n      _this.rewindBeginTime = perfNow();\n\n      _this.rewindJob.start();\n    };\n\n    _this.stopRewindJob = function () {\n      _this.rewindJob.stop();\n    };\n\n    _this.beginRewind = function () {\n      _this.send('pause');\n\n      _this.startRewindJob();\n    };\n\n    _this.addStateToEvent = function (ev) {\n      return _objectSpread({\n        // More props from `ev` may be added here as needed, but a full copy via `...ev`\n        // overloads Storybook's Action Logger and likely has other perf fallout.\n        type: ev.type\n      }, _this.getMediaState());\n    };\n\n    _this.disablePointerMode = function () {\n      Spotlight.setPointerMode(false);\n      return true;\n    };\n\n    _this.handleKeyDownFromControls = _this.handle( // onKeyDown is used as a proxy for when the title has been read because it can only occur\n    // after the controls have been shown.\n    _this.markAnnounceRead, forKey('down'), _this.disablePointerMode, _this.hideControls);\n\n    _this.onVideoClick = function () {\n      _this.toggleControls();\n    };\n\n    _this.onSliderChange = function (_ref5) {\n      var value = _ref5.value;\n      var time = value * _this.state.duration;\n      if (_this.preventTimeChange(time)) return;\n\n      _this.seek(time);\n\n      _this.sliderScrubbing = false;\n    };\n\n    _this.sliderTooltipTimeJob = new Job(function (time) {\n      return _this.setState({\n        sliderTooltipTime: time\n      });\n    }, 20);\n\n    _this.handleKnobMove = function (ev) {\n      _this.sliderScrubbing = true; // prevent announcing repeatedly when the knob is detached from the progress.\n      // TODO: fix Slider to not send onKnobMove when the knob hasn't, in fact, moved\n\n      if (_this.sliderKnobProportion !== ev.proportion) {\n        _this.sliderKnobProportion = ev.proportion;\n        var seconds = Math.floor(_this.sliderKnobProportion * _this.video.duration);\n\n        if (!isNaN(seconds)) {\n          _this.sliderTooltipTimeJob.throttle(seconds);\n\n          var knobTime = secondsToTime(seconds, getDurFmt(_this.props.locale), {\n            includeHour: true\n          });\n          forward('onScrub', _objectSpread({}, ev, {\n            seconds: seconds\n          }), _this.props);\n\n          _this.announce(\"\".concat($L('jump to'), \" \").concat(knobTime));\n        }\n      }\n    };\n\n    _this.handleSliderFocus = function () {\n      var seconds = Math.floor(_this.sliderKnobProportion * _this.video.duration);\n      _this.sliderScrubbing = true;\n\n      _this.setState({\n        feedbackAction: 'focus',\n        feedbackVisible: true\n      });\n\n      _this.stopDelayedFeedbackHide();\n\n      if (!isNaN(seconds)) {\n        _this.sliderTooltipTimeJob.throttle(seconds);\n\n        var knobTime = secondsToTime(seconds, getDurFmt(_this.props.locale), {\n          includeHour: true\n        });\n        forward('onScrub', {\n          detached: _this.sliderScrubbing,\n          proportion: _this.sliderKnobProportion,\n          seconds: seconds\n        }, _this.props);\n\n        _this.announce(\"\".concat($L('jump to'), \" \").concat(knobTime));\n      }\n    };\n\n    _this.handleSliderBlur = function () {\n      _this.sliderScrubbing = false;\n\n      _this.startDelayedFeedbackHide();\n\n      _this.setState(function (_ref6) {\n        var currentTime = _ref6.currentTime;\n        return {\n          feedbackAction: 'blur',\n          feedbackVisible: true,\n          sliderTooltipTime: currentTime\n        };\n      });\n    };\n\n    _this.slider5WayPressJob = new Job(function () {\n      _this.setState({\n        slider5WayPressed: false\n      });\n    }, 200);\n\n    _this.handleSliderKeyDown = function (ev) {\n      var keyCode = ev.keyCode;\n\n      if (is('enter', keyCode)) {\n        _this.setState({\n          slider5WayPressed: true\n        }, _this.slider5WayPressJob.start());\n      } else if (is('down', keyCode)) {\n        Spotlight.setPointerMode(false);\n\n        if (Spotlight.focus(_this.mediaControlsSpotlightId)) {\n          preventDefault(ev);\n          stopImmediate(ev);\n\n          _this.activityDetected();\n        }\n      } else if (is('up', keyCode)) {\n        Spotlight.setPointerMode(false);\n        preventDefault(ev);\n        stopImmediate(ev);\n\n        _this.handleSliderBlur();\n\n        _this.hideControls();\n      } else {\n        _this.activityDetected();\n      }\n    };\n\n    _this.onJumpBackward = _this.handle(forwardJumpBackward, function () {\n      return _this.jump(-1 * _this.props.jumpBy);\n    });\n    _this.onJumpForward = _this.handle(forwardJumpForward, function () {\n      return _this.jump(_this.props.jumpBy);\n    });\n\n    _this.handleToggleMore = function (_ref7) {\n      var showMoreComponents = _ref7.showMoreComponents;\n\n      if (!showMoreComponents) {\n        _this.startAutoCloseTimeout(); // Restore the timer since we are leaving \"more.\n        // Restore the title-hide now that we're finished with \"more\".\n\n\n        _this.startDelayedTitleHide();\n      } else {\n        // Interrupt the title-hide since we don't want it hiding autonomously in \"more\".\n        _this.stopDelayedTitleHide();\n      }\n\n      _this.setState(function (_ref8) {\n        var announce = _ref8.announce;\n        return {\n          infoVisible: showMoreComponents,\n          titleVisible: true,\n          announce: announce < AnnounceState.INFO ? AnnounceState.INFO : AnnounceState.DONE\n        };\n      });\n    };\n\n    _this.handleMediaControlsClose = function (ev) {\n      _this.hideControls();\n\n      ev.stopPropagation();\n    };\n\n    _this.setPlayerRef = function (node) {\n      // TODO: We've moved SpotlightContainerDecorator up to allow VP to be spottable but also\n      // need a ref to the root node to query for children and set CSS variables.\n      // eslint-disable-next-line react/no-find-dom-node\n      _this.player = ReactDOM.findDOMNode(node);\n    };\n\n    _this.setVideoRef = function (video) {\n      _this.video = video;\n    };\n\n    _this.setTitleRef = function (node) {\n      _this.titleRef = node;\n    };\n\n    _this.setAnnounceRef = function (node) {\n      _this.announceRef = node;\n    };\n\n    _this.video = null;\n    _this.pulsedPlaybackRate = null;\n    _this.pulsedPlaybackState = null;\n    _this.prevCommand = _props.noAutoPlay ? 'pause' : 'play';\n    _this.showMiniFeedback = false;\n    _this.speedIndex = 0;\n    _this.id = _this.generateId();\n\n    _this.selectPlaybackRates('fastForward');\n\n    _this.sliderKnobProportion = 0;\n    _this.mediaControlsSpotlightId = _props.spotlightId + '_mediaControls';\n    _this.moreButtonSpotlightId = _this.mediaControlsSpotlightId + '_moreButton'; // Re-render-necessary State\n\n    _this.state = {\n      announce: AnnounceState.READY,\n      currentTime: 0,\n      duration: 0,\n      error: false,\n      loading: false,\n      paused: _props.noAutoPlay,\n      playbackRate: 1,\n      titleOffsetHeight: 0,\n      bottomOffsetHeight: 0,\n      // Non-standard state computed from properties\n      bottomControlsRendered: false,\n      feedbackAction: 'idle',\n      feedbackVisible: false,\n      infoVisible: false,\n      mediaControlsVisible: false,\n      mediaSliderVisible: false,\n      miniFeedbackVisible: false,\n      proportionLoaded: 0,\n      proportionPlayed: 0,\n      sourceUnavailable: true,\n      titleVisible: true\n    };\n\n    if (_props.setApiProvider) {\n      _props.setApiProvider(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(VideoPlayerBase, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      on('mousemove', this.activityDetected);\n\n      if (platform.touch) {\n        on('touchmove', this.activityDetected);\n      }\n\n      on('keydown', this.handleGlobalKeyDown);\n      this.startDelayedFeedbackHide();\n\n      if (this.context && typeof this.context === 'function') {\n        this.floatingLayerController = this.context(function () {});\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if ( // Use shallow props compare instead of source comparison to support possible changes\n      // from mediaComponent.\n      shallowEqual(this.props, nextProps) && !this.state.miniFeedbackVisible && this.state.miniFeedbackVisible === nextState.miniFeedbackVisible && !this.state.mediaSliderVisible && this.state.mediaSliderVisible === nextState.mediaSliderVisible && this.state.loading === nextState.loading && this.props.loading === nextProps.loading && (this.state.currentTime !== nextState.currentTime || this.state.proportionPlayed !== nextState.proportionPlayed || this.state.sliderTooltipTime !== nextState.sliderTooltipTime)) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.titleRef && this.state.infoVisible && (!prevState.infoVisible || !equals(this.props.infoComponents, prevProps.infoComponents))) {\n        this.titleRef.style.setProperty('--infoComponentsOffset', \"\".concat(this.getHeightForElement('infoComponents'), \"px\"));\n      }\n\n      if (!this.state.mediaControlsVisible && prevState.mediaControlsVisible !== this.state.mediaControlsVisible || !this.state.mediaSliderVisible && prevState.mediaSliderVisible !== this.state.mediaSliderVisible) {\n        this.floatingLayerController.notify({\n          action: 'closeAll'\n        });\n      }\n\n      if (this.props.spotlightId !== prevProps.spotlightId) {\n        this.mediaControlsSpotlightId = this.props.spotlightId + '_mediaControls';\n        this.moreButtonSpotlightId = this.mediaControlsSpotlightId + '_moreButton';\n      }\n\n      if (!this.state.mediaControlsVisible && prevState.mediaControlsVisible) {\n        forwardControlsAvailable({\n          available: false\n        }, this.props);\n        this.stopAutoCloseTimeout();\n\n        if (!this.props.spotlightDisabled) {\n          // If last focused item were in the media controls or slider, we need to explicitly\n          // blur the element when MediaControls hide. See ENYO-5648\n          var current = Spotlight.getCurrent();\n          var bottomControls = document.querySelector(\".\".concat(css.bottom));\n\n          if (current && bottomControls && bottomControls.contains(current)) {\n            current.blur();\n          } // when in pointer mode, the focus call below will only update the last focused for\n          // the video player and not set the active container to the video player which will\n          // cause focus to land back on the media controls button when spotlight restores\n          // focus.\n\n\n          if (Spotlight.getPointerMode()) {\n            Spotlight.setActiveContainer(this.props.spotlightId);\n          } // Set focus to the hidden spottable control - maintaining focus on available spottable\n          // controls, which prevents an addiitional 5-way attempt in order to re-show media controls\n\n\n          Spotlight.focus(\".\".concat(css.controlsHandleAbove));\n        }\n      } else if (this.state.mediaControlsVisible && !prevState.mediaControlsVisible) {\n        forwardControlsAvailable({\n          available: true\n        }, this.props);\n        this.startAutoCloseTimeout();\n\n        if (!this.props.spotlightDisabled) {\n          var _current = Spotlight.getCurrent();\n\n          if (!_current || this.player.contains(_current)) {\n            // Set focus within media controls when they become visible.\n            Spotlight.focus(this.mediaControlsSpotlightId);\n          }\n        }\n      } // Once video starts loading it queues bottom control render until idle\n\n\n      if (this.state.bottomControlsRendered && !prevState.bottomControlsRendered && !this.state.mediaControlsVisible) {\n        this.showControls();\n      }\n\n      if (this.state.mediaControlsVisible && prevState.infoVisible !== this.state.infoVisible) {\n        var _current2 = Spotlight.getCurrent();\n\n        if (_current2 && _current2.dataset && _current2.dataset.spotlightId === this.moreButtonSpotlightId) {\n          // need to blur manually to read out `infoComponent`\n          _current2.blur();\n        }\n\n        setTimeout(function () {\n          Spotlight.focus(_this2.moreButtonSpotlightId);\n        }, 1);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      off('mousemove', this.activityDetected);\n\n      if (platform.touch) {\n        off('touchmove', this.activityDetected);\n      }\n\n      off('keydown', this.handleGlobalKeyDown);\n      this.stopRewindJob();\n      this.stopAutoCloseTimeout();\n      this.stopDelayedTitleHide();\n      this.stopDelayedFeedbackHide();\n      this.stopDelayedMiniFeedbackHide();\n      this.announceJob.stop();\n      this.renderBottomControl.stop();\n      this.sliderTooltipTimeJob.stop();\n      this.slider5WayPressJob.stop();\n\n      if (this.floatingLayerController) {\n        this.floatingLayerController.unregister();\n      }\n    } //\n    // Internal Methods\n    //\n\n  }, {\n    key: \"isTimeBeyondSelection\",\n    value: function isTimeBeyondSelection(time) {\n      var selection = this.props.selection; // if selection isn't set or only contains the starting value, there isn't a valid selection\n      // with which to test the time\n\n      if (selection != null && selection.length >= 2) {\n        var _selection = _slicedToArray(selection, 2),\n            start = _selection[0],\n            end = _selection[1];\n\n        return time > end || time < start;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"preventTimeChange\",\n    value: function preventTimeChange(time) {\n      return this.isTimeBeyondSelection(time) && !forwardWithPrevent('onSeekOutsideSelection', {\n        type: 'onSeekOutsideSelection',\n        time: time\n      }, this.props);\n    }\n    /**\n     * If the announce state is either ready to read the title or ready to read info, advance the\n     * state to \"read\".\n     *\n     * @returns {Boolean} Returns true to be used in event handlers\n     * @private\n     */\n\n  }, {\n    key: \"getControlsAriaProps\",\n    value: function getControlsAriaProps() {\n      if (this.state.announce === AnnounceState.TITLE) {\n        return {\n          'aria-labelledby': \"\".concat(this.id, \"_title\"),\n          'aria-live': 'off',\n          role: 'alert'\n        };\n      } else if (this.state.announce === AnnounceState.INFO) {\n        return {\n          'aria-labelledby': \"\".concat(this.id, \"_info\"),\n          role: 'region'\n        };\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          disabled = _this$props.disabled,\n          infoComponents = _this$props.infoComponents,\n          loading = _this$props.loading,\n          locale = _this$props.locale,\n          mediaControlsComponent = _this$props.mediaControlsComponent,\n          noAutoPlay = _this$props.noAutoPlay,\n          noMiniFeedback = _this$props.noMiniFeedback,\n          noSlider = _this$props.noSlider,\n          noSpinner = _this$props.noSpinner,\n          selection = _this$props.selection,\n          spotlightDisabled = _this$props.spotlightDisabled,\n          spotlightId = _this$props.spotlightId,\n          style = _this$props.style,\n          thumbnailComponent = _this$props.thumbnailComponent,\n          thumbnailSrc = _this$props.thumbnailSrc,\n          title = _this$props.title,\n          VideoComponent = _this$props.videoComponent,\n          mediaProps = _objectWithoutProperties(_this$props, [\"className\", \"disabled\", \"infoComponents\", \"loading\", \"locale\", \"mediaControlsComponent\", \"noAutoPlay\", \"noMiniFeedback\", \"noSlider\", \"noSpinner\", \"selection\", \"spotlightDisabled\", \"spotlightId\", \"style\", \"thumbnailComponent\", \"thumbnailSrc\", \"title\", \"videoComponent\"]);\n\n      delete mediaProps.announce;\n      delete mediaProps.autoCloseTimeout;\n      delete mediaProps.children;\n      delete mediaProps.feedbackHideDelay;\n      delete mediaProps.jumpBy;\n      delete mediaProps.miniFeedbackHideDelay;\n      delete mediaProps.noAutoShowMediaControls;\n      delete mediaProps.noMediaSliderFeedback;\n      delete mediaProps.onControlsAvailable;\n      delete mediaProps.onFastForward;\n      delete mediaProps.onJumpBackward;\n      delete mediaProps.onJumpForward;\n      delete mediaProps.onPause;\n      delete mediaProps.onPlay;\n      delete mediaProps.onRewind;\n      delete mediaProps.onScrub;\n      delete mediaProps.onSeekFailed;\n      delete mediaProps.onSeekOutsideSelection;\n      delete mediaProps.pauseAtEnd;\n      delete mediaProps.playbackRateHash;\n      delete mediaProps.seekDisabled;\n      delete mediaProps.setApiProvider;\n      delete mediaProps.thumbnailUnavailable;\n      delete mediaProps.titleHideDelay;\n      delete mediaProps.videoPath;\n      mediaProps.autoPlay = !noAutoPlay;\n      mediaProps.className = css.video;\n      mediaProps.controls = false;\n      mediaProps.mediaComponent = 'video';\n      mediaProps.onLoadStart = this.handleLoadStart;\n      mediaProps.onUpdate = this.handleEvent;\n      mediaProps.ref = this.setVideoRef;\n      var controlsAriaProps = this.getControlsAriaProps();\n      var proportionSelection = selection;\n\n      if (proportionSelection != null && this.state.duration) {\n        proportionSelection = selection.map(function (t) {\n          return t / _this3.state.duration;\n        });\n      }\n\n      var durFmt = getDurFmt(locale);\n      return React.createElement(RootContainer, {\n        className: css.videoPlayer + ' enact-fit' + (className ? ' ' + className : ''),\n        onClick: this.activityDetected,\n        ref: this.setPlayerRef,\n        spotlightDisabled: spotlightDisabled,\n        spotlightId: spotlightId,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1838\n        },\n        __self: this\n      }, // Duplicating logic from <ComponentOverride /> until enzyme supports forwardRef\n      VideoComponent && ((typeof VideoComponent === 'function' || typeof VideoComponent === 'string') && React.createElement(VideoComponent, Object.assign({}, mediaProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1851\n        },\n        __self: this\n      })) || React.isValidElement(VideoComponent) && React.cloneElement(VideoComponent, mediaProps)) || null, React.createElement(Overlay, {\n        bottomControlsVisible: this.state.mediaControlsVisible,\n        onClick: this.onVideoClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1858\n        },\n        __self: this\n      }, !noSpinner && (this.state.loading || loading) ? React.createElement(Spinner, {\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1862\n        },\n        __self: this\n      }) : null), this.state.bottomControlsRendered ? React.createElement(\"div\", Object.assign({\n        className: css.fullscreen\n      }, controlsAriaProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1866\n        },\n        __self: this\n      }), React.createElement(FeedbackContent, {\n        className: css.miniFeedback,\n        playbackRate: this.pulsedPlaybackRate || this.selectPlaybackRate(this.speedIndex),\n        playbackState: this.pulsedPlaybackState || this.prevCommand,\n        visible: this.state.miniFeedbackVisible && !noMiniFeedback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1867\n        },\n        __self: this\n      }, secondsToTime(this.state.sliderTooltipTime, durFmt)), React.createElement(ControlsContainer, {\n        className: css.bottom + (this.state.mediaControlsVisible ? '' : ' ' + css.hidden),\n        spotlightDisabled: spotlightDisabled || !this.state.mediaControlsVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1875\n        },\n        __self: this\n      }, this.state.mediaSliderVisible ? React.createElement(\"div\", {\n        className: css.infoFrame,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1885\n        },\n        __self: this\n      }, React.createElement(MediaTitle, {\n        id: this.id,\n        infoVisible: this.state.infoVisible,\n        ref: this.setTitleRef,\n        title: title,\n        visible: this.state.titleVisible && this.state.mediaControlsVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1886\n        },\n        __self: this\n      }, infoComponents), React.createElement(Times, {\n        current: this.state.currentTime,\n        total: this.state.duration,\n        formatter: durFmt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1895\n        },\n        __self: this\n      })) : null, noSlider ? null : React.createElement(MediaSlider, {\n        backgroundProgress: this.state.proportionLoaded,\n        disabled: disabled || this.state.sourceUnavailable,\n        forcePressed: this.state.slider5WayPressed,\n        onBlur: this.handleSliderBlur,\n        onChange: this.onSliderChange,\n        onFocus: this.handleSliderFocus,\n        onKeyDown: this.handleSliderKeyDown,\n        onKnobMove: this.handleKnobMove,\n        onSpotlightUp: this.handleSpotlightUpFromSlider,\n        selection: proportionSelection,\n        spotlightDisabled: spotlightDisabled || !this.state.mediaControlsVisible,\n        value: this.state.proportionPlayed,\n        visible: this.state.mediaSliderVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1900\n        },\n        __self: this\n      }, React.createElement(FeedbackTooltip, {\n        action: this.state.feedbackAction,\n        duration: this.state.duration,\n        formatter: durFmt,\n        hidden: !this.state.feedbackVisible || this.state.sourceUnavailable,\n        playbackRate: this.selectPlaybackRate(this.speedIndex),\n        playbackState: this.prevCommand,\n        thumbnailComponent: thumbnailComponent,\n        thumbnailDeactivated: this.props.thumbnailUnavailable,\n        thumbnailSrc: thumbnailSrc,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1915\n        },\n        __self: this\n      })), React.createElement(ComponentOverride, {\n        component: mediaControlsComponent,\n        mediaDisabled: disabled || this.state.sourceUnavailable,\n        moreButtonSpotlightId: this.moreButtonSpotlightId,\n        onBackwardButtonClick: this.handleRewind,\n        onClose: this.handleMediaControlsClose,\n        onFastForward: this.handleFastForward,\n        onForwardButtonClick: this.handleFastForward,\n        onJump: this.handleJump,\n        onJumpBackwardButtonClick: this.onJumpBackward,\n        onJumpForwardButtonClick: this.onJumpForward,\n        onKeyDown: this.handleKeyDownFromControls,\n        onPause: this.handlePause,\n        onPlay: this.handlePlay,\n        onRewind: this.handleRewind,\n        onToggleMore: this.handleToggleMore,\n        paused: this.state.paused,\n        spotlightId: this.mediaControlsSpotlightId,\n        spotlightDisabled: !this.state.mediaControlsVisible || spotlightDisabled,\n        visible: this.state.mediaControlsVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1928\n        },\n        __self: this\n      }))) : null, React.createElement(SpottableDiv // This captures spotlight focus for use with 5-way.\n      // It's non-visible but lives at the top of the VideoPlayer.\n      , {\n        className: css.controlsHandleAbove,\n        onClick: this.showControls,\n        onSpotlightDown: this.showControls,\n        spotlightDisabled: this.state.mediaControlsVisible || spotlightDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1953\n        },\n        __self: this\n      }), React.createElement(Announce, {\n        ref: this.setAnnounceRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1961\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return VideoPlayerBase;\n}(React.Component), _class.displayName = 'VideoPlayerBase', _class.propTypes =\n/** @lends moonstone/VideoPlayer.VideoPlayerBase.prototype */\n{\n  /**\n   * passed by AnnounceDecorator for accessibility\n   *\n   * @type {Function}\n   * @private\n   */\n  announce: PropTypes.func,\n\n  /**\n   * The time (in milliseconds) before the control buttons will hide.\n   *\n   * Setting this to 0 or `null` disables closing, requiring user input to open and close.\n   *\n   * @type {Number}\n   * @default 5000\n   * @public\n   */\n  autoCloseTimeout: PropTypes.number,\n\n  /**\n   * Removes interactive capability from this component. This includes, but is not limited to,\n   * key-press events, most clickable buttons, and prevents the showing of the controls.\n   *\n   * @type {Boolean}\n   * @public\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Amount of time (in milliseconds) after which the feedback text/icon part of the slider's\n   * tooltip will automatically hidden after the last action.\n   * Setting this to 0 or `null` disables feedbackHideDelay; feedback will always be present.\n   *\n   * @type {Number}\n   * @default 3000\n   * @public\n   */\n  feedbackHideDelay: PropTypes.number,\n\n  /**\n   * Components placed below the title.\n   *\n   * Typically these will be media descriptor icons, like how many audio channels, what codec\n   * the video uses, but can also be a description for the video or anything else that seems\n   * appropriate to provide information about the video to the user.\n   *\n   * @type {Node}\n   * @public\n   */\n  infoComponents: PropTypes.node,\n\n  /**\n   * The number of seconds the player should skip forward or backward when a \"jump\" button is\n   * pressed.\n   *\n   * @type {Number}\n   * @default 30\n   * @public\n   */\n  jumpBy: PropTypes.number,\n\n  /**\n   * Manually set the loading state of the media, in case you have information that\n   * `VideoPlayer` does not have.\n   *\n   * @type {Boolean}\n   * @public\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * The current locale as a\n   * {@link https://tools.ietf.org/html/rfc5646|BCP 47 language tag}.\n   *\n   * @type {String}\n   * @public\n   */\n  locale: PropTypes.string,\n\n  /**\n   * Overrides the default media control component to support customized behaviors.\n   *\n   * The provided component will receive the following props from `VideoPlayer`:\n   *\n   * * `mediaDisabled` - `true` when the media controls are not interactive\n   * * `onBackwardButtonClick` - Called when the rewind button is pressed\n   * * `onClose` - Called when cancel key is pressed when the media controls are visible\n   * * `onFastForward` - Called when the media is fast forwarded via a key event\n   * * `onForwardButtonClick` - Called when the fast forward button is pressed\n   * * `onJump` - Called when the media jumps either forward or backward\n   * * `onJumpBackwardButtonClick` - Called when the jump backward button is pressed\n   * * `onJumpForwardButtonClick` - Called when the jump forward button is pressed\n   * * `onKeyDown` - Called when a key is pressed\n   * * `onPause` - Called when the media is paused via a key event\n   * * `onPlay` - Called when the media is played via a key event\n   * * `onRewind` - Called when the media is rewound via a key event\n   * * `onToggleMore` - Called when the more components are hidden or shown\n   * * `paused` - `true` when the media is paused\n   * * `spotlightId` - The spotlight container Id for the media controls\n   * * `spotlightDisabled` - `true` when spotlight is disabled for the media controls\n   * * `visible` - `true` when the media controls should be displayed\n   *\n   * @type {Component|Element}\n   * @default `moonstone/VideoPlayer.MediaControls`\n   * @public\n   */\n  mediaControlsComponent: EnactPropTypes.componentOverride,\n\n  /**\n   * Amount of time (in milliseconds), after the last user action, that the `miniFeedback`\n   * will automatically hide.\n   * Setting this to 0 or `null` disables `miniFeedbackHideDelay`; `miniFeedback` will always\n   * be present.\n   *\n   * @type {Number}\n   * @default 2000\n   * @public\n   */\n  miniFeedbackHideDelay: PropTypes.number,\n\n  /**\n   * Disable audio for this video.\n   *\n   * In a TV context, this is handled by the remote control, not programmatically in the\n   * VideoPlayer API.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  muted: PropTypes.bool,\n\n  /**\n   * Prevents the default behavior of playing a video immediately after it's loaded.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  noAutoPlay: PropTypes.bool,\n\n  /**\n   * Prevents the default behavior of showing media controls immediately after it's loaded.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  noAutoShowMediaControls: PropTypes.bool,\n\n  /**\n   * Hides media slider feedback when fast forward or rewind while media controls are hidden.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  noMediaSliderFeedback: PropTypes.bool,\n\n  /**\n   * Removes the mini feedback.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  noMiniFeedback: PropTypes.bool,\n\n  /**\n   * Removes the media slider.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  noSlider: PropTypes.bool,\n\n  /**\n   * Removes spinner while loading.\n   *\n   * @type {Boolean}\n   * @public\n   */\n  noSpinner: PropTypes.bool,\n\n  /**\n   * Called when the player's controls change availability, whether they are shown\n   * or hidden.\n   *\n   * The current status is sent as the first argument in an object with a key `available`\n   * which will be either `true` or `false`. (e.g.: `onControlsAvailable({available: true})`)\n   *\n   * @type {Function}\n   * @public\n   */\n  onControlsAvailable: PropTypes.func,\n\n  /**\n   * Called when the video is fast forwarded.\n   *\n   * @type {Function}\n   * @public\n   */\n  onFastForward: PropTypes.func,\n\n  /**\n   * Called when the user clicks the JumpBackward button.\n   *\n   * Is passed a {@link moonstone/VideoPlayer.videoStatus} as the first argument.\n   *\n   * @type {Function}\n   * @public\n   */\n  onJumpBackward: PropTypes.func,\n\n  /**\n   * Called when the user clicks the JumpForward button.\n   *\n   * Is passed a {@link moonstone/VideoPlayer.videoStatus} as the first argument.\n   *\n   * @type {Function}\n   * @public\n   */\n  onJumpForward: PropTypes.func,\n\n  /**\n   * Called when video is paused\n   *\n   * @type {Function}\n   * @public\n   */\n  onPause: PropTypes.func,\n\n  /**\n   * Called when video is played\n   *\n   * @type {Function}\n   * @public\n   */\n  onPlay: PropTypes.func,\n\n  /**\n   * Called when video is rewound.\n   *\n   * @type {Function}\n   * @public\n   */\n  onRewind: PropTypes.func,\n\n  /**\n   * Called when the user is moving the VideoPlayer's Slider knob independently of\n   * the current playback position.\n   *\n   * It is passed an object with a `seconds` key (float value) to indicate the current time\n   * index. It can be used to update the `thumbnailSrc` to the reflect the current scrub\n   * position.\n   *\n   * @type {Function}\n   * @public\n   */\n  onScrub: PropTypes.func,\n\n  /**\n   * Called when seek is attempted while `seekDisabled` is true.\n   *\n   * @type {Function}\n   */\n  onSeekFailed: PropTypes.func,\n\n  /**\n   * Called when seeking outside of the current `selection` range.\n   *\n   * By default, the seek will still be performed. Calling `preventDefault()` on the event\n   * will prevent the seek operation.\n   *\n   * @type {Function}\n   * @public\n   */\n  onSeekOutsideSelection: PropTypes.func,\n\n  /**\n   * Pauses the video when it reaches either the start or the end of the video during rewind,\n   * slow rewind, fast forward, or slow forward.\n   *\n   * @type {Boolean}\n   * @default false\n   * @public\n   */\n  pauseAtEnd: PropTypes.bool,\n\n  /**\n   * Mapping of playback rate names to playback rate values that may be set.\n   *\n   * @type {moonstone/VideoPlayer.playbackRateHash}\n   * @default {\n   *\tfastForward: ['2', '4', '8', '16'],\n   *\trewind: ['-2', '-4', '-8', '-16'],\n   *\tslowForward: ['1/4', '1/2'],\n   *\tslowRewind: ['-1/2', '-1']\n   * }\n   * @public\n   */\n  playbackRateHash: PropTypes.shape({\n    fastForward: PropTypes.arrayOf(PropTypes.string),\n    rewind: PropTypes.arrayOf(PropTypes.string),\n    slowForward: PropTypes.arrayOf(PropTypes.string),\n    slowRewind: PropTypes.arrayOf(PropTypes.string)\n  }),\n\n  /**\n   * Disables seek function.\n   *\n   * Note that jump by arrow keys will also be disabled when `true`.\n   *\n   * @type {Boolean}\n   * @public\n   */\n  seekDisabled: PropTypes.bool,\n\n  /**\n   * A range of the video to display as selected.\n   *\n   * The value of `selection` may either be:\n   * * `null` or `undefined` for no selection,\n   * * a single-element array with the start time of the selection\n   * * a two-element array containing both the start and end time of the selection in seconds\n   *\n   * When the start time is specified, the media slider will show filled starting at that\n   * time to the current time.\n   *\n   * When the end time is specified, the slider's background will be filled between the two\n   * times.\n   *\n   * @type {Number[]}\n   * @public\n   */\n  selection: PropTypes.arrayOf(PropTypes.number),\n\n  /**\n   * Registers the VideoPlayer component with an\n   * {@link core/internal/ApiDecorator.ApiDecorator}.\n   *\n   * @type {Function}\n   * @private\n   */\n  setApiProvider: PropTypes.func,\n\n  /**\n   * The video source.\n   *\n   * Any children `<source>` tag elements of [VideoPlayer]{@link moonstone/VideoPlayer} will\n   * be sent directly to the `videoComponent` as video sources.\n   *\n   * @type {Node}\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\n   * @public\n   */\n  source: PropTypes.node,\n\n  /**\n   * Disables spotlight navigation into the component.\n   *\n   * @type {Boolean}\n   * @public\n   */\n  spotlightDisabled: PropTypes.bool,\n\n  /**\n   * The spotlight container ID for the player.\n   *\n   * @type {String}\n   * @public\n   * @default 'videoPlayer'\n   */\n  spotlightId: PropTypes.string,\n\n  /**\n   * The thumbnail component to be used instead of the built-in version.\n   *\n   * The internal thumbnail style will not be applied to this component. This component\n   * follows the same rules as the built-in version.\n   *\n   * @type {String|Component|Element}\n   * @public\n   */\n  thumbnailComponent: EnactPropTypes.renderableOverride,\n\n  /**\n   * Thumbnail image source to show on the slider knob.\n   *\n   * This is a standard {@link moonstone/Image} component so it supports all of the same\n   * options for the `src` property. If no `thumbnailComponent` and no `thumbnailSrc` is set,\n   * no tooltip will display.\n   *\n   * @type {String|Object}\n   * @public\n   */\n  thumbnailSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n  /**\n  * Enables the thumbnail transition from opaque to translucent.\n  *\n  * @type {Boolean}\n  * @public\n  */\n  thumbnailUnavailable: PropTypes.bool,\n\n  /**\n   * Title for the video being played.\n   *\n   * @type {Node}\n   * @public\n   */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /**\n   * The time (in milliseconds) before the title disappears from the controls.\n   *\n   * Setting this to `0` disables hiding.\n   *\n   * @type {Number}\n   * @default 5000\n   * @public\n   */\n  titleHideDelay: PropTypes.number,\n\n  /**\n   * Video component to use.\n   *\n   * The default renders an `HTMLVideoElement`. Custom video components must have a similar\n   * API structure, exposing the following APIs:\n   *\n   * Properties:\n   * * `currentTime` {Number} - Playback index of the media in seconds\n   * * `duration` {Number} - Media's entire duration in seconds\n   * * `error` {Boolean} - `true` if video playback has errored.\n   * * `loading` {Boolean} - `true` if video playback is loading.\n   * * `paused` {Boolean} - Playing vs paused state. `true` means the media is paused\n   * * `playbackRate` {Number} - Current playback rate, as a number\n   * * `proportionLoaded` {Number} - A value between `0` and `1`\n   *\trepresenting the proportion of the media that has loaded\n   * * `proportionPlayed` {Number} - A value between `0` and `1` representing the\n   *\tproportion of the media that has already been shown\n   *\n   * Events:\n   * * `onLoadStart` - Called when the video starts to load\n   * * `onUpdate` - Sent when any of the properties were updated\n   *\n   * Methods:\n   * * `play()` - play video\n   * * `pause()` - pause video\n   * * `load()` - load video\n   *\n   * The [`source`]{@link moonstone/VideoPlayer.VideoBase.source} property is passed to\n   * the video component as a child node.\n   *\n   * @type {Component|Element}\n   * @default {@link ui/Media.Media}\n   * @public\n   */\n  videoComponent: EnactPropTypes.componentOverride\n}, _class.contextType = FloatingLayerContext, _class.defaultProps = {\n  autoCloseTimeout: 5000,\n  feedbackHideDelay: 3000,\n  jumpBy: 30,\n  mediaControlsComponent: MediaControls,\n  miniFeedbackHideDelay: 2000,\n  playbackRateHash: {\n    fastForward: ['2', '4', '8', '16'],\n    rewind: ['-2', '-4', '-8', '-16'],\n    slowForward: ['1/4', '1/2'],\n    slowRewind: ['-1/2', '-1']\n  },\n  spotlightId: 'videoPlayer',\n  titleHideDelay: 5000,\n  videoComponent: Media\n}, _temp);\n/**\n * A standard HTML5 video player for Moonstone. It behaves, responds to, and operates like a\n * `<video>` tag in its support for `<source>`.  It also accepts custom tags such as\n * `<infoComponents>` for displaying additional information in the title area and `<MediaControls>`\n * for handling media playback controls and adding more controls.\n *\n * Example usage:\n * ```\n *\t<VideoPlayer title=\"Hilarious Cat Video\" poster=\"http://my.cat.videos/boots-poster.jpg\">\n *\t\t<source src=\"http://my.cat.videos/boots.mp4\" type=\"video/mp4\" />\n *\t\t<infoComponents>A video about my cat Boots, wearing boots.</infoComponents>\n *\t\t<MediaControls>\n *\t\t\t<leftComponents><IconButton backgroundOpacity=\"translucent\">star</IconButton></leftComponents>\n *\t\t\t<rightComponents><IconButton backgroundOpacity=\"translucent\">flag</IconButton></rightComponents>\n *\n *\t\t\t<Button backgroundOpacity=\"translucent\">Add To Favorites</Button>\n *\t\t\t<IconButton backgroundOpacity=\"translucent\">search</IconButton>\n *\t\t</MediaControls>\n *\t</VideoPlayer>\n * ```\n *\n * To invoke methods (e.g.: `fastForward()`) or get the current state (`getMediaState()`), store a\n * ref to the `VideoPlayer` within your component:\n *\n * ```\n * \t...\n *\n * \tsetVideoPlayer = (node) => {\n * \t\tthis.videoPlayer = node;\n * \t}\n *\n * \tplay () {\n * \t\tthis.videoPlayer.play();\n * \t}\n *\n * \trender () {\n * \t\treturn (\n * \t\t\t<VideoPlayer ref={this.setVideoPlayer} />\n * \t\t);\n * \t}\n * ```\n *\n * @class VideoPlayer\n * @memberof moonstone/VideoPlayer\n * @mixes ui/Slottable.Slottable\n * @ui\n * @public\n */\n\nvar VideoPlayer = ApiDecorator({\n  api: ['areControlsVisible', 'fastForward', 'getMediaState', 'getVideoNode', 'hideControls', 'jump', 'pause', 'play', 'rewind', 'seek', 'showControls', 'showFeedback', 'toggleControls']\n}, I18nContextDecorator({\n  localeProp: 'locale'\n}, Slottable({\n  slots: ['infoComponents', 'mediaControlsComponent', 'source', 'thumbnailComponent', 'videoComponent']\n}, FloatingLayerDecorator({\n  floatLayerId: 'videoPlayerFloatingLayer'\n}, Skinnable(VideoPlayerBase)))));\nexport default VideoPlayer;\nexport { MediaControls, Video, VideoPlayer, VideoPlayerBase };","map":{"version":3,"sources":["/home/cdi/stephen/src/views/VideoPlayer.js"],"names":["ApiDecorator","on","off","memoize","adaptEvent","call","forKey","forward","forwardWithPrevent","handle","preventDefault","stopImmediate","returnsTrue","is","platform","EnactPropTypes","perfNow","Job","I18nContextDecorator","toUpperCase","Spotlight","SpotlightContainerDecorator","Spottable","Announce","ComponentOverride","FloatingLayerDecorator","FloatingLayerContext","Media","Slottable","Touchable","DurationFmt","equals","PropTypes","React","ReactDOM","shallowEqual","$L","Skinnable","Spinner","calcNumberValueOfPlaybackRate","secondsToTime","Overlay","MediaControls","MediaTitle","MediaSlider","FeedbackContent","FeedbackTooltip","Times","Video","css","SpottableDiv","RootContainer","enterTo","defaultElement","controlsHandleAbove","controlsFrame","ControlsContainer","straightOnly","memoGetDurFmt","length","style","useNative","getDurFmt","locale","window","forwardWithState","type","forwardControlsAvailable","forwardPlay","forwardPause","forwardRewind","forwardFastForward","forwardJumpBackward","forwardJumpForward","AnnounceState","READY","TITLE","TITLE_READ","INFO","DONE","VideoPlayerBase","props","announceJob","msg","announceRef","announce","start","getHeightForElement","elementName","element","player","querySelector","offsetHeight","activityDetected","startAutoCloseTimeout","autoCloseTimeout","state","mediaControlsVisible","autoCloseJob","startAfter","stopAutoCloseTimeout","stop","generateId","Math","random","toString","substr","markAnnounceRead","setState","showControls","disabled","startDelayedFeedbackHide","startDelayedTitleHide","bottomControlsRendered","feedbackAction","feedbackVisible","mediaSliderVisible","miniFeedbackVisible","titleVisible","hideControls","stopDelayedFeedbackHide","stopDelayedMiniFeedbackHide","stopDelayedTitleHide","infoVisible","toggleControls","doAutoClose","titleHideDelay","hideTitleJob","hideTitle","feedbackHideDelay","hideFeedbackJob","showFeedback","shouldShowSlider","pulsedPlaybackState","playbackRate","showMiniFeedback","loading","duration","error","noMediaSliderFeedback","hideFeedback","startDelayedMiniFeedbackHide","delay","miniFeedbackHideDelay","hideMiniFeedbackJob","hideMiniFeedback","bind","showControlsFromPointer","setPointerMode","clearPulsedPlayback","pulsedPlaybackRate","shouldShowMiniFeedback","ev","handleLoadStart","firstPlayReadFlag","prevCommand","noAutoPlay","speedIndex","currentTime","sourceUnavailable","proportionPlayed","proportionLoaded","noAutoShowMediaControls","renderBottomControl","idle","handlePlay","play","handlePause","pause","handleRewind","rewind","handleFastForward","fastForward","handleJump","keyCode","seekDisabled","jumpBy","time","min","max","preventTimeChange","jump","video","includeHour","handleGlobalKeyDown","getCurrent","getPointerMode","spotlightDisabled","handleEvent","el","updatedState","paused","sliderTooltipTime","sliderScrubbing","sliderKnobProportion","isRewind","isForward","pauseAtEnd","getMediaState","send","action","setPlaybackRate","seek","timeIndex","isNaN","distance","format","second","shouldResumePlayback","playbackRates","selectPlaybackRates","clampPlaybackRate","selectPlaybackRate","rateForSlowRewind","playbackRateHash","command","videoProxy","Proxy","get","target","name","value","set","getVideoNode","areControlsVisible","cmd","idx","rate","stopRewindJob","String","pbNumber","webos","beginRewind","rewindManually","now","rewindBeginTime","pbRate","adjustedDistance","startRewindJob","rewindJob","addStateToEvent","disablePointerMode","handleKeyDownFromControls","onVideoClick","onSliderChange","sliderTooltipTimeJob","handleKnobMove","proportion","seconds","floor","throttle","knobTime","handleSliderFocus","detached","handleSliderBlur","slider5WayPressJob","slider5WayPressed","handleSliderKeyDown","focus","mediaControlsSpotlightId","onJumpBackward","onJumpForward","handleToggleMore","showMoreComponents","handleMediaControlsClose","stopPropagation","setPlayerRef","node","findDOMNode","setVideoRef","setTitleRef","titleRef","setAnnounceRef","id","spotlightId","moreButtonSpotlightId","titleOffsetHeight","bottomOffsetHeight","setApiProvider","touch","context","floatingLayerController","nextProps","nextState","prevProps","prevState","infoComponents","setProperty","notify","available","current","bottomControls","document","bottom","contains","blur","setActiveContainer","dataset","setTimeout","unregister","selection","end","isTimeBeyondSelection","role","className","mediaControlsComponent","noMiniFeedback","noSlider","noSpinner","thumbnailComponent","thumbnailSrc","title","VideoComponent","videoComponent","mediaProps","children","onControlsAvailable","onFastForward","onPause","onPlay","onRewind","onScrub","onSeekFailed","onSeekOutsideSelection","thumbnailUnavailable","videoPath","autoPlay","controls","mediaComponent","onLoadStart","onUpdate","ref","controlsAriaProps","getControlsAriaProps","proportionSelection","map","t","durFmt","videoPlayer","isValidElement","cloneElement","fullscreen","miniFeedback","hidden","infoFrame","handleSpotlightUpFromSlider","Component","displayName","propTypes","func","number","bool","string","componentOverride","muted","shape","arrayOf","slowForward","slowRewind","source","renderableOverride","oneOfType","object","contextType","defaultProps","VideoPlayer","api","localeProp","slots","floatLayerId"],"mappings":"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","sourcesContent":["/**\n * Provides Moonstone-themed video player components.\n *\n * @module moonstone/VideoPlayer\n * @exports Video\n * @exports VideoPlayer\n * @exports VideoPlayerBase\n * @exports MediaControls\n */\n\nimport ApiDecorator from '@enact/core/internal/ApiDecorator';\nimport {on, off} from '@enact/core/dispatcher';\nimport {memoize} from '@enact/core/util';\n\nimport {adaptEvent, call, forKey, forward, forwardWithPrevent, handle, preventDefault, stopImmediate, returnsTrue} from '@enact/core/handle';\nimport {is} from '@enact/core/keymap';\nimport {platform} from '@enact/core/platform';\nimport EnactPropTypes from '@enact/core/internal/prop-types';\nimport {perfNow, Job} from '@enact/core/util';\nimport {I18nContextDecorator} from '@enact/i18n/I18nDecorator';\nimport {toUpperCase} from '@enact/i18n/util';\nimport Spotlight from '@enact/spotlight';\nimport {SpotlightContainerDecorator} from '@enact/spotlight/SpotlightContainerDecorator';\nimport {Spottable} from '@enact/spotlight/Spottable';\nimport Announce from '@enact/ui/AnnounceDecorator/Announce';\nimport ComponentOverride from '@enact/ui/ComponentOverride';\nimport {FloatingLayerDecorator} from '@enact/ui/FloatingLayer';\nimport {FloatingLayerContext} from '@enact/ui/FloatingLayer/FloatingLayerDecorator';\nimport Media from '@enact/ui/Media';\nimport Slottable from '@enact/ui/Slottable';\nimport Touchable from '@enact/ui/Touchable';\nimport DurationFmt from 'ilib/lib/DurationFmt';\nimport equals from 'ramda/src/equals';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport shallowEqual from 'recompose/shallowEqual';\n\nimport $L from '../internal/$L';\nimport Skinnable from '@enact/ui/Skinnable';\nimport Spinner from '@enact/ui/Spinner';\n\nimport {calcNumberValueOfPlaybackRate, secondsToTime} from './util';\nimport Overlay from './Overlay';\nimport MediaControls from './MediaControls';\nimport MediaTitle from './MediaTitle';\nimport MediaSlider from './MediaSlider';\nimport FeedbackContent from './FeedbackContent';\nimport FeedbackTooltip from './FeedbackTooltip';\nimport Times from './Times';\nimport Video from './Video';\n\nimport css from './VideoPlayer.module.less';\n\nconst SpottableDiv = Touchable(Spottable('div'));\nconst RootContainer = SpotlightContainerDecorator(\n\t{\n\t\tenterTo: 'default-element',\n\t\tdefaultElement: [`.${css.controlsHandleAbove}`, `.${css.controlsFrame}`]\n\t},\n\t'div'\n);\n\nconst ControlsContainer = SpotlightContainerDecorator(\n\t{\n\t\tenterTo: '',\n\t\tstraightOnly: true\n\t},\n\t'div'\n);\n\nconst memoGetDurFmt = memoize((/* locale */) => new DurationFmt({\n\tlength: 'medium', style: 'clock', useNative: false\n}));\n\nconst getDurFmt = (locale) => {\n\tif (typeof window === 'undefined') return null;\n\n\treturn memoGetDurFmt(locale);\n};\n\nconst forwardWithState = (type) => adaptEvent(call('addStateToEvent'), forwardWithPrevent(type));\n\n// provide forwarding of events on media controls\nconst forwardControlsAvailable = forward('onControlsAvailable');\nconst forwardPlay = forwardWithState('onPlay');\nconst forwardPause = forwardWithState('onPause');\nconst forwardRewind = forwardWithState('onRewind');\nconst forwardFastForward = forwardWithState('onFastForward');\nconst forwardJumpBackward = forwardWithState('onJumpBackward');\nconst forwardJumpForward = forwardWithState('onJumpForward');\n\nconst AnnounceState = {\n\t// Video is loaded but additional announcements have not been made\n\tREADY: 0,\n\n\t// The title should be announced\n\tTITLE: 1,\n\n\t// The title has been announce\n\tTITLE_READ: 2,\n\n\t// The infoComponents should be announce\n\tINFO: 3,\n\n\t// All announcements have been made\n\tDONE: 4\n};\n\n/**\n * Every callback sent by [VideoPlayer]{@link moonstone/VideoPlayer} receives a status package,\n * which includes an object with the following key/value pairs as the first argument:\n *\n * @typedef {Object} videoStatus\n * @memberof moonstone/VideoPlayer\n * @property {String} type - Type of event that triggered this callback\n * @property {Number} currentTime - Playback index of the media in seconds\n * @property {Number} duration - Media's entire duration in seconds\n * @property {Boolean} paused - Playing vs paused state. `true` means the media is paused\n * @property {Number} playbackRate - Current playback rate, as a number\n * @property {Number} proportionLoaded - A value between `0` and `1` representing the proportion of the media that has loaded\n * @property {Number} proportionPlayed - A value between `0` and `1` representing the proportion of the media that has already been shown\n *\n * @public\n */\n\n/**\n * A set of playback rates when media fast forwards, rewinds, slow-fowards, or slow-rewinds.\n *\n * The number used for each operation is proportional to the normal playing speed, 1. If the rate\n * is less than 1, it will play slower than normal speed, and, if it is larger than 1, it will play\n * faster. If it is negative, it will play backward.\n *\n * The order of numbers represents the incremental order of rates that will be used for each\n * operation. Note that all rates are expressed as strings and fractions are used rather than decimals\n * (e.g.: `'1/2'`, not `'0.5'`).\n *\n * @typedef {Object} playbackRateHash\n * @memberof moonstone/VideoPlayer\n * @property {String[]} fastForward - An array of playback rates when media fast forwards\n * @property {String[]} rewind - An array of playback rates when media rewinds\n * @property {String[]} slowForward - An array of playback rates when media slow-forwards\n * @property {String[]} slowRewind - An array of playback rates when media slow-rewinds\n *\n * @public\n */\n\n/**\n * A player for video {@link moonstone/VideoPlayer.VideoPlayerBase}.\n *\n * @class VideoPlayerBase\n * @memberof moonstone/VideoPlayer\n * @ui\n * @public\n */\nconst VideoPlayerBase = class extends React.Component {\n\tstatic displayName = 'VideoPlayerBase'\n\n\tstatic propTypes = /** @lends moonstone/VideoPlayer.VideoPlayerBase.prototype */ {\n\t\t/**\n\t\t * passed by AnnounceDecorator for accessibility\n\t\t *\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tannounce: PropTypes.func,\n\n\t\t/**\n\t\t * The time (in milliseconds) before the control buttons will hide.\n\t\t *\n\t\t * Setting this to 0 or `null` disables closing, requiring user input to open and close.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 5000\n\t\t * @public\n\t\t */\n\t\tautoCloseTimeout: PropTypes.number,\n\n\t\t/**\n\t\t * Removes interactive capability from this component. This includes, but is not limited to,\n\t\t * key-press events, most clickable buttons, and prevents the showing of the controls.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @public\n\t\t */\n\t\tdisabled: PropTypes.bool,\n\n\t\t/**\n\t\t * Amount of time (in milliseconds) after which the feedback text/icon part of the slider's\n\t\t * tooltip will automatically hidden after the last action.\n\t\t * Setting this to 0 or `null` disables feedbackHideDelay; feedback will always be present.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 3000\n\t\t * @public\n\t\t */\n\t\tfeedbackHideDelay: PropTypes.number,\n\n\t\t/**\n\t\t * Components placed below the title.\n\t\t *\n\t\t * Typically these will be media descriptor icons, like how many audio channels, what codec\n\t\t * the video uses, but can also be a description for the video or anything else that seems\n\t\t * appropriate to provide information about the video to the user.\n\t\t *\n\t\t * @type {Node}\n\t\t * @public\n\t\t */\n\t\tinfoComponents: PropTypes.node,\n\n\t\t/**\n\t\t * The number of seconds the player should skip forward or backward when a \"jump\" button is\n\t\t * pressed.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 30\n\t\t * @public\n\t\t */\n\t\tjumpBy: PropTypes.number,\n\n\t\t/**\n\t\t * Manually set the loading state of the media, in case you have information that\n\t\t * `VideoPlayer` does not have.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @public\n\t\t */\n\t\tloading: PropTypes.bool,\n\n\t\t/**\n\t\t * The current locale as a\n\t\t * {@link https://tools.ietf.org/html/rfc5646|BCP 47 language tag}.\n\t\t *\n\t\t * @type {String}\n\t\t * @public\n\t\t */\n\t\tlocale: PropTypes.string,\n\n\t\t/**\n\t\t * Overrides the default media control component to support customized behaviors.\n\t\t *\n\t\t * The provided component will receive the following props from `VideoPlayer`:\n\t\t *\n\t\t * * `mediaDisabled` - `true` when the media controls are not interactive\n\t\t * * `onBackwardButtonClick` - Called when the rewind button is pressed\n\t\t * * `onClose` - Called when cancel key is pressed when the media controls are visible\n\t\t * * `onFastForward` - Called when the media is fast forwarded via a key event\n\t\t * * `onForwardButtonClick` - Called when the fast forward button is pressed\n\t\t * * `onJump` - Called when the media jumps either forward or backward\n\t\t * * `onJumpBackwardButtonClick` - Called when the jump backward button is pressed\n\t\t * * `onJumpForwardButtonClick` - Called when the jump forward button is pressed\n\t\t * * `onKeyDown` - Called when a key is pressed\n\t\t * * `onPause` - Called when the media is paused via a key event\n\t\t * * `onPlay` - Called when the media is played via a key event\n\t\t * * `onRewind` - Called when the media is rewound via a key event\n\t\t * * `onToggleMore` - Called when the more components are hidden or shown\n\t\t * * `paused` - `true` when the media is paused\n\t\t * * `spotlightId` - The spotlight container Id for the media controls\n\t\t * * `spotlightDisabled` - `true` when spotlight is disabled for the media controls\n\t\t * * `visible` - `true` when the media controls should be displayed\n\t\t *\n\t\t * @type {Component|Element}\n\t\t * @default `moonstone/VideoPlayer.MediaControls`\n\t\t * @public\n\t\t */\n\t\tmediaControlsComponent: EnactPropTypes.componentOverride,\n\n\t\t/**\n\t\t * Amount of time (in milliseconds), after the last user action, that the `miniFeedback`\n\t\t * will automatically hide.\n\t\t * Setting this to 0 or `null` disables `miniFeedbackHideDelay`; `miniFeedback` will always\n\t\t * be present.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 2000\n\t\t * @public\n\t\t */\n\t\tminiFeedbackHideDelay: PropTypes.number,\n\n\t\t/**\n\t\t * Disable audio for this video.\n\t\t *\n\t\t * In a TV context, this is handled by the remote control, not programmatically in the\n\t\t * VideoPlayer API.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tmuted: PropTypes.bool,\n\n\t\t/**\n\t\t * Prevents the default behavior of playing a video immediately after it's loaded.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tnoAutoPlay: PropTypes.bool,\n\n\t\t/**\n\t\t * Prevents the default behavior of showing media controls immediately after it's loaded.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tnoAutoShowMediaControls: PropTypes.bool,\n\n\t\t/**\n\t\t * Hides media slider feedback when fast forward or rewind while media controls are hidden.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tnoMediaSliderFeedback: PropTypes.bool,\n\n\t\t/**\n\t\t * Removes the mini feedback.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tnoMiniFeedback: PropTypes.bool,\n\n\t\t/**\n\t\t * Removes the media slider.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tnoSlider: PropTypes.bool,\n\n\t\t/**\n\t\t * Removes spinner while loading.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @public\n\t\t */\n\t\tnoSpinner: PropTypes.bool,\n\n\t\t/**\n\t\t * Called when the player's controls change availability, whether they are shown\n\t\t * or hidden.\n\t\t *\n\t\t * The current status is sent as the first argument in an object with a key `available`\n\t\t * which will be either `true` or `false`. (e.g.: `onControlsAvailable({available: true})`)\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonControlsAvailable: PropTypes.func,\n\n\t\t/**\n\t\t * Called when the video is fast forwarded.\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonFastForward: PropTypes.func,\n\n\t\t/**\n\t\t * Called when the user clicks the JumpBackward button.\n\t\t *\n\t\t * Is passed a {@link moonstone/VideoPlayer.videoStatus} as the first argument.\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonJumpBackward: PropTypes.func,\n\n\t\t/**\n\t\t * Called when the user clicks the JumpForward button.\n\t\t *\n\t\t * Is passed a {@link moonstone/VideoPlayer.videoStatus} as the first argument.\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonJumpForward: PropTypes.func,\n\n\t\t/**\n\t\t * Called when video is paused\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonPause: PropTypes.func,\n\n\t\t/**\n\t\t * Called when video is played\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonPlay: PropTypes.func,\n\n\t\t/**\n\t\t * Called when video is rewound.\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonRewind: PropTypes.func,\n\n\t\t/**\n\t\t * Called when the user is moving the VideoPlayer's Slider knob independently of\n\t\t * the current playback position.\n\t\t *\n\t\t * It is passed an object with a `seconds` key (float value) to indicate the current time\n\t\t * index. It can be used to update the `thumbnailSrc` to the reflect the current scrub\n\t\t * position.\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonScrub: PropTypes.func,\n\n\t\t/**\n\t\t * Called when seek is attempted while `seekDisabled` is true.\n\t\t *\n\t\t * @type {Function}\n\t\t */\n\t\tonSeekFailed: PropTypes.func,\n\n\t\t/**\n\t\t * Called when seeking outside of the current `selection` range.\n\t\t *\n\t\t * By default, the seek will still be performed. Calling `preventDefault()` on the event\n\t\t * will prevent the seek operation.\n\t\t *\n\t\t * @type {Function}\n\t\t * @public\n\t\t */\n\t\tonSeekOutsideSelection: PropTypes.func,\n\n\t\t/**\n\t\t * Pauses the video when it reaches either the start or the end of the video during rewind,\n\t\t * slow rewind, fast forward, or slow forward.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @public\n\t\t */\n\t\tpauseAtEnd: PropTypes.bool,\n\n\t\t/**\n\t\t * Mapping of playback rate names to playback rate values that may be set.\n\t\t *\n\t\t * @type {moonstone/VideoPlayer.playbackRateHash}\n\t\t * @default {\n\t\t *\tfastForward: ['2', '4', '8', '16'],\n\t\t *\trewind: ['-2', '-4', '-8', '-16'],\n\t\t *\tslowForward: ['1/4', '1/2'],\n\t\t *\tslowRewind: ['-1/2', '-1']\n\t\t * }\n\t\t * @public\n\t\t */\n\t\tplaybackRateHash: PropTypes.shape({\n\t\t\tfastForward: PropTypes.arrayOf(PropTypes.string),\n\t\t\trewind: PropTypes.arrayOf(PropTypes.string),\n\t\t\tslowForward: PropTypes.arrayOf(PropTypes.string),\n\t\t\tslowRewind: PropTypes.arrayOf(PropTypes.string)\n\t\t}),\n\n\t\t/**\n\t\t * Disables seek function.\n\t\t *\n\t\t * Note that jump by arrow keys will also be disabled when `true`.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @public\n\t\t */\n\t\tseekDisabled: PropTypes.bool,\n\n\t\t/**\n\t\t * A range of the video to display as selected.\n\t\t *\n\t\t * The value of `selection` may either be:\n\t\t * * `null` or `undefined` for no selection,\n\t\t * * a single-element array with the start time of the selection\n\t\t * * a two-element array containing both the start and end time of the selection in seconds\n\t\t *\n\t\t * When the start time is specified, the media slider will show filled starting at that\n\t\t * time to the current time.\n\t\t *\n\t\t * When the end time is specified, the slider's background will be filled between the two\n\t\t * times.\n\t\t *\n\t\t * @type {Number[]}\n\t\t * @public\n\t\t */\n\t\tselection: PropTypes.arrayOf(PropTypes.number),\n\n\t\t/**\n\t\t * Registers the VideoPlayer component with an\n\t\t * {@link core/internal/ApiDecorator.ApiDecorator}.\n\t\t *\n\t\t * @type {Function}\n\t\t * @private\n\t\t */\n\t\tsetApiProvider: PropTypes.func,\n\n\t\t/**\n\t\t * The video source.\n\t\t *\n\t\t * Any children `<source>` tag elements of [VideoPlayer]{@link moonstone/VideoPlayer} will\n\t\t * be sent directly to the `videoComponent` as video sources.\n\t\t *\n\t\t * @type {Node}\n\t\t * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source\n\t\t * @public\n\t\t */\n\t\tsource: PropTypes.node,\n\n\t\t/**\n\t\t * Disables spotlight navigation into the component.\n\t\t *\n\t\t * @type {Boolean}\n\t\t * @public\n\t\t */\n\t\tspotlightDisabled: PropTypes.bool,\n\n\t\t/**\n\t\t * The spotlight container ID for the player.\n\t\t *\n\t\t * @type {String}\n\t\t * @public\n\t\t * @default 'videoPlayer'\n\t\t */\n\t\tspotlightId: PropTypes.string,\n\n\t\t/**\n\t\t * The thumbnail component to be used instead of the built-in version.\n\t\t *\n\t\t * The internal thumbnail style will not be applied to this component. This component\n\t\t * follows the same rules as the built-in version.\n\t\t *\n\t\t * @type {String|Component|Element}\n\t\t * @public\n\t\t */\n\t\tthumbnailComponent: EnactPropTypes.renderableOverride,\n\n\t\t/**\n\t\t * Thumbnail image source to show on the slider knob.\n\t\t *\n\t\t * This is a standard {@link moonstone/Image} component so it supports all of the same\n\t\t * options for the `src` property. If no `thumbnailComponent` and no `thumbnailSrc` is set,\n\t\t * no tooltip will display.\n\t\t *\n\t\t * @type {String|Object}\n\t\t * @public\n\t\t */\n\t\tthumbnailSrc: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n\n\t\t/**\n\t\t* Enables the thumbnail transition from opaque to translucent.\n\t\t*\n\t\t* @type {Boolean}\n\t\t* @public\n\t\t*/\n\t\tthumbnailUnavailable: PropTypes.bool,\n\n\t\t/**\n\t\t * Title for the video being played.\n\t\t *\n\t\t * @type {Node}\n\t\t * @public\n\t\t */\n\t\ttitle: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n\t\t/**\n\t\t * The time (in milliseconds) before the title disappears from the controls.\n\t\t *\n\t\t * Setting this to `0` disables hiding.\n\t\t *\n\t\t * @type {Number}\n\t\t * @default 5000\n\t\t * @public\n\t\t */\n\t\ttitleHideDelay: PropTypes.number,\n\n\t\t/**\n\t\t * Video component to use.\n\t\t *\n\t\t * The default renders an `HTMLVideoElement`. Custom video components must have a similar\n\t\t * API structure, exposing the following APIs:\n\t\t *\n\t\t * Properties:\n\t\t * * `currentTime` {Number} - Playback index of the media in seconds\n\t\t * * `duration` {Number} - Media's entire duration in seconds\n\t\t * * `error` {Boolean} - `true` if video playback has errored.\n\t\t * * `loading` {Boolean} - `true` if video playback is loading.\n\t\t * * `paused` {Boolean} - Playing vs paused state. `true` means the media is paused\n\t\t * * `playbackRate` {Number} - Current playback rate, as a number\n\t\t * * `proportionLoaded` {Number} - A value between `0` and `1`\n\t\t *\trepresenting the proportion of the media that has loaded\n\t\t * * `proportionPlayed` {Number} - A value between `0` and `1` representing the\n\t\t *\tproportion of the media that has already been shown\n\t\t *\n\t\t * Events:\n\t\t * * `onLoadStart` - Called when the video starts to load\n\t\t * * `onUpdate` - Sent when any of the properties were updated\n\t\t *\n\t\t * Methods:\n\t\t * * `play()` - play video\n\t\t * * `pause()` - pause video\n\t\t * * `load()` - load video\n\t\t *\n\t\t * The [`source`]{@link moonstone/VideoPlayer.VideoBase.source} property is passed to\n\t\t * the video component as a child node.\n\t\t *\n\t\t * @type {Component|Element}\n\t\t * @default {@link ui/Media.Media}\n\t\t * @public\n\t\t */\n\t\tvideoComponent: EnactPropTypes.componentOverride\n\t}\n\n\tstatic contextType = FloatingLayerContext\n\n\tstatic defaultProps = {\n\t\tautoCloseTimeout: 5000,\n\t\tfeedbackHideDelay: 3000,\n\t\tjumpBy: 30,\n\t\tmediaControlsComponent: MediaControls,\n\t\tminiFeedbackHideDelay: 2000,\n\t\tplaybackRateHash: {\n\t\t\tfastForward: ['2', '4', '8', '16'],\n\t\t\trewind: ['-2', '-4', '-8', '-16'],\n\t\t\tslowForward: ['1/4', '1/2'],\n\t\t\tslowRewind: ['-1/2', '-1']\n\t\t},\n\t\tspotlightId: 'videoPlayer',\n\t\ttitleHideDelay: 5000,\n\t\tvideoComponent: Media\n\t}\n\n\tconstructor (props) {\n\t\tsuper(props);\n\n\t\t// Internal State\n\t\tthis.video = null;\n\t\tthis.pulsedPlaybackRate = null;\n\t\tthis.pulsedPlaybackState = null;\n\t\tthis.prevCommand = (props.noAutoPlay ? 'pause' : 'play');\n\t\tthis.showMiniFeedback = false;\n\t\tthis.speedIndex = 0;\n\t\tthis.id = this.generateId();\n\t\tthis.selectPlaybackRates('fastForward');\n\t\tthis.sliderKnobProportion = 0;\n\t\tthis.mediaControlsSpotlightId = props.spotlightId + '_mediaControls';\n\t\tthis.moreButtonSpotlightId = this.mediaControlsSpotlightId + '_moreButton';\n\n\t\t// Re-render-necessary State\n\t\tthis.state = {\n\t\t\tannounce: AnnounceState.READY,\n\t\t\tcurrentTime: 0,\n\t\t\tduration: 0,\n\t\t\terror: false,\n\t\t\tloading: false,\n\t\t\tpaused: props.noAutoPlay,\n\t\t\tplaybackRate: 1,\n\t\t\ttitleOffsetHeight: 0,\n\t\t\tbottomOffsetHeight: 0,\n\n\t\t\t// Non-standard state computed from properties\n\t\t\tbottomControlsRendered: false,\n\t\t\tfeedbackAction: 'idle',\n\t\t\tfeedbackVisible: false,\n\t\t\tinfoVisible: false,\n\t\t\tmediaControlsVisible: false,\n\t\t\tmediaSliderVisible: false,\n\t\t\tminiFeedbackVisible: false,\n\t\t\tproportionLoaded: 0,\n\t\t\tproportionPlayed: 0,\n\t\t\tsourceUnavailable: true,\n\t\t\ttitleVisible: true\n\t\t};\n\n\t\tif (props.setApiProvider) {\n\t\t\tprops.setApiProvider(this);\n\t\t}\n\t}\n\n\tcomponentDidMount () {\n\t\ton('mousemove', this.activityDetected);\n\t\tif (platform.touch) {\n\t\t\ton('touchmove', this.activityDetected);\n\t\t}\n\t\ton('keydown', this.handleGlobalKeyDown);\n\t\tthis.startDelayedFeedbackHide();\n\t\tif (this.context && typeof this.context === 'function') {\n\t\t\tthis.floatingLayerController = this.context(() => {});\n\t\t}\n\t}\n\n\tshouldComponentUpdate (nextProps, nextState) {\n\t\tif (\n\t\t\t// Use shallow props compare instead of source comparison to support possible changes\n\t\t\t// from mediaComponent.\n\t\t\tshallowEqual(this.props, nextProps) &&\n\t\t\t!this.state.miniFeedbackVisible && this.state.miniFeedbackVisible === nextState.miniFeedbackVisible &&\n\t\t\t!this.state.mediaSliderVisible && this.state.mediaSliderVisible === nextState.mediaSliderVisible &&\n\t\t\tthis.state.loading === nextState.loading && this.props.loading === nextProps.loading &&\n\t\t\t(\n\t\t\t\tthis.state.currentTime !== nextState.currentTime ||\n\t\t\t\tthis.state.proportionPlayed !== nextState.proportionPlayed ||\n\t\t\t\tthis.state.sliderTooltipTime !== nextState.sliderTooltipTime\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tcomponentDidUpdate (prevProps, prevState) {\n\t\tif (this.titleRef && this.state.infoVisible &&\n\t\t\t(!prevState.infoVisible || !equals(this.props.infoComponents, prevProps.infoComponents))\n\t\t) {\n\t\t\tthis.titleRef.style.setProperty('--infoComponentsOffset', `${this.getHeightForElement('infoComponents')}px`);\n\t\t}\n\n\t\tif (\n\t\t\t!this.state.mediaControlsVisible && prevState.mediaControlsVisible !== this.state.mediaControlsVisible ||\n\t\t\t!this.state.mediaSliderVisible && prevState.mediaSliderVisible !== this.state.mediaSliderVisible\n\t\t) {\n\t\t\tthis.floatingLayerController.notify({action: 'closeAll'});\n\t\t}\n\n\t\tif (this.props.spotlightId !== prevProps.spotlightId) {\n\t\t\tthis.mediaControlsSpotlightId = this.props.spotlightId + '_mediaControls';\n\t\t\tthis.moreButtonSpotlightId = this.mediaControlsSpotlightId + '_moreButton';\n\t\t}\n\n\t\tif (!this.state.mediaControlsVisible && prevState.mediaControlsVisible) {\n\t\t\tforwardControlsAvailable({available: false}, this.props);\n\t\t\tthis.stopAutoCloseTimeout();\n\n\t\t\tif (!this.props.spotlightDisabled) {\n\t\t\t\t// If last focused item were in the media controls or slider, we need to explicitly\n\t\t\t\t// blur the element when MediaControls hide. See ENYO-5648\n\t\t\t\tconst current = Spotlight.getCurrent();\n\t\t\t\tconst bottomControls = document.querySelector(`.${css.bottom}`);\n\t\t\t\tif (current && bottomControls && bottomControls.contains(current)) {\n\t\t\t\t\tcurrent.blur();\n\t\t\t\t}\n\n\t\t\t\t// when in pointer mode, the focus call below will only update the last focused for\n\t\t\t\t// the video player and not set the active container to the video player which will\n\t\t\t\t// cause focus to land back on the media controls button when spotlight restores\n\t\t\t\t// focus.\n\t\t\t\tif (Spotlight.getPointerMode()) {\n\t\t\t\t\tSpotlight.setActiveContainer(this.props.spotlightId);\n\t\t\t\t}\n\n\t\t\t\t// Set focus to the hidden spottable control - maintaining focus on available spottable\n\t\t\t\t// controls, which prevents an addiitional 5-way attempt in order to re-show media controls\n\t\t\t\tSpotlight.focus(`.${css.controlsHandleAbove}`);\n\t\t\t}\n\t\t} else if (this.state.mediaControlsVisible && !prevState.mediaControlsVisible) {\n\t\t\tforwardControlsAvailable({available: true}, this.props);\n\t\t\tthis.startAutoCloseTimeout();\n\n\t\t\tif (!this.props.spotlightDisabled) {\n\t\t\t\tconst current = Spotlight.getCurrent();\n\t\t\t\tif (!current || this.player.contains(current)) {\n\t\t\t\t\t// Set focus within media controls when they become visible.\n\t\t\t\t\tSpotlight.focus(this.mediaControlsSpotlightId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Once video starts loading it queues bottom control render until idle\n\t\tif (this.state.bottomControlsRendered && !prevState.bottomControlsRendered && !this.state.mediaControlsVisible) {\n\t\t\tthis.showControls();\n\t\t}\n\n\t\tif (this.state.mediaControlsVisible && prevState.infoVisible !== this.state.infoVisible) {\n\t\t\tconst current = Spotlight.getCurrent();\n\t\t\tif (current && current.dataset && current.dataset.spotlightId === this.moreButtonSpotlightId) {\n\t\t\t\t// need to blur manually to read out `infoComponent`\n\t\t\t\tcurrent.blur();\n\t\t\t}\n\t\t\tsetTimeout(() => {\n\t\t\t\tSpotlight.focus(this.moreButtonSpotlightId);\n\t\t\t}, 1);\n\t\t}\n\t}\n\n\tcomponentWillUnmount () {\n\t\toff('mousemove', this.activityDetected);\n\t\tif (platform.touch) {\n\t\t\toff('touchmove', this.activityDetected);\n\t\t}\n\t\toff('keydown', this.handleGlobalKeyDown);\n\t\tthis.stopRewindJob();\n\t\tthis.stopAutoCloseTimeout();\n\t\tthis.stopDelayedTitleHide();\n\t\tthis.stopDelayedFeedbackHide();\n\t\tthis.stopDelayedMiniFeedbackHide();\n\t\tthis.announceJob.stop();\n\t\tthis.renderBottomControl.stop();\n\t\tthis.sliderTooltipTimeJob.stop();\n\t\tthis.slider5WayPressJob.stop();\n\t\tif (this.floatingLayerController) {\n\t\t\tthis.floatingLayerController.unregister();\n\t\t}\n\t}\n\n\t//\n\t// Internal Methods\n\t//\n\n\tannounceJob = new Job(msg => (this.announceRef && this.announceRef.announce(msg)), 200)\n\n\tannounce = (msg) => {\n\t\tthis.announceJob.start(msg);\n\t}\n\n\tgetHeightForElement = (elementName) => {\n\t\tconst element = this.player.querySelector(`.${css[elementName]}`);\n\t\tif (element) {\n\t\t\treturn element.offsetHeight;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tactivityDetected = () => {\n\t\t// console.count('activityDetected');\n\t\tthis.startAutoCloseTimeout();\n\t}\n\n\tstartAutoCloseTimeout = () => {\n\t\t// If this.state.more is used as a reference for when this function should fire, timing for\n\t\t// detection of when \"more\" is pressed vs when the state is updated is mismatched. Using an\n\t\t// instance variable that's only set and used for this express purpose seems cleanest.\n\t\tif (this.props.autoCloseTimeout && this.state.mediaControlsVisible) {\n\t\t\tthis.autoCloseJob.startAfter(this.props.autoCloseTimeout);\n\t\t}\n\t}\n\n\tstopAutoCloseTimeout = () => {\n\t\tthis.autoCloseJob.stop();\n\t}\n\n\tgenerateId = () => {\n\t\treturn Math.random().toString(36).substr(2, 8);\n\t}\n\n\tisTimeBeyondSelection (time) {\n\t\tconst {selection} = this.props;\n\n\t\t// if selection isn't set or only contains the starting value, there isn't a valid selection\n\t\t// with which to test the time\n\t\tif (selection != null && selection.length >= 2) {\n\t\t\tconst [start, end] = selection;\n\n\t\t\treturn time > end || time < start;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpreventTimeChange (time) {\n\t\treturn (\n\t\t\tthis.isTimeBeyondSelection(time) &&\n\t\t\t!forwardWithPrevent('onSeekOutsideSelection', {type: 'onSeekOutsideSelection', time}, this.props)\n\t\t);\n\t}\n\n\t/**\n\t * If the announce state is either ready to read the title or ready to read info, advance the\n\t * state to \"read\".\n\t *\n\t * @returns {Boolean} Returns true to be used in event handlers\n\t * @private\n\t */\n\tmarkAnnounceRead = () => {\n\t\tif (this.state.announce === AnnounceState.TITLE) {\n\t\t\tthis.setState({announce: AnnounceState.TITLE_READ});\n\t\t} else if (this.state.announce === AnnounceState.INFO) {\n\t\t\tthis.setState({announce: AnnounceState.DONE});\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Shows media controls.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\tshowControls = () => {\n\t\tif (this.props.disabled) {\n\t\t\treturn;\n\t\t}\n\t\tthis.startDelayedFeedbackHide();\n\t\tthis.startDelayedTitleHide();\n\n\t\tthis.setState(({announce}) => {\n\t\t\tif (announce === AnnounceState.READY) {\n\t\t\t\t// if we haven't read the title yet, do so this time\n\t\t\t\tannounce = AnnounceState.TITLE;\n\t\t\t} else if (announce === AnnounceState.TITLE) {\n\t\t\t\t// if we have read the title, advance to INFO so title isn't read again\n\t\t\t\tannounce = AnnounceState.TITLE_READ;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tannounce,\n\t\t\t\tbottomControlsRendered: true,\n\t\t\t\tfeedbackAction: 'idle',\n\t\t\t\tfeedbackVisible: true,\n\t\t\t\tmediaControlsVisible: true,\n\t\t\t\tmediaSliderVisible: true,\n\t\t\t\tminiFeedbackVisible: false,\n\t\t\t\ttitleVisible: true\n\t\t\t};\n\t\t});\n\t}\n\n\t/**\n\t * Hides media controls.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\thideControls = () => {\n\t\tthis.stopDelayedFeedbackHide();\n\t\tthis.stopDelayedMiniFeedbackHide();\n\t\tthis.stopDelayedTitleHide();\n\t\tthis.stopAutoCloseTimeout();\n\t\tthis.setState({\n\t\t\tfeedbackAction: 'idle',\n\t\t\tfeedbackVisible: false,\n\t\t\tmediaControlsVisible: false,\n\t\t\tmediaSliderVisible: false,\n\t\t\tminiFeedbackVisible: false,\n\t\t\tinfoVisible: false\n\t\t});\n\t\tthis.markAnnounceRead();\n\t}\n\n\t/**\n\t * Toggles the media controls.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\ttoggleControls = () => {\n\t\tif (this.state.mediaControlsVisible) {\n\t\t\tthis.hideControls();\n\t\t} else {\n\t\t\tthis.showControls();\n\t\t}\n\t}\n\n\tdoAutoClose = () => {\n\t\tthis.stopDelayedFeedbackHide();\n\t\tthis.stopDelayedTitleHide();\n\t\tthis.setState(({mediaSliderVisible, miniFeedbackVisible}) => ({\n\t\t\tfeedbackVisible: false,\n\t\t\tmediaControlsVisible: false,\n\t\t\tmediaSliderVisible: mediaSliderVisible && miniFeedbackVisible,\n\t\t\tinfoVisible: false\n\t\t}));\n\t\tthis.markAnnounceRead();\n\t}\n\n\tautoCloseJob = new Job(this.doAutoClose)\n\n\tstartDelayedTitleHide = () => {\n\t\tif (this.props.titleHideDelay) {\n\t\t\tthis.hideTitleJob.startAfter(this.props.titleHideDelay);\n\t\t}\n\t}\n\n\tstopDelayedTitleHide = () => {\n\t\tthis.hideTitleJob.stop();\n\t}\n\n\thideTitle = () => {\n\t\tthis.setState({titleVisible: false});\n\t}\n\n\thideTitleJob = new Job(this.hideTitle)\n\n\tstartDelayedFeedbackHide = () => {\n\t\tif (this.props.feedbackHideDelay) {\n\t\t\tthis.hideFeedbackJob.startAfter(this.props.feedbackHideDelay);\n\t\t}\n\t}\n\n\tstopDelayedFeedbackHide = () => {\n\t\tthis.hideFeedbackJob.stop();\n\t}\n\n\tshowFeedback = () => {\n\t\tif (this.state.mediaControlsVisible) {\n\t\t\tthis.setState({\n\t\t\t\tfeedbackVisible: true\n\t\t\t});\n\t\t} else {\n\t\t\tconst shouldShowSlider = this.pulsedPlaybackState !== null || calcNumberValueOfPlaybackRate(this.playbackRate) !== 1;\n\n\t\t\tif (this.showMiniFeedback && (!this.state.miniFeedbackVisible || this.state.mediaSliderVisible !== shouldShowSlider)) {\n\t\t\t\tthis.setState(({loading, duration, error}) => ({\n\t\t\t\t\tmediaSliderVisible: shouldShowSlider && !this.props.noMediaSliderFeedback,\n\t\t\t\t\tminiFeedbackVisible: !(loading || !duration || error)\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\thideFeedback = () => {\n\t\tif (this.state.feedbackVisible && this.state.feedbackAction !== 'focus') {\n\t\t\tthis.setState({\n\t\t\t\tfeedbackVisible: false,\n\t\t\t\tfeedbackAction: 'idle'\n\t\t\t});\n\t\t}\n\t}\n\n\thideFeedbackJob = new Job(this.hideFeedback)\n\n\tstartDelayedMiniFeedbackHide = (delay = this.props.miniFeedbackHideDelay) => {\n\t\tif (delay) {\n\t\t\tthis.hideMiniFeedbackJob.startAfter(delay);\n\t\t}\n\t}\n\n\tstopDelayedMiniFeedbackHide = () => {\n\t\tthis.hideMiniFeedbackJob.stop();\n\t}\n\n\thideMiniFeedback = () => {\n\t\tif (this.state.miniFeedbackVisible) {\n\t\t\tthis.showMiniFeedback = false;\n\t\t\tthis.setState({\n\t\t\t\tmediaSliderVisible: false,\n\t\t\t\tminiFeedbackVisible: false\n\t\t\t});\n\t\t}\n\t}\n\n\thideMiniFeedbackJob = new Job(this.hideMiniFeedback)\n\n\thandle = handle.bind(this)\n\n\tshowControlsFromPointer = () => {\n\t\tSpotlight.setPointerMode(false);\n\t\tthis.showControls();\n\t}\n\n\tclearPulsedPlayback = () => {\n\t\tthis.pulsedPlaybackRate = null;\n\t\tthis.pulsedPlaybackState = null;\n\t}\n\n\t// only show mini feedback if playback controls are invoked by a key event\n\tshouldShowMiniFeedback = (ev) => {\n\t\tif (ev.type === 'keyup') {\n\t\t\tthis.showMiniFeedback = true;\n\t\t}\n\t\treturn true;\n\t}\n\n\thandleLoadStart = () => {\n\t\tthis.firstPlayReadFlag = true;\n\t\tthis.prevCommand = this.props.noAutoPlay ? 'pause' : 'play';\n\t\tthis.speedIndex = 0;\n\t\tthis.setState({\n\t\t\tannounce: AnnounceState.READY,\n\t\t\tcurrentTime: 0,\n\t\t\tsourceUnavailable: true,\n\t\t\tproportionPlayed: 0,\n\t\t\tproportionLoaded: 0\n\t\t});\n\n\t\tif (!this.props.noAutoShowMediaControls) {\n\t\t\tif (!this.state.bottomControlsRendered) {\n\t\t\t\tthis.renderBottomControl.idle();\n\t\t\t} else {\n\t\t\t\tthis.showControls();\n\t\t\t}\n\t\t}\n\t}\n\n\thandlePlay = this.handle(\n\t\tforwardPlay,\n\t\tthis.shouldShowMiniFeedback,\n\t\t() => this.play()\n\t)\n\n\thandlePause = this.handle(\n\t\tforwardPause,\n\t\tthis.shouldShowMiniFeedback,\n\t\t() => this.pause()\n\t)\n\n\thandleRewind = this.handle(\n\t\tforwardRewind,\n\t\tthis.shouldShowMiniFeedback,\n\t\t() => this.rewind(),\n\t)\n\n\thandleFastForward = this.handle(\n\t\tforwardFastForward,\n\t\tthis.shouldShowMiniFeedback,\n\t\t() => this.fastForward()\n\t)\n\n\thandleJump = ({keyCode}) => {\n\t\tif (this.props.seekDisabled) {\n\t\t\tforward('onSeekFailed', {}, this.props);\n\t\t} else {\n\t\t\tconst jumpBy = (is('left', keyCode) ? -1 : 1) * this.props.jumpBy;\n\t\t\tconst time = Math.min(this.state.duration, Math.max(0, this.state.currentTime + jumpBy));\n\n\t\t\tif (this.preventTimeChange(time)) return;\n\n\t\t\tthis.showMiniFeedback = true;\n\t\t\tthis.jump(jumpBy);\n\t\t\tthis.announceJob.startAfter(500, secondsToTime(this.video.currentTime, getDurFmt(this.props.locale), {includeHour: true}));\n\t\t}\n\t}\n\n\thandleGlobalKeyDown = this.handle(\n\t\treturnsTrue(this.activityDetected),\n\t\tforKey('down'),\n\t\t() => (\n\t\t\t!this.state.mediaControlsVisible &&\n\t\t\t!Spotlight.getCurrent() &&\n\t\t\tSpotlight.getPointerMode() &&\n\t\t\t!this.props.spotlightDisabled\n\t\t),\n\t\tpreventDefault,\n\t\tstopImmediate,\n\t\tthis.showControlsFromPointer\n\t)\n\n\t//\n\t// Media Interaction Methods\n\t//\n\thandleEvent = () => {\n\t\tconst el = this.video;\n\t\tconst updatedState = {\n\t\t\t// Standard media properties\n\t\t\tcurrentTime: el.currentTime,\n\t\t\tduration: el.duration,\n\t\t\tpaused: el.playbackRate !== 1 || el.paused,\n\t\t\tplaybackRate: el.playbackRate,\n\n\t\t\t// Non-standard state computed from properties\n\t\t\terror: el.error,\n\t\t\tloading: el.loading,\n\t\t\tproportionLoaded: el.proportionLoaded,\n\t\t\tproportionPlayed: el.proportionPlayed || 0,\n\t\t\tsliderTooltipTime: this.sliderScrubbing ? (this.sliderKnobProportion * el.duration) : el.currentTime,\n\t\t\t// note: `el.loading && this.state.sourceUnavailable == false` is equivalent to `oncanplaythrough`\n\t\t\tsourceUnavailable: el.loading && this.state.sourceUnavailable || el.error\n\t\t};\n\n\t\t// If there's an error, we're obviously not loading, no matter what the readyState is.\n\t\tif (updatedState.error) updatedState.loading = false;\n\n\t\tconst isRewind = this.prevCommand === 'rewind' || this.prevCommand === 'slowRewind';\n\t\tconst isForward = this.prevCommand === 'fastForward' || this.prevCommand === 'slowForward';\n\t\tif (this.props.pauseAtEnd && (el.currentTime === 0 && isRewind || el.currentTime === el.duration && isForward)) {\n\t\t\tthis.pause();\n\t\t}\n\n\t\tthis.setState(updatedState);\n\t}\n\n\trenderBottomControl = new Job(() => {\n\t\tif (!this.state.bottomControlsRendered) {\n\t\t\tthis.setState({bottomControlsRendered: true});\n\t\t}\n\t});\n\n\t/**\n\t * Returns an object with the current state of the media including `currentTime`, `duration`,\n\t * `paused`, `playbackRate`, `proportionLoaded`, and `proportionPlayed`.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @returns {Object}\n\t * @public\n\t */\n\tgetMediaState = () => {\n\t\treturn {\n\t\t\tcurrentTime       : this.state.currentTime,\n\t\t\tduration          : this.state.duration,\n\t\t\tpaused            : this.state.paused,\n\t\t\tplaybackRate      : this.video.playbackRate,\n\t\t\tproportionLoaded  : this.state.proportionLoaded,\n\t\t\tproportionPlayed  : this.state.proportionPlayed\n\t\t};\n\t}\n\n\t/**\n\t * The primary means of interacting with the `<video>` element.\n\t *\n\t * @param  {String} action The method to preform.\n\t * @param  {Multiple} props  The arguments, in the format that the action method requires.\n\t *\n\t * @private\n\t */\n\tsend = (action, props) => {\n\t\tthis.clearPulsedPlayback();\n\t\tthis.showFeedback();\n\t\tthis.startDelayedFeedbackHide();\n\t\tthis.video[action](props);\n\t}\n\n\t/**\n\t * Programmatically plays the current media.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\tplay = () => {\n\t\tif (this.state.sourceUnavailable) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.speedIndex = 0;\n\t\t// must happen before send() to ensure feedback uses the right value\n\t\t// TODO: refactor into this.state member\n\t\tthis.prevCommand = 'play';\n\t\tthis.setPlaybackRate(1);\n\t\tthis.send('play');\n\t\tthis.announce($L('Play'));\n\t\tthis.startDelayedMiniFeedbackHide(5000);\n\t}\n\n\t/**\n\t * Programmatically plays the current media.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\tpause = () => {\n\t\tif (this.state.sourceUnavailable) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.speedIndex = 0;\n\t\t// must happen before send() to ensure feedback uses the right value\n\t\t// TODO: refactor into this.state member\n\t\tthis.prevCommand = 'pause';\n\t\tthis.setPlaybackRate(1);\n\t\tthis.send('pause');\n\t\tthis.announce($L('Pause'));\n\t\tthis.stopDelayedMiniFeedbackHide();\n\t}\n\n\t/**\n\t * Set the media playback time index\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @param {Number} timeIndex - Time index to seek\n\t * @public\n\t */\n\tseek = (timeIndex) => {\n\t\tif (!this.props.seekDisabled && !isNaN(this.video.duration) && !this.state.sourceUnavailable) {\n\t\t\tthis.video.currentTime = timeIndex;\n\t\t} else {\n\t\t\tforward('onSeekFailed', {}, this.props);\n\t\t}\n\t}\n\n\t/**\n\t * Step a given amount of time away from the current playback position.\n\t * Like [seek]{@link moonstone/VideoPlayer.VideoPlayer#seek} but relative.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @param {Number} distance - Time value to jump\n\t * @public\n\t */\n\tjump = (distance) => {\n\t\tif (this.state.sourceUnavailable) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.pulsedPlaybackRate = toUpperCase(new DurationFmt({length: 'long'}).format({second: this.props.jumpBy}));\n\t\tthis.pulsedPlaybackState = distance > 0 ? 'jumpForward' : 'jumpBackward';\n\t\tthis.showFeedback();\n\t\tthis.startDelayedFeedbackHide();\n\t\tthis.seek(this.state.currentTime + distance);\n\t\tthis.startDelayedMiniFeedbackHide();\n\t}\n\n\t/**\n\t * Changes the playback speed via [selectPlaybackRate()]{@link moonstone/VideoPlayer.VideoPlayer#selectPlaybackRate}.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\tfastForward = () => {\n\t\tif (this.state.sourceUnavailable) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet shouldResumePlayback = false;\n\n\t\tswitch (this.prevCommand) {\n\t\t\tcase 'slowForward':\n\t\t\t\tif (this.speedIndex === this.playbackRates.length - 1) {\n\t\t\t\t\t// reached to the end of array => fastforward\n\t\t\t\t\tthis.selectPlaybackRates('fastForward');\n\t\t\t\t\tthis.speedIndex = 0;\n\t\t\t\t\tthis.prevCommand = 'fastForward';\n\t\t\t\t} else {\n\t\t\t\t\tthis.speedIndex = this.clampPlaybackRate(this.speedIndex + 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'pause':\n\t\t\t\tthis.selectPlaybackRates('slowForward');\n\t\t\t\tif (this.state.paused) {\n\t\t\t\t\tshouldResumePlayback = true;\n\t\t\t\t}\n\t\t\t\tthis.speedIndex = 0;\n\t\t\t\tthis.prevCommand = 'slowForward';\n\t\t\t\tbreak;\n\t\t\tcase 'fastForward':\n\t\t\t\tthis.speedIndex = this.clampPlaybackRate(this.speedIndex + 1);\n\t\t\t\tthis.prevCommand = 'fastForward';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.selectPlaybackRates('fastForward');\n\t\t\t\tthis.speedIndex = 0;\n\t\t\t\tthis.prevCommand = 'fastForward';\n\t\t\t\tif (this.state.paused) {\n\t\t\t\t\tshouldResumePlayback = true;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setPlaybackRate(this.selectPlaybackRate(this.speedIndex));\n\n\t\tif (shouldResumePlayback) this.send('play');\n\n\t\tthis.stopDelayedFeedbackHide();\n\t\tthis.stopDelayedMiniFeedbackHide();\n\t\tthis.clearPulsedPlayback();\n\t\tthis.showFeedback();\n\t}\n\n\t/**\n\t * Changes the playback speed via [selectPlaybackRate()]{@link moonstone/VideoPlayer.VideoPlayer#selectPlaybackRate}.\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\trewind = () => {\n\t\tif (this.state.sourceUnavailable) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst rateForSlowRewind = this.props.playbackRateHash['slowRewind'];\n\t\tlet shouldResumePlayback = false,\n\t\t\tcommand = 'rewind';\n\n\t\tif (this.video.currentTime === 0) {\n\t\t\t// Do not rewind if currentTime is 0. We're already at the beginning.\n\t\t\treturn;\n\t\t}\n\t\tswitch (this.prevCommand) {\n\t\t\tcase 'slowRewind':\n\t\t\t\tif (this.speedIndex === this.playbackRates.length - 1) {\n\t\t\t\t\t// reached to the end of array => go to rewind\n\t\t\t\t\tthis.selectPlaybackRates(command);\n\t\t\t\t\tthis.speedIndex = 0;\n\t\t\t\t\tthis.prevCommand = command;\n\t\t\t\t} else {\n\t\t\t\t\tthis.speedIndex = this.clampPlaybackRate(this.speedIndex + 1);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'pause':\n\t\t\t\t// If it's possible to slowRewind, do it, otherwise just leave it as normal rewind : QEVENTSEVT-17386\n\t\t\t\tif (rateForSlowRewind && rateForSlowRewind.length >= 0) {\n\t\t\t\t\tcommand = 'slowRewind';\n\t\t\t\t}\n\t\t\t\tthis.selectPlaybackRates(command);\n\t\t\t\tif (this.state.paused && this.state.duration > this.state.currentTime) {\n\t\t\t\t\tshouldResumePlayback = true;\n\t\t\t\t}\n\t\t\t\tthis.speedIndex = 0;\n\t\t\t\tthis.prevCommand = command;\n\t\t\t\tbreak;\n\t\t\tcase 'rewind':\n\t\t\t\tthis.speedIndex = this.clampPlaybackRate(this.speedIndex + 1);\n\t\t\t\tthis.prevCommand = command;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthis.selectPlaybackRates(command);\n\t\t\t\tthis.speedIndex = 0;\n\t\t\t\tthis.prevCommand = command;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.setPlaybackRate(this.selectPlaybackRate(this.speedIndex));\n\n\t\tif (shouldResumePlayback) this.send('play');\n\n\t\tthis.stopDelayedFeedbackHide();\n\t\tthis.stopDelayedMiniFeedbackHide();\n\t\tthis.clearPulsedPlayback();\n\t\tthis.showFeedback();\n\t}\n\n\t// Creates a proxy to the video node if Proxy is supported\n\tvideoProxy = typeof Proxy !== 'function' ? null : new Proxy({}, {\n\t\tget: (target, name) => {\n\t\t\tlet value = this.video[name];\n\n\t\t\tif (typeof value === 'function') {\n\t\t\t\tvalue = value.bind(this.video);\n\t\t\t}\n\n\t\t\treturn value;\n\t\t},\n\t\tset: (target, name, value) => {\n\t\t\treturn (this.video[name] = value);\n\t\t}\n\t})\n\n\t/**\n\t * Returns a proxy to the underlying `<video>` node currently used by the VideoPlayer\n\t *\n\t * @function\n\t * @memberof moonstone/VideoPlayer.VideoPlayerBase.prototype\n\t * @public\n\t */\n\tgetVideoNode = () => {\n\t\treturn this.videoProxy || this.video;\n\t}\n\n\tareControlsVisible = () => {\n\t\treturn this.state.mediaControlsVisible;\n\t}\n\n\t/**\n\t * Sets the playback rate type (from the keys of [playbackRateHash]{@link moonstone/VideoPlayer.VideoPlayer#playbackRateHash}).\n\t *\n\t * @param {String} cmd - Key of the playback rate type.\n\t * @private\n\t */\n\tselectPlaybackRates = (cmd) => {\n\t\tthis.playbackRates = this.props.playbackRateHash[cmd];\n\t}\n\n\t/**\n\t * Changes [playbackRate]{@link moonstone/VideoPlayer.VideoPlayer#playbackRate} to a valid value\n\t * when initiating fast forward or rewind.\n\t *\n\t * @param {Number} idx - The index of the desired playback rate.\n\t * @private\n\t */\n\tclampPlaybackRate = (idx) => {\n\t\tif (!this.playbackRates) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn idx % this.playbackRates.length;\n\t}\n\n\t/**\n\t * Retrieves the playback rate name.\n\t *\n\t * @param {Number} idx - The index of the desired playback rate.\n\t * @returns {String} The playback rate name.\n\t * @private\n\t */\n\tselectPlaybackRate = (idx) => {\n\t\treturn this.playbackRates[idx];\n\t}\n\n\t/**\n\t * Sets [playbackRate]{@link moonstone/VideoPlayer.VideoPlayer#playbackRate}.\n\t *\n\t * @param {String} rate - The desired playback rate.\n\t * @private\n\t */\n\tsetPlaybackRate = (rate) => {\n\t\t// Stop rewind (if happenning)\n\t\tthis.stopRewindJob();\n\n\t\t// Make sure rate is a string\n\t\tthis.playbackRate = rate = String(rate);\n\t\tconst pbNumber = calcNumberValueOfPlaybackRate(rate);\n\n\t\tif (!platform.webos) {\n\t\t\t// ReactDOM throws error for setting negative value for playbackRate\n\t\t\tthis.video.playbackRate = pbNumber < 0 ? 0 : pbNumber;\n\n\t\t\t// For supporting cross browser behavior\n\t\t\tif (pbNumber < 0) {\n\t\t\t\tthis.beginRewind();\n\t\t\t}\n\t\t} else {\n\t\t\t// Set native playback rate\n\t\t\tthis.video.playbackRate = pbNumber;\n\t\t}\n\t}\n\n\t/**\n\t * Calculates the time that has elapsed since. This is necessary for browsers until negative\n\t * playback rate is directly supported.\n\t *\n\t * @private\n\t */\n\trewindManually = () => {\n\t\tconst now = perfNow(),\n\t\t\tdistance = now - this.rewindBeginTime,\n\t\t\tpbRate = calcNumberValueOfPlaybackRate(this.playbackRate),\n\t\t\tadjustedDistance = (distance * pbRate) / 1000;\n\n\t\tthis.jump(adjustedDistance);\n\t\tthis.stopDelayedMiniFeedbackHide();\n\t\tthis.clearPulsedPlayback();\n\t\tthis.startRewindJob();\t// Issue another rewind tick\n\t}\n\n\trewindJob = new Job(this.rewindManually, 100)\n\n\t/**\n\t * Starts rewind job.\n\t *\n\t * @private\n\t */\n\tstartRewindJob = () => {\n\t\tthis.rewindBeginTime = perfNow();\n\t\tthis.rewindJob.start();\n\t}\n\n\t/**\n\t * Stops rewind job.\n\t *\n\t * @private\n\t */\n\tstopRewindJob = () => {\n\t\tthis.rewindJob.stop();\n\t}\n\n\t/**\n\t * Implements custom rewind functionality (until browsers support negative playback rate).\n\t *\n\t * @private\n\t */\n\tbeginRewind = () => {\n\t\tthis.send('pause');\n\t\tthis.startRewindJob();\n\t}\n\n\t//\n\t// Handled Media events\n\t//\n\taddStateToEvent = (ev) => {\n\t\treturn {\n\t\t\t// More props from `ev` may be added here as needed, but a full copy via `...ev`\n\t\t\t// overloads Storybook's Action Logger and likely has other perf fallout.\n\t\t\ttype: ev.type,\n\t\t\t// Specific state variables are included in the outgoing calback payload, not all of them\n\t\t\t...this.getMediaState()\n\t\t};\n\t}\n\n\tdisablePointerMode = () => {\n\t\tSpotlight.setPointerMode(false);\n\t\treturn true;\n\t}\n\n\thandleKeyDownFromControls = this.handle(\n\t\t// onKeyDown is used as a proxy for when the title has been read because it can only occur\n\t\t// after the controls have been shown.\n\t\tthis.markAnnounceRead,\n\t\tforKey('down'),\n\t\tthis.disablePointerMode,\n\t\tthis.hideControls\n\t)\n\n\t//\n\t// Player Interaction events\n\t//\n\tonVideoClick = () => {\n\t\tthis.toggleControls();\n\t}\n\n\tonSliderChange = ({value}) => {\n\t\tconst time = value * this.state.duration;\n\n\t\tif (this.preventTimeChange(time)) return;\n\n\t\tthis.seek(time);\n\t\tthis.sliderScrubbing = false;\n\t}\n\n\tsliderTooltipTimeJob = new Job((time) => this.setState({sliderTooltipTime: time}), 20)\n\n\thandleKnobMove = (ev) => {\n\t\tthis.sliderScrubbing = true;\n\n\t\t// prevent announcing repeatedly when the knob is detached from the progress.\n\t\t// TODO: fix Slider to not send onKnobMove when the knob hasn't, in fact, moved\n\t\tif (this.sliderKnobProportion !== ev.proportion) {\n\t\t\tthis.sliderKnobProportion = ev.proportion;\n\t\t\tconst seconds = Math.floor(this.sliderKnobProportion * this.video.duration);\n\n\t\t\tif (!isNaN(seconds)) {\n\t\t\t\tthis.sliderTooltipTimeJob.throttle(seconds);\n\t\t\t\tconst knobTime = secondsToTime(seconds, getDurFmt(this.props.locale), {includeHour: true});\n\n\t\t\t\tforward('onScrub', {...ev, seconds}, this.props);\n\n\t\t\t\tthis.announce(`${$L('jump to')} ${knobTime}`);\n\t\t\t}\n\t\t}\n\t}\n\n\thandleSliderFocus = () => {\n\t\tconst seconds = Math.floor(this.sliderKnobProportion * this.video.duration);\n\t\tthis.sliderScrubbing = true;\n\n\t\tthis.setState({\n\t\t\tfeedbackAction: 'focus',\n\t\t\tfeedbackVisible: true\n\t\t});\n\t\tthis.stopDelayedFeedbackHide();\n\n\t\tif (!isNaN(seconds)) {\n\t\t\tthis.sliderTooltipTimeJob.throttle(seconds);\n\t\t\tconst knobTime = secondsToTime(seconds, getDurFmt(this.props.locale), {includeHour: true});\n\n\t\t\tforward('onScrub', {\n\t\t\t\tdetached: this.sliderScrubbing,\n\t\t\t\tproportion: this.sliderKnobProportion,\n\t\t\t\tseconds},\n\t\t\tthis.props);\n\n\t\t\tthis.announce(`${$L('jump to')} ${knobTime}`);\n\t\t}\n\t}\n\n\thandleSliderBlur = () => {\n\t\tthis.sliderScrubbing = false;\n\t\tthis.startDelayedFeedbackHide();\n\t\tthis.setState(({currentTime}) => ({\n\t\t\tfeedbackAction: 'blur',\n\t\t\tfeedbackVisible: true,\n\t\t\tsliderTooltipTime: currentTime\n\t\t}));\n\t}\n\n\tslider5WayPressJob = new Job(() => {\n\t\tthis.setState({slider5WayPressed: false});\n\t}, 200);\n\n\thandleSliderKeyDown = (ev) => {\n\t\tconst {keyCode} = ev;\n\n\t\tif (is('enter', keyCode)) {\n\t\t\tthis.setState({\n\t\t\t\tslider5WayPressed: true\n\t\t\t}, this.slider5WayPressJob.start());\n\t\t} else if (is('down', keyCode)) {\n\t\t\tSpotlight.setPointerMode(false);\n\n\t\t\tif (Spotlight.focus(this.mediaControlsSpotlightId)) {\n\t\t\t\tpreventDefault(ev);\n\t\t\t\tstopImmediate(ev);\n\t\t\t\tthis.activityDetected();\n\t\t\t}\n\t\t} else if (is('up', keyCode)) {\n\t\t\tSpotlight.setPointerMode(false);\n\t\t\tpreventDefault(ev);\n\t\t\tstopImmediate(ev);\n\n\t\t\tthis.handleSliderBlur();\n\t\t\tthis.hideControls();\n\t\t} else {\n\t\t\tthis.activityDetected();\n\t\t}\n\t}\n\n\tonJumpBackward = this.handle(\n\t\tforwardJumpBackward,\n\t\t() => this.jump(-1 * this.props.jumpBy)\n\t)\n\tonJumpForward = this.handle(\n\t\tforwardJumpForward,\n\t\t() => this.jump(this.props.jumpBy)\n\t)\n\n\thandleToggleMore = ({showMoreComponents}) => {\n\t\tif (!showMoreComponents) {\n\t\t\tthis.startAutoCloseTimeout();\t// Restore the timer since we are leaving \"more.\n\t\t\t// Restore the title-hide now that we're finished with \"more\".\n\t\t\tthis.startDelayedTitleHide();\n\t\t} else {\n\t\t\t// Interrupt the title-hide since we don't want it hiding autonomously in \"more\".\n\t\t\tthis.stopDelayedTitleHide();\n\t\t}\n\n\t\tthis.setState(({announce}) => ({\n\t\t\tinfoVisible: showMoreComponents,\n\t\t\ttitleVisible: true,\n\t\t\tannounce: announce < AnnounceState.INFO ? AnnounceState.INFO : AnnounceState.DONE\n\t\t}));\n\t}\n\n\thandleMediaControlsClose = (ev) => {\n\t\tthis.hideControls();\n\t\tev.stopPropagation();\n\t}\n\n\tsetPlayerRef = (node) => {\n\t\t// TODO: We've moved SpotlightContainerDecorator up to allow VP to be spottable but also\n\t\t// need a ref to the root node to query for children and set CSS variables.\n\t\t// eslint-disable-next-line react/no-find-dom-node\n\t\tthis.player = ReactDOM.findDOMNode(node);\n\t}\n\n\tsetVideoRef = (video) => {\n\t\tthis.video = video;\n\t}\n\n\tsetTitleRef = (node) => {\n\t\tthis.titleRef = node;\n\t}\n\n\tsetAnnounceRef = (node) => {\n\t\tthis.announceRef = node;\n\t}\n\n\tgetControlsAriaProps () {\n\t\tif (this.state.announce === AnnounceState.TITLE) {\n\t\t\treturn {\n\t\t\t\t'aria-labelledby': `${this.id}_title`,\n\t\t\t\t'aria-live': 'off',\n\t\t\t\trole: 'alert'\n\t\t\t};\n\t\t} else if (this.state.announce === AnnounceState.INFO) {\n\t\t\treturn {\n\t\t\t\t'aria-labelledby': `${this.id}_info`,\n\t\t\t\trole: 'region'\n\t\t\t};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\trender () {\n\t\tconst {\n\t\t\tclassName,\n\t\t\tdisabled,\n\t\t\tinfoComponents,\n\t\t\tloading,\n\t\t\tlocale,\n\t\t\tmediaControlsComponent,\n\t\t\tnoAutoPlay,\n\t\t\tnoMiniFeedback,\n\t\t\tnoSlider,\n\t\t\tnoSpinner,\n\t\t\tselection,\n\t\t\tspotlightDisabled,\n\t\t\tspotlightId,\n\t\t\tstyle,\n\t\t\tthumbnailComponent,\n\t\t\tthumbnailSrc,\n\t\t\ttitle,\n\t\t\tvideoComponent: VideoComponent,\n\t\t\t...mediaProps\n\t\t} = this.props;\n\n\t\tdelete mediaProps.announce;\n\t\tdelete mediaProps.autoCloseTimeout;\n\t\tdelete mediaProps.children;\n\t\tdelete mediaProps.feedbackHideDelay;\n\t\tdelete mediaProps.jumpBy;\n\t\tdelete mediaProps.miniFeedbackHideDelay;\n\t\tdelete mediaProps.noAutoShowMediaControls;\n\t\tdelete mediaProps.noMediaSliderFeedback;\n\t\tdelete mediaProps.onControlsAvailable;\n\t\tdelete mediaProps.onFastForward;\n\t\tdelete mediaProps.onJumpBackward;\n\t\tdelete mediaProps.onJumpForward;\n\t\tdelete mediaProps.onPause;\n\t\tdelete mediaProps.onPlay;\n\t\tdelete mediaProps.onRewind;\n\t\tdelete mediaProps.onScrub;\n\t\tdelete mediaProps.onSeekFailed;\n\t\tdelete mediaProps.onSeekOutsideSelection;\n\t\tdelete mediaProps.pauseAtEnd;\n\t\tdelete mediaProps.playbackRateHash;\n\t\tdelete mediaProps.seekDisabled;\n\t\tdelete mediaProps.setApiProvider;\n\t\tdelete mediaProps.thumbnailUnavailable;\n\t\tdelete mediaProps.titleHideDelay;\n\t\tdelete mediaProps.videoPath;\n\n\t\tmediaProps.autoPlay = !noAutoPlay;\n\t\tmediaProps.className = css.video;\n\t\tmediaProps.controls = false;\n\t\tmediaProps.mediaComponent = 'video';\n\t\tmediaProps.onLoadStart = this.handleLoadStart;\n\t\tmediaProps.onUpdate = this.handleEvent;\n\t\tmediaProps.ref = this.setVideoRef;\n\n\t\tconst controlsAriaProps = this.getControlsAriaProps();\n\n\t\tlet proportionSelection = selection;\n\t\tif (proportionSelection != null && this.state.duration) {\n\t\t\tproportionSelection = selection.map(t => t / this.state.duration);\n\t\t}\n\n\t\tconst durFmt = getDurFmt(locale);\n\n\t\treturn (\n\t\t\t<RootContainer\n\t\t\t\tclassName={css.videoPlayer + ' enact-fit' + (className ? ' ' + className : '')}\n\t\t\t\tonClick={this.activityDetected}\n\t\t\t\tref={this.setPlayerRef}\n\t\t\t\tspotlightDisabled={spotlightDisabled}\n\t\t\t\tspotlightId={spotlightId}\n\t\t\t\tstyle={style}\n\t\t\t>\n\t\t\t\t{/* Video Section */}\n\t\t\t\t{\n\t\t\t\t\t// Duplicating logic from <ComponentOverride /> until enzyme supports forwardRef\n\t\t\t\t\tVideoComponent && (\n\t\t\t\t\t\t(typeof VideoComponent === 'function' || typeof VideoComponent === 'string') && (\n\t\t\t\t\t\t\t<VideoComponent {...mediaProps} />\n\t\t\t\t\t\t) || React.isValidElement(VideoComponent) && (\n\t\t\t\t\t\t\tReact.cloneElement(VideoComponent, mediaProps)\n\t\t\t\t\t\t)\n\t\t\t\t\t) || null\n\t\t\t\t}\n\n\t\t\t\t<Overlay\n\t\t\t\t\tbottomControlsVisible={this.state.mediaControlsVisible}\n\t\t\t\t\tonClick={this.onVideoClick}\n\t\t\t\t>\n\t\t\t\t\t{!noSpinner && (this.state.loading || loading) ? <Spinner centered /> : null}\n\t\t\t\t</Overlay>\n\n\t\t\t\t{this.state.bottomControlsRendered ?\n\t\t\t\t\t<div className={css.fullscreen} {...controlsAriaProps}>\n\t\t\t\t\t\t<FeedbackContent\n\t\t\t\t\t\t\tclassName={css.miniFeedback}\n\t\t\t\t\t\t\tplaybackRate={this.pulsedPlaybackRate || this.selectPlaybackRate(this.speedIndex)}\n\t\t\t\t\t\t\tplaybackState={this.pulsedPlaybackState || this.prevCommand}\n\t\t\t\t\t\t\tvisible={this.state.miniFeedbackVisible && !noMiniFeedback}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{secondsToTime(this.state.sliderTooltipTime, durFmt)}\n\t\t\t\t\t\t</FeedbackContent>\n\t\t\t\t\t\t<ControlsContainer\n\t\t\t\t\t\t\tclassName={css.bottom + (this.state.mediaControlsVisible ? '' : ' ' + css.hidden)}\n\t\t\t\t\t\t\tspotlightDisabled={spotlightDisabled || !this.state.mediaControlsVisible}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/*\n\t\t\t\t\t\t\t\tInfo Section: Title, Description, Times\n\t\t\t\t\t\t\t\tOnly render when `this.state.mediaControlsVisible` is true in order for `Marquee`\n\t\t\t\t\t\t\t\tto make calculations correctly in `MediaTitle`.\n\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t{this.state.mediaSliderVisible ?\n\t\t\t\t\t\t\t\t<div className={css.infoFrame}>\n\t\t\t\t\t\t\t\t\t<MediaTitle\n\t\t\t\t\t\t\t\t\t\tid={this.id}\n\t\t\t\t\t\t\t\t\t\tinfoVisible={this.state.infoVisible}\n\t\t\t\t\t\t\t\t\t\tref={this.setTitleRef}\n\t\t\t\t\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\t\t\t\t\tvisible={this.state.titleVisible && this.state.mediaControlsVisible}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{infoComponents}\n\t\t\t\t\t\t\t\t\t</MediaTitle>\n\t\t\t\t\t\t\t\t\t<Times current={this.state.currentTime} total={this.state.duration} formatter={durFmt} />\n\t\t\t\t\t\t\t\t</div> :\n\t\t\t\t\t\t\t\tnull\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t{noSlider ? null : <MediaSlider\n\t\t\t\t\t\t\t\tbackgroundProgress={this.state.proportionLoaded}\n\t\t\t\t\t\t\t\tdisabled={disabled || this.state.sourceUnavailable}\n\t\t\t\t\t\t\t\tforcePressed={this.state.slider5WayPressed}\n\t\t\t\t\t\t\t\tonBlur={this.handleSliderBlur}\n\t\t\t\t\t\t\t\tonChange={this.onSliderChange}\n\t\t\t\t\t\t\t\tonFocus={this.handleSliderFocus}\n\t\t\t\t\t\t\t\tonKeyDown={this.handleSliderKeyDown}\n\t\t\t\t\t\t\t\tonKnobMove={this.handleKnobMove}\n\t\t\t\t\t\t\t\tonSpotlightUp={this.handleSpotlightUpFromSlider}\n\t\t\t\t\t\t\t\tselection={proportionSelection}\n\t\t\t\t\t\t\t\tspotlightDisabled={spotlightDisabled || !this.state.mediaControlsVisible}\n\t\t\t\t\t\t\t\tvalue={this.state.proportionPlayed}\n\t\t\t\t\t\t\t\tvisible={this.state.mediaSliderVisible}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<FeedbackTooltip\n\t\t\t\t\t\t\t\t\taction={this.state.feedbackAction}\n\t\t\t\t\t\t\t\t\tduration={this.state.duration}\n\t\t\t\t\t\t\t\t\tformatter={durFmt}\n\t\t\t\t\t\t\t\t\thidden={!this.state.feedbackVisible || this.state.sourceUnavailable}\n\t\t\t\t\t\t\t\t\tplaybackRate={this.selectPlaybackRate(this.speedIndex)}\n\t\t\t\t\t\t\t\t\tplaybackState={this.prevCommand}\n\t\t\t\t\t\t\t\t\tthumbnailComponent={thumbnailComponent}\n\t\t\t\t\t\t\t\t\tthumbnailDeactivated={this.props.thumbnailUnavailable}\n\t\t\t\t\t\t\t\t\tthumbnailSrc={thumbnailSrc}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</MediaSlider>}\n\n\t\t\t\t\t\t\t<ComponentOverride\n\t\t\t\t\t\t\t\tcomponent={mediaControlsComponent}\n\t\t\t\t\t\t\t\tmediaDisabled={disabled || this.state.sourceUnavailable}\n\t\t\t\t\t\t\t\tmoreButtonSpotlightId={this.moreButtonSpotlightId}\n\t\t\t\t\t\t\t\tonBackwardButtonClick={this.handleRewind}\n\t\t\t\t\t\t\t\tonClose={this.handleMediaControlsClose}\n\t\t\t\t\t\t\t\tonFastForward={this.handleFastForward}\n\t\t\t\t\t\t\t\tonForwardButtonClick={this.handleFastForward}\n\t\t\t\t\t\t\t\tonJump={this.handleJump}\n\t\t\t\t\t\t\t\tonJumpBackwardButtonClick={this.onJumpBackward}\n\t\t\t\t\t\t\t\tonJumpForwardButtonClick={this.onJumpForward}\n\t\t\t\t\t\t\t\tonKeyDown={this.handleKeyDownFromControls}\n\t\t\t\t\t\t\t\tonPause={this.handlePause}\n\t\t\t\t\t\t\t\tonPlay={this.handlePlay}\n\t\t\t\t\t\t\t\tonRewind={this.handleRewind}\n\t\t\t\t\t\t\t\tonToggleMore={this.handleToggleMore}\n\t\t\t\t\t\t\t\tpaused={this.state.paused}\n\t\t\t\t\t\t\t\tspotlightId={this.mediaControlsSpotlightId}\n\t\t\t\t\t\t\t\tspotlightDisabled={!this.state.mediaControlsVisible || spotlightDisabled}\n\t\t\t\t\t\t\t\tvisible={this.state.mediaControlsVisible}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ControlsContainer>\n\t\t\t\t\t</div> :\n\t\t\t\t\tnull\n\t\t\t\t}\n\t\t\t\t<SpottableDiv\n\t\t\t\t\t// This captures spotlight focus for use with 5-way.\n\t\t\t\t\t// It's non-visible but lives at the top of the VideoPlayer.\n\t\t\t\t\tclassName={css.controlsHandleAbove}\n\t\t\t\t\tonClick={this.showControls}\n\t\t\t\t\tonSpotlightDown={this.showControls}\n\t\t\t\t\tspotlightDisabled={this.state.mediaControlsVisible || spotlightDisabled}\n\t\t\t\t/>\n\t\t\t\t<Announce ref={this.setAnnounceRef} />\n\t\t\t</RootContainer>\n\t\t);\n\t}\n};\n\n/**\n * A standard HTML5 video player for Moonstone. It behaves, responds to, and operates like a\n * `<video>` tag in its support for `<source>`.  It also accepts custom tags such as\n * `<infoComponents>` for displaying additional information in the title area and `<MediaControls>`\n * for handling media playback controls and adding more controls.\n *\n * Example usage:\n * ```\n *\t<VideoPlayer title=\"Hilarious Cat Video\" poster=\"http://my.cat.videos/boots-poster.jpg\">\n *\t\t<source src=\"http://my.cat.videos/boots.mp4\" type=\"video/mp4\" />\n *\t\t<infoComponents>A video about my cat Boots, wearing boots.</infoComponents>\n *\t\t<MediaControls>\n *\t\t\t<leftComponents><IconButton backgroundOpacity=\"translucent\">star</IconButton></leftComponents>\n *\t\t\t<rightComponents><IconButton backgroundOpacity=\"translucent\">flag</IconButton></rightComponents>\n *\n *\t\t\t<Button backgroundOpacity=\"translucent\">Add To Favorites</Button>\n *\t\t\t<IconButton backgroundOpacity=\"translucent\">search</IconButton>\n *\t\t</MediaControls>\n *\t</VideoPlayer>\n * ```\n *\n * To invoke methods (e.g.: `fastForward()`) or get the current state (`getMediaState()`), store a\n * ref to the `VideoPlayer` within your component:\n *\n * ```\n * \t...\n *\n * \tsetVideoPlayer = (node) => {\n * \t\tthis.videoPlayer = node;\n * \t}\n *\n * \tplay () {\n * \t\tthis.videoPlayer.play();\n * \t}\n *\n * \trender () {\n * \t\treturn (\n * \t\t\t<VideoPlayer ref={this.setVideoPlayer} />\n * \t\t);\n * \t}\n * ```\n *\n * @class VideoPlayer\n * @memberof moonstone/VideoPlayer\n * @mixes ui/Slottable.Slottable\n * @ui\n * @public\n */\nconst VideoPlayer = ApiDecorator(\n\t{api: [\n\t\t'areControlsVisible',\n\t\t'fastForward',\n\t\t'getMediaState',\n\t\t'getVideoNode',\n\t\t'hideControls',\n\t\t'jump',\n\t\t'pause',\n\t\t'play',\n\t\t'rewind',\n\t\t'seek',\n\t\t'showControls',\n\t\t'showFeedback',\n\t\t'toggleControls'\n\t]},\n\tI18nContextDecorator(\n\t\t{localeProp: 'locale'},\n\t\tSlottable(\n\t\t\t{slots: ['infoComponents', 'mediaControlsComponent', 'source', 'thumbnailComponent', 'videoComponent']},\n\t\t\tFloatingLayerDecorator(\n\t\t\t\t{floatLayerId: 'videoPlayerFloatingLayer'},\n\t\t\t\tSkinnable(\n\t\t\t\t\tVideoPlayerBase\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n);\n\nexport default VideoPlayer;\nexport {\n\tMediaControls,\n\tVideo,\n\tVideoPlayer,\n\tVideoPlayerBase\n};"]},"metadata":{},"sourceType":"module"}