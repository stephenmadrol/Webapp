{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Skinnable = exports[\"default\"] = void 0;\n\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\n\nvar _Skinnable = _interopRequireDefault(require(\"@enact/ui/Skinnable\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Exports the {@link moonstone/Skinnable.Skinnable} higher-order component (HOC).\n *\n * @module moonstone/Skinnable\n * @public\n */\n\n\nvar defaultConfig = {\n  skins: {\n    dark: 'moonstone',\n    light: 'moonstone-light'\n  },\n  defaultVariants: ['highContrast'],\n  allowedVariants: ['highContrast', 'largeText', 'grayscale']\n};\n/**\n * This higher-order component is based on [ui/Skinnable]{@link ui/Skinnable.Skinnable}.\n *\n * `Skinnable` comes pre-configured for Moonstone's supported skins: \"dark\" (default) and \"light\".\n * It is used to apply the relevant skinning classes to each component and has been used to\n * pre-select specific skins for some components.\n *\n * @class Skinnable\n * @memberof moonstone/Skinnable\n * @extends ui/Skinnable.Skinnable\n * @hoc\n * @public\n */\n\nvar Skinnable = (0, _hoc[\"default\"])(defaultConfig, _Skinnable[\"default\"]);\n/**\n * Select a skin by name by specifying this property.\n *\n * Available Moonstone skins are `\"dark\"` (default) and `\"light\"`. This may be changed at runtime.\n * All components already use their defaults, but a skin may be changed via this prop or by using\n * `Skinnable` directly and a config object.\n *\n * Example:\n * ```\n * <Button skin=\"light\">\n * ```\n *\n * @name skin\n * @type {String}\n * @default 'dark'\n * @memberof moonstone/Skinnable.Skinnable\n * @instance\n * @public\n */\n\nexports.Skinnable = Skinnable;\nvar _default = Skinnable;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\moonstone\\Skinnable\\Skinnable.js"],"names":["Object","defineProperty","exports","value","Skinnable","_hoc","_interopRequireDefault","require","_Skinnable","obj","__esModule","defaultConfig","skins","dark","light","defaultVariants","allowedVariants","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBF,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA9C;;AAEA,IAAIG,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAjC;;AAEA,IAAIC,UAAU,GAAGF,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAAvC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;;;;;;;;AAMA,IAAIE,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,WADD;AAELC,IAAAA,KAAK,EAAE;AAFF,GADW;AAKlBC,EAAAA,eAAe,EAAE,CAAC,cAAD,CALC;AAMlBC,EAAAA,eAAe,EAAE,CAAC,cAAD,EAAiB,WAAjB,EAA8B,WAA9B;AANC,CAApB;AAQA;;;;;;;;;;;;;;AAcA,IAAIZ,SAAS,GAAG,CAAC,GAAGC,IAAI,CAAC,SAAD,CAAR,EAAqBM,aAArB,EAAoCH,UAAU,CAAC,SAAD,CAA9C,CAAhB;AACA;;;;;;;;;;;;;;;;;;;;AAoBAN,OAAO,CAACE,SAAR,GAAoBA,SAApB;AACA,IAAIa,QAAQ,GAAGb,SAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBe,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Skinnable = exports[\"default\"] = void 0;\n\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\n\nvar _Skinnable = _interopRequireDefault(require(\"@enact/ui/Skinnable\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Exports the {@link moonstone/Skinnable.Skinnable} higher-order component (HOC).\n *\n * @module moonstone/Skinnable\n * @public\n */\nvar defaultConfig = {\n  skins: {\n    dark: 'moonstone',\n    light: 'moonstone-light'\n  },\n  defaultVariants: ['highContrast'],\n  allowedVariants: ['highContrast', 'largeText', 'grayscale']\n};\n/**\n * This higher-order component is based on [ui/Skinnable]{@link ui/Skinnable.Skinnable}.\n *\n * `Skinnable` comes pre-configured for Moonstone's supported skins: \"dark\" (default) and \"light\".\n * It is used to apply the relevant skinning classes to each component and has been used to\n * pre-select specific skins for some components.\n *\n * @class Skinnable\n * @memberof moonstone/Skinnable\n * @extends ui/Skinnable.Skinnable\n * @hoc\n * @public\n */\n\nvar Skinnable = (0, _hoc[\"default\"])(defaultConfig, _Skinnable[\"default\"]);\n/**\n * Select a skin by name by specifying this property.\n *\n * Available Moonstone skins are `\"dark\"` (default) and `\"light\"`. This may be changed at runtime.\n * All components already use their defaults, but a skin may be changed via this prop or by using\n * `Skinnable` directly and a config object.\n *\n * Example:\n * ```\n * <Button skin=\"light\">\n * ```\n *\n * @name skin\n * @type {String}\n * @default 'dark'\n * @memberof moonstone/Skinnable.Skinnable\n * @instance\n * @public\n */\n\nexports.Skinnable = Skinnable;\nvar _default = Skinnable;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}