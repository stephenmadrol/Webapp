{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollableNative = exports.ScrollableBaseNative = exports.constants = exports[\"default\"] = void 0;\n\nvar _clamp = _interopRequireDefault(require(\"ramda/src/clamp\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _handle = require(\"@enact/core/handle\");\n\nvar _keymap = require(\"@enact/core/keymap\");\n\nvar _util = require(\"@enact/core/util\");\n\nvar _platform = require(\"@enact/core/platform\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Registry = _interopRequireDefault(require(\"@enact/core/internal/Registry\"));\n\nvar _Resizable = require(\"../Resizable\");\n\nvar _resolution = _interopRequireDefault(require(\"../resolution\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ScrollAnimator = _interopRequireDefault(require(\"./ScrollAnimator\"));\n\nvar _Scrollbar = _interopRequireDefault(require(\"./Scrollbar\"));\n\nvar _ScrollableModule = _interopRequireDefault(require(\"./Scrollable.module.css\"));\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  }\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar constants = {\n  epsilon: 1,\n  isPageDown: (0, _keymap.is)('pageDown'),\n  isPageUp: (0, _keymap.is)('pageUp'),\n  nop: function nop() {},\n  overscrollTypeNone: 0,\n  overscrollTypeHold: 1,\n  overscrollTypeOnce: 2,\n  overscrollTypeDone: 9,\n  overscrollVelocityFactor: 300,\n  scrollStopWaiting: 200,\n  scrollWheelPageMultiplierForMaxPixel: 0.2 // The ratio of the maximum distance scrolled by wheel to the size of the viewport.\n\n},\n    epsilon = constants.epsilon,\n    nop = constants.nop,\n    overscrollTypeDone = constants.overscrollTypeDone,\n    overscrollTypeHold = constants.overscrollTypeHold,\n    overscrollTypeNone = constants.overscrollTypeNone,\n    overscrollTypeOnce = constants.overscrollTypeOnce,\n    overscrollVelocityFactor = constants.overscrollVelocityFactor,\n    scrollStopWaiting = constants.scrollStopWaiting,\n    scrollWheelPageMultiplierForMaxPixel = constants.scrollWheelPageMultiplierForMaxPixel;\nexports.constants = constants;\nvar TouchableDiv = (0, _Touchable[\"default\"])('div');\n/**\n * An unstyled native component that passes scrollable behavior information as its render prop's arguments.\n *\n * @class ScrollableBaseNative\n * @memberof ui/ScrollableNative\n * @ui\n * @private\n */\n\nvar ScrollableBaseNative =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScrollableBaseNative, _Component);\n\n  function ScrollableBaseNative(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollableBaseNative);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollableBaseNative).call(this, props));\n    _this.pixelPerLine = 39;\n    _this.scrollWheelMultiplierForDeltaPixel = 1.5;\n    _this.deferScrollTo = true;\n    _this.isScrollAnimationTargetAccumulated = false;\n    _this.isUpdatedScrollThumb = false;\n    _this.lastInputType = null;\n    _this.overscrollEnabled = false;\n    _this.overscrollStatus = {\n      horizontal: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      },\n      vertical: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        } // bounds info\n\n      }\n    };\n    _this.bounds = {\n      clientWidth: 0,\n      clientHeight: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      maxTop: 0,\n      maxLeft: 0 // wheel/drag/flick info\n\n    };\n    _this.wheelDirection = 0;\n    _this.isDragging = false;\n    _this.isTouching = false;\n    _this.scrolling = false;\n    _this.scrollLeft = 0;\n    _this.scrollTop = 0;\n    _this.scrollToInfo = null;\n    _this.childRefCurrent = null;\n    _this.animator = new _ScrollAnimator[\"default\"]();\n\n    _this.getRtlX = function (x) {\n      return _this.props.rtl ? -x : x;\n    };\n\n    _this.onMouseDown = function (ev) {\n      _this.isScrollAnimationTargetAccumulated = false;\n\n      _this.stop();\n\n      (0, _handle.forward)('onMouseDown', ev, _this.props);\n    };\n\n    _this.onTouchStart = function () {\n      _this.isTouching = true;\n    };\n\n    _this.onDragStart = function (ev) {\n      if (!_this.isTouching) {\n        _this.stop();\n\n        _this.isDragging = true;\n      } // these values are used also for touch inputs\n\n\n      _this.dragStartX = _this.scrollLeft + _this.getRtlX(ev.x);\n      _this.dragStartY = _this.scrollTop + ev.y;\n    };\n\n    _this.onDrag = function (ev) {\n      var _this$props = _this.props,\n          direction = _this$props.direction,\n          overscrollEffectOn = _this$props.overscrollEffectOn,\n          targetX = direction === 'vertical' ? 0 : _this.dragStartX - _this.getRtlX(ev.x),\n          targetY = direction === 'horizontal' ? 0 : _this.dragStartY - ev.y; // 'vertical' or 'both'\n\n      _this.lastInputType = 'drag';\n\n      if (!_this.isTouching) {\n        _this.start({\n          targetX: targetX,\n          targetY: targetY,\n          animate: false,\n          overscrollEffect: overscrollEffectOn.drag\n        });\n      } else if (_this.overscrollEnabled && overscrollEffectOn.drag) {\n        _this.checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeHold);\n      }\n    };\n\n    _this.onDragEnd = function () {\n      _this.isDragging = false;\n      _this.lastInputType = 'drag';\n\n      if (_this.flickTarget) {\n        var overscrollEffectOn = _this.props.overscrollEffectOn,\n            _this$flickTarget = _this.flickTarget,\n            targetX = _this$flickTarget.targetX,\n            targetY = _this$flickTarget.targetY;\n\n        if (!_this.isTouching) {\n          _this.isScrollAnimationTargetAccumulated = false;\n\n          _this.start({\n            targetX: targetX,\n            targetY: targetY,\n            overscrollEffect: overscrollEffectOn.drag\n          });\n        } else if (_this.overscrollEnabled && overscrollEffectOn.drag) {\n          _this.checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeOnce);\n        }\n      } else if (!_this.isTouching) {\n        _this.stop();\n      }\n\n      if (_this.overscrollEnabled) {\n        // not check this.props.overscrollEffectOn.drag for safety\n        _this.clearAllOverscrollEffects();\n      }\n\n      _this.isTouching = false;\n      _this.flickTarget = null;\n    };\n\n    _this.onFlick = function (ev) {\n      var direction = _this.props.direction;\n\n      if (!_this.isTouching) {\n        _this.flickTarget = _this.animator.simulate(_this.scrollLeft, _this.scrollTop, direction !== 'vertical' ? _this.getRtlX(-ev.velocityX) : 0, direction !== 'horizontal' ? -ev.velocityY : 0);\n      } else if (_this.overscrollEnabled && _this.props.overscrollEffectOn.drag) {\n        _this.flickTarget = {\n          targetX: _this.scrollLeft + _this.getRtlX(-ev.velocityX) * overscrollVelocityFactor,\n          // 'horizontal' or 'both'\n          targetY: _this.scrollTop + -ev.velocityY * overscrollVelocityFactor // 'vertical' or 'both'\n\n        };\n      }\n\n      if (_this.props.onFlick) {\n        (0, _handle.forward)('onFlick', ev, _this.props);\n      }\n    };\n\n    _this.onWheel = function (ev) {\n      if (_this.isDragging) {\n        /* prevent native scrolling feature during dragging */\n        ev.preventDefault();\n      } else {\n        var overscrollEffectOn = _this.props.overscrollEffectOn,\n            overscrollEffectRequired = _this.overscrollEnabled && overscrollEffectOn.wheel,\n            bounds = _this.getScrollBounds(),\n            canScrollHorizontally = _this.canScrollHorizontally(bounds),\n            canScrollVertically = _this.canScrollVertically(bounds),\n            eventDeltaMode = ev.deltaMode,\n            eventDelta = -ev.wheelDeltaY || ev.deltaY;\n\n        var delta = 0,\n            needToHideThumb = false;\n        _this.lastInputType = 'wheel';\n\n        if (_this.props.onWheel) {\n          (0, _handle.forward)('onWheel', ev, _this.props);\n          return;\n        }\n\n        _this.showThumb(bounds); // FIXME This routine is a temporary support for horizontal wheel scroll.\n        // FIXME If web engine supports horizontal wheel, this routine should be refined or removed.\n\n\n        if (canScrollVertically) {\n          // This routine handles wheel events on scrollbars for vertical scroll.\n          if (eventDelta < 0 && _this.scrollTop > 0 || eventDelta > 0 && _this.scrollTop < bounds.maxTop) {\n            var _assertThisInitialize = _assertThisInitialized(_this),\n                horizontalScrollbarRef = _assertThisInitialize.horizontalScrollbarRef,\n                verticalScrollbarRef = _assertThisInitialize.verticalScrollbarRef; // Not to check if ev.target is a descendant of a wrapped component which may have a lot of nodes in it.\n\n\n            if (horizontalScrollbarRef.current && horizontalScrollbarRef.current.getContainerRef().current.contains(ev.target) || verticalScrollbarRef.current && verticalScrollbarRef.current.getContainerRef().current.contains(ev.target)) {\n              delta = _this.calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n              needToHideThumb = !delta;\n            } else if (overscrollEffectRequired) {\n              _this.checkAndApplyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && _this.scrollTop <= 0 || eventDelta > 0 && _this.scrollTop >= bounds.maxTop)) {\n              _this.applyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce, 1);\n            }\n\n            needToHideThumb = true;\n          }\n        } else if (canScrollHorizontally) {\n          // this routine handles wheel events on any children for horizontal scroll.\n          if (eventDelta < 0 && _this.scrollLeft > 0 || eventDelta > 0 && _this.scrollLeft < bounds.maxLeft) {\n            delta = _this.calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n            needToHideThumb = !delta;\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && _this.scrollLeft <= 0 || eventDelta > 0 && _this.scrollLeft >= bounds.maxLeft)) {\n              _this.applyOverscrollEffect('horizontal', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce, 1);\n            }\n\n            needToHideThumb = true;\n          }\n        }\n\n        if (delta !== 0) {\n          /* prevent native scrolling feature for vertical direction */\n          ev.preventDefault();\n          var direction = Math.sign(delta); // Not to accumulate scroll position if wheel direction is different from hold direction\n\n          if (direction !== _this.wheelDirection) {\n            _this.isScrollAnimationTargetAccumulated = false;\n            _this.wheelDirection = direction;\n          }\n\n          _this.scrollToAccumulatedTarget(delta, canScrollVertically, overscrollEffectOn.wheel);\n        }\n\n        if (needToHideThumb) {\n          _this.startHidingThumb();\n        }\n      }\n    };\n\n    _this.onScroll = function (ev) {\n      var _ev$target = ev.target,\n          scrollLeft = _ev$target.scrollLeft,\n          scrollTop = _ev$target.scrollTop;\n\n      var bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds);\n\n      if (!_this.scrolling) {\n        _this.scrollStartOnScroll();\n      }\n\n      if (_this.props.rtl && canScrollHorizontally) {\n        scrollLeft = _platform.platform.ios || _platform.platform.safari ? -scrollLeft : bounds.maxLeft - scrollLeft;\n      }\n\n      if (scrollLeft !== _this.scrollLeft) {\n        _this.setScrollLeft(scrollLeft);\n      }\n\n      if (scrollTop !== _this.scrollTop) {\n        _this.setScrollTop(scrollTop);\n      }\n\n      if (_this.childRefCurrent.didScroll) {\n        _this.childRefCurrent.didScroll(_this.scrollLeft, _this.scrollTop);\n      }\n\n      _this.forwardScrollEvent('onScroll');\n\n      _this.scrollStopJob.start();\n    };\n\n    _this.scrollToAccumulatedTarget = function (delta, vertical, overscrollEffect) {\n      if (!_this.isScrollAnimationTargetAccumulated) {\n        _this.accumulatedTargetX = _this.scrollLeft;\n        _this.accumulatedTargetY = _this.scrollTop;\n        _this.isScrollAnimationTargetAccumulated = true;\n      }\n\n      if (vertical) {\n        _this.accumulatedTargetY += delta;\n      } else {\n        _this.accumulatedTargetX += delta;\n      }\n\n      _this.start({\n        targetX: _this.accumulatedTargetX,\n        targetY: _this.accumulatedTargetY,\n        overscrollEffect: overscrollEffect\n      });\n    };\n\n    _this.getEdgeFromPosition = function (position, maxPosition) {\n      if (position <= 0) {\n        return 'before';\n        /* If a scroll size or a client size is not integer,\n        \t browsers's max scroll position could be smaller than maxPos by 1 pixel.*/\n      } else if (position >= maxPosition - 1) {\n        return 'after';\n      } else {\n        return null;\n      }\n    };\n\n    _this.setOverscrollStatus = function (orientation, edge, type, ratio) {\n      var status = _this.overscrollStatus[orientation][edge];\n      status.type = type;\n      status.ratio = ratio;\n    };\n\n    _this.getOverscrollStatus = function (orientation, edge) {\n      return _this.overscrollStatus[orientation][edge];\n    };\n\n    _this.calculateOverscrollRatio = function (orientation, position) {\n      var bounds = _this.getScrollBounds(),\n          isVertical = orientation === 'vertical',\n          baseSize = isVertical ? bounds.clientHeight : bounds.clientWidth,\n          maxPos = bounds[isVertical ? 'maxTop' : 'maxLeft'];\n\n      var overDistance = 0;\n\n      if (position < 0) {\n        overDistance = -position;\n      } else if (position > maxPos) {\n        overDistance = position - maxPos;\n      } else {\n        return 0;\n      }\n\n      return Math.min(1, 2 * overDistance / baseSize);\n    };\n\n    _this.applyOverscrollEffect = function (orientation, edge, type, ratio) {\n      _this.props.applyOverscrollEffect(orientation, edge, type, ratio);\n\n      _this.setOverscrollStatus(orientation, edge, type === overscrollTypeOnce ? overscrollTypeDone : type, ratio);\n    };\n\n    _this.checkAndApplyOverscrollEffect = function (orientation, edge, type) {\n      var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      var isVertical = orientation === 'vertical',\n          curPos = isVertical ? _this.scrollTop : _this.scrollLeft,\n          maxPos = _this.getScrollBounds()[isVertical ? 'maxTop' : 'maxLeft'];\n      /* If a scroll size or a client size is not integer,\n      \t browsers's max scroll position could be smaller than maxPos by 1 pixel.*/\n\n\n      if (edge === 'before' && curPos <= 0 || edge === 'after' && curPos >= maxPos - 1) {\n        // Already on the edge\n        _this.applyOverscrollEffect(orientation, edge, type, ratio);\n      } else {\n        _this.setOverscrollStatus(orientation, edge, type, ratio);\n      }\n    };\n\n    _this.clearOverscrollEffect = function (orientation, edge) {\n      if (_this.getOverscrollStatus(orientation, edge).type !== overscrollTypeNone) {\n        if (_this.props.clearOverscrollEffect) {\n          _this.props.clearOverscrollEffect(orientation, edge);\n        } else {\n          _this.applyOverscrollEffect(orientation, edge, overscrollTypeNone, 0);\n        }\n      }\n    };\n\n    _this.clearAllOverscrollEffects = function () {\n      ['horizontal', 'vertical'].forEach(function (orientation) {\n        ['before', 'after'].forEach(function (edge) {\n          _this.clearOverscrollEffect(orientation, edge);\n        });\n      });\n    };\n\n    _this.applyOverscrollEffectOnDrag = function (orientation, edge, targetPosition, type) {\n      if (edge) {\n        var oppositeEdge = edge === 'before' ? 'after' : 'before',\n            ratio = _this.calculateOverscrollRatio(orientation, targetPosition);\n\n        _this.applyOverscrollEffect(orientation, edge, type, ratio);\n\n        _this.clearOverscrollEffect(orientation, oppositeEdge);\n      } else {\n        _this.clearOverscrollEffect(orientation, 'before');\n\n        _this.clearOverscrollEffect(orientation, 'after');\n      }\n    };\n\n    _this.checkAndApplyOverscrollEffectOnDrag = function (targetX, targetY, type) {\n      var bounds = _this.getScrollBounds();\n\n      if (_this.canScrollHorizontally(bounds)) {\n        _this.applyOverscrollEffectOnDrag('horizontal', _this.getEdgeFromPosition(targetX, bounds.maxLeft), targetX, type);\n      }\n\n      if (_this.canScrollVertically(bounds)) {\n        _this.applyOverscrollEffectOnDrag('vertical', _this.getEdgeFromPosition(targetY, bounds.maxTop), targetY, type);\n      }\n    };\n\n    _this.checkAndApplyOverscrollEffectOnScroll = function (orientation) {\n      ['before', 'after'].forEach(function (edge) {\n        var _this$getOverscrollSt = _this.getOverscrollStatus(orientation, edge),\n            ratio = _this$getOverscrollSt.ratio,\n            type = _this$getOverscrollSt.type;\n\n        if (type === overscrollTypeOnce) {\n          _this.checkAndApplyOverscrollEffect(orientation, edge, type, ratio);\n        }\n      });\n    };\n\n    _this.checkAndApplyOverscrollEffectOnStart = function (orientation, edge, targetPosition) {\n      if (_this.isDragging) {\n        _this.applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollTypeHold);\n      } else if (edge) {\n        _this.checkAndApplyOverscrollEffect(orientation, edge, overscrollTypeOnce);\n      }\n    };\n\n    _this.scrollStartOnScroll = function () {\n      _this.scrolling = true;\n\n      _this.showThumb(_this.getScrollBounds());\n\n      _this.forwardScrollEvent('onScrollStart');\n    };\n\n    _this.scrollStopOnScroll = function () {\n      if (_this.props.scrollStopOnScroll) {\n        _this.props.scrollStopOnScroll();\n      }\n\n      if (_this.overscrollEnabled && !_this.isDragging) {\n        // not check this.props.overscrollEffectOn for safty\n        _this.clearAllOverscrollEffects();\n      }\n\n      _this.lastInputType = null;\n      _this.isScrollAnimationTargetAccumulated = false;\n      _this.scrolling = false;\n\n      _this.forwardScrollEvent('onScrollStop', _this.getReachedEdgeInfo());\n\n      _this.startHidingThumb();\n    };\n\n    _this.scrollStopJob = new _util.Job(_this.scrollStopOnScroll, scrollStopWaiting);\n\n    _this.getReachedEdgeInfo = function () {\n      var bounds = _this.getScrollBounds(),\n          reachedEdgeInfo = {\n        bottom: false,\n        left: false,\n        right: false,\n        top: false\n      };\n\n      if (_this.canScrollHorizontally(bounds)) {\n        var rtl = _this.props.rtl,\n            edge = _this.getEdgeFromPosition(_this.scrollLeft, bounds.maxLeft);\n\n        if (edge) {\n          // if edge is null, no need to check which edge is reached.\n          if (edge === 'before' && !rtl || edge === 'after' && rtl) {\n            reachedEdgeInfo.left = true;\n          } else {\n            reachedEdgeInfo.right = true;\n          }\n        }\n      }\n\n      if (_this.canScrollVertically(bounds)) {\n        var _edge = _this.getEdgeFromPosition(_this.scrollTop, bounds.maxTop);\n\n        if (_edge === 'before') {\n          reachedEdgeInfo.top = true;\n        } else if (_edge === 'after') {\n          reachedEdgeInfo.bottom = true;\n        }\n      }\n\n      return reachedEdgeInfo;\n    };\n\n    _this.getPositionForScrollTo = function (opt) {\n      var bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds),\n          canScrollVertically = _this.canScrollVertically(bounds);\n\n      var itemPos,\n          left = null,\n          top = null;\n\n      if (opt instanceof Object) {\n        if (opt.position instanceof Object) {\n          if (canScrollHorizontally) {\n            // We need '!=' to check if opt.potision.x is null or undefined\n            left = opt.position.x != null ? opt.position.x : _this.scrollLeft;\n          } else {\n            left = 0;\n          }\n\n          if (canScrollVertically) {\n            // We need '!=' to check if opt.potision.y is null or undefined\n            top = opt.position.y != null ? opt.position.y : _this.scrollTop;\n          } else {\n            top = 0;\n          }\n        } else if (typeof opt.align === 'string') {\n          if (canScrollHorizontally) {\n            if (opt.align.includes('left')) {\n              left = 0;\n            } else if (opt.align.includes('right')) {\n              left = bounds.maxLeft;\n            }\n          }\n\n          if (canScrollVertically) {\n            if (opt.align.includes('top')) {\n              top = 0;\n            } else if (opt.align.includes('bottom')) {\n              top = bounds.maxTop;\n            }\n          }\n        } else {\n          if (typeof opt.index === 'number' && typeof _this.childRefCurrent.getItemPosition === 'function') {\n            itemPos = _this.childRefCurrent.getItemPosition(opt.index, opt.stickTo);\n          } else if (opt.node instanceof Object) {\n            if (opt.node.nodeType === 1 && typeof _this.childRefCurrent.getNodePosition === 'function') {\n              itemPos = _this.childRefCurrent.getNodePosition(opt.node);\n            }\n          }\n\n          if (itemPos) {\n            if (canScrollHorizontally) {\n              left = itemPos.left;\n            }\n\n            if (canScrollVertically) {\n              top = itemPos.top;\n            }\n          }\n        }\n      }\n\n      return {\n        left: left,\n        top: top\n      };\n    };\n\n    _this.scrollTo = function (opt) {\n      if (!_this.deferScrollTo) {\n        var _this$getPositionForS = _this.getPositionForScrollTo(opt),\n            left = _this$getPositionForS.left,\n            top = _this$getPositionForS.top;\n\n        if (_this.props.scrollTo) {\n          _this.props.scrollTo(opt);\n        }\n\n        _this.scrollToInfo = null;\n\n        _this.start({\n          targetX: left !== null ? left : _this.scrollLeft,\n          targetY: top !== null ? top : _this.scrollTop,\n          animate: opt.animate\n        });\n      } else {\n        _this.scrollToInfo = opt;\n      }\n    };\n\n    _this.canScrollHorizontally = function (bounds) {\n      var direction = _this.props.direction;\n      return (direction === 'horizontal' || direction === 'both') && bounds.scrollWidth > bounds.clientWidth && !isNaN(bounds.scrollWidth);\n    };\n\n    _this.canScrollVertically = function (bounds) {\n      var direction = _this.props.direction;\n      return (direction === 'vertical' || direction === 'both') && bounds.scrollHeight > bounds.clientHeight && !isNaN(bounds.scrollHeight);\n    };\n\n    _this.startHidingThumb = function () {\n      if (_this.state.isHorizontalScrollbarVisible && _this.horizontalScrollbarRef.current) {\n        _this.horizontalScrollbarRef.current.startHidingThumb();\n      }\n\n      if (_this.state.isVerticalScrollbarVisible && _this.verticalScrollbarRef.current) {\n        _this.verticalScrollbarRef.current.startHidingThumb();\n      }\n    };\n\n    _this.updateScrollbars = function () {\n      var _this$props2 = _this.props,\n          horizontalScrollbar = _this$props2.horizontalScrollbar,\n          verticalScrollbar = _this$props2.verticalScrollbar,\n          _this$state = _this.state,\n          isHorizontalScrollbarVisible = _this$state.isHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible = _this$state.isVerticalScrollbarVisible,\n          bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds),\n          canScrollVertically = _this.canScrollVertically(bounds),\n          curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollHorizontally : horizontalScrollbar === 'visible',\n          curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollVertically : verticalScrollbar === 'visible'; // determine if we should hide or show any scrollbars\n\n\n      var isVisibilityChanged = isHorizontalScrollbarVisible !== curHorizontalScrollbarVisible || isVerticalScrollbarVisible !== curVerticalScrollbarVisible;\n\n      if (isVisibilityChanged) {\n        // one or both scrollbars have changed visibility\n        _this.setState({\n          isHorizontalScrollbarVisible: curHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible: curVerticalScrollbarVisible\n        });\n      } else {\n        _this.deferScrollTo = false;\n        _this.isUpdatedScrollThumb = _this.updateScrollThumbSize();\n      }\n    };\n\n    _this.updateScrollThumbSize = function () {\n      var _this$props3 = _this.props,\n          horizontalScrollbar = _this$props3.horizontalScrollbar,\n          verticalScrollbar = _this$props3.verticalScrollbar,\n          bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds),\n          canScrollVertically = _this.canScrollVertically(bounds),\n          curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollHorizontally : horizontalScrollbar === 'visible',\n          curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollVertically : verticalScrollbar === 'visible';\n\n      if (curHorizontalScrollbarVisible || curVerticalScrollbarVisible) {\n        // no visibility change but need to notify whichever scrollbars are visible of the\n        // updated bounds and scroll position\n        var updatedBounds = _objectSpread({}, bounds, {\n          scrollLeft: _this.scrollLeft,\n          scrollTop: _this.scrollTop\n        });\n\n        if (curHorizontalScrollbarVisible && _this.horizontalScrollbarRef.current) {\n          _this.horizontalScrollbarRef.current.update(updatedBounds);\n        }\n\n        if (curVerticalScrollbarVisible && _this.verticalScrollbarRef.current) {\n          _this.verticalScrollbarRef.current.update(updatedBounds);\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.initChildRef = function (ref) {\n      if (ref) {\n        _this.childRefCurrent = ref.current || ref;\n      }\n    };\n\n    _this.state = {\n      remeasure: false,\n      isHorizontalScrollbarVisible: props.horizontalScrollbar === 'visible',\n      isVerticalScrollbarVisible: props.verticalScrollbar === 'visible'\n    };\n    _this.containerRef = _react[\"default\"].createRef();\n    _this.horizontalScrollbarRef = _react[\"default\"].createRef();\n    _this.verticalScrollbarRef = _react[\"default\"].createRef();\n    _this.horizontalScrollbarProps = {\n      ref: _this.horizontalScrollbarRef,\n      vertical: false,\n      clientSize: props.clientSize\n    };\n    _this.verticalScrollbarProps = {\n      ref: _this.verticalScrollbarRef,\n      vertical: true,\n      clientSize: props.clientSize\n    };\n    _this.overscrollEnabled = !!props.applyOverscrollEffect; // Enable the early bail out of repeated scrolling to the same position\n\n    _this.animationInfo = null;\n    _this.resizeRegistry = _Registry[\"default\"].create(_this.handleResize.bind(_assertThisInitialized(_this)));\n    props.cbScrollTo(_this.scrollTo);\n    return _this;\n  }\n\n  _createClass(ScrollableBaseNative, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resizeRegistry.parent = this.context;\n      this.addEventListeners();\n      this.updateScrollbars();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$state2 = this.state,\n          isHorizontalScrollbarVisible = _this$state2.isHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible = _this$state2.isVerticalScrollbarVisible,\n          hasDataSizeChanged = this.childRefCurrent.hasDataSizeChanged; // Need to sync calculated client size if it is different from the real size\n\n      if (this.childRefCurrent.syncClientSize) {\n        // If we actually synced, we need to reset scroll position.\n        if (this.childRefCurrent.syncClientSize()) {\n          this.setScrollLeft(0);\n          this.setScrollTop(0);\n        }\n      }\n\n      this.addEventListeners();\n\n      if (hasDataSizeChanged === false && (isHorizontalScrollbarVisible && !prevState.isHorizontalScrollbarVisible || isVerticalScrollbarVisible && !prevState.isVerticalScrollbarVisible)) {\n        this.deferScrollTo = false;\n        this.isUpdatedScrollThumb = this.updateScrollThumbSize();\n      } else {\n        this.updateScrollbars();\n      }\n\n      if (this.scrollToInfo !== null) {\n        if (!this.deferScrollTo) {\n          this.scrollTo(this.scrollToInfo);\n        }\n      } // publish container resize changes\n\n\n      var horizontal = isHorizontalScrollbarVisible !== prevState.isHorizontalScrollbarVisible;\n      var vertical = isVerticalScrollbarVisible !== prevState.isVerticalScrollbarVisible;\n\n      if (horizontal || vertical) {\n        this.resizeRegistry.notify({});\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.resizeRegistry.parent = null; // Before call cancelAnimationFrame, you must send scrollStop Event.\n\n      if (this.scrolling) {\n        this.forwardScrollEvent('onScrollStop', this.getReachedEdgeInfo());\n      }\n\n      this.scrollStopJob.stop();\n      this.removeEventListeners();\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize(ev) {\n      if (ev.action === 'invalidateBounds') {\n        this.enqueueForceUpdate();\n      }\n    } // TODO: consider replacing forceUpdate() by storing bounds in state rather than a non-\n    // state member.\n\n  }, {\n    key: \"enqueueForceUpdate\",\n    value: function enqueueForceUpdate() {\n      this.childRefCurrent.calculateMetrics();\n      this.forceUpdate();\n    } // constants\n\n  }, {\n    key: \"calculateDistanceByWheel\",\n    value: function calculateDistanceByWheel(deltaMode, delta, maxPixel) {\n      if (deltaMode === 0) {\n        delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * this.scrollWheelMultiplierForDeltaPixel));\n      } else if (deltaMode === 1) {\n        // line; firefox\n        delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * this.pixelPerLine * this.scrollWheelMultiplierForDeltaPixel));\n      } else if (deltaMode === 2) {\n        // page\n        delta = delta < 0 ? -maxPixel : maxPixel;\n      }\n\n      return delta;\n    }\n    /*\n     * wheel event handler;\n     * - for horizontal scroll, supports wheel action on any children nodes since web engine cannot support this\n     * - for vertical scroll, supports wheel action on scrollbars only\n     */\n\n  }, {\n    key: \"forwardScrollEvent\",\n    // call scroll callbacks\n    value: function forwardScrollEvent(type, reachedEdgeInfo) {\n      (0, _handle.forward)(type, {\n        scrollLeft: this.scrollLeft,\n        scrollTop: this.scrollTop,\n        moreInfo: this.getMoreInfo(),\n        reachedEdgeInfo: reachedEdgeInfo\n      }, this.props);\n    } // call scroll callbacks and update scrollbars for native scroll\n\n  }, {\n    key: \"setScrollLeft\",\n    // update scroll position\n    value: function setScrollLeft(value) {\n      var bounds = this.getScrollBounds();\n      this.scrollLeft = (0, _clamp[\"default\"])(0, bounds.maxLeft, value);\n\n      if (this.overscrollEnabled && this.props.overscrollEffectOn[this.lastInputType]) {\n        this.checkAndApplyOverscrollEffectOnScroll('horizontal');\n      }\n\n      if (this.state.isHorizontalScrollbarVisible) {\n        this.updateThumb(this.horizontalScrollbarRef, bounds);\n      }\n    }\n  }, {\n    key: \"setScrollTop\",\n    value: function setScrollTop(value) {\n      var bounds = this.getScrollBounds();\n      this.scrollTop = (0, _clamp[\"default\"])(0, bounds.maxTop, value);\n\n      if (this.overscrollEnabled && this.props.overscrollEffectOn[this.lastInputType]) {\n        this.checkAndApplyOverscrollEffectOnScroll('vertical');\n      }\n\n      if (this.state.isVerticalScrollbarVisible) {\n        this.updateThumb(this.verticalScrollbarRef, bounds);\n      }\n    }\n  }, {\n    key: \"start\",\n    // scroll start\n    value: function start(_ref) {\n      var targetX = _ref.targetX,\n          targetY = _ref.targetY,\n          _ref$animate = _ref.animate,\n          animate = _ref$animate === void 0 ? true : _ref$animate,\n          _ref$overscrollEffect = _ref.overscrollEffect,\n          overscrollEffect = _ref$overscrollEffect === void 0 ? false : _ref$overscrollEffect;\n      var scrollLeft = this.scrollLeft,\n          scrollTop = this.scrollTop,\n          childRefCurrent = this.childRefCurrent,\n          childContainerRef = childRefCurrent.containerRef,\n          bounds = this.getScrollBounds(),\n          maxLeft = bounds.maxLeft,\n          maxTop = bounds.maxTop;\n      var updatedAnimationInfo = {\n        targetX: targetX,\n        targetY: targetY\n      }; // bail early when scrolling to the same position\n\n      if (this.scrolling && this.animationInfo && this.animationInfo.targetX === targetX && this.animationInfo.targetY === targetY) {\n        return;\n      }\n\n      this.animationInfo = updatedAnimationInfo;\n\n      if (Math.abs(maxLeft - targetX) < epsilon) {\n        targetX = maxLeft;\n      }\n\n      if (Math.abs(maxTop - targetY) < epsilon) {\n        targetY = maxTop;\n      }\n\n      if (this.overscrollEnabled && overscrollEffect) {\n        if (scrollLeft !== targetX && this.canScrollHorizontally(bounds)) {\n          this.checkAndApplyOverscrollEffectOnStart('horizontal', this.getEdgeFromPosition(targetX, maxLeft), targetX);\n        }\n\n        if (scrollTop !== targetY && this.canScrollVertically(bounds)) {\n          this.checkAndApplyOverscrollEffectOnStart('vertical', this.getEdgeFromPosition(targetY, maxTop), targetY);\n        }\n      }\n\n      if (animate) {\n        childRefCurrent.scrollToPosition(targetX, targetY);\n      } else {\n        childContainerRef.current.style.scrollBehavior = null;\n        childRefCurrent.scrollToPosition(targetX, targetY);\n        childContainerRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      if (this.props.start) {\n        this.props.start(animate);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var childRefCurrent = this.childRefCurrent,\n          childContainerRef = childRefCurrent.containerRef;\n      childContainerRef.current.style.scrollBehavior = null;\n      childRefCurrent.scrollToPosition(this.scrollLeft + 0.1, this.scrollTop + 0.1);\n      childContainerRef.current.style.scrollBehavior = 'smooth';\n    } // scrollTo API\n\n  }, {\n    key: \"showThumb\",\n    // scroll bar\n    value: function showThumb(bounds) {\n      if (this.state.isHorizontalScrollbarVisible && this.canScrollHorizontally(bounds) && this.horizontalScrollbarRef.current) {\n        this.horizontalScrollbarRef.current.showThumb();\n      }\n\n      if (this.state.isVerticalScrollbarVisible && this.canScrollVertically(bounds) && this.verticalScrollbarRef.current) {\n        this.verticalScrollbarRef.current.showThumb();\n      }\n    }\n  }, {\n    key: \"updateThumb\",\n    value: function updateThumb(scrollbarRef, bounds) {\n      scrollbarRef.current.update(_objectSpread({}, bounds, {\n        scrollLeft: this.scrollLeft,\n        scrollTop: this.scrollTop\n      }));\n    }\n  }, {\n    key: \"getScrollBounds\",\n    // ref\n    value: function getScrollBounds() {\n      if (typeof this.childRefCurrent.getScrollBounds === 'function') {\n        return this.childRefCurrent.getScrollBounds();\n      }\n    }\n  }, {\n    key: \"getMoreInfo\",\n    value: function getMoreInfo() {\n      if (typeof this.childRefCurrent.getMoreInfo === 'function') {\n        return this.childRefCurrent.getMoreInfo();\n      }\n    } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners() {\n      var childRefCurrent = this.childRefCurrent,\n          containerRef = this.containerRef;\n\n      if (containerRef.current && containerRef.current.addEventListener) {\n        containerRef.current.addEventListener('wheel', this.onWheel);\n      }\n\n      if (childRefCurrent.containerRef.current) {\n        if (childRefCurrent.containerRef.current.addEventListener) {\n          childRefCurrent.containerRef.current.addEventListener('scroll', this.onScroll, {\n            capture: true,\n            passive: true\n          });\n          childRefCurrent.containerRef.current.addEventListener('mousedown', this.onMouseDown);\n        }\n\n        this.childRefCurrent.containerRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      if (this.props.addEventListeners) {\n        this.props.addEventListeners(childRefCurrent.containerRef);\n      }\n    } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      var childRefCurrent = this.childRefCurrent,\n          containerRef = this.containerRef;\n\n      if (containerRef.current && containerRef.current.removeEventListener) {\n        containerRef.current.removeEventListener('wheel', this.onWheel);\n      }\n\n      if (childRefCurrent.containerRef.current && childRefCurrent.containerRef.current.removeEventListener) {\n        childRefCurrent.containerRef.current.removeEventListener('scroll', this.onScroll, {\n          capture: true,\n          passive: true\n        });\n        childRefCurrent.containerRef.current.removeEventListener('mousedown', this.onMouseDown);\n      }\n\n      if (this.props.removeEventListeners) {\n        this.props.removeEventListeners(childRefCurrent.containerRef);\n      }\n    } // render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          containerRenderer = _this$props4.containerRenderer,\n          noScrollByDrag = _this$props4.noScrollByDrag,\n          rtl = _this$props4.rtl,\n          style = _this$props4.style,\n          rest = _objectWithoutProperties(_this$props4, [\"className\", \"containerRenderer\", \"noScrollByDrag\", \"rtl\", \"style\"]),\n          _this$state3 = this.state,\n          isHorizontalScrollbarVisible = _this$state3.isHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible = _this$state3.isVerticalScrollbarVisible,\n          scrollableClasses = (0, _classnames[\"default\"])(_ScrollableModule[\"default\"].scrollable, className),\n          contentClasses = (0, _classnames[\"default\"])(_ScrollableModule[\"default\"].content, _ScrollableModule[\"default\"].contentNative),\n          childWrapper = noScrollByDrag ? 'div' : TouchableDiv,\n          childWrapperProps = _objectSpread({\n        className: contentClasses\n      }, !noScrollByDrag && {\n        onDrag: this.onDrag,\n        onDragEnd: this.onDragEnd,\n        onDragStart: this.onDragStart,\n        onFlick: this.onFlick,\n        onTouchStart: this.onTouchStart\n      });\n\n      delete rest.addEventListeners;\n      delete rest.applyOverscrollEffect;\n      delete rest.cbScrollTo;\n      delete rest.clearOverscrollEffect;\n      delete rest.horizontalScrollbar;\n      delete rest.onFlick;\n      delete rest.onMouseDown;\n      delete rest.onScroll;\n      delete rest.onScrollStart;\n      delete rest.onScrollStop;\n      delete rest.onWheel;\n      delete rest.overscrollEffectOn;\n      delete rest.removeEventListeners;\n      delete rest.scrollStopOnScroll;\n      delete rest.scrollTo;\n      delete rest.start;\n      delete rest.verticalScrollbar;\n      this.deferScrollTo = true;\n      return _react[\"default\"].createElement(_Resizable.ResizeContext.Provider, {\n        value: this.resizeRegistry.register\n      }, containerRenderer({\n        childComponentProps: rest,\n        childWrapper: childWrapper,\n        childWrapperProps: childWrapperProps,\n        className: scrollableClasses,\n        componentCss: _ScrollableModule[\"default\"],\n        containerRef: this.containerRef,\n        horizontalScrollbarProps: this.horizontalScrollbarProps,\n        initChildRef: this.initChildRef,\n        isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n        isVerticalScrollbarVisible: isVerticalScrollbarVisible,\n        rtl: rtl,\n        scrollTo: this.scrollTo,\n        style: style,\n        verticalScrollbarProps: this.verticalScrollbarProps\n      }));\n    }\n  }]);\n\n  return ScrollableBaseNative;\n}(_react.Component);\n/**\n * An unstyled native component that provides horizontal and vertical scrollbars and makes a render prop element scrollable.\n *\n * @class ScrollableNative\n * @memberof ui/ScrollableNative\n * @extends ui/Scrollable.ScrollableBaseNative\n * @ui\n * @private\n */\n\n\nexports.ScrollableBaseNative = ScrollableBaseNative;\nScrollableBaseNative.displayName = 'ui:ScrollableNative';\nScrollableBaseNative.propTypes =\n/** @lends ui/ScrollableNative.ScrollableNative.prototype */\n{\n  /**\n   * Render function.\n   *\n   * @type {Function}\n   * @required\n   * @private\n   */\n  containerRenderer: _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called when adding additional event listeners in a themed component.\n   *\n   * @type {Function}\n   * @private\n   */\n  addEventListeners: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component to show overscroll effect.\n   *\n   * @type {Function}\n   * @private\n   */\n  applyOverscrollEffect: _propTypes[\"default\"].func,\n\n  /**\n   * A callback function that receives a reference to the `scrollTo` feature.\n   *\n   * Once received, the `scrollTo` method can be called as an imperative interface.\n   *\n   * The `scrollTo` function accepts the following paramaters:\n   * - {position: {x, y}} - Pixel value for x and/or y position\n   * - {align} - Where the scroll area should be aligned. Values are:\n   *   `'left'`, `'right'`, `'top'`, `'bottom'`,\n   *   `'topleft'`, `'topright'`, `'bottomleft'`, and `'bottomright'`.\n   * - {index} - Index of specific item. (`0` or positive integer)\n   *   This option is available for only `VirtualList` kind.\n   * - {node} - Node to scroll into view\n   * - {animate} - When `true`, scroll occurs with animation. When `false`, no\n   *   animation occurs.\n   * - {focus} - When `true`, attempts to focus item after scroll. Only valid when scrolling\n   *   by `index` or `node`.\n   * > Note: Only specify one of: `position`, `align`, `index` or `node`\n   *\n   * Example:\n   * ```\n   *\t// If you set cbScrollTo prop like below;\n   *\tcbScrollTo: (fn) => {this.scrollTo = fn;}\n   *\t// You can simply call like below;\n   *\tthis.scrollTo({align: 'top'}); // scroll to the top\n   * ```\n   *\n   * @type {Function}\n   * @public\n   */\n  cbScrollTo: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component to clear overscroll effect.\n   *\n   * @type {Function}\n   * @private\n   */\n  clearOverscrollEffect: _propTypes[\"default\"].func,\n\n  /**\n   * Client size of the container; valid values are an object that has `clientWidth` and `clientHeight`.\n   *\n   * @type {Object}\n   * @property {Number}    clientHeight    The client height of the list.\n   * @property {Number}    clientWidth    The client width of the list.\n   * @public\n   */\n  clientSize: _propTypes[\"default\"].shape({\n    clientHeight: _propTypes[\"default\"].number.isRequired,\n    clientWidth: _propTypes[\"default\"].number.isRequired\n  }),\n\n  /**\n   * Direction of the list or the scroller.\n   *\n   * `'both'` could be only used for[Scroller]{@link ui/Scroller.Scroller}.\n   *\n   * Valid values are:\n   * * `'both'`,\n   * * `'horizontal'`, and\n   * * `'vertical'`.\n   *\n   * @type {String}\n   * @private\n   */\n  direction: _propTypes[\"default\"].oneOf(['both', 'horizontal', 'vertical']),\n\n  /**\n   * Specifies how to show horizontal scrollbar.\n   *\n   * Valid values are:\n   * * `'auto'`,\n   * * `'visible'`, and\n   * * `'hidden'`.\n   *\n   * @type {String}\n   * @default 'auto'\n   * @public\n   */\n  horizontalScrollbar: _propTypes[\"default\"].oneOf(['auto', 'visible', 'hidden']),\n\n  /**\n   * Prevents scroll by dragging or flicking on the list or the scroller.\n   *\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  noScrollByDrag: _propTypes[\"default\"].bool,\n\n  /**\n   * Called when flicking with a mouse or a touch screen.\n   *\n   * @type {Function}\n   * @private\n   */\n  onFlick: _propTypes[\"default\"].func,\n\n  /**\n   * Called when trigerring a mousedown event.\n   *\n   * @type {Function}\n   * @private\n   */\n  onMouseDown: _propTypes[\"default\"].func,\n\n  /**\n   * Called when scrolling.\n   *\n   * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\n   * It is not recommended to set this prop since it can cause performance degradation.\n   * Use `onScrollStart` or `onScrollStop` instead.\n   *\n   * @type {Function}\n   * @param {Object} event\n   * @param {Number} event.scrollLeft Scroll left value.\n   * @param {Number} event.scrollTop Scroll top value.\n   * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\n   * @public\n   */\n  onScroll: _propTypes[\"default\"].func,\n\n  /**\n   * Called when scroll starts.\n   *\n   * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\n   * You can get firstVisibleIndex and lastVisibleIndex from VirtualList with `moreInfo`.\n   *\n   * Example:\n   * ```\n   * onScrollStart = ({scrollLeft, scrollTop, moreInfo}) => {\n   *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\n   *     // do something with firstVisibleIndex and lastVisibleIndex\n   * }\n   *\n   * render = () => (\n   *     <VirtualList\n   *         ...\n   *         onScrollStart={this.onScrollStart}\n   *         ...\n   *     />\n   * )\n   * ```\n   *\n   * @type {Function}\n   * @param {Object} event\n   * @param {Number} event.scrollLeft Scroll left value.\n   * @param {Number} event.scrollTop Scroll top value.\n   * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\n   * @public\n   */\n  onScrollStart: _propTypes[\"default\"].func,\n\n  /**\n   * Called when scroll stops.\n   *\n   * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\n   * You can get firstVisibleIndex and lastVisibleIndex from VirtualList with `moreInfo`.\n   *\n   * Example:\n   * ```\n   * onScrollStop = ({scrollLeft, scrollTop, moreInfo}) => {\n   *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\n   *     // do something with firstVisibleIndex and lastVisibleIndex\n   * }\n   *\n   * render = () => (\n   *     <VirtualList\n   *         ...\n   *         onScrollStop={this.onScrollStop}\n   *         ...\n   *     />\n   * )\n   * ```\n   *\n   * @type {Function}\n   * @param {Object} event\n   * @param {Number} event.scrollLeft Scroll left value.\n   * @param {Number} event.scrollTop Scroll top value.\n   * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\n   * @public\n   */\n  onScrollStop: _propTypes[\"default\"].func,\n\n  /**\n   * Called when wheeling.\n   *\n   * @type {Function}\n   * @private\n   */\n  onWheel: _propTypes[\"default\"].func,\n\n  /**\n   * Specifies overscroll effects shows on which type of inputs.\n   *\n   * @type {Object}\n   * @default {drag: false, pageKey: false, wheel: false}\n   * @private\n   */\n  overscrollEffectOn: _propTypes[\"default\"].shape({\n    drag: _propTypes[\"default\"].bool,\n    pageKey: _propTypes[\"default\"].bool,\n    wheel: _propTypes[\"default\"].bool\n  }),\n\n  /**\n   * Called when removing additional event listeners in a themed component.\n   *\n   * @type {Function}\n   * @private\n   */\n  removeEventListeners: _propTypes[\"default\"].func,\n\n  /**\n   * Indicates the content's text direction is right-to-left.\n   *\n   * @type {Boolean}\n   * @private\n   */\n  rtl: _propTypes[\"default\"].bool,\n\n  /**\n   * Called to execute additional logic in a themed component after scrolling.\n   *\n   * @type {Function}\n   * @private\n   */\n  scrollStopOnScroll: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component when scrollTo is called.\n   *\n   * @type {Function}\n   * @private\n   */\n  scrollTo: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component when scroll starts.\n   *\n   * @type {Function}\n   * @private\n   */\n  start: _propTypes[\"default\"].func,\n\n  /**\n   * ScrollableNative CSS style.\n   *\n   * Should be defined because we manipulate style prop in render().\n   *\n   * @type {Object}\n   * @public\n   */\n  style: _propTypes[\"default\"].object,\n\n  /**\n   * Specifies how to show vertical scrollbar.\n   *\n   * Valid values are:\n   * * `'auto'`,\n   * * `'visible'`, and\n   * * `'hidden'`.\n   *\n   * @type {String}\n   * @default 'auto'\n   * @public\n   */\n  verticalScrollbar: _propTypes[\"default\"].oneOf(['auto', 'visible', 'hidden'])\n};\nScrollableBaseNative.defaultProps = {\n  cbScrollTo: nop,\n  horizontalScrollbar: 'auto',\n  noScrollByDrag: false,\n  onScroll: nop,\n  onScrollStart: nop,\n  onScrollStop: nop,\n  overscrollEffectOn: {\n    drag: false,\n    pageKey: false,\n    wheel: false\n  },\n  verticalScrollbar: 'auto'\n};\nScrollableBaseNative.contextType = _Resizable.ResizeContext;\n\nvar ScrollableNative =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ScrollableNative, _Component2);\n\n  function ScrollableNative() {\n    _classCallCheck(this, ScrollableNative);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScrollableNative).apply(this, arguments));\n  }\n\n  _createClass(ScrollableNative, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          childRenderer = _this$props5.childRenderer,\n          rest = _objectWithoutProperties(_this$props5, [\"childRenderer\"]);\n\n      return _react[\"default\"].createElement(ScrollableBaseNative, Object.assign({}, rest, {\n        containerRenderer: function containerRenderer(_ref2) {\n          var childComponentProps = _ref2.childComponentProps,\n              ChildWrapper = _ref2.childWrapper,\n              childWrapperProps = _ref2.childWrapperProps,\n              className = _ref2.className,\n              componentCss = _ref2.componentCss,\n              containerRef = _ref2.containerRef,\n              horizontalScrollbarProps = _ref2.horizontalScrollbarProps,\n              initChildRef = _ref2.initChildRef,\n              isHorizontalScrollbarVisible = _ref2.isHorizontalScrollbarVisible,\n              isVerticalScrollbarVisible = _ref2.isVerticalScrollbarVisible,\n              rtl = _ref2.rtl,\n              scrollTo = _ref2.scrollTo,\n              style = _ref2.style,\n              verticalScrollbarProps = _ref2.verticalScrollbarProps;\n          return _react[\"default\"].createElement(\"div\", {\n            className: className,\n            ref: containerRef,\n            style: style\n          }, _react[\"default\"].createElement(\"div\", {\n            className: componentCss.container\n          }, _react[\"default\"].createElement(ChildWrapper, childWrapperProps, childRenderer(_objectSpread({}, childComponentProps, {\n            cbScrollTo: scrollTo,\n            className: componentCss.scrollableFill,\n            initChildRef: initChildRef,\n            rtl: rtl\n          }))), isVerticalScrollbarVisible ? _react[\"default\"].createElement(_Scrollbar[\"default\"], Object.assign({}, verticalScrollbarProps, {\n            disabled: !isVerticalScrollbarVisible\n          })) : null), isHorizontalScrollbarVisible ? _react[\"default\"].createElement(_Scrollbar[\"default\"], Object.assign({}, horizontalScrollbarProps, {\n            corner: isVerticalScrollbarVisible,\n            disabled: !isHorizontalScrollbarVisible\n          })) : null);\n        }\n      }));\n    }\n  }]);\n\n  return ScrollableNative;\n}(_react.Component);\n\nexports.ScrollableNative = ScrollableNative;\nScrollableNative.displayName = 'ui:ScrollableNative';\nScrollableNative.propTypes =\n/** @lends ui/ScrollableNative.ScrollableNative.prototype */\n{\n  /**\n   * Render function.\n   *\n   * @type {Function}\n   * @private\n   */\n  childRenderer: _propTypes[\"default\"].func\n};\nvar _default = ScrollableNative;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/cdi/SteApp/node_modules/@enact/ui/Scrollable/ScrollableNative.js"],"names":["Object","defineProperty","exports","value","ScrollableNative","ScrollableBaseNative","constants","_clamp","_interopRequireDefault","require","_classnames","_handle","_keymap","_util","_platform","_propTypes","_react","_interopRequireWildcard","_Registry","_Resizable","_resolution","_Touchable","_ScrollAnimator","_Scrollbar","_ScrollableModule","obj","__esModule","newObj","key","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_typeof","Symbol","iterator","constructor","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","propertyIsEnumerable","sourceKeys","keys","_objectSpread","arguments","ownKeys","concat","filter","sym","enumerable","forEach","_defineProperty","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","_setPrototypeOf","p","epsilon","isPageDown","is","isPageUp","nop","overscrollTypeNone","overscrollTypeHold","overscrollTypeOnce","overscrollTypeDone","overscrollVelocityFactor","scrollStopWaiting","scrollWheelPageMultiplierForMaxPixel","TouchableDiv","_Component","_this","pixelPerLine","scrollWheelMultiplierForDeltaPixel","deferScrollTo","isScrollAnimationTargetAccumulated","isUpdatedScrollThumb","lastInputType","overscrollEnabled","overscrollStatus","horizontal","before","type","ratio","after","vertical","bounds","clientWidth","clientHeight","scrollWidth","scrollHeight","maxTop","maxLeft","wheelDirection","isDragging","isTouching","scrolling","scrollLeft","scrollTop","scrollToInfo","childRefCurrent","animator","getRtlX","x","rtl","onMouseDown","ev","stop","forward","onTouchStart","onDragStart","dragStartX","dragStartY","y","onDrag","_this$props","direction","overscrollEffectOn","targetX","targetY","start","animate","overscrollEffect","drag","checkAndApplyOverscrollEffectOnDrag","onDragEnd","flickTarget","_this$flickTarget","clearAllOverscrollEffects","onFlick","simulate","velocityX","velocityY","onWheel","preventDefault","overscrollEffectRequired","wheel","getScrollBounds","canScrollHorizontally","canScrollVertically","eventDeltaMode","deltaMode","eventDelta","wheelDeltaY","deltaY","delta","needToHideThumb","showThumb","_assertThisInitialize","horizontalScrollbarRef","verticalScrollbarRef","current","getContainerRef","contains","calculateDistanceByWheel","checkAndApplyOverscrollEffect","applyOverscrollEffect","Math","sign","scrollToAccumulatedTarget","startHidingThumb","onScroll","_ev$target","scrollStartOnScroll","platform","ios","safari","setScrollLeft","setScrollTop","didScroll","forwardScrollEvent","scrollStopJob","accumulatedTargetX","accumulatedTargetY","getEdgeFromPosition","position","maxPosition","setOverscrollStatus","orientation","edge","status","getOverscrollStatus","calculateOverscrollRatio","isVertical","baseSize","maxPos","overDistance","min","undefined","curPos","clearOverscrollEffect","applyOverscrollEffectOnDrag","targetPosition","oppositeEdge","checkAndApplyOverscrollEffectOnScroll","_this$getOverscrollSt","checkAndApplyOverscrollEffectOnStart","scrollStopOnScroll","getReachedEdgeInfo","Job","reachedEdgeInfo","bottom","left","right","top","_edge","getPositionForScrollTo","opt","itemPos","align","includes","index","getItemPosition","stickTo","node","nodeType","getNodePosition","scrollTo","_this$getPositionForS","isNaN","state","isHorizontalScrollbarVisible","isVerticalScrollbarVisible","updateScrollbars","_this$props2","horizontalScrollbar","verticalScrollbar","_this$state","curHorizontalScrollbarVisible","curVerticalScrollbarVisible","isVisibilityChanged","setState","updateScrollThumbSize","_this$props3","updatedBounds","update","initChildRef","ref","remeasure","containerRef","createRef","horizontalScrollbarProps","clientSize","verticalScrollbarProps","animationInfo","resizeRegistry","handleResize","bind","cbScrollTo","componentDidMount","parent","context","addEventListeners","componentDidUpdate","prevProps","prevState","_this$state2","hasDataSizeChanged","syncClientSize","notify","componentWillUnmount","removeEventListeners","action","enqueueForceUpdate","calculateMetrics","forceUpdate","maxPixel","scale","moreInfo","getMoreInfo","updateThumb","_ref","_ref$animate","_ref$overscrollEffect","childContainerRef","updatedAnimationInfo","abs","scrollToPosition","style","scrollBehavior","scrollbarRef","addEventListener","capture","passive","removeEventListener","render","_this$props4","className","containerRenderer","noScrollByDrag","rest","_this$state3","scrollableClasses","scrollable","contentClasses","content","contentNative","childWrapper","childWrapperProps","onScrollStart","onScrollStop","createElement","ResizeContext","Provider","register","childComponentProps","componentCss","Component","displayName","propTypes","func","isRequired","shape","number","oneOf","bool","pageKey","object","defaultProps","contextType","_Component2","apply","_this$props5","childRenderer","assign","_ref2","ChildWrapper","container","scrollableFill","disabled","corner","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollableNative = exports.ScrollableBaseNative = exports.constants = exports[\"default\"] = void 0;\n\nvar _clamp = _interopRequireDefault(require(\"ramda/src/clamp\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _handle = require(\"@enact/core/handle\");\n\nvar _keymap = require(\"@enact/core/keymap\");\n\nvar _util = require(\"@enact/core/util\");\n\nvar _platform = require(\"@enact/core/platform\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Registry = _interopRequireDefault(require(\"@enact/core/internal/Registry\"));\n\nvar _Resizable = require(\"../Resizable\");\n\nvar _resolution = _interopRequireDefault(require(\"../resolution\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ScrollAnimator = _interopRequireDefault(require(\"./ScrollAnimator\"));\n\nvar _Scrollbar = _interopRequireDefault(require(\"./Scrollbar\"));\n\nvar _ScrollableModule = _interopRequireDefault(require(\"./Scrollable.module.css\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar constants = {\n  epsilon: 1,\n  isPageDown: (0, _keymap.is)('pageDown'),\n  isPageUp: (0, _keymap.is)('pageUp'),\n  nop: function nop() {},\n  overscrollTypeNone: 0,\n  overscrollTypeHold: 1,\n  overscrollTypeOnce: 2,\n  overscrollTypeDone: 9,\n  overscrollVelocityFactor: 300,\n  scrollStopWaiting: 200,\n  scrollWheelPageMultiplierForMaxPixel: 0.2 // The ratio of the maximum distance scrolled by wheel to the size of the viewport.\n\n},\n    epsilon = constants.epsilon,\n    nop = constants.nop,\n    overscrollTypeDone = constants.overscrollTypeDone,\n    overscrollTypeHold = constants.overscrollTypeHold,\n    overscrollTypeNone = constants.overscrollTypeNone,\n    overscrollTypeOnce = constants.overscrollTypeOnce,\n    overscrollVelocityFactor = constants.overscrollVelocityFactor,\n    scrollStopWaiting = constants.scrollStopWaiting,\n    scrollWheelPageMultiplierForMaxPixel = constants.scrollWheelPageMultiplierForMaxPixel;\nexports.constants = constants;\nvar TouchableDiv = (0, _Touchable[\"default\"])('div');\n/**\n * An unstyled native component that passes scrollable behavior information as its render prop's arguments.\n *\n * @class ScrollableBaseNative\n * @memberof ui/ScrollableNative\n * @ui\n * @private\n */\n\nvar ScrollableBaseNative =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ScrollableBaseNative, _Component);\n\n  function ScrollableBaseNative(props) {\n    var _this;\n\n    _classCallCheck(this, ScrollableBaseNative);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ScrollableBaseNative).call(this, props));\n    _this.pixelPerLine = 39;\n    _this.scrollWheelMultiplierForDeltaPixel = 1.5;\n    _this.deferScrollTo = true;\n    _this.isScrollAnimationTargetAccumulated = false;\n    _this.isUpdatedScrollThumb = false;\n    _this.lastInputType = null;\n    _this.overscrollEnabled = false;\n    _this.overscrollStatus = {\n      horizontal: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      },\n      vertical: {\n        before: {\n          type: overscrollTypeNone,\n          ratio: 0\n        },\n        after: {\n          type: overscrollTypeNone,\n          ratio: 0\n        }\n      } // bounds info\n\n    };\n    _this.bounds = {\n      clientWidth: 0,\n      clientHeight: 0,\n      scrollWidth: 0,\n      scrollHeight: 0,\n      maxTop: 0,\n      maxLeft: 0 // wheel/drag/flick info\n\n    };\n    _this.wheelDirection = 0;\n    _this.isDragging = false;\n    _this.isTouching = false;\n    _this.scrolling = false;\n    _this.scrollLeft = 0;\n    _this.scrollTop = 0;\n    _this.scrollToInfo = null;\n    _this.childRefCurrent = null;\n    _this.animator = new _ScrollAnimator[\"default\"]();\n\n    _this.getRtlX = function (x) {\n      return _this.props.rtl ? -x : x;\n    };\n\n    _this.onMouseDown = function (ev) {\n      _this.isScrollAnimationTargetAccumulated = false;\n\n      _this.stop();\n\n      (0, _handle.forward)('onMouseDown', ev, _this.props);\n    };\n\n    _this.onTouchStart = function () {\n      _this.isTouching = true;\n    };\n\n    _this.onDragStart = function (ev) {\n      if (!_this.isTouching) {\n        _this.stop();\n\n        _this.isDragging = true;\n      } // these values are used also for touch inputs\n\n\n      _this.dragStartX = _this.scrollLeft + _this.getRtlX(ev.x);\n      _this.dragStartY = _this.scrollTop + ev.y;\n    };\n\n    _this.onDrag = function (ev) {\n      var _this$props = _this.props,\n          direction = _this$props.direction,\n          overscrollEffectOn = _this$props.overscrollEffectOn,\n          targetX = direction === 'vertical' ? 0 : _this.dragStartX - _this.getRtlX(ev.x),\n          targetY = direction === 'horizontal' ? 0 : _this.dragStartY - ev.y; // 'vertical' or 'both'\n\n      _this.lastInputType = 'drag';\n\n      if (!_this.isTouching) {\n        _this.start({\n          targetX: targetX,\n          targetY: targetY,\n          animate: false,\n          overscrollEffect: overscrollEffectOn.drag\n        });\n      } else if (_this.overscrollEnabled && overscrollEffectOn.drag) {\n        _this.checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeHold);\n      }\n    };\n\n    _this.onDragEnd = function () {\n      _this.isDragging = false;\n      _this.lastInputType = 'drag';\n\n      if (_this.flickTarget) {\n        var overscrollEffectOn = _this.props.overscrollEffectOn,\n            _this$flickTarget = _this.flickTarget,\n            targetX = _this$flickTarget.targetX,\n            targetY = _this$flickTarget.targetY;\n\n        if (!_this.isTouching) {\n          _this.isScrollAnimationTargetAccumulated = false;\n\n          _this.start({\n            targetX: targetX,\n            targetY: targetY,\n            overscrollEffect: overscrollEffectOn.drag\n          });\n        } else if (_this.overscrollEnabled && overscrollEffectOn.drag) {\n          _this.checkAndApplyOverscrollEffectOnDrag(targetX, targetY, overscrollTypeOnce);\n        }\n      } else if (!_this.isTouching) {\n        _this.stop();\n      }\n\n      if (_this.overscrollEnabled) {\n        // not check this.props.overscrollEffectOn.drag for safety\n        _this.clearAllOverscrollEffects();\n      }\n\n      _this.isTouching = false;\n      _this.flickTarget = null;\n    };\n\n    _this.onFlick = function (ev) {\n      var direction = _this.props.direction;\n\n      if (!_this.isTouching) {\n        _this.flickTarget = _this.animator.simulate(_this.scrollLeft, _this.scrollTop, direction !== 'vertical' ? _this.getRtlX(-ev.velocityX) : 0, direction !== 'horizontal' ? -ev.velocityY : 0);\n      } else if (_this.overscrollEnabled && _this.props.overscrollEffectOn.drag) {\n        _this.flickTarget = {\n          targetX: _this.scrollLeft + _this.getRtlX(-ev.velocityX) * overscrollVelocityFactor,\n          // 'horizontal' or 'both'\n          targetY: _this.scrollTop + -ev.velocityY * overscrollVelocityFactor // 'vertical' or 'both'\n\n        };\n      }\n\n      if (_this.props.onFlick) {\n        (0, _handle.forward)('onFlick', ev, _this.props);\n      }\n    };\n\n    _this.onWheel = function (ev) {\n      if (_this.isDragging) {\n        /* prevent native scrolling feature during dragging */\n        ev.preventDefault();\n      } else {\n        var overscrollEffectOn = _this.props.overscrollEffectOn,\n            overscrollEffectRequired = _this.overscrollEnabled && overscrollEffectOn.wheel,\n            bounds = _this.getScrollBounds(),\n            canScrollHorizontally = _this.canScrollHorizontally(bounds),\n            canScrollVertically = _this.canScrollVertically(bounds),\n            eventDeltaMode = ev.deltaMode,\n            eventDelta = -ev.wheelDeltaY || ev.deltaY;\n\n        var delta = 0,\n            needToHideThumb = false;\n        _this.lastInputType = 'wheel';\n\n        if (_this.props.onWheel) {\n          (0, _handle.forward)('onWheel', ev, _this.props);\n          return;\n        }\n\n        _this.showThumb(bounds); // FIXME This routine is a temporary support for horizontal wheel scroll.\n        // FIXME If web engine supports horizontal wheel, this routine should be refined or removed.\n\n\n        if (canScrollVertically) {\n          // This routine handles wheel events on scrollbars for vertical scroll.\n          if (eventDelta < 0 && _this.scrollTop > 0 || eventDelta > 0 && _this.scrollTop < bounds.maxTop) {\n            var _assertThisInitialize = _assertThisInitialized(_this),\n                horizontalScrollbarRef = _assertThisInitialize.horizontalScrollbarRef,\n                verticalScrollbarRef = _assertThisInitialize.verticalScrollbarRef; // Not to check if ev.target is a descendant of a wrapped component which may have a lot of nodes in it.\n\n\n            if (horizontalScrollbarRef.current && horizontalScrollbarRef.current.getContainerRef().current.contains(ev.target) || verticalScrollbarRef.current && verticalScrollbarRef.current.getContainerRef().current.contains(ev.target)) {\n              delta = _this.calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientHeight * scrollWheelPageMultiplierForMaxPixel);\n              needToHideThumb = !delta;\n            } else if (overscrollEffectRequired) {\n              _this.checkAndApplyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce);\n            }\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && _this.scrollTop <= 0 || eventDelta > 0 && _this.scrollTop >= bounds.maxTop)) {\n              _this.applyOverscrollEffect('vertical', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce, 1);\n            }\n\n            needToHideThumb = true;\n          }\n        } else if (canScrollHorizontally) {\n          // this routine handles wheel events on any children for horizontal scroll.\n          if (eventDelta < 0 && _this.scrollLeft > 0 || eventDelta > 0 && _this.scrollLeft < bounds.maxLeft) {\n            delta = _this.calculateDistanceByWheel(eventDeltaMode, eventDelta, bounds.clientWidth * scrollWheelPageMultiplierForMaxPixel);\n            needToHideThumb = !delta;\n          } else {\n            if (overscrollEffectRequired && (eventDelta < 0 && _this.scrollLeft <= 0 || eventDelta > 0 && _this.scrollLeft >= bounds.maxLeft)) {\n              _this.applyOverscrollEffect('horizontal', eventDelta > 0 ? 'after' : 'before', overscrollTypeOnce, 1);\n            }\n\n            needToHideThumb = true;\n          }\n        }\n\n        if (delta !== 0) {\n          /* prevent native scrolling feature for vertical direction */\n          ev.preventDefault();\n          var direction = Math.sign(delta); // Not to accumulate scroll position if wheel direction is different from hold direction\n\n          if (direction !== _this.wheelDirection) {\n            _this.isScrollAnimationTargetAccumulated = false;\n            _this.wheelDirection = direction;\n          }\n\n          _this.scrollToAccumulatedTarget(delta, canScrollVertically, overscrollEffectOn.wheel);\n        }\n\n        if (needToHideThumb) {\n          _this.startHidingThumb();\n        }\n      }\n    };\n\n    _this.onScroll = function (ev) {\n      var _ev$target = ev.target,\n          scrollLeft = _ev$target.scrollLeft,\n          scrollTop = _ev$target.scrollTop;\n\n      var bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds);\n\n      if (!_this.scrolling) {\n        _this.scrollStartOnScroll();\n      }\n\n      if (_this.props.rtl && canScrollHorizontally) {\n        scrollLeft = _platform.platform.ios || _platform.platform.safari ? -scrollLeft : bounds.maxLeft - scrollLeft;\n      }\n\n      if (scrollLeft !== _this.scrollLeft) {\n        _this.setScrollLeft(scrollLeft);\n      }\n\n      if (scrollTop !== _this.scrollTop) {\n        _this.setScrollTop(scrollTop);\n      }\n\n      if (_this.childRefCurrent.didScroll) {\n        _this.childRefCurrent.didScroll(_this.scrollLeft, _this.scrollTop);\n      }\n\n      _this.forwardScrollEvent('onScroll');\n\n      _this.scrollStopJob.start();\n    };\n\n    _this.scrollToAccumulatedTarget = function (delta, vertical, overscrollEffect) {\n      if (!_this.isScrollAnimationTargetAccumulated) {\n        _this.accumulatedTargetX = _this.scrollLeft;\n        _this.accumulatedTargetY = _this.scrollTop;\n        _this.isScrollAnimationTargetAccumulated = true;\n      }\n\n      if (vertical) {\n        _this.accumulatedTargetY += delta;\n      } else {\n        _this.accumulatedTargetX += delta;\n      }\n\n      _this.start({\n        targetX: _this.accumulatedTargetX,\n        targetY: _this.accumulatedTargetY,\n        overscrollEffect: overscrollEffect\n      });\n    };\n\n    _this.getEdgeFromPosition = function (position, maxPosition) {\n      if (position <= 0) {\n        return 'before';\n        /* If a scroll size or a client size is not integer,\n        \t browsers's max scroll position could be smaller than maxPos by 1 pixel.*/\n      } else if (position >= maxPosition - 1) {\n        return 'after';\n      } else {\n        return null;\n      }\n    };\n\n    _this.setOverscrollStatus = function (orientation, edge, type, ratio) {\n      var status = _this.overscrollStatus[orientation][edge];\n      status.type = type;\n      status.ratio = ratio;\n    };\n\n    _this.getOverscrollStatus = function (orientation, edge) {\n      return _this.overscrollStatus[orientation][edge];\n    };\n\n    _this.calculateOverscrollRatio = function (orientation, position) {\n      var bounds = _this.getScrollBounds(),\n          isVertical = orientation === 'vertical',\n          baseSize = isVertical ? bounds.clientHeight : bounds.clientWidth,\n          maxPos = bounds[isVertical ? 'maxTop' : 'maxLeft'];\n\n      var overDistance = 0;\n\n      if (position < 0) {\n        overDistance = -position;\n      } else if (position > maxPos) {\n        overDistance = position - maxPos;\n      } else {\n        return 0;\n      }\n\n      return Math.min(1, 2 * overDistance / baseSize);\n    };\n\n    _this.applyOverscrollEffect = function (orientation, edge, type, ratio) {\n      _this.props.applyOverscrollEffect(orientation, edge, type, ratio);\n\n      _this.setOverscrollStatus(orientation, edge, type === overscrollTypeOnce ? overscrollTypeDone : type, ratio);\n    };\n\n    _this.checkAndApplyOverscrollEffect = function (orientation, edge, type) {\n      var ratio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n      var isVertical = orientation === 'vertical',\n          curPos = isVertical ? _this.scrollTop : _this.scrollLeft,\n          maxPos = _this.getScrollBounds()[isVertical ? 'maxTop' : 'maxLeft'];\n      /* If a scroll size or a client size is not integer,\n      \t browsers's max scroll position could be smaller than maxPos by 1 pixel.*/\n\n\n      if (edge === 'before' && curPos <= 0 || edge === 'after' && curPos >= maxPos - 1) {\n        // Already on the edge\n        _this.applyOverscrollEffect(orientation, edge, type, ratio);\n      } else {\n        _this.setOverscrollStatus(orientation, edge, type, ratio);\n      }\n    };\n\n    _this.clearOverscrollEffect = function (orientation, edge) {\n      if (_this.getOverscrollStatus(orientation, edge).type !== overscrollTypeNone) {\n        if (_this.props.clearOverscrollEffect) {\n          _this.props.clearOverscrollEffect(orientation, edge);\n        } else {\n          _this.applyOverscrollEffect(orientation, edge, overscrollTypeNone, 0);\n        }\n      }\n    };\n\n    _this.clearAllOverscrollEffects = function () {\n      ['horizontal', 'vertical'].forEach(function (orientation) {\n        ['before', 'after'].forEach(function (edge) {\n          _this.clearOverscrollEffect(orientation, edge);\n        });\n      });\n    };\n\n    _this.applyOverscrollEffectOnDrag = function (orientation, edge, targetPosition, type) {\n      if (edge) {\n        var oppositeEdge = edge === 'before' ? 'after' : 'before',\n            ratio = _this.calculateOverscrollRatio(orientation, targetPosition);\n\n        _this.applyOverscrollEffect(orientation, edge, type, ratio);\n\n        _this.clearOverscrollEffect(orientation, oppositeEdge);\n      } else {\n        _this.clearOverscrollEffect(orientation, 'before');\n\n        _this.clearOverscrollEffect(orientation, 'after');\n      }\n    };\n\n    _this.checkAndApplyOverscrollEffectOnDrag = function (targetX, targetY, type) {\n      var bounds = _this.getScrollBounds();\n\n      if (_this.canScrollHorizontally(bounds)) {\n        _this.applyOverscrollEffectOnDrag('horizontal', _this.getEdgeFromPosition(targetX, bounds.maxLeft), targetX, type);\n      }\n\n      if (_this.canScrollVertically(bounds)) {\n        _this.applyOverscrollEffectOnDrag('vertical', _this.getEdgeFromPosition(targetY, bounds.maxTop), targetY, type);\n      }\n    };\n\n    _this.checkAndApplyOverscrollEffectOnScroll = function (orientation) {\n      ['before', 'after'].forEach(function (edge) {\n        var _this$getOverscrollSt = _this.getOverscrollStatus(orientation, edge),\n            ratio = _this$getOverscrollSt.ratio,\n            type = _this$getOverscrollSt.type;\n\n        if (type === overscrollTypeOnce) {\n          _this.checkAndApplyOverscrollEffect(orientation, edge, type, ratio);\n        }\n      });\n    };\n\n    _this.checkAndApplyOverscrollEffectOnStart = function (orientation, edge, targetPosition) {\n      if (_this.isDragging) {\n        _this.applyOverscrollEffectOnDrag(orientation, edge, targetPosition, overscrollTypeHold);\n      } else if (edge) {\n        _this.checkAndApplyOverscrollEffect(orientation, edge, overscrollTypeOnce);\n      }\n    };\n\n    _this.scrollStartOnScroll = function () {\n      _this.scrolling = true;\n\n      _this.showThumb(_this.getScrollBounds());\n\n      _this.forwardScrollEvent('onScrollStart');\n    };\n\n    _this.scrollStopOnScroll = function () {\n      if (_this.props.scrollStopOnScroll) {\n        _this.props.scrollStopOnScroll();\n      }\n\n      if (_this.overscrollEnabled && !_this.isDragging) {\n        // not check this.props.overscrollEffectOn for safty\n        _this.clearAllOverscrollEffects();\n      }\n\n      _this.lastInputType = null;\n      _this.isScrollAnimationTargetAccumulated = false;\n      _this.scrolling = false;\n\n      _this.forwardScrollEvent('onScrollStop', _this.getReachedEdgeInfo());\n\n      _this.startHidingThumb();\n    };\n\n    _this.scrollStopJob = new _util.Job(_this.scrollStopOnScroll, scrollStopWaiting);\n\n    _this.getReachedEdgeInfo = function () {\n      var bounds = _this.getScrollBounds(),\n          reachedEdgeInfo = {\n        bottom: false,\n        left: false,\n        right: false,\n        top: false\n      };\n\n      if (_this.canScrollHorizontally(bounds)) {\n        var rtl = _this.props.rtl,\n            edge = _this.getEdgeFromPosition(_this.scrollLeft, bounds.maxLeft);\n\n        if (edge) {\n          // if edge is null, no need to check which edge is reached.\n          if (edge === 'before' && !rtl || edge === 'after' && rtl) {\n            reachedEdgeInfo.left = true;\n          } else {\n            reachedEdgeInfo.right = true;\n          }\n        }\n      }\n\n      if (_this.canScrollVertically(bounds)) {\n        var _edge = _this.getEdgeFromPosition(_this.scrollTop, bounds.maxTop);\n\n        if (_edge === 'before') {\n          reachedEdgeInfo.top = true;\n        } else if (_edge === 'after') {\n          reachedEdgeInfo.bottom = true;\n        }\n      }\n\n      return reachedEdgeInfo;\n    };\n\n    _this.getPositionForScrollTo = function (opt) {\n      var bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds),\n          canScrollVertically = _this.canScrollVertically(bounds);\n\n      var itemPos,\n          left = null,\n          top = null;\n\n      if (opt instanceof Object) {\n        if (opt.position instanceof Object) {\n          if (canScrollHorizontally) {\n            // We need '!=' to check if opt.potision.x is null or undefined\n            left = opt.position.x != null ? opt.position.x : _this.scrollLeft;\n          } else {\n            left = 0;\n          }\n\n          if (canScrollVertically) {\n            // We need '!=' to check if opt.potision.y is null or undefined\n            top = opt.position.y != null ? opt.position.y : _this.scrollTop;\n          } else {\n            top = 0;\n          }\n        } else if (typeof opt.align === 'string') {\n          if (canScrollHorizontally) {\n            if (opt.align.includes('left')) {\n              left = 0;\n            } else if (opt.align.includes('right')) {\n              left = bounds.maxLeft;\n            }\n          }\n\n          if (canScrollVertically) {\n            if (opt.align.includes('top')) {\n              top = 0;\n            } else if (opt.align.includes('bottom')) {\n              top = bounds.maxTop;\n            }\n          }\n        } else {\n          if (typeof opt.index === 'number' && typeof _this.childRefCurrent.getItemPosition === 'function') {\n            itemPos = _this.childRefCurrent.getItemPosition(opt.index, opt.stickTo);\n          } else if (opt.node instanceof Object) {\n            if (opt.node.nodeType === 1 && typeof _this.childRefCurrent.getNodePosition === 'function') {\n              itemPos = _this.childRefCurrent.getNodePosition(opt.node);\n            }\n          }\n\n          if (itemPos) {\n            if (canScrollHorizontally) {\n              left = itemPos.left;\n            }\n\n            if (canScrollVertically) {\n              top = itemPos.top;\n            }\n          }\n        }\n      }\n\n      return {\n        left: left,\n        top: top\n      };\n    };\n\n    _this.scrollTo = function (opt) {\n      if (!_this.deferScrollTo) {\n        var _this$getPositionForS = _this.getPositionForScrollTo(opt),\n            left = _this$getPositionForS.left,\n            top = _this$getPositionForS.top;\n\n        if (_this.props.scrollTo) {\n          _this.props.scrollTo(opt);\n        }\n\n        _this.scrollToInfo = null;\n\n        _this.start({\n          targetX: left !== null ? left : _this.scrollLeft,\n          targetY: top !== null ? top : _this.scrollTop,\n          animate: opt.animate\n        });\n      } else {\n        _this.scrollToInfo = opt;\n      }\n    };\n\n    _this.canScrollHorizontally = function (bounds) {\n      var direction = _this.props.direction;\n      return (direction === 'horizontal' || direction === 'both') && bounds.scrollWidth > bounds.clientWidth && !isNaN(bounds.scrollWidth);\n    };\n\n    _this.canScrollVertically = function (bounds) {\n      var direction = _this.props.direction;\n      return (direction === 'vertical' || direction === 'both') && bounds.scrollHeight > bounds.clientHeight && !isNaN(bounds.scrollHeight);\n    };\n\n    _this.startHidingThumb = function () {\n      if (_this.state.isHorizontalScrollbarVisible && _this.horizontalScrollbarRef.current) {\n        _this.horizontalScrollbarRef.current.startHidingThumb();\n      }\n\n      if (_this.state.isVerticalScrollbarVisible && _this.verticalScrollbarRef.current) {\n        _this.verticalScrollbarRef.current.startHidingThumb();\n      }\n    };\n\n    _this.updateScrollbars = function () {\n      var _this$props2 = _this.props,\n          horizontalScrollbar = _this$props2.horizontalScrollbar,\n          verticalScrollbar = _this$props2.verticalScrollbar,\n          _this$state = _this.state,\n          isHorizontalScrollbarVisible = _this$state.isHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible = _this$state.isVerticalScrollbarVisible,\n          bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds),\n          canScrollVertically = _this.canScrollVertically(bounds),\n          curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollHorizontally : horizontalScrollbar === 'visible',\n          curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollVertically : verticalScrollbar === 'visible'; // determine if we should hide or show any scrollbars\n\n\n      var isVisibilityChanged = isHorizontalScrollbarVisible !== curHorizontalScrollbarVisible || isVerticalScrollbarVisible !== curVerticalScrollbarVisible;\n\n      if (isVisibilityChanged) {\n        // one or both scrollbars have changed visibility\n        _this.setState({\n          isHorizontalScrollbarVisible: curHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible: curVerticalScrollbarVisible\n        });\n      } else {\n        _this.deferScrollTo = false;\n        _this.isUpdatedScrollThumb = _this.updateScrollThumbSize();\n      }\n    };\n\n    _this.updateScrollThumbSize = function () {\n      var _this$props3 = _this.props,\n          horizontalScrollbar = _this$props3.horizontalScrollbar,\n          verticalScrollbar = _this$props3.verticalScrollbar,\n          bounds = _this.getScrollBounds(),\n          canScrollHorizontally = _this.canScrollHorizontally(bounds),\n          canScrollVertically = _this.canScrollVertically(bounds),\n          curHorizontalScrollbarVisible = horizontalScrollbar === 'auto' ? canScrollHorizontally : horizontalScrollbar === 'visible',\n          curVerticalScrollbarVisible = verticalScrollbar === 'auto' ? canScrollVertically : verticalScrollbar === 'visible';\n\n      if (curHorizontalScrollbarVisible || curVerticalScrollbarVisible) {\n        // no visibility change but need to notify whichever scrollbars are visible of the\n        // updated bounds and scroll position\n        var updatedBounds = _objectSpread({}, bounds, {\n          scrollLeft: _this.scrollLeft,\n          scrollTop: _this.scrollTop\n        });\n\n        if (curHorizontalScrollbarVisible && _this.horizontalScrollbarRef.current) {\n          _this.horizontalScrollbarRef.current.update(updatedBounds);\n        }\n\n        if (curVerticalScrollbarVisible && _this.verticalScrollbarRef.current) {\n          _this.verticalScrollbarRef.current.update(updatedBounds);\n        }\n\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.initChildRef = function (ref) {\n      if (ref) {\n        _this.childRefCurrent = ref.current || ref;\n      }\n    };\n\n    _this.state = {\n      remeasure: false,\n      isHorizontalScrollbarVisible: props.horizontalScrollbar === 'visible',\n      isVerticalScrollbarVisible: props.verticalScrollbar === 'visible'\n    };\n    _this.containerRef = _react[\"default\"].createRef();\n    _this.horizontalScrollbarRef = _react[\"default\"].createRef();\n    _this.verticalScrollbarRef = _react[\"default\"].createRef();\n    _this.horizontalScrollbarProps = {\n      ref: _this.horizontalScrollbarRef,\n      vertical: false,\n      clientSize: props.clientSize\n    };\n    _this.verticalScrollbarProps = {\n      ref: _this.verticalScrollbarRef,\n      vertical: true,\n      clientSize: props.clientSize\n    };\n    _this.overscrollEnabled = !!props.applyOverscrollEffect; // Enable the early bail out of repeated scrolling to the same position\n\n    _this.animationInfo = null;\n    _this.resizeRegistry = _Registry[\"default\"].create(_this.handleResize.bind(_assertThisInitialized(_this)));\n    props.cbScrollTo(_this.scrollTo);\n    return _this;\n  }\n\n  _createClass(ScrollableBaseNative, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.resizeRegistry.parent = this.context;\n      this.addEventListeners();\n      this.updateScrollbars();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this$state2 = this.state,\n          isHorizontalScrollbarVisible = _this$state2.isHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible = _this$state2.isVerticalScrollbarVisible,\n          hasDataSizeChanged = this.childRefCurrent.hasDataSizeChanged; // Need to sync calculated client size if it is different from the real size\n\n      if (this.childRefCurrent.syncClientSize) {\n        // If we actually synced, we need to reset scroll position.\n        if (this.childRefCurrent.syncClientSize()) {\n          this.setScrollLeft(0);\n          this.setScrollTop(0);\n        }\n      }\n\n      this.addEventListeners();\n\n      if (hasDataSizeChanged === false && (isHorizontalScrollbarVisible && !prevState.isHorizontalScrollbarVisible || isVerticalScrollbarVisible && !prevState.isVerticalScrollbarVisible)) {\n        this.deferScrollTo = false;\n        this.isUpdatedScrollThumb = this.updateScrollThumbSize();\n      } else {\n        this.updateScrollbars();\n      }\n\n      if (this.scrollToInfo !== null) {\n        if (!this.deferScrollTo) {\n          this.scrollTo(this.scrollToInfo);\n        }\n      } // publish container resize changes\n\n\n      var horizontal = isHorizontalScrollbarVisible !== prevState.isHorizontalScrollbarVisible;\n      var vertical = isVerticalScrollbarVisible !== prevState.isVerticalScrollbarVisible;\n\n      if (horizontal || vertical) {\n        this.resizeRegistry.notify({});\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.resizeRegistry.parent = null; // Before call cancelAnimationFrame, you must send scrollStop Event.\n\n      if (this.scrolling) {\n        this.forwardScrollEvent('onScrollStop', this.getReachedEdgeInfo());\n      }\n\n      this.scrollStopJob.stop();\n      this.removeEventListeners();\n    }\n  }, {\n    key: \"handleResize\",\n    value: function handleResize(ev) {\n      if (ev.action === 'invalidateBounds') {\n        this.enqueueForceUpdate();\n      }\n    } // TODO: consider replacing forceUpdate() by storing bounds in state rather than a non-\n    // state member.\n\n  }, {\n    key: \"enqueueForceUpdate\",\n    value: function enqueueForceUpdate() {\n      this.childRefCurrent.calculateMetrics();\n      this.forceUpdate();\n    } // constants\n\n  }, {\n    key: \"calculateDistanceByWheel\",\n    value: function calculateDistanceByWheel(deltaMode, delta, maxPixel) {\n      if (deltaMode === 0) {\n        delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * this.scrollWheelMultiplierForDeltaPixel));\n      } else if (deltaMode === 1) {\n        // line; firefox\n        delta = (0, _clamp[\"default\"])(-maxPixel, maxPixel, _resolution[\"default\"].scale(delta * this.pixelPerLine * this.scrollWheelMultiplierForDeltaPixel));\n      } else if (deltaMode === 2) {\n        // page\n        delta = delta < 0 ? -maxPixel : maxPixel;\n      }\n\n      return delta;\n    }\n    /*\n     * wheel event handler;\n     * - for horizontal scroll, supports wheel action on any children nodes since web engine cannot support this\n     * - for vertical scroll, supports wheel action on scrollbars only\n     */\n\n  }, {\n    key: \"forwardScrollEvent\",\n    // call scroll callbacks\n    value: function forwardScrollEvent(type, reachedEdgeInfo) {\n      (0, _handle.forward)(type, {\n        scrollLeft: this.scrollLeft,\n        scrollTop: this.scrollTop,\n        moreInfo: this.getMoreInfo(),\n        reachedEdgeInfo: reachedEdgeInfo\n      }, this.props);\n    } // call scroll callbacks and update scrollbars for native scroll\n\n  }, {\n    key: \"setScrollLeft\",\n    // update scroll position\n    value: function setScrollLeft(value) {\n      var bounds = this.getScrollBounds();\n      this.scrollLeft = (0, _clamp[\"default\"])(0, bounds.maxLeft, value);\n\n      if (this.overscrollEnabled && this.props.overscrollEffectOn[this.lastInputType]) {\n        this.checkAndApplyOverscrollEffectOnScroll('horizontal');\n      }\n\n      if (this.state.isHorizontalScrollbarVisible) {\n        this.updateThumb(this.horizontalScrollbarRef, bounds);\n      }\n    }\n  }, {\n    key: \"setScrollTop\",\n    value: function setScrollTop(value) {\n      var bounds = this.getScrollBounds();\n      this.scrollTop = (0, _clamp[\"default\"])(0, bounds.maxTop, value);\n\n      if (this.overscrollEnabled && this.props.overscrollEffectOn[this.lastInputType]) {\n        this.checkAndApplyOverscrollEffectOnScroll('vertical');\n      }\n\n      if (this.state.isVerticalScrollbarVisible) {\n        this.updateThumb(this.verticalScrollbarRef, bounds);\n      }\n    }\n  }, {\n    key: \"start\",\n    // scroll start\n    value: function start(_ref) {\n      var targetX = _ref.targetX,\n          targetY = _ref.targetY,\n          _ref$animate = _ref.animate,\n          animate = _ref$animate === void 0 ? true : _ref$animate,\n          _ref$overscrollEffect = _ref.overscrollEffect,\n          overscrollEffect = _ref$overscrollEffect === void 0 ? false : _ref$overscrollEffect;\n      var scrollLeft = this.scrollLeft,\n          scrollTop = this.scrollTop,\n          childRefCurrent = this.childRefCurrent,\n          childContainerRef = childRefCurrent.containerRef,\n          bounds = this.getScrollBounds(),\n          maxLeft = bounds.maxLeft,\n          maxTop = bounds.maxTop;\n      var updatedAnimationInfo = {\n        targetX: targetX,\n        targetY: targetY\n      }; // bail early when scrolling to the same position\n\n      if (this.scrolling && this.animationInfo && this.animationInfo.targetX === targetX && this.animationInfo.targetY === targetY) {\n        return;\n      }\n\n      this.animationInfo = updatedAnimationInfo;\n\n      if (Math.abs(maxLeft - targetX) < epsilon) {\n        targetX = maxLeft;\n      }\n\n      if (Math.abs(maxTop - targetY) < epsilon) {\n        targetY = maxTop;\n      }\n\n      if (this.overscrollEnabled && overscrollEffect) {\n        if (scrollLeft !== targetX && this.canScrollHorizontally(bounds)) {\n          this.checkAndApplyOverscrollEffectOnStart('horizontal', this.getEdgeFromPosition(targetX, maxLeft), targetX);\n        }\n\n        if (scrollTop !== targetY && this.canScrollVertically(bounds)) {\n          this.checkAndApplyOverscrollEffectOnStart('vertical', this.getEdgeFromPosition(targetY, maxTop), targetY);\n        }\n      }\n\n      if (animate) {\n        childRefCurrent.scrollToPosition(targetX, targetY);\n      } else {\n        childContainerRef.current.style.scrollBehavior = null;\n        childRefCurrent.scrollToPosition(targetX, targetY);\n        childContainerRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      if (this.props.start) {\n        this.props.start(animate);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      var childRefCurrent = this.childRefCurrent,\n          childContainerRef = childRefCurrent.containerRef;\n      childContainerRef.current.style.scrollBehavior = null;\n      childRefCurrent.scrollToPosition(this.scrollLeft + 0.1, this.scrollTop + 0.1);\n      childContainerRef.current.style.scrollBehavior = 'smooth';\n    } // scrollTo API\n\n  }, {\n    key: \"showThumb\",\n    // scroll bar\n    value: function showThumb(bounds) {\n      if (this.state.isHorizontalScrollbarVisible && this.canScrollHorizontally(bounds) && this.horizontalScrollbarRef.current) {\n        this.horizontalScrollbarRef.current.showThumb();\n      }\n\n      if (this.state.isVerticalScrollbarVisible && this.canScrollVertically(bounds) && this.verticalScrollbarRef.current) {\n        this.verticalScrollbarRef.current.showThumb();\n      }\n    }\n  }, {\n    key: \"updateThumb\",\n    value: function updateThumb(scrollbarRef, bounds) {\n      scrollbarRef.current.update(_objectSpread({}, bounds, {\n        scrollLeft: this.scrollLeft,\n        scrollTop: this.scrollTop\n      }));\n    }\n  }, {\n    key: \"getScrollBounds\",\n    // ref\n    value: function getScrollBounds() {\n      if (typeof this.childRefCurrent.getScrollBounds === 'function') {\n        return this.childRefCurrent.getScrollBounds();\n      }\n    }\n  }, {\n    key: \"getMoreInfo\",\n    value: function getMoreInfo() {\n      if (typeof this.childRefCurrent.getMoreInfo === 'function') {\n        return this.childRefCurrent.getMoreInfo();\n      }\n    } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n  }, {\n    key: \"addEventListeners\",\n    value: function addEventListeners() {\n      var childRefCurrent = this.childRefCurrent,\n          containerRef = this.containerRef;\n\n      if (containerRef.current && containerRef.current.addEventListener) {\n        containerRef.current.addEventListener('wheel', this.onWheel);\n      }\n\n      if (childRefCurrent.containerRef.current) {\n        if (childRefCurrent.containerRef.current.addEventListener) {\n          childRefCurrent.containerRef.current.addEventListener('scroll', this.onScroll, {\n            capture: true,\n            passive: true\n          });\n          childRefCurrent.containerRef.current.addEventListener('mousedown', this.onMouseDown);\n        }\n\n        this.childRefCurrent.containerRef.current.style.scrollBehavior = 'smooth';\n      }\n\n      if (this.props.addEventListeners) {\n        this.props.addEventListeners(childRefCurrent.containerRef);\n      }\n    } // FIXME setting event handlers directly to work on the V8 snapshot.\n\n  }, {\n    key: \"removeEventListeners\",\n    value: function removeEventListeners() {\n      var childRefCurrent = this.childRefCurrent,\n          containerRef = this.containerRef;\n\n      if (containerRef.current && containerRef.current.removeEventListener) {\n        containerRef.current.removeEventListener('wheel', this.onWheel);\n      }\n\n      if (childRefCurrent.containerRef.current && childRefCurrent.containerRef.current.removeEventListener) {\n        childRefCurrent.containerRef.current.removeEventListener('scroll', this.onScroll, {\n          capture: true,\n          passive: true\n        });\n        childRefCurrent.containerRef.current.removeEventListener('mousedown', this.onMouseDown);\n      }\n\n      if (this.props.removeEventListeners) {\n        this.props.removeEventListeners(childRefCurrent.containerRef);\n      }\n    } // render\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          containerRenderer = _this$props4.containerRenderer,\n          noScrollByDrag = _this$props4.noScrollByDrag,\n          rtl = _this$props4.rtl,\n          style = _this$props4.style,\n          rest = _objectWithoutProperties(_this$props4, [\"className\", \"containerRenderer\", \"noScrollByDrag\", \"rtl\", \"style\"]),\n          _this$state3 = this.state,\n          isHorizontalScrollbarVisible = _this$state3.isHorizontalScrollbarVisible,\n          isVerticalScrollbarVisible = _this$state3.isVerticalScrollbarVisible,\n          scrollableClasses = (0, _classnames[\"default\"])(_ScrollableModule[\"default\"].scrollable, className),\n          contentClasses = (0, _classnames[\"default\"])(_ScrollableModule[\"default\"].content, _ScrollableModule[\"default\"].contentNative),\n          childWrapper = noScrollByDrag ? 'div' : TouchableDiv,\n          childWrapperProps = _objectSpread({\n        className: contentClasses\n      }, !noScrollByDrag && {\n        onDrag: this.onDrag,\n        onDragEnd: this.onDragEnd,\n        onDragStart: this.onDragStart,\n        onFlick: this.onFlick,\n        onTouchStart: this.onTouchStart\n      });\n\n      delete rest.addEventListeners;\n      delete rest.applyOverscrollEffect;\n      delete rest.cbScrollTo;\n      delete rest.clearOverscrollEffect;\n      delete rest.horizontalScrollbar;\n      delete rest.onFlick;\n      delete rest.onMouseDown;\n      delete rest.onScroll;\n      delete rest.onScrollStart;\n      delete rest.onScrollStop;\n      delete rest.onWheel;\n      delete rest.overscrollEffectOn;\n      delete rest.removeEventListeners;\n      delete rest.scrollStopOnScroll;\n      delete rest.scrollTo;\n      delete rest.start;\n      delete rest.verticalScrollbar;\n      this.deferScrollTo = true;\n      return _react[\"default\"].createElement(_Resizable.ResizeContext.Provider, {\n        value: this.resizeRegistry.register\n      }, containerRenderer({\n        childComponentProps: rest,\n        childWrapper: childWrapper,\n        childWrapperProps: childWrapperProps,\n        className: scrollableClasses,\n        componentCss: _ScrollableModule[\"default\"],\n        containerRef: this.containerRef,\n        horizontalScrollbarProps: this.horizontalScrollbarProps,\n        initChildRef: this.initChildRef,\n        isHorizontalScrollbarVisible: isHorizontalScrollbarVisible,\n        isVerticalScrollbarVisible: isVerticalScrollbarVisible,\n        rtl: rtl,\n        scrollTo: this.scrollTo,\n        style: style,\n        verticalScrollbarProps: this.verticalScrollbarProps\n      }));\n    }\n  }]);\n\n  return ScrollableBaseNative;\n}(_react.Component);\n/**\n * An unstyled native component that provides horizontal and vertical scrollbars and makes a render prop element scrollable.\n *\n * @class ScrollableNative\n * @memberof ui/ScrollableNative\n * @extends ui/Scrollable.ScrollableBaseNative\n * @ui\n * @private\n */\n\n\nexports.ScrollableBaseNative = ScrollableBaseNative;\nScrollableBaseNative.displayName = 'ui:ScrollableNative';\nScrollableBaseNative.propTypes =\n/** @lends ui/ScrollableNative.ScrollableNative.prototype */\n{\n  /**\n   * Render function.\n   *\n   * @type {Function}\n   * @required\n   * @private\n   */\n  containerRenderer: _propTypes[\"default\"].func.isRequired,\n\n  /**\n   * Called when adding additional event listeners in a themed component.\n   *\n   * @type {Function}\n   * @private\n   */\n  addEventListeners: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component to show overscroll effect.\n   *\n   * @type {Function}\n   * @private\n   */\n  applyOverscrollEffect: _propTypes[\"default\"].func,\n\n  /**\n   * A callback function that receives a reference to the `scrollTo` feature.\n   *\n   * Once received, the `scrollTo` method can be called as an imperative interface.\n   *\n   * The `scrollTo` function accepts the following paramaters:\n   * - {position: {x, y}} - Pixel value for x and/or y position\n   * - {align} - Where the scroll area should be aligned. Values are:\n   *   `'left'`, `'right'`, `'top'`, `'bottom'`,\n   *   `'topleft'`, `'topright'`, `'bottomleft'`, and `'bottomright'`.\n   * - {index} - Index of specific item. (`0` or positive integer)\n   *   This option is available for only `VirtualList` kind.\n   * - {node} - Node to scroll into view\n   * - {animate} - When `true`, scroll occurs with animation. When `false`, no\n   *   animation occurs.\n   * - {focus} - When `true`, attempts to focus item after scroll. Only valid when scrolling\n   *   by `index` or `node`.\n   * > Note: Only specify one of: `position`, `align`, `index` or `node`\n   *\n   * Example:\n   * ```\n   *\t// If you set cbScrollTo prop like below;\n   *\tcbScrollTo: (fn) => {this.scrollTo = fn;}\n   *\t// You can simply call like below;\n   *\tthis.scrollTo({align: 'top'}); // scroll to the top\n   * ```\n   *\n   * @type {Function}\n   * @public\n   */\n  cbScrollTo: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component to clear overscroll effect.\n   *\n   * @type {Function}\n   * @private\n   */\n  clearOverscrollEffect: _propTypes[\"default\"].func,\n\n  /**\n   * Client size of the container; valid values are an object that has `clientWidth` and `clientHeight`.\n   *\n   * @type {Object}\n   * @property {Number}    clientHeight    The client height of the list.\n   * @property {Number}    clientWidth    The client width of the list.\n   * @public\n   */\n  clientSize: _propTypes[\"default\"].shape({\n    clientHeight: _propTypes[\"default\"].number.isRequired,\n    clientWidth: _propTypes[\"default\"].number.isRequired\n  }),\n\n  /**\n   * Direction of the list or the scroller.\n   *\n   * `'both'` could be only used for[Scroller]{@link ui/Scroller.Scroller}.\n   *\n   * Valid values are:\n   * * `'both'`,\n   * * `'horizontal'`, and\n   * * `'vertical'`.\n   *\n   * @type {String}\n   * @private\n   */\n  direction: _propTypes[\"default\"].oneOf(['both', 'horizontal', 'vertical']),\n\n  /**\n   * Specifies how to show horizontal scrollbar.\n   *\n   * Valid values are:\n   * * `'auto'`,\n   * * `'visible'`, and\n   * * `'hidden'`.\n   *\n   * @type {String}\n   * @default 'auto'\n   * @public\n   */\n  horizontalScrollbar: _propTypes[\"default\"].oneOf(['auto', 'visible', 'hidden']),\n\n  /**\n   * Prevents scroll by dragging or flicking on the list or the scroller.\n   *\n   * @type {Boolean}\n   * @default false\n   * @private\n   */\n  noScrollByDrag: _propTypes[\"default\"].bool,\n\n  /**\n   * Called when flicking with a mouse or a touch screen.\n   *\n   * @type {Function}\n   * @private\n   */\n  onFlick: _propTypes[\"default\"].func,\n\n  /**\n   * Called when trigerring a mousedown event.\n   *\n   * @type {Function}\n   * @private\n   */\n  onMouseDown: _propTypes[\"default\"].func,\n\n  /**\n   * Called when scrolling.\n   *\n   * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\n   * It is not recommended to set this prop since it can cause performance degradation.\n   * Use `onScrollStart` or `onScrollStop` instead.\n   *\n   * @type {Function}\n   * @param {Object} event\n   * @param {Number} event.scrollLeft Scroll left value.\n   * @param {Number} event.scrollTop Scroll top value.\n   * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\n   * @public\n   */\n  onScroll: _propTypes[\"default\"].func,\n\n  /**\n   * Called when scroll starts.\n   *\n   * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\n   * You can get firstVisibleIndex and lastVisibleIndex from VirtualList with `moreInfo`.\n   *\n   * Example:\n   * ```\n   * onScrollStart = ({scrollLeft, scrollTop, moreInfo}) => {\n   *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\n   *     // do something with firstVisibleIndex and lastVisibleIndex\n   * }\n   *\n   * render = () => (\n   *     <VirtualList\n   *         ...\n   *         onScrollStart={this.onScrollStart}\n   *         ...\n   *     />\n   * )\n   * ```\n   *\n   * @type {Function}\n   * @param {Object} event\n   * @param {Number} event.scrollLeft Scroll left value.\n   * @param {Number} event.scrollTop Scroll top value.\n   * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\n   * @public\n   */\n  onScrollStart: _propTypes[\"default\"].func,\n\n  /**\n   * Called when scroll stops.\n   *\n   * Passes `scrollLeft`, `scrollTop`, and `moreInfo`.\n   * You can get firstVisibleIndex and lastVisibleIndex from VirtualList with `moreInfo`.\n   *\n   * Example:\n   * ```\n   * onScrollStop = ({scrollLeft, scrollTop, moreInfo}) => {\n   *     const {firstVisibleIndex, lastVisibleIndex} = moreInfo;\n   *     // do something with firstVisibleIndex and lastVisibleIndex\n   * }\n   *\n   * render = () => (\n   *     <VirtualList\n   *         ...\n   *         onScrollStop={this.onScrollStop}\n   *         ...\n   *     />\n   * )\n   * ```\n   *\n   * @type {Function}\n   * @param {Object} event\n   * @param {Number} event.scrollLeft Scroll left value.\n   * @param {Number} event.scrollTop Scroll top value.\n   * @param {Object} event.moreInfo The object including `firstVisibleIndex` and `lastVisibleIndex` properties.\n   * @public\n   */\n  onScrollStop: _propTypes[\"default\"].func,\n\n  /**\n   * Called when wheeling.\n   *\n   * @type {Function}\n   * @private\n   */\n  onWheel: _propTypes[\"default\"].func,\n\n  /**\n   * Specifies overscroll effects shows on which type of inputs.\n   *\n   * @type {Object}\n   * @default {drag: false, pageKey: false, wheel: false}\n   * @private\n   */\n  overscrollEffectOn: _propTypes[\"default\"].shape({\n    drag: _propTypes[\"default\"].bool,\n    pageKey: _propTypes[\"default\"].bool,\n    wheel: _propTypes[\"default\"].bool\n  }),\n\n  /**\n   * Called when removing additional event listeners in a themed component.\n   *\n   * @type {Function}\n   * @private\n   */\n  removeEventListeners: _propTypes[\"default\"].func,\n\n  /**\n   * Indicates the content's text direction is right-to-left.\n   *\n   * @type {Boolean}\n   * @private\n   */\n  rtl: _propTypes[\"default\"].bool,\n\n  /**\n   * Called to execute additional logic in a themed component after scrolling.\n   *\n   * @type {Function}\n   * @private\n   */\n  scrollStopOnScroll: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component when scrollTo is called.\n   *\n   * @type {Function}\n   * @private\n   */\n  scrollTo: _propTypes[\"default\"].func,\n\n  /**\n   * Called to execute additional logic in a themed component when scroll starts.\n   *\n   * @type {Function}\n   * @private\n   */\n  start: _propTypes[\"default\"].func,\n\n  /**\n   * ScrollableNative CSS style.\n   *\n   * Should be defined because we manipulate style prop in render().\n   *\n   * @type {Object}\n   * @public\n   */\n  style: _propTypes[\"default\"].object,\n\n  /**\n   * Specifies how to show vertical scrollbar.\n   *\n   * Valid values are:\n   * * `'auto'`,\n   * * `'visible'`, and\n   * * `'hidden'`.\n   *\n   * @type {String}\n   * @default 'auto'\n   * @public\n   */\n  verticalScrollbar: _propTypes[\"default\"].oneOf(['auto', 'visible', 'hidden'])\n};\nScrollableBaseNative.defaultProps = {\n  cbScrollTo: nop,\n  horizontalScrollbar: 'auto',\n  noScrollByDrag: false,\n  onScroll: nop,\n  onScrollStart: nop,\n  onScrollStop: nop,\n  overscrollEffectOn: {\n    drag: false,\n    pageKey: false,\n    wheel: false\n  },\n  verticalScrollbar: 'auto'\n};\nScrollableBaseNative.contextType = _Resizable.ResizeContext;\n\nvar ScrollableNative =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(ScrollableNative, _Component2);\n\n  function ScrollableNative() {\n    _classCallCheck(this, ScrollableNative);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ScrollableNative).apply(this, arguments));\n  }\n\n  _createClass(ScrollableNative, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          childRenderer = _this$props5.childRenderer,\n          rest = _objectWithoutProperties(_this$props5, [\"childRenderer\"]);\n\n      return _react[\"default\"].createElement(ScrollableBaseNative, Object.assign({}, rest, {\n        containerRenderer: function containerRenderer(_ref2) {\n          var childComponentProps = _ref2.childComponentProps,\n              ChildWrapper = _ref2.childWrapper,\n              childWrapperProps = _ref2.childWrapperProps,\n              className = _ref2.className,\n              componentCss = _ref2.componentCss,\n              containerRef = _ref2.containerRef,\n              horizontalScrollbarProps = _ref2.horizontalScrollbarProps,\n              initChildRef = _ref2.initChildRef,\n              isHorizontalScrollbarVisible = _ref2.isHorizontalScrollbarVisible,\n              isVerticalScrollbarVisible = _ref2.isVerticalScrollbarVisible,\n              rtl = _ref2.rtl,\n              scrollTo = _ref2.scrollTo,\n              style = _ref2.style,\n              verticalScrollbarProps = _ref2.verticalScrollbarProps;\n          return _react[\"default\"].createElement(\"div\", {\n            className: className,\n            ref: containerRef,\n            style: style\n          }, _react[\"default\"].createElement(\"div\", {\n            className: componentCss.container\n          }, _react[\"default\"].createElement(ChildWrapper, childWrapperProps, childRenderer(_objectSpread({}, childComponentProps, {\n            cbScrollTo: scrollTo,\n            className: componentCss.scrollableFill,\n            initChildRef: initChildRef,\n            rtl: rtl\n          }))), isVerticalScrollbarVisible ? _react[\"default\"].createElement(_Scrollbar[\"default\"], Object.assign({}, verticalScrollbarProps, {\n            disabled: !isVerticalScrollbarVisible\n          })) : null), isHorizontalScrollbarVisible ? _react[\"default\"].createElement(_Scrollbar[\"default\"], Object.assign({}, horizontalScrollbarProps, {\n            corner: isVerticalScrollbarVisible,\n            disabled: !isHorizontalScrollbarVisible\n          })) : null);\n        }\n      }));\n    }\n  }]);\n\n  return ScrollableNative;\n}(_react.Component);\n\nexports.ScrollableNative = ScrollableNative;\nScrollableNative.displayName = 'ui:ScrollableNative';\nScrollableNative.propTypes =\n/** @lends ui/ScrollableNative.ScrollableNative.prototype */\n{\n  /**\n   * Render function.\n   *\n   * @type {Function}\n   * @private\n   */\n  childRenderer: _propTypes[\"default\"].func\n};\nvar _default = ScrollableNative;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}