{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapWithView = exports.View = exports[\"default\"] = void 0;\n\nvar _util = require(\"@enact/core/util\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Arranger = require(\"./Arranger\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n} // If the View was \"appearing\", then entering will always be false and this will not result in a\n// re-render. If the view should enter, state.enter will be true and this will toggle it to false\n// causing a re-render.\n\n\nvar clearEntering = function clearEntering(_ref) {\n  var entering = _ref.entering;\n  return entering ? {\n    entering: false\n  } : null;\n};\n/**\n * A `View` wraps a set of children for {@link ui/ViewManager.ViewManager}.\n * It is not intended to be used directly\n *\n * @class View\n * @memberof ui/ViewManager\n * @private\n */\n\n\nvar View =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(View, _React$Component);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(View).call(this, props));\n    _this.enteringJob = new _util.Job(function () {\n      _this.setState(clearEntering);\n    });\n\n    _this.prepareTransition = function (arranger, callback, noAnimation) {\n      var _this$props = _this.props,\n          duration = _this$props.duration,\n          index = _this$props.index,\n          previousIndex = _this$props.previousIndex,\n          reverseTransition = _this$props.reverseTransition;\n      /* eslint react/no-find-dom-node: \"off\" */\n\n      var node = _reactDom[\"default\"].findDOMNode(_assertThisInitialized(_this));\n\n      var currentTime = (0, _util.perfNow)();\n      var startTime = currentTime;\n      var endTime = startTime + duration; // disable animation when the instance or props flag is true\n\n      noAnimation = noAnimation || _this.props.noAnimation; // Arranges the control each tick and calls the provided callback on complete\n\n      var fn = function fn(start, end, time) {\n        _this.cancelAnimationFrame(); // percent is the ratio (between 0 and 1) of the current step to the total steps\n\n\n        var percent = (time - start) / (end - start);\n\n        if (!noAnimation && percent < 1) {\n          // the transition is still in progress so call the arranger\n          arranger({\n            node: node,\n            percent: percent,\n            reverseTransition: reverseTransition,\n            from: previousIndex,\n            to: index\n          });\n          return true;\n        } else {\n          // the transition is complete so clean up and ensure we fire a final arrange with\n          // a value of 1.\n          _this.animation = null;\n          arranger({\n            node: node,\n            percent: 1,\n            reverseTransition: reverseTransition,\n            from: previousIndex,\n            to: index\n          });\n          callback();\n          return false;\n        }\n      }; // When a new transition is initiated mid-transition, adjust time to account for the current\n      // percent complete.\n\n\n      if (_this.animation && _this.changeDirection) {\n        var a = _this.animation;\n        var percentComplete = (a.time - a.start) / (a.end - a.start);\n        var delta = (endTime - startTime) * (1 - percentComplete);\n        startTime -= delta;\n        endTime -= delta;\n      }\n\n      _this.transition(startTime, endTime, currentTime, fn);\n    };\n\n    _this.transition = function (start, end, time, callback) {\n      var a = _this.animation = _this.animation || {};\n      a.start = start;\n      a.end = end;\n      a.time = time;\n\n      if (callback(start, end, time) && typeof window !== 'undefined') {\n        _this._raf = window.requestAnimationFrame(function () {\n          var current = (0, _util.perfNow)();\n\n          _this.transition(start, end, current, callback);\n        });\n      } else {\n        _this._raf = null;\n      }\n    };\n\n    _this.animation = null;\n    _this._raf = null;\n    _this.state = {\n      entering: !props.appearing\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.leaving) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.changeDirection = this.animation ? this.props.reverseTransition !== prevProps.reverseTransition : false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelAnimationFrame();\n      this.enteringJob.stop();\n    }\n  }, {\n    key: \"cancelAnimationFrame\",\n    value: function cancelAnimationFrame() {\n      if (this._raf) {\n        if (typeof window !== 'undefined') window.cancelAnimationFrame(this._raf);\n        this._raf = null;\n      }\n    }\n  }, {\n    key: \"componentWillAppear\",\n    value: function componentWillAppear(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback, true);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidAppear\",\n    value: function componentDidAppear() {\n      this.setState(clearEntering);\n    } // This is called at the same time as componentDidMount() for components added to an existing\n    // TransitionGroup. It will block other animations from occurring until callback is called. It\n    // will not be called on the initial render of a TransitionGroup.\n\n  }, {\n    key: \"componentWillEnter\",\n    value: function componentWillEnter(callback) {\n      var _this$props2 = this.props,\n          arranger = _this$props2.arranger,\n          reverseTransition = _this$props2.reverseTransition;\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.leave : arranger.enter, callback);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidEnter\",\n    value: function componentDidEnter() {\n      var _this$props3 = this.props,\n          enteringDelay = _this$props3.enteringDelay,\n          enteringProp = _this$props3.enteringProp;\n\n      if (enteringProp) {\n        // FIXME: `startRafAfter` is a temporary solution using rAF. We need a better way to handle\n        // transition cycle and component life cycle to be in sync. See ENYO-4835.\n        this.enteringJob.startRafAfter(enteringDelay);\n      }\n    }\n  }, {\n    key: \"componentWillStay\",\n    value: function componentWillStay(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback);\n      } else {\n        callback();\n      }\n    } // This is called when the child has been removed from the ReactTransitionGroup. Though the\n    // child has been removed, ReactTransitionGroup will keep it in the DOM until callback is\n    // called.\n\n  }, {\n    key: \"componentWillLeave\",\n    value: function componentWillLeave(callback) {\n      var _this$props4 = this.props,\n          arranger = _this$props4.arranger,\n          reverseTransition = _this$props4.reverseTransition;\n      this.enteringJob.stop();\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.enter : arranger.leave, callback);\n      } else {\n        callback();\n      }\n    }\n    /**\n     * Initiates a new transition\n     *\n     * @param\t{Function}\tarranger\t\tArranger function to call (enter, leave)\n     * @param\t{Function}\tcallback\t\tCompletion callback\n     * @param\t{Boolean}\t[noAnimation]\t`true` to disable animation for this transition\n     * @returns {undefined}\n     * @private\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          enteringProp = _this$props5.enteringProp,\n          children = _this$props5.children,\n          childProps = _this$props5.childProps;\n\n      if (enteringProp || childProps) {\n        var props = Object.assign({}, childProps);\n\n        if (enteringProp) {\n          props[enteringProp] = this.state.entering;\n        }\n\n        return _react[\"default\"].cloneElement(children, props);\n      } else {\n        return _react[\"default\"].Children.only(children);\n      }\n    }\n  }]);\n\n  return View;\n}(_react[\"default\"].Component); // Not a true render method but instead a wrapper for TransitionGroup to wrap arbitrary children\n// with a TransitionGroup-compatible child that supports animation\n//\n// eslint-disable-next-line enact/display-name\n\n\nexports.View = View;\nView.propTypes =\n/** @lends ui/ViewManager.View.prototype */\n{\n  children: _propTypes[\"default\"].node.isRequired,\n\n  /**\n   * Time in milliseconds to complete a transition\n   *\n   * @type {Number}\n   * @required\n   * @public\n   */\n  duration: _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Set to `true` when the View should 'appear' without transitioning into the viewport\n   *\n   * @type {Boolean}\n   * @public\n   */\n  appearing: _propTypes[\"default\"].bool,\n\n  /**\n   * Arranger to control the animation\n   *\n   * @type {Arranger}\n   * @public\n   */\n  arranger: _Arranger.shape,\n\n  /**\n   * An object containing properties to be passed to each child.\n   *\n   * @type {Object}\n   * @public\n   */\n  childProps: _propTypes[\"default\"].object,\n\n  /**\n   * Time, in milliseconds, to wait after a view has entered to inform it by passing the\n   * `enteringProp` as `false`.\n   *\n   * @type {Number}\n   * @default 0\n   * @public\n   */\n  enteringDelay: _propTypes[\"default\"].number,\n\n  /**\n   * Name of the property to pass to the wrapped view to indicate when it is entering the\n   * viewport. When `true`, the view has been created but has not transitioned into place.\n   * When `false`, the view has finished its transition.\n   *\n   * The notification can be delayed by setting `enteringDelay`. If not set, the view will not\n   * be notified of the change in transition.\n   *\n   * @type {String}\n   * @public\n   */\n  enteringProp: _propTypes[\"default\"].string,\n\n  /**\n   * Index of the currently 'active' view.\n   *\n   * @type {Number}\n   */\n  index: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if a view is currently leaving.\n   *\n   * @type {Boolean}\n   */\n  leaving: _propTypes[\"default\"].bool,\n\n  /**\n   * When `true`, indicates if the transition should be animated\n   *\n   * @type {Boolean}\n   * @default true\n   * @public\n   */\n  noAnimation: _propTypes[\"default\"].bool,\n\n  /**\n   * Index of the previously 'active' view.\n   *\n   * @type {Number}\n   */\n  previousIndex: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if the transition should be reversed. The effect depends on how the provided\n   * `arranger` handles reversal.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  reverseTransition: _propTypes[\"default\"].bool\n};\nView.defaultProps = {\n  appearing: false,\n  enteringDelay: 0\n};\n\nvar wrapWithView = function wrapWithView(config) {\n  return function (child) {\n    return _react[\"default\"].createElement(View, config, child);\n  };\n};\n\nexports.wrapWithView = wrapWithView;\nvar _default = View;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/cdi/final/SteApp/node_modules/@enact/ui/ViewManager/View.js"],"names":["Object","defineProperty","exports","value","wrapWithView","View","_util","require","_react","_interopRequireDefault","_propTypes","_reactDom","_Arranger","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","_setPrototypeOf","p","clearEntering","_ref","entering","_React$Component","_this","enteringJob","Job","setState","prepareTransition","arranger","callback","noAnimation","_this$props","duration","index","previousIndex","reverseTransition","node","findDOMNode","currentTime","perfNow","startTime","endTime","fn","start","end","time","cancelAnimationFrame","percent","from","to","animation","changeDirection","a","percentComplete","delta","transition","window","_raf","requestAnimationFrame","current","state","appearing","shouldComponentUpdate","nextProps","leaving","componentDidUpdate","prevProps","componentWillUnmount","stop","componentWillAppear","stay","componentDidAppear","componentWillEnter","_this$props2","leave","enter","componentDidEnter","_this$props3","enteringDelay","enteringProp","startRafAfter","componentWillStay","componentWillLeave","_this$props4","render","_this$props5","children","childProps","assign","cloneElement","Children","only","Component","propTypes","isRequired","number","bool","shape","object","string","defaultProps","config","child","createElement","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wrapWithView = exports.View = exports[\"default\"] = void 0;\n\nvar _util = require(\"@enact/core/util\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _Arranger = require(\"./Arranger\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// If the View was \"appearing\", then entering will always be false and this will not result in a\n// re-render. If the view should enter, state.enter will be true and this will toggle it to false\n// causing a re-render.\nvar clearEntering = function clearEntering(_ref) {\n  var entering = _ref.entering;\n  return entering ? {\n    entering: false\n  } : null;\n};\n/**\n * A `View` wraps a set of children for {@link ui/ViewManager.ViewManager}.\n * It is not intended to be used directly\n *\n * @class View\n * @memberof ui/ViewManager\n * @private\n */\n\n\nvar View =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(View, _React$Component);\n\n  function View(props) {\n    var _this;\n\n    _classCallCheck(this, View);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(View).call(this, props));\n    _this.enteringJob = new _util.Job(function () {\n      _this.setState(clearEntering);\n    });\n\n    _this.prepareTransition = function (arranger, callback, noAnimation) {\n      var _this$props = _this.props,\n          duration = _this$props.duration,\n          index = _this$props.index,\n          previousIndex = _this$props.previousIndex,\n          reverseTransition = _this$props.reverseTransition;\n      /* eslint react/no-find-dom-node: \"off\" */\n\n      var node = _reactDom[\"default\"].findDOMNode(_assertThisInitialized(_this));\n\n      var currentTime = (0, _util.perfNow)();\n      var startTime = currentTime;\n      var endTime = startTime + duration; // disable animation when the instance or props flag is true\n\n      noAnimation = noAnimation || _this.props.noAnimation; // Arranges the control each tick and calls the provided callback on complete\n\n      var fn = function fn(start, end, time) {\n        _this.cancelAnimationFrame(); // percent is the ratio (between 0 and 1) of the current step to the total steps\n\n\n        var percent = (time - start) / (end - start);\n\n        if (!noAnimation && percent < 1) {\n          // the transition is still in progress so call the arranger\n          arranger({\n            node: node,\n            percent: percent,\n            reverseTransition: reverseTransition,\n            from: previousIndex,\n            to: index\n          });\n          return true;\n        } else {\n          // the transition is complete so clean up and ensure we fire a final arrange with\n          // a value of 1.\n          _this.animation = null;\n          arranger({\n            node: node,\n            percent: 1,\n            reverseTransition: reverseTransition,\n            from: previousIndex,\n            to: index\n          });\n          callback();\n          return false;\n        }\n      }; // When a new transition is initiated mid-transition, adjust time to account for the current\n      // percent complete.\n\n\n      if (_this.animation && _this.changeDirection) {\n        var a = _this.animation;\n        var percentComplete = (a.time - a.start) / (a.end - a.start);\n        var delta = (endTime - startTime) * (1 - percentComplete);\n        startTime -= delta;\n        endTime -= delta;\n      }\n\n      _this.transition(startTime, endTime, currentTime, fn);\n    };\n\n    _this.transition = function (start, end, time, callback) {\n      var a = _this.animation = _this.animation || {};\n      a.start = start;\n      a.end = end;\n      a.time = time;\n\n      if (callback(start, end, time) && typeof window !== 'undefined') {\n        _this._raf = window.requestAnimationFrame(function () {\n          var current = (0, _util.perfNow)();\n\n          _this.transition(start, end, current, callback);\n        });\n      } else {\n        _this._raf = null;\n      }\n    };\n\n    _this.animation = null;\n    _this._raf = null;\n    _this.state = {\n      entering: !props.appearing\n    };\n    return _this;\n  }\n\n  _createClass(View, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.leaving) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.changeDirection = this.animation ? this.props.reverseTransition !== prevProps.reverseTransition : false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelAnimationFrame();\n      this.enteringJob.stop();\n    }\n  }, {\n    key: \"cancelAnimationFrame\",\n    value: function cancelAnimationFrame() {\n      if (this._raf) {\n        if (typeof window !== 'undefined') window.cancelAnimationFrame(this._raf);\n        this._raf = null;\n      }\n    }\n  }, {\n    key: \"componentWillAppear\",\n    value: function componentWillAppear(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback, true);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidAppear\",\n    value: function componentDidAppear() {\n      this.setState(clearEntering);\n    } // This is called at the same time as componentDidMount() for components added to an existing\n    // TransitionGroup. It will block other animations from occurring until callback is called. It\n    // will not be called on the initial render of a TransitionGroup.\n\n  }, {\n    key: \"componentWillEnter\",\n    value: function componentWillEnter(callback) {\n      var _this$props2 = this.props,\n          arranger = _this$props2.arranger,\n          reverseTransition = _this$props2.reverseTransition;\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.leave : arranger.enter, callback);\n      } else {\n        callback();\n      }\n    }\n  }, {\n    key: \"componentDidEnter\",\n    value: function componentDidEnter() {\n      var _this$props3 = this.props,\n          enteringDelay = _this$props3.enteringDelay,\n          enteringProp = _this$props3.enteringProp;\n\n      if (enteringProp) {\n        // FIXME: `startRafAfter` is a temporary solution using rAF. We need a better way to handle\n        // transition cycle and component life cycle to be in sync. See ENYO-4835.\n        this.enteringJob.startRafAfter(enteringDelay);\n      }\n    }\n  }, {\n    key: \"componentWillStay\",\n    value: function componentWillStay(callback) {\n      var arranger = this.props.arranger;\n\n      if (arranger && arranger.stay) {\n        this.prepareTransition(arranger.stay, callback);\n      } else {\n        callback();\n      }\n    } // This is called when the child has been removed from the ReactTransitionGroup. Though the\n    // child has been removed, ReactTransitionGroup will keep it in the DOM until callback is\n    // called.\n\n  }, {\n    key: \"componentWillLeave\",\n    value: function componentWillLeave(callback) {\n      var _this$props4 = this.props,\n          arranger = _this$props4.arranger,\n          reverseTransition = _this$props4.reverseTransition;\n      this.enteringJob.stop();\n\n      if (arranger) {\n        this.prepareTransition(reverseTransition ? arranger.enter : arranger.leave, callback);\n      } else {\n        callback();\n      }\n    }\n    /**\n     * Initiates a new transition\n     *\n     * @param\t{Function}\tarranger\t\tArranger function to call (enter, leave)\n     * @param\t{Function}\tcallback\t\tCompletion callback\n     * @param\t{Boolean}\t[noAnimation]\t`true` to disable animation for this transition\n     * @returns {undefined}\n     * @private\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n          enteringProp = _this$props5.enteringProp,\n          children = _this$props5.children,\n          childProps = _this$props5.childProps;\n\n      if (enteringProp || childProps) {\n        var props = Object.assign({}, childProps);\n\n        if (enteringProp) {\n          props[enteringProp] = this.state.entering;\n        }\n\n        return _react[\"default\"].cloneElement(children, props);\n      } else {\n        return _react[\"default\"].Children.only(children);\n      }\n    }\n  }]);\n\n  return View;\n}(_react[\"default\"].Component); // Not a true render method but instead a wrapper for TransitionGroup to wrap arbitrary children\n// with a TransitionGroup-compatible child that supports animation\n//\n// eslint-disable-next-line enact/display-name\n\n\nexports.View = View;\nView.propTypes =\n/** @lends ui/ViewManager.View.prototype */\n{\n  children: _propTypes[\"default\"].node.isRequired,\n\n  /**\n   * Time in milliseconds to complete a transition\n   *\n   * @type {Number}\n   * @required\n   * @public\n   */\n  duration: _propTypes[\"default\"].number.isRequired,\n\n  /**\n   * Set to `true` when the View should 'appear' without transitioning into the viewport\n   *\n   * @type {Boolean}\n   * @public\n   */\n  appearing: _propTypes[\"default\"].bool,\n\n  /**\n   * Arranger to control the animation\n   *\n   * @type {Arranger}\n   * @public\n   */\n  arranger: _Arranger.shape,\n\n  /**\n   * An object containing properties to be passed to each child.\n   *\n   * @type {Object}\n   * @public\n   */\n  childProps: _propTypes[\"default\"].object,\n\n  /**\n   * Time, in milliseconds, to wait after a view has entered to inform it by passing the\n   * `enteringProp` as `false`.\n   *\n   * @type {Number}\n   * @default 0\n   * @public\n   */\n  enteringDelay: _propTypes[\"default\"].number,\n\n  /**\n   * Name of the property to pass to the wrapped view to indicate when it is entering the\n   * viewport. When `true`, the view has been created but has not transitioned into place.\n   * When `false`, the view has finished its transition.\n   *\n   * The notification can be delayed by setting `enteringDelay`. If not set, the view will not\n   * be notified of the change in transition.\n   *\n   * @type {String}\n   * @public\n   */\n  enteringProp: _propTypes[\"default\"].string,\n\n  /**\n   * Index of the currently 'active' view.\n   *\n   * @type {Number}\n   */\n  index: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if a view is currently leaving.\n   *\n   * @type {Boolean}\n   */\n  leaving: _propTypes[\"default\"].bool,\n\n  /**\n   * When `true`, indicates if the transition should be animated\n   *\n   * @type {Boolean}\n   * @default true\n   * @public\n   */\n  noAnimation: _propTypes[\"default\"].bool,\n\n  /**\n   * Index of the previously 'active' view.\n   *\n   * @type {Number}\n   */\n  previousIndex: _propTypes[\"default\"].number,\n\n  /**\n   * When `true`, indicates if the transition should be reversed. The effect depends on how the provided\n   * `arranger` handles reversal.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  reverseTransition: _propTypes[\"default\"].bool\n};\nView.defaultProps = {\n  appearing: false,\n  enteringDelay: 0\n};\n\nvar wrapWithView = function wrapWithView(config) {\n  return function (child) {\n    return _react[\"default\"].createElement(View, config, child);\n  };\n};\n\nexports.wrapWithView = wrapWithView;\nvar _default = View;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}