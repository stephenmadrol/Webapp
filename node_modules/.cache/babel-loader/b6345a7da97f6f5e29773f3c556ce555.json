{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearResBundle = clearResBundle;\nexports.createResBundle = createResBundle;\nexports.getIStringFromBundle = getIStringFromBundle;\nexports.getResBundle = getResBundle;\nexports.setResBundle = setResBundle;\n\nvar _IString = _interopRequireDefault(require(\"../ilib/lib/IString\"));\n\nvar _ResBundle = _interopRequireDefault(require(\"../ilib/lib/ResBundle\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // The ilib.ResBundle for the active locale used by $L\n\n\nvar resBundle;\n/**\n * Returns the current ilib.ResBundle\n *\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\nfunction getResBundle() {\n  return resBundle;\n}\n/**\n * Creates a new ilib.ResBundle for string translation\n *\n * @param  {ilib.Locale} locale Locale for ResBundle\n *\n * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle\n */\n\n\nfunction createResBundle(options) {\n  var opts = _objectSpread({\n    type: 'html',\n    name: 'strings',\n    lengthen: true\n  }, options);\n\n  if (!opts.onLoad) return; // eslint-disable-next-line no-new\n\n  new _ResBundle[\"default\"](_objectSpread({}, opts, {\n    onLoad: function onLoad(bundle) {\n      opts.onLoad(bundle || null);\n    }\n  }));\n}\n/**\n * Set the locale for the strings that $L loads. This may reload the\n * string resources if necessary.\n *\n * @param {string} spec the locale specifier\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\n\nfunction setResBundle(bundle) {\n  return resBundle = bundle;\n}\n/**\n * Deletes the current bundle object of strings and clears the cache.\n * @returns {undefined}\n */\n\n\nfunction clearResBundle() {\n  delete _ResBundle[\"default\"].strings;\n  delete _ResBundle[\"default\"].sysres;\n  resBundle = null;\n}\n/**\n * Retrieves an IString from a resource bundle by key.\n *\n * If the bundle doesn't exist, the key is returned wrapped by IString.\n *\n * @param {String|Object} str Key for localized string\n * @param {ResBundl} rb ilib resource bundle\n * @returns\t{IString} The string value wrapped by an IString\n */\n\n\nfunction getIStringFromBundle(str, rb) {\n  var isObject = _typeof(str) === 'object';\n\n  if (rb) {\n    return isObject ? rb.getString(str.value, str.key) : rb.getString(str);\n  }\n\n  return new _IString[\"default\"](isObject ? str.value : str);\n}","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\i18n\\src\\resBundle.js"],"names":["Object","defineProperty","exports","value","clearResBundle","createResBundle","getIStringFromBundle","getResBundle","setResBundle","_IString","_interopRequireDefault","require","_ResBundle","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","configurable","writable","resBundle","options","opts","type","name","lengthen","onLoad","bundle","strings","sysres","str","rb","isObject","getString"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearResBundle = clearResBundle;\nexports.createResBundle = createResBundle;\nexports.getIStringFromBundle = getIStringFromBundle;\nexports.getResBundle = getResBundle;\nexports.setResBundle = setResBundle;\n\nvar _IString = _interopRequireDefault(require(\"../ilib/lib/IString\"));\n\nvar _ResBundle = _interopRequireDefault(require(\"../ilib/lib/ResBundle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// The ilib.ResBundle for the active locale used by $L\nvar resBundle;\n/**\n * Returns the current ilib.ResBundle\n *\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\nfunction getResBundle() {\n  return resBundle;\n}\n/**\n * Creates a new ilib.ResBundle for string translation\n *\n * @param  {ilib.Locale} locale Locale for ResBundle\n *\n * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle\n */\n\n\nfunction createResBundle(options) {\n  var opts = _objectSpread({\n    type: 'html',\n    name: 'strings',\n    lengthen: true\n  }, options);\n\n  if (!opts.onLoad) return; // eslint-disable-next-line no-new\n\n  new _ResBundle[\"default\"](_objectSpread({}, opts, {\n    onLoad: function onLoad(bundle) {\n      opts.onLoad(bundle || null);\n    }\n  }));\n}\n/**\n * Set the locale for the strings that $L loads. This may reload the\n * string resources if necessary.\n *\n * @param {string} spec the locale specifier\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\n\nfunction setResBundle(bundle) {\n  return resBundle = bundle;\n}\n/**\n * Deletes the current bundle object of strings and clears the cache.\n * @returns {undefined}\n */\n\n\nfunction clearResBundle() {\n  delete _ResBundle[\"default\"].strings;\n  delete _ResBundle[\"default\"].sysres;\n  resBundle = null;\n}\n/**\n * Retrieves an IString from a resource bundle by key.\n *\n * If the bundle doesn't exist, the key is returned wrapped by IString.\n *\n * @param {String|Object} str Key for localized string\n * @param {ResBundl} rb ilib resource bundle\n * @returns\t{IString} The string value wrapped by an IString\n */\n\n\nfunction getIStringFromBundle(str, rb) {\n  var isObject = _typeof(str) === 'object';\n\n  if (rb) {\n    return isObject ? rb.getString(str.value, str.key) : rb.getString(str);\n  }\n\n  return new _IString[\"default\"](isObject ? str.value : str);\n}"]},"metadata":{},"sourceType":"module"}