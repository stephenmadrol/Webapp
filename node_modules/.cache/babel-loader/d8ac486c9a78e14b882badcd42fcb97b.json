{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Accelerator = exports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n/**\n * Provides the {@link spotlight/Accelerator.Accelerator} class.\n *\n * @module spotlight/Accelerator\n */\n\n/**\n * @class Accelerator\n * @memberof spotlight/Accelerator\n */\n\n\nvar Accelerator =\n/**\n * @constructor\n * @param {Number[]} frequency - Controls the frequency with which the acceleration will\n *\t\"freeze\". While frozen, the current target item cannot change, and all events are directed\n *\tto it.\n * @memberof spotlight/Accelerator.Accelerator.prototype\n */\nfunction Accelerator() {\n  var _this = this;\n\n  var frequency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [3, 3, 3, 2, 2, 2, 1];\n\n  _classCallCheck(this, Accelerator);\n\n  this.processKey = function (event, callback) {\n    switch (event.type) {\n      case 'keydown':\n        if (event.keyCode !== _this.keyCode) {\n          _this.reset();\n\n          _this.time = Date.now();\n          _this.keyCode = event.keyCode;\n          return callback(event);\n        } else if (_this.canceled) {\n          // Prevent skipped keydown events from bubbling\n          event.preventDefault();\n          return true;\n        } else {\n          var elapsedTime = Date.now() - _this.time,\n              seconds = Math.floor(elapsedTime / 1000),\n              toSkip = 0;\n\n          seconds = seconds > _this.frequency.length - 1 ? _this.frequency.length - 1 : seconds;\n          toSkip = _this.frequency[seconds] - 1;\n\n          if (toSkip < 0) {\n            toSkip = 0;\n          }\n\n          _this.accelerating = !(seconds === 0 && _this.skipped === 0);\n\n          if (_this.skipped >= toSkip) {\n            _this.skipped = 0;\n            return callback(event);\n          } else {\n            _this.skipped++; // Prevent skipped keydown events from bubbling\n\n            event.preventDefault();\n            return true;\n          }\n        }\n\n      case 'keyup':\n        _this.reset();\n\n        return callback(event);\n    }\n  };\n\n  this.reset = function () {\n    _this.skipped = 0;\n    _this.time = 0;\n    _this.keyCode = 0;\n    _this.canceled = false;\n    _this.accelerating = false;\n  };\n\n  this.cancel = function () {\n    _this.canceled = true;\n  };\n\n  this.isAccelerating = function () {\n    return _this.accelerating;\n  };\n  /*\n   * Whether the instance is currently in an accelerating state.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n\n  this.accelerating = false;\n  /*\n   * The current count of skipped events.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.skipped = 0;\n  /*\n   * The timestamp of the last evaluated event.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.time = 0;\n  /*\n   * The keyCode of the last evaluated event.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.keyCode = 0;\n  /*\n   * Whether the instance is in a state of being canceled.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.canceled = false;\n  /*\n   * Controls the frequency with which the acceleration will \"freeze\". While frozen,\n   * the current target item cannot change, and all events are directed to it.\n   *\n   * @type {Number[]}\n   * @default [3, 3, 3, 2, 2, 2, 1]\n   * @public\n   */\n\n  this.frequency = frequency;\n}\n/**\n * Called with the current keydown event and callback, which will be called when the event is\n * allowed through.\n *\n * @function\n * @param  {Object} event - The current event to validate.\n * @param  {Function} callback - The callback to execute.\n * @returns {Boolean} `true` if the event was consumed by processKey and callback was not called\n * @public\n * @memberof spotlight/Accelerator.Accelerator.prototype\n */\n;\n\nexports.Accelerator = Accelerator;\nvar _default = Accelerator;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/cdi/final/SteApp/node_modules/@enact/spotlight/Accelerator/Accelerator.js"],"names":["Object","defineProperty","exports","value","Accelerator","_classCallCheck","instance","Constructor","TypeError","_this","frequency","arguments","length","undefined","processKey","event","callback","type","keyCode","reset","time","Date","now","canceled","preventDefault","elapsedTime","seconds","Math","floor","toSkip","accelerating","skipped","cancel","isAccelerating","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Accelerator = exports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Provides the {@link spotlight/Accelerator.Accelerator} class.\n *\n * @module spotlight/Accelerator\n */\n\n/**\n * @class Accelerator\n * @memberof spotlight/Accelerator\n */\nvar Accelerator =\n/**\n * @constructor\n * @param {Number[]} frequency - Controls the frequency with which the acceleration will\n *\t\"freeze\". While frozen, the current target item cannot change, and all events are directed\n *\tto it.\n * @memberof spotlight/Accelerator.Accelerator.prototype\n */\nfunction Accelerator() {\n  var _this = this;\n\n  var frequency = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [3, 3, 3, 2, 2, 2, 1];\n\n  _classCallCheck(this, Accelerator);\n\n  this.processKey = function (event, callback) {\n    switch (event.type) {\n      case 'keydown':\n        if (event.keyCode !== _this.keyCode) {\n          _this.reset();\n\n          _this.time = Date.now();\n          _this.keyCode = event.keyCode;\n          return callback(event);\n        } else if (_this.canceled) {\n          // Prevent skipped keydown events from bubbling\n          event.preventDefault();\n          return true;\n        } else {\n          var elapsedTime = Date.now() - _this.time,\n              seconds = Math.floor(elapsedTime / 1000),\n              toSkip = 0;\n\n          seconds = seconds > _this.frequency.length - 1 ? _this.frequency.length - 1 : seconds;\n          toSkip = _this.frequency[seconds] - 1;\n\n          if (toSkip < 0) {\n            toSkip = 0;\n          }\n\n          _this.accelerating = !(seconds === 0 && _this.skipped === 0);\n\n          if (_this.skipped >= toSkip) {\n            _this.skipped = 0;\n            return callback(event);\n          } else {\n            _this.skipped++; // Prevent skipped keydown events from bubbling\n\n            event.preventDefault();\n            return true;\n          }\n        }\n\n      case 'keyup':\n        _this.reset();\n\n        return callback(event);\n    }\n  };\n\n  this.reset = function () {\n    _this.skipped = 0;\n    _this.time = 0;\n    _this.keyCode = 0;\n    _this.canceled = false;\n    _this.accelerating = false;\n  };\n\n  this.cancel = function () {\n    _this.canceled = true;\n  };\n\n  this.isAccelerating = function () {\n    return _this.accelerating;\n  };\n\n  /*\n   * Whether the instance is currently in an accelerating state.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.accelerating = false;\n  /*\n   * The current count of skipped events.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.skipped = 0;\n  /*\n   * The timestamp of the last evaluated event.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.time = 0;\n  /*\n   * The keyCode of the last evaluated event.\n   *\n   * @type {Number}\n   * @default 0\n   */\n\n  this.keyCode = 0;\n  /*\n   * Whether the instance is in a state of being canceled.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n\n  this.canceled = false;\n  /*\n   * Controls the frequency with which the acceleration will \"freeze\". While frozen,\n   * the current target item cannot change, and all events are directed to it.\n   *\n   * @type {Number[]}\n   * @default [3, 3, 3, 2, 2, 2, 1]\n   * @public\n   */\n\n  this.frequency = frequency;\n}\n/**\n * Called with the current keydown event and callback, which will be called when the event is\n * allowed through.\n *\n * @function\n * @param  {Object} event - The current event to validate.\n * @param  {Function} callback - The callback to execute.\n * @returns {Boolean} `true` if the event was consumed by processKey and callback was not called\n * @public\n * @memberof spotlight/Accelerator.Accelerator.prototype\n */\n;\n\nexports.Accelerator = Accelerator;\nvar _default = Accelerator;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}