{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _util = require(\"@enact/core/util\");\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar refs = {};\n\nvar adjustPath = function adjustPath(path) {\n  if (path.slice(-1) !== '/') {\n    path += '/';\n  }\n\n  return path;\n}; // default handlers\n\n\nvar failureHandler = function failureHandler(_ref) {\n  var errorText = _ref.errorText;\n  return console.error(\"LS2Request: \".concat(errorText));\n};\n\nvar timeoutHandler = function timeoutHandler(_ref2) {\n  var errorText = _ref2.errorText;\n  return console.warn(\"LS2Request: \".concat(errorText));\n};\n/**\n * A class for managing LS2 Requests.\n *\n * @memberof webos/LS2Request\n * @class\n */\n\n\nvar LS2Request =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new LS2 request\n   *\n   * @memberof webos/LS2Request.LS2Request\n   * @constructor\n   */\n  function LS2Request() {\n    var _this = this;\n\n    _classCallCheck(this, LS2Request);\n\n    this.timeoutJob = new _util.Job(function (_ref3) {\n      var onTimeout = _ref3.onTimeout,\n          timeout = _ref3.timeout;\n      onTimeout({\n        errorCode: -2,\n        errorText: \"Request timed out after \".concat(timeout, \" ms.\"),\n        returnValue: false\n      }); // cancel the request\n\n      _this.cancel();\n    });\n    this.bridge = null;\n    this.subscribe = false;\n  }\n  /**\n   * Send a request to an LS2 service method.\n   *\n   * @method\n   * @memberof webos/LS2Request.LS2Request.prototype\n   * @param {Object} options Options for the LS2 Request call\n   * @param {String} options.service The name of the LS2 service.  Do not include 'luna://'.\n   * @param {String} options.method The name of the method.\n   * @param {Object} options.parameters Any parameters required by the service method.\n   * @param {Function} options.onSuccess The success handler for the request.\n   * @param {Function} options.onFailure The failure handler for the request.\n   * @param {Function} options.onComplete The handler to run when the request\n   *\tis completed, regardless of return status.\n   * @param {Function} options.onTimeout The handler to run when the request\n   *\ttimes out.  Used in conjunction with `timeout`.\n   * @param {Boolean} options.subscribe Subscribe to service methods that support subscription.\n   * @param {Number} options.timeout The delay in milliseconds to wait for the request to return.\n   * @returns {webos/LS2Request}\n   * @public\n   */\n\n\n  _createClass(LS2Request, [{\n    key: \"send\",\n    value: function send(_ref4) {\n      var _ref4$service = _ref4.service,\n          service = _ref4$service === void 0 ? '' : _ref4$service,\n          _ref4$method = _ref4.method,\n          method = _ref4$method === void 0 ? '' : _ref4$method,\n          _ref4$parameters = _ref4.parameters,\n          parameters = _ref4$parameters === void 0 ? {} : _ref4$parameters,\n          _ref4$onSuccess = _ref4.onSuccess,\n          onSuccess = _ref4$onSuccess === void 0 ? null : _ref4$onSuccess,\n          _ref4$onFailure = _ref4.onFailure,\n          onFailure = _ref4$onFailure === void 0 ? null : _ref4$onFailure,\n          _ref4$onComplete = _ref4.onComplete,\n          onComplete = _ref4$onComplete === void 0 ? null : _ref4$onComplete,\n          _ref4$onTimeout = _ref4.onTimeout,\n          onTimeout = _ref4$onTimeout === void 0 ? timeoutHandler : _ref4$onTimeout,\n          _ref4$subscribe = _ref4.subscribe,\n          subscribe = _ref4$subscribe === void 0 ? false : _ref4$subscribe,\n          _ref4$timeout = _ref4.timeout,\n          timeout = _ref4$timeout === void 0 ? 0 : _ref4$timeout;\n      this.cancelled = false;\n\n      if (!onFailure && !onComplete) {\n        onFailure = failureHandler;\n      }\n\n      if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== 'object' || !window.PalmServiceBridge) {\n        /* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }]*/\n        onFailure && onFailure({\n          errorCode: -1,\n          errorText: 'PalmServiceBridge not found.',\n          returnValue: false\n        });\n        onComplete && onComplete({\n          errorCode: -1,\n          errorText: 'PalmServiceBridge not found.',\n          returnValue: false\n        });\n        console.error('PalmServiceBridge not found.');\n        return;\n      }\n\n      if (this.ts && refs[this.ts]) {\n        delete refs[this.ts];\n      }\n\n      this.subscribe = subscribe;\n\n      if (this.subscribe) {\n        parameters.subscribe = this.subscribe;\n      }\n\n      if (parameters.subscribe) {\n        this.subscribe = parameters.subscribe;\n      } // eslint-disable-next-line no-undef\n\n\n      this.ts = performance.now();\n      refs[this.ts] = this; // eslint-disable-next-line no-undef\n\n      this.bridge = new PalmServiceBridge();\n      this.bridge.onservicecallback = this.callback.bind(this, onSuccess, onFailure, onComplete);\n\n      if (timeout) {\n        this.timeoutJob.startAfter(timeout, {\n          onTimeout: onTimeout,\n          timeout: timeout\n        });\n      }\n\n      this.bridge.call(adjustPath(service) + method, JSON.stringify(parameters));\n      return this;\n    }\n  }, {\n    key: \"callback\",\n    value: function callback(onSuccess, onFailure, onComplete, msg) {\n      if (this.cancelled) {\n        return;\n      } // remove timeout job\n\n\n      this.timeoutJob.stop();\n      var parsedMsg;\n\n      try {\n        parsedMsg = JSON.parse(msg);\n      } catch (e) {\n        parsedMsg = {\n          errorCode: -1,\n          errorText: msg,\n          returnValue: false\n        };\n      }\n\n      if (parsedMsg.errorCode || parsedMsg.returnValue === false) {\n        if (onFailure) {\n          onFailure(parsedMsg);\n        }\n      } else if (onSuccess) {\n        onSuccess(parsedMsg);\n      }\n\n      if (onComplete) {\n        onComplete(parsedMsg);\n      }\n\n      if (!this.subscribe) {\n        this.cancel();\n      }\n    }\n    /**\n     * Cancel the current LS2 request.\n     *\n     * @method\n     * @memberof webos/LS2Request.LS2Request.prototype\n     * @returns {undefined}\n     * @public\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      // remove timeout job\n      this.timeoutJob.stop();\n      this.cancelled = true;\n\n      if (this.bridge) {\n        this.bridge.cancel();\n        this.bridge = null;\n      }\n\n      if (this.ts && refs[this.ts]) {\n        delete refs[this.ts];\n      }\n    }\n  }]);\n\n  return LS2Request;\n}();\n\nexports[\"default\"] = LS2Request;","map":{"version":3,"sources":["/home/cdi/stephen/node_modules/@enact/webos/LS2Request/LS2Request.js"],"names":["Object","defineProperty","exports","value","_util","require","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","refs","adjustPath","path","slice","failureHandler","_ref","errorText","console","error","concat","timeoutHandler","_ref2","warn","LS2Request","_this","timeoutJob","Job","_ref3","onTimeout","timeout","errorCode","returnValue","cancel","bridge","subscribe","send","_ref4","_ref4$service","service","_ref4$method","method","_ref4$parameters","parameters","_ref4$onSuccess","onSuccess","_ref4$onFailure","onFailure","_ref4$onComplete","onComplete","_ref4$onTimeout","_ref4$subscribe","_ref4$timeout","cancelled","window","PalmServiceBridge","ts","performance","now","onservicecallback","callback","bind","startAfter","call","JSON","stringify","msg","stop","parsedMsg","parse","e"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _util = require(\"@enact/core/util\");\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar refs = {};\n\nvar adjustPath = function adjustPath(path) {\n  if (path.slice(-1) !== '/') {\n    path += '/';\n  }\n\n  return path;\n}; // default handlers\n\n\nvar failureHandler = function failureHandler(_ref) {\n  var errorText = _ref.errorText;\n  return console.error(\"LS2Request: \".concat(errorText));\n};\n\nvar timeoutHandler = function timeoutHandler(_ref2) {\n  var errorText = _ref2.errorText;\n  return console.warn(\"LS2Request: \".concat(errorText));\n};\n/**\n * A class for managing LS2 Requests.\n *\n * @memberof webos/LS2Request\n * @class\n */\n\n\nvar LS2Request =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a new LS2 request\n   *\n   * @memberof webos/LS2Request.LS2Request\n   * @constructor\n   */\n  function LS2Request() {\n    var _this = this;\n\n    _classCallCheck(this, LS2Request);\n\n    this.timeoutJob = new _util.Job(function (_ref3) {\n      var onTimeout = _ref3.onTimeout,\n          timeout = _ref3.timeout;\n      onTimeout({\n        errorCode: -2,\n        errorText: \"Request timed out after \".concat(timeout, \" ms.\"),\n        returnValue: false\n      }); // cancel the request\n\n      _this.cancel();\n    });\n    this.bridge = null;\n    this.subscribe = false;\n  }\n  /**\n   * Send a request to an LS2 service method.\n   *\n   * @method\n   * @memberof webos/LS2Request.LS2Request.prototype\n   * @param {Object} options Options for the LS2 Request call\n   * @param {String} options.service The name of the LS2 service.  Do not include 'luna://'.\n   * @param {String} options.method The name of the method.\n   * @param {Object} options.parameters Any parameters required by the service method.\n   * @param {Function} options.onSuccess The success handler for the request.\n   * @param {Function} options.onFailure The failure handler for the request.\n   * @param {Function} options.onComplete The handler to run when the request\n   *\tis completed, regardless of return status.\n   * @param {Function} options.onTimeout The handler to run when the request\n   *\ttimes out.  Used in conjunction with `timeout`.\n   * @param {Boolean} options.subscribe Subscribe to service methods that support subscription.\n   * @param {Number} options.timeout The delay in milliseconds to wait for the request to return.\n   * @returns {webos/LS2Request}\n   * @public\n   */\n\n\n  _createClass(LS2Request, [{\n    key: \"send\",\n    value: function send(_ref4) {\n      var _ref4$service = _ref4.service,\n          service = _ref4$service === void 0 ? '' : _ref4$service,\n          _ref4$method = _ref4.method,\n          method = _ref4$method === void 0 ? '' : _ref4$method,\n          _ref4$parameters = _ref4.parameters,\n          parameters = _ref4$parameters === void 0 ? {} : _ref4$parameters,\n          _ref4$onSuccess = _ref4.onSuccess,\n          onSuccess = _ref4$onSuccess === void 0 ? null : _ref4$onSuccess,\n          _ref4$onFailure = _ref4.onFailure,\n          onFailure = _ref4$onFailure === void 0 ? null : _ref4$onFailure,\n          _ref4$onComplete = _ref4.onComplete,\n          onComplete = _ref4$onComplete === void 0 ? null : _ref4$onComplete,\n          _ref4$onTimeout = _ref4.onTimeout,\n          onTimeout = _ref4$onTimeout === void 0 ? timeoutHandler : _ref4$onTimeout,\n          _ref4$subscribe = _ref4.subscribe,\n          subscribe = _ref4$subscribe === void 0 ? false : _ref4$subscribe,\n          _ref4$timeout = _ref4.timeout,\n          timeout = _ref4$timeout === void 0 ? 0 : _ref4$timeout;\n      this.cancelled = false;\n\n      if (!onFailure && !onComplete) {\n        onFailure = failureHandler;\n      }\n\n      if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== 'object' || !window.PalmServiceBridge) {\n        /* eslint no-unused-expressions: [\"error\", { \"allowShortCircuit\": true }]*/\n        onFailure && onFailure({\n          errorCode: -1,\n          errorText: 'PalmServiceBridge not found.',\n          returnValue: false\n        });\n        onComplete && onComplete({\n          errorCode: -1,\n          errorText: 'PalmServiceBridge not found.',\n          returnValue: false\n        });\n        console.error('PalmServiceBridge not found.');\n        return;\n      }\n\n      if (this.ts && refs[this.ts]) {\n        delete refs[this.ts];\n      }\n\n      this.subscribe = subscribe;\n\n      if (this.subscribe) {\n        parameters.subscribe = this.subscribe;\n      }\n\n      if (parameters.subscribe) {\n        this.subscribe = parameters.subscribe;\n      } // eslint-disable-next-line no-undef\n\n\n      this.ts = performance.now();\n      refs[this.ts] = this; // eslint-disable-next-line no-undef\n\n      this.bridge = new PalmServiceBridge();\n      this.bridge.onservicecallback = this.callback.bind(this, onSuccess, onFailure, onComplete);\n\n      if (timeout) {\n        this.timeoutJob.startAfter(timeout, {\n          onTimeout: onTimeout,\n          timeout: timeout\n        });\n      }\n\n      this.bridge.call(adjustPath(service) + method, JSON.stringify(parameters));\n      return this;\n    }\n  }, {\n    key: \"callback\",\n    value: function callback(onSuccess, onFailure, onComplete, msg) {\n      if (this.cancelled) {\n        return;\n      } // remove timeout job\n\n\n      this.timeoutJob.stop();\n      var parsedMsg;\n\n      try {\n        parsedMsg = JSON.parse(msg);\n      } catch (e) {\n        parsedMsg = {\n          errorCode: -1,\n          errorText: msg,\n          returnValue: false\n        };\n      }\n\n      if (parsedMsg.errorCode || parsedMsg.returnValue === false) {\n        if (onFailure) {\n          onFailure(parsedMsg);\n        }\n      } else if (onSuccess) {\n        onSuccess(parsedMsg);\n      }\n\n      if (onComplete) {\n        onComplete(parsedMsg);\n      }\n\n      if (!this.subscribe) {\n        this.cancel();\n      }\n    }\n    /**\n     * Cancel the current LS2 request.\n     *\n     * @method\n     * @memberof webos/LS2Request.LS2Request.prototype\n     * @returns {undefined}\n     * @public\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      // remove timeout job\n      this.timeoutJob.stop();\n      this.cancelled = true;\n\n      if (this.bridge) {\n        this.bridge.cancel();\n        this.bridge = null;\n      }\n\n      if (this.ts && refs[this.ts]) {\n        delete refs[this.ts];\n      }\n    }\n  }]);\n\n  return LS2Request;\n}();\n\nexports[\"default\"] = LS2Request;"]},"metadata":{},"sourceType":"module"}