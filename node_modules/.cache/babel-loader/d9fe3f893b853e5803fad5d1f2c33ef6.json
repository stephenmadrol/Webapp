{"ast":null,"code":"\"use strict\";\n/*\n * EthiopicRataDie.js - Represent an RD date in the Ethiopic calendar\n * \n * Copyright © 2015, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \nilib.js\nEthiopicCal.js\nRataDie.js\n*/\n\nvar ilib = require(\"./ilib.js\");\n\nvar EthiopicCal = require(\"./EthiopicCal.js\");\n\nvar RataDie = require(\"./RataDie.js\");\n/**\n * @class\n * Construct a new Ethiopic RD date number object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means Maskaram, 2 means Teqemt, etc., and 13 means Paguemen\n * \n * <li><i>day</i> - 1 to 30\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another Ethiopic date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above are present, then the RD is calculate based on \n * the current date at the time of instantiation. <p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * \n * @private\n * @constructor\n * @extends RataDie\n * @param {Object=} params parameters that govern the settings and behaviour of this Ethiopic RD date\n */\n\n\nvar EthiopicRataDie = function EthiopicRataDie(params) {\n  this.cal = params && params.cal || new EthiopicCal();\n  this.rd = NaN;\n  RataDie.call(this, params);\n};\n\nEthiopicRataDie.prototype = new RataDie();\nEthiopicRataDie.prototype.parent = RataDie;\nEthiopicRataDie.prototype.constructor = EthiopicRataDie;\n/**\n * The difference between the zero Julian day and the first Ethiopic date\n * of Friday, August 29, 8 CE Julian at 6:00am UTC.<p> \n * \n * See <a href=\"http://us.wow.com/wiki/Time_in_Ethiopia?s_chn=90&s_pt=aolsem&v_t=aolsem\"\n * Time in Ethiopia</a> for information about how time is handled in Ethiopia.\n * \n * @protected\n * @type number\n */\n\nEthiopicRataDie.prototype.epoch = 1724219.75;\n/**\n * Calculate the Rata Die (fixed day) number of the given date from the\n * date components.\n * \n * @protected\n * @param {Object} date the date components to calculate the RD from\n */\n\nEthiopicRataDie.prototype._setDateComponents = function (date) {\n  var year = date.year;\n  var years = 365 * (year - 1) + Math.floor(year / 4);\n  var dayInYear = (date.month - 1) * 30 + date.day;\n  var rdtime = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000;\n  /*\n  console.log(\"calcRataDie: converting \" +  JSON.stringify(parts));\n  console.log(\"getRataDie: year is \" +  years);\n  console.log(\"getRataDie: day in year is \" +  dayInYear);\n  console.log(\"getRataDie: rdtime is \" +  rdtime);\n  console.log(\"getRataDie: rd is \" +  (years + dayInYear + rdtime));\n  */\n\n  this.rd = years + dayInYear + rdtime;\n};\n\nmodule.exports = EthiopicRataDie;","map":{"version":3,"sources":["/home/cdi/stephen/node_modules/@enact/i18n/ilib/lib/EthiopicRataDie.js"],"names":["ilib","require","EthiopicCal","RataDie","EthiopicRataDie","params","cal","rd","NaN","call","prototype","parent","constructor","epoch","_setDateComponents","date","year","years","Math","floor","dayInYear","month","day","rdtime","hour","minute","second","millisecond","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;;;;;;;;;;;AAmBA;;;;;;AAKA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,kBAAD,CAAzB;;AAEA,IAAIE,OAAO,GAAGF,OAAO,CAAC,cAAD,CAArB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA,IAAIG,eAAe,GAAG,SAASA,eAAT,CAAyBC,MAAzB,EAAiC;AACrD,OAAKC,GAAL,GAAWD,MAAM,IAAIA,MAAM,CAACC,GAAjB,IAAwB,IAAIJ,WAAJ,EAAnC;AACA,OAAKK,EAAL,GAAUC,GAAV;AACAL,EAAAA,OAAO,CAACM,IAAR,CAAa,IAAb,EAAmBJ,MAAnB;AACD,CAJD;;AAMAD,eAAe,CAACM,SAAhB,GAA4B,IAAIP,OAAJ,EAA5B;AACAC,eAAe,CAACM,SAAhB,CAA0BC,MAA1B,GAAmCR,OAAnC;AACAC,eAAe,CAACM,SAAhB,CAA0BE,WAA1B,GAAwCR,eAAxC;AACA;;;;;;;;;;;AAWAA,eAAe,CAACM,SAAhB,CAA0BG,KAA1B,GAAkC,UAAlC;AACA;;;;;;;;AAQAT,eAAe,CAACM,SAAhB,CAA0BI,kBAA1B,GAA+C,UAAUC,IAAV,EAAgB;AAC7D,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AACA,MAAIC,KAAK,GAAG,OAAOD,IAAI,GAAG,CAAd,IAAmBE,IAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,CAAlB,CAA/B;AACA,MAAII,SAAS,GAAG,CAACL,IAAI,CAACM,KAAL,GAAa,CAAd,IAAmB,EAAnB,GAAwBN,IAAI,CAACO,GAA7C;AACA,MAAIC,MAAM,GAAG,CAACR,IAAI,CAACS,IAAL,GAAY,OAAZ,GAAsBT,IAAI,CAACU,MAAL,GAAc,KAApC,GAA4CV,IAAI,CAACW,MAAL,GAAc,IAA1D,GAAiEX,IAAI,CAACY,WAAvE,IAAsF,QAAnG;AACA;;;;;;;;AAQA,OAAKpB,EAAL,GAAUU,KAAK,GAAGG,SAAR,GAAoBG,MAA9B;AACD,CAdD;;AAgBAK,MAAM,CAACC,OAAP,GAAiBzB,eAAjB","sourcesContent":["\"use strict\";\n\n/*\n * EthiopicRataDie.js - Represent an RD date in the Ethiopic calendar\n * \n * Copyright © 2015, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* !depends \nilib.js\nEthiopicCal.js\nRataDie.js\n*/\nvar ilib = require(\"./ilib.js\");\n\nvar EthiopicCal = require(\"./EthiopicCal.js\");\n\nvar RataDie = require(\"./RataDie.js\");\n/**\n * @class\n * Construct a new Ethiopic RD date number object. The constructor parameters can \n * contain any of the following properties:\n * \n * <ul>\n * <li><i>unixtime<i> - sets the time of this instance according to the given \n * unix time. Unix time is the number of milliseconds since midnight on Jan 1, 1970.\n * \n * <li><i>julianday</i> - sets the time of this instance according to the given\n * Julian Day instance or the Julian Day given as a float\n * \n * <li><i>year</i> - any integer, including 0\n * \n * <li><i>month</i> - 1 to 12, where 1 means Maskaram, 2 means Teqemt, etc., and 13 means Paguemen\n * \n * <li><i>day</i> - 1 to 30\n * \n * <li><i>hour</i> - 0 to 23. A formatter is used to display 12 hour clocks, but this representation \n * is always done with an unambiguous 24 hour representation\n * \n * <li><i>minute</i> - 0 to 59\n * \n * <li><i>second</i> - 0 to 59\n * \n * <li><i>millisecond</i> - 0 to 999\n * \n * <li><i>date</i> - use the given intrinsic Javascript date to initialize this one.\n * </ul>\n *\n * If the constructor is called with another Ethiopic date instance instead of\n * a parameter block, the other instance acts as a parameter block and its\n * settings are copied into the current instance.<p>\n * \n * If the constructor is called with no arguments at all or if none of the \n * properties listed above are present, then the RD is calculate based on \n * the current date at the time of instantiation. <p>\n * \n * If any of the properties from <i>year</i> through <i>millisecond</i> are not\n * specified in the params, it is assumed that they have the smallest possible\n * value in the range for the property (zero or one).<p>\n * \n * \n * @private\n * @constructor\n * @extends RataDie\n * @param {Object=} params parameters that govern the settings and behaviour of this Ethiopic RD date\n */\n\n\nvar EthiopicRataDie = function EthiopicRataDie(params) {\n  this.cal = params && params.cal || new EthiopicCal();\n  this.rd = NaN;\n  RataDie.call(this, params);\n};\n\nEthiopicRataDie.prototype = new RataDie();\nEthiopicRataDie.prototype.parent = RataDie;\nEthiopicRataDie.prototype.constructor = EthiopicRataDie;\n/**\n * The difference between the zero Julian day and the first Ethiopic date\n * of Friday, August 29, 8 CE Julian at 6:00am UTC.<p> \n * \n * See <a href=\"http://us.wow.com/wiki/Time_in_Ethiopia?s_chn=90&s_pt=aolsem&v_t=aolsem\"\n * Time in Ethiopia</a> for information about how time is handled in Ethiopia.\n * \n * @protected\n * @type number\n */\n\nEthiopicRataDie.prototype.epoch = 1724219.75;\n/**\n * Calculate the Rata Die (fixed day) number of the given date from the\n * date components.\n * \n * @protected\n * @param {Object} date the date components to calculate the RD from\n */\n\nEthiopicRataDie.prototype._setDateComponents = function (date) {\n  var year = date.year;\n  var years = 365 * (year - 1) + Math.floor(year / 4);\n  var dayInYear = (date.month - 1) * 30 + date.day;\n  var rdtime = (date.hour * 3600000 + date.minute * 60000 + date.second * 1000 + date.millisecond) / 86400000;\n  /*\n  console.log(\"calcRataDie: converting \" +  JSON.stringify(parts));\n  console.log(\"getRataDie: year is \" +  years);\n  console.log(\"getRataDie: day in year is \" +  dayInYear);\n  console.log(\"getRataDie: rdtime is \" +  rdtime);\n  console.log(\"getRataDie: rd is \" +  (years + dayInYear + rdtime));\n  */\n\n  this.rd = years + dayInYear + rdtime;\n};\n\nmodule.exports = EthiopicRataDie;"]},"metadata":{},"sourceType":"module"}