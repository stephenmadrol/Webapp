{"ast":null,"code":"\"use strict\";\n\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n/*\n * Locale.js - Locale specifier definition\n * \n * Copyright Â© 2012-2015, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// !depends ilib.js JSUtils.js\n\n\nvar ilib = require(\"./ilib.js\");\n\nvar JSUtils = require(\"./JSUtils.js\");\n/**\n * @class\n * Create a new locale instance. Locales are specified either with a specifier string \n * that follows the BCP-47 convention (roughly: \"language-region-script-variant\") or \n * with 4 parameters that specify the language, region, variant, and script individually.<p>\n * \n * The language is given as an ISO 639-1 two-letter, lower-case language code. You\n * can find a full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes</a><p>\n * \n * The region is given as an ISO 3166-1 two-letter, upper-case region code. You can\n * find a full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2</a>.<p>\n * \n * The variant is any string that does not contain a dash which further differentiates\n * locales from each other.<p>\n * \n * The script is given as the ISO 15924 four-letter script code. In some locales,\n * text may be validly written in more than one script. For example, Serbian is often\n * written in both Latin and Cyrillic, though not usually mixed together. You can find a\n * full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/ISO_15924#List_of_codes\">http://en.wikipedia.org/wiki/ISO_15924#List_of_codes</a>.<p>\n * \n * As an example in ilib, the script can be used in the date formatter. Dates formatted \n * in Serbian could have day-of-week names or month names written in the Latin\n * or Cyrillic script. Often one script is default such that sr-SR-Latn is the same\n * as sr-SR so the script code \"Latn\" can be left off of the locale spec.<p> \n * \n * Each part is optional, and an empty string in the specifier before or after a \n * dash or as a parameter to the constructor denotes an unspecified value. In this\n * case, many of the ilib functions will treat the locale as generic. For example\n * the locale \"en-\" is equivalent to \"en\" and to \"en--\" and denotes a locale\n * of \"English\" with an unspecified region and variant, which typically matches\n * any region or variant.<p>\n * \n * Without any arguments to the constructor, this function returns the locale of\n * the host Javascript engine.<p>\n * \n * \n * @constructor\n * @param {?string|Locale=} language the ISO 639 2-letter code for the language, or a full \n * locale spec in BCP-47 format, or another Locale instance to copy from\n * @param {string=} region the ISO 3166 2-letter code for the region\n * @param {string=} variant the name of the variant of this locale, if any\n * @param {string=} script the ISO 15924 code of the script for this locale, if any\n */\n\n\nvar Locale = function Locale(language, region, variant, script) {\n  if (typeof region === 'undefined' && typeof variant === 'undefined' && typeof script === 'undefined') {\n    var spec = language || ilib.getLocale();\n\n    if (typeof spec === 'string') {\n      var parts = spec.split('-');\n\n      for (var i = 0; i < parts.length; i++) {\n        if (Locale._isLanguageCode(parts[i])) {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.language = parts[i];\n        } else if (Locale._isRegionCode(parts[i])) {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.region = parts[i];\n        } else if (Locale._isScriptCode(parts[i])) {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.script = parts[i];\n        } else {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.variant = parts[i];\n        }\n      }\n\n      this.language = this.language || undefined;\n      this.region = this.region || undefined;\n      this.script = this.script || undefined;\n      this.variant = this.variant || undefined;\n    } else if (_typeof(spec) === 'object') {\n      this.language = spec.language || undefined;\n      this.region = spec.region || undefined;\n      this.script = spec.script || undefined;\n      this.variant = spec.variant || undefined;\n    }\n  } else {\n    if (language && typeof language === \"string\") {\n      language = language.trim();\n      this.language = language.length > 0 ? language.toLowerCase() : undefined;\n    } else {\n      this.language = undefined;\n    }\n\n    if (region && typeof region === \"string\") {\n      region = region.trim();\n      this.region = region.length > 0 ? region.toUpperCase() : undefined;\n    } else {\n      this.region = undefined;\n    }\n\n    if (variant && typeof variant === \"string\") {\n      variant = variant.trim();\n      this.variant = variant.length > 0 ? variant : undefined;\n    } else {\n      this.variant = undefined;\n    }\n\n    if (script && typeof script === \"string\") {\n      script = script.trim();\n      this.script = script.length > 0 ? script : undefined;\n    } else {\n      this.script = undefined;\n    }\n  }\n\n  this._genSpec();\n}; // from http://en.wikipedia.org/wiki/ISO_3166-1\n\n\nLocale.a2toa3regmap = {\n  \"AF\": \"AFG\",\n  \"AX\": \"ALA\",\n  \"AL\": \"ALB\",\n  \"DZ\": \"DZA\",\n  \"AS\": \"ASM\",\n  \"AD\": \"AND\",\n  \"AO\": \"AGO\",\n  \"AI\": \"AIA\",\n  \"AQ\": \"ATA\",\n  \"AG\": \"ATG\",\n  \"AR\": \"ARG\",\n  \"AM\": \"ARM\",\n  \"AW\": \"ABW\",\n  \"AU\": \"AUS\",\n  \"AT\": \"AUT\",\n  \"AZ\": \"AZE\",\n  \"BS\": \"BHS\",\n  \"BH\": \"BHR\",\n  \"BD\": \"BGD\",\n  \"BB\": \"BRB\",\n  \"BY\": \"BLR\",\n  \"BE\": \"BEL\",\n  \"BZ\": \"BLZ\",\n  \"BJ\": \"BEN\",\n  \"BM\": \"BMU\",\n  \"BT\": \"BTN\",\n  \"BO\": \"BOL\",\n  \"BQ\": \"BES\",\n  \"BA\": \"BIH\",\n  \"BW\": \"BWA\",\n  \"BV\": \"BVT\",\n  \"BR\": \"BRA\",\n  \"IO\": \"IOT\",\n  \"BN\": \"BRN\",\n  \"BG\": \"BGR\",\n  \"BF\": \"BFA\",\n  \"BI\": \"BDI\",\n  \"KH\": \"KHM\",\n  \"CM\": \"CMR\",\n  \"CA\": \"CAN\",\n  \"CV\": \"CPV\",\n  \"KY\": \"CYM\",\n  \"CF\": \"CAF\",\n  \"TD\": \"TCD\",\n  \"CL\": \"CHL\",\n  \"CN\": \"CHN\",\n  \"CX\": \"CXR\",\n  \"CC\": \"CCK\",\n  \"CO\": \"COL\",\n  \"KM\": \"COM\",\n  \"CG\": \"COG\",\n  \"CD\": \"COD\",\n  \"CK\": \"COK\",\n  \"CR\": \"CRI\",\n  \"CI\": \"CIV\",\n  \"HR\": \"HRV\",\n  \"CU\": \"CUB\",\n  \"CW\": \"CUW\",\n  \"CY\": \"CYP\",\n  \"CZ\": \"CZE\",\n  \"DK\": \"DNK\",\n  \"DJ\": \"DJI\",\n  \"DM\": \"DMA\",\n  \"DO\": \"DOM\",\n  \"EC\": \"ECU\",\n  \"EG\": \"EGY\",\n  \"SV\": \"SLV\",\n  \"GQ\": \"GNQ\",\n  \"ER\": \"ERI\",\n  \"EE\": \"EST\",\n  \"ET\": \"ETH\",\n  \"FK\": \"FLK\",\n  \"FO\": \"FRO\",\n  \"FJ\": \"FJI\",\n  \"FI\": \"FIN\",\n  \"FR\": \"FRA\",\n  \"GF\": \"GUF\",\n  \"PF\": \"PYF\",\n  \"TF\": \"ATF\",\n  \"GA\": \"GAB\",\n  \"GM\": \"GMB\",\n  \"GE\": \"GEO\",\n  \"DE\": \"DEU\",\n  \"GH\": \"GHA\",\n  \"GI\": \"GIB\",\n  \"GR\": \"GRC\",\n  \"GL\": \"GRL\",\n  \"GD\": \"GRD\",\n  \"GP\": \"GLP\",\n  \"GU\": \"GUM\",\n  \"GT\": \"GTM\",\n  \"GG\": \"GGY\",\n  \"GN\": \"GIN\",\n  \"GW\": \"GNB\",\n  \"GY\": \"GUY\",\n  \"HT\": \"HTI\",\n  \"HM\": \"HMD\",\n  \"VA\": \"VAT\",\n  \"HN\": \"HND\",\n  \"HK\": \"HKG\",\n  \"HU\": \"HUN\",\n  \"IS\": \"ISL\",\n  \"IN\": \"IND\",\n  \"ID\": \"IDN\",\n  \"IR\": \"IRN\",\n  \"IQ\": \"IRQ\",\n  \"IE\": \"IRL\",\n  \"IM\": \"IMN\",\n  \"IL\": \"ISR\",\n  \"IT\": \"ITA\",\n  \"JM\": \"JAM\",\n  \"JP\": \"JPN\",\n  \"JE\": \"JEY\",\n  \"JO\": \"JOR\",\n  \"KZ\": \"KAZ\",\n  \"KE\": \"KEN\",\n  \"KI\": \"KIR\",\n  \"KP\": \"PRK\",\n  \"KR\": \"KOR\",\n  \"KW\": \"KWT\",\n  \"KG\": \"KGZ\",\n  \"LA\": \"LAO\",\n  \"LV\": \"LVA\",\n  \"LB\": \"LBN\",\n  \"LS\": \"LSO\",\n  \"LR\": \"LBR\",\n  \"LY\": \"LBY\",\n  \"LI\": \"LIE\",\n  \"LT\": \"LTU\",\n  \"LU\": \"LUX\",\n  \"MO\": \"MAC\",\n  \"MK\": \"MKD\",\n  \"MG\": \"MDG\",\n  \"MW\": \"MWI\",\n  \"MY\": \"MYS\",\n  \"MV\": \"MDV\",\n  \"ML\": \"MLI\",\n  \"MT\": \"MLT\",\n  \"MH\": \"MHL\",\n  \"MQ\": \"MTQ\",\n  \"MR\": \"MRT\",\n  \"MU\": \"MUS\",\n  \"YT\": \"MYT\",\n  \"MX\": \"MEX\",\n  \"FM\": \"FSM\",\n  \"MD\": \"MDA\",\n  \"MC\": \"MCO\",\n  \"MN\": \"MNG\",\n  \"ME\": \"MNE\",\n  \"MS\": \"MSR\",\n  \"MA\": \"MAR\",\n  \"MZ\": \"MOZ\",\n  \"MM\": \"MMR\",\n  \"NA\": \"NAM\",\n  \"NR\": \"NRU\",\n  \"NP\": \"NPL\",\n  \"NL\": \"NLD\",\n  \"NC\": \"NCL\",\n  \"NZ\": \"NZL\",\n  \"NI\": \"NIC\",\n  \"NE\": \"NER\",\n  \"NG\": \"NGA\",\n  \"NU\": \"NIU\",\n  \"NF\": \"NFK\",\n  \"MP\": \"MNP\",\n  \"NO\": \"NOR\",\n  \"OM\": \"OMN\",\n  \"PK\": \"PAK\",\n  \"PW\": \"PLW\",\n  \"PS\": \"PSE\",\n  \"PA\": \"PAN\",\n  \"PG\": \"PNG\",\n  \"PY\": \"PRY\",\n  \"PE\": \"PER\",\n  \"PH\": \"PHL\",\n  \"PN\": \"PCN\",\n  \"PL\": \"POL\",\n  \"PT\": \"PRT\",\n  \"PR\": \"PRI\",\n  \"QA\": \"QAT\",\n  \"RE\": \"REU\",\n  \"RO\": \"ROU\",\n  \"RU\": \"RUS\",\n  \"RW\": \"RWA\",\n  \"BL\": \"BLM\",\n  \"SH\": \"SHN\",\n  \"KN\": \"KNA\",\n  \"LC\": \"LCA\",\n  \"MF\": \"MAF\",\n  \"PM\": \"SPM\",\n  \"VC\": \"VCT\",\n  \"WS\": \"WSM\",\n  \"SM\": \"SMR\",\n  \"ST\": \"STP\",\n  \"SA\": \"SAU\",\n  \"SN\": \"SEN\",\n  \"RS\": \"SRB\",\n  \"SC\": \"SYC\",\n  \"SL\": \"SLE\",\n  \"SG\": \"SGP\",\n  \"SX\": \"SXM\",\n  \"SK\": \"SVK\",\n  \"SI\": \"SVN\",\n  \"SB\": \"SLB\",\n  \"SO\": \"SOM\",\n  \"ZA\": \"ZAF\",\n  \"GS\": \"SGS\",\n  \"SS\": \"SSD\",\n  \"ES\": \"ESP\",\n  \"LK\": \"LKA\",\n  \"SD\": \"SDN\",\n  \"SR\": \"SUR\",\n  \"SJ\": \"SJM\",\n  \"SZ\": \"SWZ\",\n  \"SE\": \"SWE\",\n  \"CH\": \"CHE\",\n  \"SY\": \"SYR\",\n  \"TW\": \"TWN\",\n  \"TJ\": \"TJK\",\n  \"TZ\": \"TZA\",\n  \"TH\": \"THA\",\n  \"TL\": \"TLS\",\n  \"TG\": \"TGO\",\n  \"TK\": \"TKL\",\n  \"TO\": \"TON\",\n  \"TT\": \"TTO\",\n  \"TN\": \"TUN\",\n  \"TR\": \"TUR\",\n  \"TM\": \"TKM\",\n  \"TC\": \"TCA\",\n  \"TV\": \"TUV\",\n  \"UG\": \"UGA\",\n  \"UA\": \"UKR\",\n  \"AE\": \"ARE\",\n  \"GB\": \"GBR\",\n  \"US\": \"USA\",\n  \"UM\": \"UMI\",\n  \"UY\": \"URY\",\n  \"UZ\": \"UZB\",\n  \"VU\": \"VUT\",\n  \"VE\": \"VEN\",\n  \"VN\": \"VNM\",\n  \"VG\": \"VGB\",\n  \"VI\": \"VIR\",\n  \"WF\": \"WLF\",\n  \"EH\": \"ESH\",\n  \"YE\": \"YEM\",\n  \"ZM\": \"ZMB\",\n  \"ZW\": \"ZWE\"\n};\nLocale.a1toa3langmap = {\n  \"ab\": \"abk\",\n  \"aa\": \"aar\",\n  \"af\": \"afr\",\n  \"ak\": \"aka\",\n  \"sq\": \"sqi\",\n  \"am\": \"amh\",\n  \"ar\": \"ara\",\n  \"an\": \"arg\",\n  \"hy\": \"hye\",\n  \"as\": \"asm\",\n  \"av\": \"ava\",\n  \"ae\": \"ave\",\n  \"ay\": \"aym\",\n  \"az\": \"aze\",\n  \"bm\": \"bam\",\n  \"ba\": \"bak\",\n  \"eu\": \"eus\",\n  \"be\": \"bel\",\n  \"bn\": \"ben\",\n  \"bh\": \"bih\",\n  \"bi\": \"bis\",\n  \"bs\": \"bos\",\n  \"br\": \"bre\",\n  \"bg\": \"bul\",\n  \"my\": \"mya\",\n  \"ca\": \"cat\",\n  \"ch\": \"cha\",\n  \"ce\": \"che\",\n  \"ny\": \"nya\",\n  \"zh\": \"zho\",\n  \"cv\": \"chv\",\n  \"kw\": \"cor\",\n  \"co\": \"cos\",\n  \"cr\": \"cre\",\n  \"hr\": \"hrv\",\n  \"cs\": \"ces\",\n  \"da\": \"dan\",\n  \"dv\": \"div\",\n  \"nl\": \"nld\",\n  \"dz\": \"dzo\",\n  \"en\": \"eng\",\n  \"eo\": \"epo\",\n  \"et\": \"est\",\n  \"ee\": \"ewe\",\n  \"fo\": \"fao\",\n  \"fj\": \"fij\",\n  \"fi\": \"fin\",\n  \"fr\": \"fra\",\n  \"ff\": \"ful\",\n  \"gl\": \"glg\",\n  \"ka\": \"kat\",\n  \"de\": \"deu\",\n  \"el\": \"ell\",\n  \"gn\": \"grn\",\n  \"gu\": \"guj\",\n  \"ht\": \"hat\",\n  \"ha\": \"hau\",\n  \"he\": \"heb\",\n  \"hz\": \"her\",\n  \"hi\": \"hin\",\n  \"ho\": \"hmo\",\n  \"hu\": \"hun\",\n  \"ia\": \"ina\",\n  \"id\": \"ind\",\n  \"ie\": \"ile\",\n  \"ga\": \"gle\",\n  \"ig\": \"ibo\",\n  \"ik\": \"ipk\",\n  \"io\": \"ido\",\n  \"is\": \"isl\",\n  \"it\": \"ita\",\n  \"iu\": \"iku\",\n  \"ja\": \"jpn\",\n  \"jv\": \"jav\",\n  \"kl\": \"kal\",\n  \"kn\": \"kan\",\n  \"kr\": \"kau\",\n  \"ks\": \"kas\",\n  \"kk\": \"kaz\",\n  \"km\": \"khm\",\n  \"ki\": \"kik\",\n  \"rw\": \"kin\",\n  \"ky\": \"kir\",\n  \"kv\": \"kom\",\n  \"kg\": \"kon\",\n  \"ko\": \"kor\",\n  \"ku\": \"kur\",\n  \"kj\": \"kua\",\n  \"la\": \"lat\",\n  \"lb\": \"ltz\",\n  \"lg\": \"lug\",\n  \"li\": \"lim\",\n  \"ln\": \"lin\",\n  \"lo\": \"lao\",\n  \"lt\": \"lit\",\n  \"lu\": \"lub\",\n  \"lv\": \"lav\",\n  \"gv\": \"glv\",\n  \"mk\": \"mkd\",\n  \"mg\": \"mlg\",\n  \"ms\": \"msa\",\n  \"ml\": \"mal\",\n  \"mt\": \"mlt\",\n  \"mi\": \"mri\",\n  \"mr\": \"mar\",\n  \"mh\": \"mah\",\n  \"mn\": \"mon\",\n  \"na\": \"nau\",\n  \"nv\": \"nav\",\n  \"nb\": \"nob\",\n  \"nd\": \"nde\",\n  \"ne\": \"nep\",\n  \"ng\": \"ndo\",\n  \"nn\": \"nno\",\n  \"no\": \"nor\",\n  \"ii\": \"iii\",\n  \"nr\": \"nbl\",\n  \"oc\": \"oci\",\n  \"oj\": \"oji\",\n  \"cu\": \"chu\",\n  \"om\": \"orm\",\n  \"or\": \"ori\",\n  \"os\": \"oss\",\n  \"pa\": \"pan\",\n  \"pi\": \"pli\",\n  \"fa\": \"fas\",\n  \"pl\": \"pol\",\n  \"ps\": \"pus\",\n  \"pt\": \"por\",\n  \"qu\": \"que\",\n  \"rm\": \"roh\",\n  \"rn\": \"run\",\n  \"ro\": \"ron\",\n  \"ru\": \"rus\",\n  \"sa\": \"san\",\n  \"sc\": \"srd\",\n  \"sd\": \"snd\",\n  \"se\": \"sme\",\n  \"sm\": \"smo\",\n  \"sg\": \"sag\",\n  \"sr\": \"srp\",\n  \"gd\": \"gla\",\n  \"sn\": \"sna\",\n  \"si\": \"sin\",\n  \"sk\": \"slk\",\n  \"sl\": \"slv\",\n  \"so\": \"som\",\n  \"st\": \"sot\",\n  \"es\": \"spa\",\n  \"su\": \"sun\",\n  \"sw\": \"swa\",\n  \"ss\": \"ssw\",\n  \"sv\": \"swe\",\n  \"ta\": \"tam\",\n  \"te\": \"tel\",\n  \"tg\": \"tgk\",\n  \"th\": \"tha\",\n  \"ti\": \"tir\",\n  \"bo\": \"bod\",\n  \"tk\": \"tuk\",\n  \"tl\": \"tgl\",\n  \"tn\": \"tsn\",\n  \"to\": \"ton\",\n  \"tr\": \"tur\",\n  \"ts\": \"tso\",\n  \"tt\": \"tat\",\n  \"tw\": \"twi\",\n  \"ty\": \"tah\",\n  \"ug\": \"uig\",\n  \"uk\": \"ukr\",\n  \"ur\": \"urd\",\n  \"uz\": \"uzb\",\n  \"ve\": \"ven\",\n  \"vi\": \"vie\",\n  \"vo\": \"vol\",\n  \"wa\": \"wln\",\n  \"cy\": \"cym\",\n  \"wo\": \"wol\",\n  \"fy\": \"fry\",\n  \"xh\": \"xho\",\n  \"yi\": \"yid\",\n  \"yo\": \"yor\",\n  \"za\": \"zha\",\n  \"zu\": \"zul\"\n};\n/**\n * Tell whether or not the str does not start with a lower case ASCII char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is not a lower case ASCII char\n */\n\nLocale._notLower = function (str) {\n  // do this with ASCII only so we don't have to depend on the CType functions\n  var ch = str.charCodeAt(0);\n  return ch < 97 || ch > 122;\n};\n/**\n * Tell whether or not the str does not start with an upper case ASCII char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is a not an upper case ASCII char\n */\n\n\nLocale._notUpper = function (str) {\n  // do this with ASCII only so we don't have to depend on the CType functions\n  var ch = str.charCodeAt(0);\n  return ch < 65 || ch > 90;\n};\n/**\n * Tell whether or not the str does not start with a digit char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is a not an upper case ASCII char\n */\n\n\nLocale._notDigit = function (str) {\n  // do this with ASCII only so we don't have to depend on the CType functions\n  var ch = str.charCodeAt(0);\n  return ch < 48 || ch > 57;\n};\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 639 language code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\n\n\nLocale._isLanguageCode = function (str) {\n  if (typeof str === 'undefined' || str.length < 2 || str.length > 3) {\n    return false;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    if (Locale._notLower(str.charAt(i))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 3166 2-letter region code or M.49 3-digit region code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\n\n\nLocale._isRegionCode = function (str) {\n  if (typeof str === 'undefined' || str.length < 2 || str.length > 3) {\n    return false;\n  }\n\n  if (str.length === 2) {\n    for (var i = 0; i < str.length; i++) {\n      if (Locale._notUpper(str.charAt(i))) {\n        return false;\n      }\n    }\n  } else {\n    for (var i = 0; i < str.length; i++) {\n      if (Locale._notDigit(str.charAt(i))) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 639 language code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\n\n\nLocale._isScriptCode = function (str) {\n  if (typeof str === 'undefined' || str.length !== 4 || Locale._notUpper(str.charAt(0))) {\n    return false;\n  }\n\n  for (var i = 1; i < 4; i++) {\n    if (Locale._notLower(str.charAt(i))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Return the ISO-3166 alpha3 equivalent region code for the given ISO 3166 alpha2\n * region code. If the given alpha2 code is not found, this function returns its\n * argument unchanged.\n * @static\n * @param {string|undefined} alpha2 the alpha2 code to map\n * @return {string|undefined} the alpha3 equivalent of the given alpha2 code, or the alpha2\n * parameter if the alpha2 value is not found\n */\n\n\nLocale.regionAlpha2ToAlpha3 = function (alpha2) {\n  return Locale.a2toa3regmap[alpha2] || alpha2;\n};\n/**\n * Return the ISO-639 alpha3 equivalent language code for the given ISO 639 alpha1\n * language code. If the given alpha1 code is not found, this function returns its\n * argument unchanged.\n * @static\n * @param {string|undefined} alpha1 the alpha1 code to map\n * @return {string|undefined} the alpha3 equivalent of the given alpha1 code, or the alpha1\n * parameter if the alpha1 value is not found\n */\n\n\nLocale.languageAlpha1ToAlpha3 = function (alpha1) {\n  return Locale.a1toa3langmap[alpha1] || alpha1;\n};\n\nLocale.prototype = {\n  /**\n   * @private\n   */\n  _genSpec: function _genSpec() {\n    this.spec = this.language || \"\";\n\n    if (this.script) {\n      if (this.spec.length > 0) {\n        this.spec += \"-\";\n      }\n\n      this.spec += this.script;\n    }\n\n    if (this.region) {\n      if (this.spec.length > 0) {\n        this.spec += \"-\";\n      }\n\n      this.spec += this.region;\n    }\n\n    if (this.variant) {\n      if (this.spec.length > 0) {\n        this.spec += \"-\";\n      }\n\n      this.spec += this.variant;\n    }\n  },\n\n  /**\n   * Return the ISO 639 language code for this locale. \n   * @return {string|undefined} the language code for this locale \n   */\n  getLanguage: function getLanguage() {\n    return this.language;\n  },\n\n  /**\n   * Return the language of this locale as an ISO-639-alpha3 language code\n   * @return {string|undefined} the alpha3 language code of this locale\n   */\n  getLanguageAlpha3: function getLanguageAlpha3() {\n    return Locale.languageAlpha1ToAlpha3(this.language);\n  },\n\n  /**\n   * Return the ISO 3166 region code for this locale.\n   * @return {string|undefined} the region code of this locale\n   */\n  getRegion: function getRegion() {\n    return this.region;\n  },\n\n  /**\n   * Return the region of this locale as an ISO-3166-alpha3 region code\n   * @return {string|undefined} the alpha3 region code of this locale\n   */\n  getRegionAlpha3: function getRegionAlpha3() {\n    return Locale.regionAlpha2ToAlpha3(this.region);\n  },\n\n  /**\n   * Return the ISO 15924 script code for this locale\n   * @return {string|undefined} the script code of this locale\n   */\n  getScript: function getScript() {\n    return this.script;\n  },\n\n  /**\n   * Return the variant code for this locale\n   * @return {string|undefined} the variant code of this locale, if any\n   */\n  getVariant: function getVariant() {\n    return this.variant;\n  },\n\n  /**\n   * Return the whole locale specifier as a string.\n   * @return {string} the locale specifier\n   */\n  getSpec: function getSpec() {\n    if (!this.spec) this._genSpec();\n    return this.spec;\n  },\n\n  /**\n   * Return the language locale specifier. This includes the\n   * language and the script if it is available. This can be\n   * used to see whether the written language of two locales\n   * match each other regardless of the region or variant.\n   * \n   * @return {string} the language locale specifier\n   */\n  getLangSpec: function getLangSpec() {\n    var spec = this.language;\n\n    if (spec && this.script) {\n      spec += \"-\" + this.script;\n    }\n\n    return spec || \"\";\n  },\n\n  /**\n   * Express this locale object as a string. Currently, this simply calls the getSpec\n   * function to represent the locale as its specifier.\n   * \n   * @return {string} the locale specifier\n   */\n  toString: function toString() {\n    return this.getSpec();\n  },\n\n  /**\n   * Return true if the the other locale is exactly equal to the current one.\n   * @return {boolean} whether or not the other locale is equal to the current one \n   */\n  equals: function equals(other) {\n    return this.language === other.language && this.region === other.region && this.script === other.script && this.variant === other.variant;\n  },\n\n  /**\n   * Return true if the current locale is the special pseudo locale.\n   * @return {boolean} true if the current locale is the special pseudo locale\n   */\n  isPseudo: function isPseudo() {\n    return JSUtils.indexOf(ilib.pseudoLocales, this.spec) > -1;\n  }\n}; // static functions\n\n/**\n * @private\n */\n\nLocale.locales = [// !macro localelist\n];\n/**\n * Return the list of available locales that this iLib file supports.\n * If this copy of ilib is pre-assembled with locale data, then the \n * list locales may be much smaller\n * than the list of all available locales in the iLib repository. The\n * assembly tool will automatically fill in the list for an assembled\n * copy of iLib. If this copy is being used with dynamically loaded \n * data, then you \n * can load any locale that iLib supports. You can form a locale with any \n * combination of a language and region tags that exist in the locale\n * data directory. Language tags are in the root of the locale data dir,\n * and region tags can be found underneath the \"und\" directory. (The \n * region tags are separated into a different dir because the region names \n * conflict with language names on file systems that are case-insensitive.) \n * If you have culled the locale data directory to limit the size of\n * your app, then this function should return only those files that actually exist\n * according to the ilibmanifest.json file in the root of that locale\n * data dir. Make sure your ilibmanifest.json file is up-to-date with\n * respect to the list of files that exist in the locale data dir.\n * \n * @param {boolean} sync if false, load the list of available files from disk\n * asynchronously, otherwise load them synchronously. (Default: true/synchronously)\n * @param {Function} onLoad a callback function to call if asynchronous\n * load was requested and the list of files have been loaded.\n * @return {Array.<string>} this is an array of locale specs for which \n * this iLib file has locale data for\n */\n\nLocale.getAvailableLocales = function (sync, onLoad) {\n  var locales = [];\n\n  if (Locale.locales.length || typeof ilib._load.listAvailableFiles !== 'function') {\n    locales = Locale.locales;\n\n    if (onLoad && typeof onLoad === 'function') {\n      onLoad(locales);\n    }\n  } else {\n    if (typeof sync === 'undefined') {\n      sync = true;\n    }\n\n    ilib._load.listAvailableFiles(sync, function (manifest) {\n      if (manifest) {\n        for (var dir in manifest) {\n          var filelist = manifest[dir];\n\n          for (var i = 0; i < filelist.length; i++) {\n            if (filelist[i].length > 15 && filelist[i].substr(-15) === \"localeinfo.json\") {\n              locales.push(filelist[i].substring(0, filelist[i].length - 16).replace(/\\//g, \"-\"));\n            }\n          }\n        }\n      }\n\n      if (onLoad && typeof onLoad === 'function') {\n        onLoad(locales);\n      }\n    });\n  }\n\n  return locales;\n};\n\nmodule.exports = Locale;","map":{"version":3,"sources":["/home/cdi/SteApp/node_modules/@enact/i18n/ilib/lib/Locale.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ilib","require","JSUtils","Locale","language","region","variant","script","spec","getLocale","parts","split","i","length","_isLanguageCode","_isRegionCode","_isScriptCode","undefined","trim","toLowerCase","toUpperCase","_genSpec","a2toa3regmap","a1toa3langmap","_notLower","str","ch","charCodeAt","_notUpper","_notDigit","charAt","regionAlpha2ToAlpha3","alpha2","languageAlpha1ToAlpha3","alpha1","getLanguage","getLanguageAlpha3","getRegion","getRegionAlpha3","getScript","getVariant","getSpec","getLangSpec","toString","equals","other","isPseudo","indexOf","pseudoLocales","locales","getAvailableLocales","sync","onLoad","_load","listAvailableFiles","manifest","dir","filelist","substr","push","substring","replace","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*\n * Locale.js - Locale specifier definition\n * \n * Copyright Â© 2012-2015, JEDLSoft\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// !depends ilib.js JSUtils.js\nvar ilib = require(\"./ilib.js\");\n\nvar JSUtils = require(\"./JSUtils.js\");\n/**\n * @class\n * Create a new locale instance. Locales are specified either with a specifier string \n * that follows the BCP-47 convention (roughly: \"language-region-script-variant\") or \n * with 4 parameters that specify the language, region, variant, and script individually.<p>\n * \n * The language is given as an ISO 639-1 two-letter, lower-case language code. You\n * can find a full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes</a><p>\n * \n * The region is given as an ISO 3166-1 two-letter, upper-case region code. You can\n * find a full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2</a>.<p>\n * \n * The variant is any string that does not contain a dash which further differentiates\n * locales from each other.<p>\n * \n * The script is given as the ISO 15924 four-letter script code. In some locales,\n * text may be validly written in more than one script. For example, Serbian is often\n * written in both Latin and Cyrillic, though not usually mixed together. You can find a\n * full list of these codes at \n * <a href=\"http://en.wikipedia.org/wiki/ISO_15924#List_of_codes\">http://en.wikipedia.org/wiki/ISO_15924#List_of_codes</a>.<p>\n * \n * As an example in ilib, the script can be used in the date formatter. Dates formatted \n * in Serbian could have day-of-week names or month names written in the Latin\n * or Cyrillic script. Often one script is default such that sr-SR-Latn is the same\n * as sr-SR so the script code \"Latn\" can be left off of the locale spec.<p> \n * \n * Each part is optional, and an empty string in the specifier before or after a \n * dash or as a parameter to the constructor denotes an unspecified value. In this\n * case, many of the ilib functions will treat the locale as generic. For example\n * the locale \"en-\" is equivalent to \"en\" and to \"en--\" and denotes a locale\n * of \"English\" with an unspecified region and variant, which typically matches\n * any region or variant.<p>\n * \n * Without any arguments to the constructor, this function returns the locale of\n * the host Javascript engine.<p>\n * \n * \n * @constructor\n * @param {?string|Locale=} language the ISO 639 2-letter code for the language, or a full \n * locale spec in BCP-47 format, or another Locale instance to copy from\n * @param {string=} region the ISO 3166 2-letter code for the region\n * @param {string=} variant the name of the variant of this locale, if any\n * @param {string=} script the ISO 15924 code of the script for this locale, if any\n */\n\n\nvar Locale = function Locale(language, region, variant, script) {\n  if (typeof region === 'undefined' && typeof variant === 'undefined' && typeof script === 'undefined') {\n    var spec = language || ilib.getLocale();\n\n    if (typeof spec === 'string') {\n      var parts = spec.split('-');\n\n      for (var i = 0; i < parts.length; i++) {\n        if (Locale._isLanguageCode(parts[i])) {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.language = parts[i];\n        } else if (Locale._isRegionCode(parts[i])) {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.region = parts[i];\n        } else if (Locale._isScriptCode(parts[i])) {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.script = parts[i];\n        } else {\n          /** \n           * @private\n           * @type {string|undefined}\n           */\n          this.variant = parts[i];\n        }\n      }\n\n      this.language = this.language || undefined;\n      this.region = this.region || undefined;\n      this.script = this.script || undefined;\n      this.variant = this.variant || undefined;\n    } else if (_typeof(spec) === 'object') {\n      this.language = spec.language || undefined;\n      this.region = spec.region || undefined;\n      this.script = spec.script || undefined;\n      this.variant = spec.variant || undefined;\n    }\n  } else {\n    if (language && typeof language === \"string\") {\n      language = language.trim();\n      this.language = language.length > 0 ? language.toLowerCase() : undefined;\n    } else {\n      this.language = undefined;\n    }\n\n    if (region && typeof region === \"string\") {\n      region = region.trim();\n      this.region = region.length > 0 ? region.toUpperCase() : undefined;\n    } else {\n      this.region = undefined;\n    }\n\n    if (variant && typeof variant === \"string\") {\n      variant = variant.trim();\n      this.variant = variant.length > 0 ? variant : undefined;\n    } else {\n      this.variant = undefined;\n    }\n\n    if (script && typeof script === \"string\") {\n      script = script.trim();\n      this.script = script.length > 0 ? script : undefined;\n    } else {\n      this.script = undefined;\n    }\n  }\n\n  this._genSpec();\n}; // from http://en.wikipedia.org/wiki/ISO_3166-1\n\n\nLocale.a2toa3regmap = {\n  \"AF\": \"AFG\",\n  \"AX\": \"ALA\",\n  \"AL\": \"ALB\",\n  \"DZ\": \"DZA\",\n  \"AS\": \"ASM\",\n  \"AD\": \"AND\",\n  \"AO\": \"AGO\",\n  \"AI\": \"AIA\",\n  \"AQ\": \"ATA\",\n  \"AG\": \"ATG\",\n  \"AR\": \"ARG\",\n  \"AM\": \"ARM\",\n  \"AW\": \"ABW\",\n  \"AU\": \"AUS\",\n  \"AT\": \"AUT\",\n  \"AZ\": \"AZE\",\n  \"BS\": \"BHS\",\n  \"BH\": \"BHR\",\n  \"BD\": \"BGD\",\n  \"BB\": \"BRB\",\n  \"BY\": \"BLR\",\n  \"BE\": \"BEL\",\n  \"BZ\": \"BLZ\",\n  \"BJ\": \"BEN\",\n  \"BM\": \"BMU\",\n  \"BT\": \"BTN\",\n  \"BO\": \"BOL\",\n  \"BQ\": \"BES\",\n  \"BA\": \"BIH\",\n  \"BW\": \"BWA\",\n  \"BV\": \"BVT\",\n  \"BR\": \"BRA\",\n  \"IO\": \"IOT\",\n  \"BN\": \"BRN\",\n  \"BG\": \"BGR\",\n  \"BF\": \"BFA\",\n  \"BI\": \"BDI\",\n  \"KH\": \"KHM\",\n  \"CM\": \"CMR\",\n  \"CA\": \"CAN\",\n  \"CV\": \"CPV\",\n  \"KY\": \"CYM\",\n  \"CF\": \"CAF\",\n  \"TD\": \"TCD\",\n  \"CL\": \"CHL\",\n  \"CN\": \"CHN\",\n  \"CX\": \"CXR\",\n  \"CC\": \"CCK\",\n  \"CO\": \"COL\",\n  \"KM\": \"COM\",\n  \"CG\": \"COG\",\n  \"CD\": \"COD\",\n  \"CK\": \"COK\",\n  \"CR\": \"CRI\",\n  \"CI\": \"CIV\",\n  \"HR\": \"HRV\",\n  \"CU\": \"CUB\",\n  \"CW\": \"CUW\",\n  \"CY\": \"CYP\",\n  \"CZ\": \"CZE\",\n  \"DK\": \"DNK\",\n  \"DJ\": \"DJI\",\n  \"DM\": \"DMA\",\n  \"DO\": \"DOM\",\n  \"EC\": \"ECU\",\n  \"EG\": \"EGY\",\n  \"SV\": \"SLV\",\n  \"GQ\": \"GNQ\",\n  \"ER\": \"ERI\",\n  \"EE\": \"EST\",\n  \"ET\": \"ETH\",\n  \"FK\": \"FLK\",\n  \"FO\": \"FRO\",\n  \"FJ\": \"FJI\",\n  \"FI\": \"FIN\",\n  \"FR\": \"FRA\",\n  \"GF\": \"GUF\",\n  \"PF\": \"PYF\",\n  \"TF\": \"ATF\",\n  \"GA\": \"GAB\",\n  \"GM\": \"GMB\",\n  \"GE\": \"GEO\",\n  \"DE\": \"DEU\",\n  \"GH\": \"GHA\",\n  \"GI\": \"GIB\",\n  \"GR\": \"GRC\",\n  \"GL\": \"GRL\",\n  \"GD\": \"GRD\",\n  \"GP\": \"GLP\",\n  \"GU\": \"GUM\",\n  \"GT\": \"GTM\",\n  \"GG\": \"GGY\",\n  \"GN\": \"GIN\",\n  \"GW\": \"GNB\",\n  \"GY\": \"GUY\",\n  \"HT\": \"HTI\",\n  \"HM\": \"HMD\",\n  \"VA\": \"VAT\",\n  \"HN\": \"HND\",\n  \"HK\": \"HKG\",\n  \"HU\": \"HUN\",\n  \"IS\": \"ISL\",\n  \"IN\": \"IND\",\n  \"ID\": \"IDN\",\n  \"IR\": \"IRN\",\n  \"IQ\": \"IRQ\",\n  \"IE\": \"IRL\",\n  \"IM\": \"IMN\",\n  \"IL\": \"ISR\",\n  \"IT\": \"ITA\",\n  \"JM\": \"JAM\",\n  \"JP\": \"JPN\",\n  \"JE\": \"JEY\",\n  \"JO\": \"JOR\",\n  \"KZ\": \"KAZ\",\n  \"KE\": \"KEN\",\n  \"KI\": \"KIR\",\n  \"KP\": \"PRK\",\n  \"KR\": \"KOR\",\n  \"KW\": \"KWT\",\n  \"KG\": \"KGZ\",\n  \"LA\": \"LAO\",\n  \"LV\": \"LVA\",\n  \"LB\": \"LBN\",\n  \"LS\": \"LSO\",\n  \"LR\": \"LBR\",\n  \"LY\": \"LBY\",\n  \"LI\": \"LIE\",\n  \"LT\": \"LTU\",\n  \"LU\": \"LUX\",\n  \"MO\": \"MAC\",\n  \"MK\": \"MKD\",\n  \"MG\": \"MDG\",\n  \"MW\": \"MWI\",\n  \"MY\": \"MYS\",\n  \"MV\": \"MDV\",\n  \"ML\": \"MLI\",\n  \"MT\": \"MLT\",\n  \"MH\": \"MHL\",\n  \"MQ\": \"MTQ\",\n  \"MR\": \"MRT\",\n  \"MU\": \"MUS\",\n  \"YT\": \"MYT\",\n  \"MX\": \"MEX\",\n  \"FM\": \"FSM\",\n  \"MD\": \"MDA\",\n  \"MC\": \"MCO\",\n  \"MN\": \"MNG\",\n  \"ME\": \"MNE\",\n  \"MS\": \"MSR\",\n  \"MA\": \"MAR\",\n  \"MZ\": \"MOZ\",\n  \"MM\": \"MMR\",\n  \"NA\": \"NAM\",\n  \"NR\": \"NRU\",\n  \"NP\": \"NPL\",\n  \"NL\": \"NLD\",\n  \"NC\": \"NCL\",\n  \"NZ\": \"NZL\",\n  \"NI\": \"NIC\",\n  \"NE\": \"NER\",\n  \"NG\": \"NGA\",\n  \"NU\": \"NIU\",\n  \"NF\": \"NFK\",\n  \"MP\": \"MNP\",\n  \"NO\": \"NOR\",\n  \"OM\": \"OMN\",\n  \"PK\": \"PAK\",\n  \"PW\": \"PLW\",\n  \"PS\": \"PSE\",\n  \"PA\": \"PAN\",\n  \"PG\": \"PNG\",\n  \"PY\": \"PRY\",\n  \"PE\": \"PER\",\n  \"PH\": \"PHL\",\n  \"PN\": \"PCN\",\n  \"PL\": \"POL\",\n  \"PT\": \"PRT\",\n  \"PR\": \"PRI\",\n  \"QA\": \"QAT\",\n  \"RE\": \"REU\",\n  \"RO\": \"ROU\",\n  \"RU\": \"RUS\",\n  \"RW\": \"RWA\",\n  \"BL\": \"BLM\",\n  \"SH\": \"SHN\",\n  \"KN\": \"KNA\",\n  \"LC\": \"LCA\",\n  \"MF\": \"MAF\",\n  \"PM\": \"SPM\",\n  \"VC\": \"VCT\",\n  \"WS\": \"WSM\",\n  \"SM\": \"SMR\",\n  \"ST\": \"STP\",\n  \"SA\": \"SAU\",\n  \"SN\": \"SEN\",\n  \"RS\": \"SRB\",\n  \"SC\": \"SYC\",\n  \"SL\": \"SLE\",\n  \"SG\": \"SGP\",\n  \"SX\": \"SXM\",\n  \"SK\": \"SVK\",\n  \"SI\": \"SVN\",\n  \"SB\": \"SLB\",\n  \"SO\": \"SOM\",\n  \"ZA\": \"ZAF\",\n  \"GS\": \"SGS\",\n  \"SS\": \"SSD\",\n  \"ES\": \"ESP\",\n  \"LK\": \"LKA\",\n  \"SD\": \"SDN\",\n  \"SR\": \"SUR\",\n  \"SJ\": \"SJM\",\n  \"SZ\": \"SWZ\",\n  \"SE\": \"SWE\",\n  \"CH\": \"CHE\",\n  \"SY\": \"SYR\",\n  \"TW\": \"TWN\",\n  \"TJ\": \"TJK\",\n  \"TZ\": \"TZA\",\n  \"TH\": \"THA\",\n  \"TL\": \"TLS\",\n  \"TG\": \"TGO\",\n  \"TK\": \"TKL\",\n  \"TO\": \"TON\",\n  \"TT\": \"TTO\",\n  \"TN\": \"TUN\",\n  \"TR\": \"TUR\",\n  \"TM\": \"TKM\",\n  \"TC\": \"TCA\",\n  \"TV\": \"TUV\",\n  \"UG\": \"UGA\",\n  \"UA\": \"UKR\",\n  \"AE\": \"ARE\",\n  \"GB\": \"GBR\",\n  \"US\": \"USA\",\n  \"UM\": \"UMI\",\n  \"UY\": \"URY\",\n  \"UZ\": \"UZB\",\n  \"VU\": \"VUT\",\n  \"VE\": \"VEN\",\n  \"VN\": \"VNM\",\n  \"VG\": \"VGB\",\n  \"VI\": \"VIR\",\n  \"WF\": \"WLF\",\n  \"EH\": \"ESH\",\n  \"YE\": \"YEM\",\n  \"ZM\": \"ZMB\",\n  \"ZW\": \"ZWE\"\n};\nLocale.a1toa3langmap = {\n  \"ab\": \"abk\",\n  \"aa\": \"aar\",\n  \"af\": \"afr\",\n  \"ak\": \"aka\",\n  \"sq\": \"sqi\",\n  \"am\": \"amh\",\n  \"ar\": \"ara\",\n  \"an\": \"arg\",\n  \"hy\": \"hye\",\n  \"as\": \"asm\",\n  \"av\": \"ava\",\n  \"ae\": \"ave\",\n  \"ay\": \"aym\",\n  \"az\": \"aze\",\n  \"bm\": \"bam\",\n  \"ba\": \"bak\",\n  \"eu\": \"eus\",\n  \"be\": \"bel\",\n  \"bn\": \"ben\",\n  \"bh\": \"bih\",\n  \"bi\": \"bis\",\n  \"bs\": \"bos\",\n  \"br\": \"bre\",\n  \"bg\": \"bul\",\n  \"my\": \"mya\",\n  \"ca\": \"cat\",\n  \"ch\": \"cha\",\n  \"ce\": \"che\",\n  \"ny\": \"nya\",\n  \"zh\": \"zho\",\n  \"cv\": \"chv\",\n  \"kw\": \"cor\",\n  \"co\": \"cos\",\n  \"cr\": \"cre\",\n  \"hr\": \"hrv\",\n  \"cs\": \"ces\",\n  \"da\": \"dan\",\n  \"dv\": \"div\",\n  \"nl\": \"nld\",\n  \"dz\": \"dzo\",\n  \"en\": \"eng\",\n  \"eo\": \"epo\",\n  \"et\": \"est\",\n  \"ee\": \"ewe\",\n  \"fo\": \"fao\",\n  \"fj\": \"fij\",\n  \"fi\": \"fin\",\n  \"fr\": \"fra\",\n  \"ff\": \"ful\",\n  \"gl\": \"glg\",\n  \"ka\": \"kat\",\n  \"de\": \"deu\",\n  \"el\": \"ell\",\n  \"gn\": \"grn\",\n  \"gu\": \"guj\",\n  \"ht\": \"hat\",\n  \"ha\": \"hau\",\n  \"he\": \"heb\",\n  \"hz\": \"her\",\n  \"hi\": \"hin\",\n  \"ho\": \"hmo\",\n  \"hu\": \"hun\",\n  \"ia\": \"ina\",\n  \"id\": \"ind\",\n  \"ie\": \"ile\",\n  \"ga\": \"gle\",\n  \"ig\": \"ibo\",\n  \"ik\": \"ipk\",\n  \"io\": \"ido\",\n  \"is\": \"isl\",\n  \"it\": \"ita\",\n  \"iu\": \"iku\",\n  \"ja\": \"jpn\",\n  \"jv\": \"jav\",\n  \"kl\": \"kal\",\n  \"kn\": \"kan\",\n  \"kr\": \"kau\",\n  \"ks\": \"kas\",\n  \"kk\": \"kaz\",\n  \"km\": \"khm\",\n  \"ki\": \"kik\",\n  \"rw\": \"kin\",\n  \"ky\": \"kir\",\n  \"kv\": \"kom\",\n  \"kg\": \"kon\",\n  \"ko\": \"kor\",\n  \"ku\": \"kur\",\n  \"kj\": \"kua\",\n  \"la\": \"lat\",\n  \"lb\": \"ltz\",\n  \"lg\": \"lug\",\n  \"li\": \"lim\",\n  \"ln\": \"lin\",\n  \"lo\": \"lao\",\n  \"lt\": \"lit\",\n  \"lu\": \"lub\",\n  \"lv\": \"lav\",\n  \"gv\": \"glv\",\n  \"mk\": \"mkd\",\n  \"mg\": \"mlg\",\n  \"ms\": \"msa\",\n  \"ml\": \"mal\",\n  \"mt\": \"mlt\",\n  \"mi\": \"mri\",\n  \"mr\": \"mar\",\n  \"mh\": \"mah\",\n  \"mn\": \"mon\",\n  \"na\": \"nau\",\n  \"nv\": \"nav\",\n  \"nb\": \"nob\",\n  \"nd\": \"nde\",\n  \"ne\": \"nep\",\n  \"ng\": \"ndo\",\n  \"nn\": \"nno\",\n  \"no\": \"nor\",\n  \"ii\": \"iii\",\n  \"nr\": \"nbl\",\n  \"oc\": \"oci\",\n  \"oj\": \"oji\",\n  \"cu\": \"chu\",\n  \"om\": \"orm\",\n  \"or\": \"ori\",\n  \"os\": \"oss\",\n  \"pa\": \"pan\",\n  \"pi\": \"pli\",\n  \"fa\": \"fas\",\n  \"pl\": \"pol\",\n  \"ps\": \"pus\",\n  \"pt\": \"por\",\n  \"qu\": \"que\",\n  \"rm\": \"roh\",\n  \"rn\": \"run\",\n  \"ro\": \"ron\",\n  \"ru\": \"rus\",\n  \"sa\": \"san\",\n  \"sc\": \"srd\",\n  \"sd\": \"snd\",\n  \"se\": \"sme\",\n  \"sm\": \"smo\",\n  \"sg\": \"sag\",\n  \"sr\": \"srp\",\n  \"gd\": \"gla\",\n  \"sn\": \"sna\",\n  \"si\": \"sin\",\n  \"sk\": \"slk\",\n  \"sl\": \"slv\",\n  \"so\": \"som\",\n  \"st\": \"sot\",\n  \"es\": \"spa\",\n  \"su\": \"sun\",\n  \"sw\": \"swa\",\n  \"ss\": \"ssw\",\n  \"sv\": \"swe\",\n  \"ta\": \"tam\",\n  \"te\": \"tel\",\n  \"tg\": \"tgk\",\n  \"th\": \"tha\",\n  \"ti\": \"tir\",\n  \"bo\": \"bod\",\n  \"tk\": \"tuk\",\n  \"tl\": \"tgl\",\n  \"tn\": \"tsn\",\n  \"to\": \"ton\",\n  \"tr\": \"tur\",\n  \"ts\": \"tso\",\n  \"tt\": \"tat\",\n  \"tw\": \"twi\",\n  \"ty\": \"tah\",\n  \"ug\": \"uig\",\n  \"uk\": \"ukr\",\n  \"ur\": \"urd\",\n  \"uz\": \"uzb\",\n  \"ve\": \"ven\",\n  \"vi\": \"vie\",\n  \"vo\": \"vol\",\n  \"wa\": \"wln\",\n  \"cy\": \"cym\",\n  \"wo\": \"wol\",\n  \"fy\": \"fry\",\n  \"xh\": \"xho\",\n  \"yi\": \"yid\",\n  \"yo\": \"yor\",\n  \"za\": \"zha\",\n  \"zu\": \"zul\"\n};\n/**\n * Tell whether or not the str does not start with a lower case ASCII char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is not a lower case ASCII char\n */\n\nLocale._notLower = function (str) {\n  // do this with ASCII only so we don't have to depend on the CType functions\n  var ch = str.charCodeAt(0);\n  return ch < 97 || ch > 122;\n};\n/**\n * Tell whether or not the str does not start with an upper case ASCII char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is a not an upper case ASCII char\n */\n\n\nLocale._notUpper = function (str) {\n  // do this with ASCII only so we don't have to depend on the CType functions\n  var ch = str.charCodeAt(0);\n  return ch < 65 || ch > 90;\n};\n/**\n * Tell whether or not the str does not start with a digit char.\n * @private\n * @param {string} str the char to check\n * @return {boolean} true if the char is a not an upper case ASCII char\n */\n\n\nLocale._notDigit = function (str) {\n  // do this with ASCII only so we don't have to depend on the CType functions\n  var ch = str.charCodeAt(0);\n  return ch < 48 || ch > 57;\n};\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 639 language code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\n\n\nLocale._isLanguageCode = function (str) {\n  if (typeof str === 'undefined' || str.length < 2 || str.length > 3) {\n    return false;\n  }\n\n  for (var i = 0; i < str.length; i++) {\n    if (Locale._notLower(str.charAt(i))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 3166 2-letter region code or M.49 3-digit region code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\n\n\nLocale._isRegionCode = function (str) {\n  if (typeof str === 'undefined' || str.length < 2 || str.length > 3) {\n    return false;\n  }\n\n  if (str.length === 2) {\n    for (var i = 0; i < str.length; i++) {\n      if (Locale._notUpper(str.charAt(i))) {\n        return false;\n      }\n    }\n  } else {\n    for (var i = 0; i < str.length; i++) {\n      if (Locale._notDigit(str.charAt(i))) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n/**\n * Tell whether or not the given string has the correct syntax to be \n * an ISO 639 language code.\n * \n * @private\n * @param {string} str the string to parse\n * @return {boolean} true if the string could syntactically be a language code.\n */\n\n\nLocale._isScriptCode = function (str) {\n  if (typeof str === 'undefined' || str.length !== 4 || Locale._notUpper(str.charAt(0))) {\n    return false;\n  }\n\n  for (var i = 1; i < 4; i++) {\n    if (Locale._notLower(str.charAt(i))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Return the ISO-3166 alpha3 equivalent region code for the given ISO 3166 alpha2\n * region code. If the given alpha2 code is not found, this function returns its\n * argument unchanged.\n * @static\n * @param {string|undefined} alpha2 the alpha2 code to map\n * @return {string|undefined} the alpha3 equivalent of the given alpha2 code, or the alpha2\n * parameter if the alpha2 value is not found\n */\n\n\nLocale.regionAlpha2ToAlpha3 = function (alpha2) {\n  return Locale.a2toa3regmap[alpha2] || alpha2;\n};\n/**\n * Return the ISO-639 alpha3 equivalent language code for the given ISO 639 alpha1\n * language code. If the given alpha1 code is not found, this function returns its\n * argument unchanged.\n * @static\n * @param {string|undefined} alpha1 the alpha1 code to map\n * @return {string|undefined} the alpha3 equivalent of the given alpha1 code, or the alpha1\n * parameter if the alpha1 value is not found\n */\n\n\nLocale.languageAlpha1ToAlpha3 = function (alpha1) {\n  return Locale.a1toa3langmap[alpha1] || alpha1;\n};\n\nLocale.prototype = {\n  /**\n   * @private\n   */\n  _genSpec: function _genSpec() {\n    this.spec = this.language || \"\";\n\n    if (this.script) {\n      if (this.spec.length > 0) {\n        this.spec += \"-\";\n      }\n\n      this.spec += this.script;\n    }\n\n    if (this.region) {\n      if (this.spec.length > 0) {\n        this.spec += \"-\";\n      }\n\n      this.spec += this.region;\n    }\n\n    if (this.variant) {\n      if (this.spec.length > 0) {\n        this.spec += \"-\";\n      }\n\n      this.spec += this.variant;\n    }\n  },\n\n  /**\n   * Return the ISO 639 language code for this locale. \n   * @return {string|undefined} the language code for this locale \n   */\n  getLanguage: function getLanguage() {\n    return this.language;\n  },\n\n  /**\n   * Return the language of this locale as an ISO-639-alpha3 language code\n   * @return {string|undefined} the alpha3 language code of this locale\n   */\n  getLanguageAlpha3: function getLanguageAlpha3() {\n    return Locale.languageAlpha1ToAlpha3(this.language);\n  },\n\n  /**\n   * Return the ISO 3166 region code for this locale.\n   * @return {string|undefined} the region code of this locale\n   */\n  getRegion: function getRegion() {\n    return this.region;\n  },\n\n  /**\n   * Return the region of this locale as an ISO-3166-alpha3 region code\n   * @return {string|undefined} the alpha3 region code of this locale\n   */\n  getRegionAlpha3: function getRegionAlpha3() {\n    return Locale.regionAlpha2ToAlpha3(this.region);\n  },\n\n  /**\n   * Return the ISO 15924 script code for this locale\n   * @return {string|undefined} the script code of this locale\n   */\n  getScript: function getScript() {\n    return this.script;\n  },\n\n  /**\n   * Return the variant code for this locale\n   * @return {string|undefined} the variant code of this locale, if any\n   */\n  getVariant: function getVariant() {\n    return this.variant;\n  },\n\n  /**\n   * Return the whole locale specifier as a string.\n   * @return {string} the locale specifier\n   */\n  getSpec: function getSpec() {\n    if (!this.spec) this._genSpec();\n    return this.spec;\n  },\n\n  /**\n   * Return the language locale specifier. This includes the\n   * language and the script if it is available. This can be\n   * used to see whether the written language of two locales\n   * match each other regardless of the region or variant.\n   * \n   * @return {string} the language locale specifier\n   */\n  getLangSpec: function getLangSpec() {\n    var spec = this.language;\n\n    if (spec && this.script) {\n      spec += \"-\" + this.script;\n    }\n\n    return spec || \"\";\n  },\n\n  /**\n   * Express this locale object as a string. Currently, this simply calls the getSpec\n   * function to represent the locale as its specifier.\n   * \n   * @return {string} the locale specifier\n   */\n  toString: function toString() {\n    return this.getSpec();\n  },\n\n  /**\n   * Return true if the the other locale is exactly equal to the current one.\n   * @return {boolean} whether or not the other locale is equal to the current one \n   */\n  equals: function equals(other) {\n    return this.language === other.language && this.region === other.region && this.script === other.script && this.variant === other.variant;\n  },\n\n  /**\n   * Return true if the current locale is the special pseudo locale.\n   * @return {boolean} true if the current locale is the special pseudo locale\n   */\n  isPseudo: function isPseudo() {\n    return JSUtils.indexOf(ilib.pseudoLocales, this.spec) > -1;\n  }\n}; // static functions\n\n/**\n * @private\n */\n\nLocale.locales = [// !macro localelist\n];\n/**\n * Return the list of available locales that this iLib file supports.\n * If this copy of ilib is pre-assembled with locale data, then the \n * list locales may be much smaller\n * than the list of all available locales in the iLib repository. The\n * assembly tool will automatically fill in the list for an assembled\n * copy of iLib. If this copy is being used with dynamically loaded \n * data, then you \n * can load any locale that iLib supports. You can form a locale with any \n * combination of a language and region tags that exist in the locale\n * data directory. Language tags are in the root of the locale data dir,\n * and region tags can be found underneath the \"und\" directory. (The \n * region tags are separated into a different dir because the region names \n * conflict with language names on file systems that are case-insensitive.) \n * If you have culled the locale data directory to limit the size of\n * your app, then this function should return only those files that actually exist\n * according to the ilibmanifest.json file in the root of that locale\n * data dir. Make sure your ilibmanifest.json file is up-to-date with\n * respect to the list of files that exist in the locale data dir.\n * \n * @param {boolean} sync if false, load the list of available files from disk\n * asynchronously, otherwise load them synchronously. (Default: true/synchronously)\n * @param {Function} onLoad a callback function to call if asynchronous\n * load was requested and the list of files have been loaded.\n * @return {Array.<string>} this is an array of locale specs for which \n * this iLib file has locale data for\n */\n\nLocale.getAvailableLocales = function (sync, onLoad) {\n  var locales = [];\n\n  if (Locale.locales.length || typeof ilib._load.listAvailableFiles !== 'function') {\n    locales = Locale.locales;\n\n    if (onLoad && typeof onLoad === 'function') {\n      onLoad(locales);\n    }\n  } else {\n    if (typeof sync === 'undefined') {\n      sync = true;\n    }\n\n    ilib._load.listAvailableFiles(sync, function (manifest) {\n      if (manifest) {\n        for (var dir in manifest) {\n          var filelist = manifest[dir];\n\n          for (var i = 0; i < filelist.length; i++) {\n            if (filelist[i].length > 15 && filelist[i].substr(-15) === \"localeinfo.json\") {\n              locales.push(filelist[i].substring(0, filelist[i].length - 16).replace(/\\//g, \"-\"));\n            }\n          }\n        }\n      }\n\n      if (onLoad && typeof onLoad === 'function') {\n        onLoad(locales);\n      }\n    });\n  }\n\n  return locales;\n};\n\nmodule.exports = Locale;"]},"metadata":{},"sourceType":"module"}