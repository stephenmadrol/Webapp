{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shape = exports.SlideBottomArranger = exports.SlideTopArranger = exports.SlideLeftArranger = exports.SlideRightArranger = exports.SlideArranger = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _arrange = require(\"./arrange\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/*\n * Exports a number of pre-defined arrangers for use with {@link ui/ViewManager}.\n * note: not jsdoc on purpose\n */\n\n/**\n * An object with callback functions to arrange views within {@link ui/ViewManager.ViewManager}.\n *\n * @typedef {Object} Arranger\n * @property {Function} enter\n * @property {Function} leave\n * @property {Function} stay\n * @memberof ui/ViewManager\n */\n\n/**\n * A basic arranger that must be configured with `enter` and `leave` direction\n *\n * @function\n * @memberof ui/ViewManager\n * @param {Object}    config    Configuration object including `amount`, `enter` and `leave` properties\n * @returns {Object}            An arranger\n * @public\n */\n\n\nvar SlideArranger = function SlideArranger(_ref) {\n  var _ref$amount = _ref.amount,\n      amount = _ref$amount === void 0 ? 100 : _ref$amount,\n      enter = _ref.enter,\n      leave = _ref.leave;\n  return {\n    enter: (0, _arrange.reverse)((0, _arrange.compose)(_arrange.clearTransform, (0, _arrange.slideInPartial)(amount, enter), _arrange.accelerate)),\n    leave: (0, _arrange.reverse)((0, _arrange.compose)(_arrange.clearTransform, (0, _arrange.slideOutPartial)(amount, leave), _arrange.accelerate))\n  };\n};\n/**\n * An arranger that enters from the left and leaves to the right.\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\n\nexports.SlideArranger = SlideArranger;\nvar SlideRightArranger = SlideArranger({\n  enter: 'left',\n  leave: 'right'\n});\n/**\n * An arranger that enters from the right and leaves to the left..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideRightArranger = SlideRightArranger;\nvar SlideLeftArranger = SlideArranger({\n  enter: 'right',\n  leave: 'left'\n});\n/**\n * An arranger that enters from the bottom and leaves to the top..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideLeftArranger = SlideLeftArranger;\nvar SlideTopArranger = SlideArranger({\n  enter: 'bottom',\n  leave: 'top'\n});\n/**\n * An arranger that enters from the top and leaves to the bottom..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideTopArranger = SlideTopArranger;\nvar SlideBottomArranger = SlideArranger({\n  enter: 'top',\n  leave: 'bottom'\n});\n/**\n * propType validation for Arranger transitions\n * @memberof ui/ViewManager\n * @private\n */\n\nexports.SlideBottomArranger = SlideBottomArranger;\n\nvar shape = _propTypes[\"default\"].shape({\n  enter: _propTypes[\"default\"].func,\n  leave: _propTypes[\"default\"].func\n});\n\nexports.shape = shape;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\ui\\ViewManager\\Arranger.js"],"names":["Object","defineProperty","exports","value","shape","SlideBottomArranger","SlideTopArranger","SlideLeftArranger","SlideRightArranger","SlideArranger","_propTypes","_interopRequireDefault","require","_arrange","obj","__esModule","_ref","_ref$amount","amount","enter","leave","reverse","compose","clearTransform","slideInPartial","accelerate","slideOutPartial","func"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shape = exports.SlideBottomArranger = exports.SlideTopArranger = exports.SlideLeftArranger = exports.SlideRightArranger = exports.SlideArranger = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _arrange = require(\"./arrange\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*\n * Exports a number of pre-defined arrangers for use with {@link ui/ViewManager}.\n * note: not jsdoc on purpose\n */\n\n/**\n * An object with callback functions to arrange views within {@link ui/ViewManager.ViewManager}.\n *\n * @typedef {Object} Arranger\n * @property {Function} enter\n * @property {Function} leave\n * @property {Function} stay\n * @memberof ui/ViewManager\n */\n\n/**\n * A basic arranger that must be configured with `enter` and `leave` direction\n *\n * @function\n * @memberof ui/ViewManager\n * @param {Object}    config    Configuration object including `amount`, `enter` and `leave` properties\n * @returns {Object}            An arranger\n * @public\n */\nvar SlideArranger = function SlideArranger(_ref) {\n  var _ref$amount = _ref.amount,\n      amount = _ref$amount === void 0 ? 100 : _ref$amount,\n      enter = _ref.enter,\n      leave = _ref.leave;\n  return {\n    enter: (0, _arrange.reverse)((0, _arrange.compose)(_arrange.clearTransform, (0, _arrange.slideInPartial)(amount, enter), _arrange.accelerate)),\n    leave: (0, _arrange.reverse)((0, _arrange.compose)(_arrange.clearTransform, (0, _arrange.slideOutPartial)(amount, leave), _arrange.accelerate))\n  };\n};\n/**\n * An arranger that enters from the left and leaves to the right.\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\n\nexports.SlideArranger = SlideArranger;\nvar SlideRightArranger = SlideArranger({\n  enter: 'left',\n  leave: 'right'\n});\n/**\n * An arranger that enters from the right and leaves to the left..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideRightArranger = SlideRightArranger;\nvar SlideLeftArranger = SlideArranger({\n  enter: 'right',\n  leave: 'left'\n});\n/**\n * An arranger that enters from the bottom and leaves to the top..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideLeftArranger = SlideLeftArranger;\nvar SlideTopArranger = SlideArranger({\n  enter: 'bottom',\n  leave: 'top'\n});\n/**\n * An arranger that enters from the top and leaves to the bottom..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideTopArranger = SlideTopArranger;\nvar SlideBottomArranger = SlideArranger({\n  enter: 'top',\n  leave: 'bottom'\n});\n/**\n * propType validation for Arranger transitions\n * @memberof ui/ViewManager\n * @private\n */\n\nexports.SlideBottomArranger = SlideBottomArranger;\n\nvar shape = _propTypes[\"default\"].shape({\n  enter: _propTypes[\"default\"].func,\n  leave: _propTypes[\"default\"].func\n});\n\nexports.shape = shape;"]},"metadata":{},"sourceType":"module"}