{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detect = detect;\nexports.platform = exports[\"default\"] = void 0;\n/**\n * Utilities for webOS platform detection.\n *\n * @module webos/platform\n * @exports detect\n * @exports platform\n */\n\nfunction is(type) {\n  return window.navigator.userAgent.indexOf(type) > -1;\n}\n\nvar _platform;\n/**\n * Returns the {@link webos/platform.platform} object.\n *\n * @function\n * @returns {Object} The {@link webos/platform.platform} object\n * @memberof webos/platform\n * @public\n */\n\n\nfunction detect() {\n  if (_platform) {\n    // if we've already determined the platform, we'll use that determination\n    return _platform;\n  } else if (typeof window === 'undefined' || !window.PalmSystem) {\n    // if window isn't available (in prerendering or snapshot runs), bail out early\n    return {\n      unknown: true\n    };\n  } // build out our cached platform determination for future usage\n\n\n  _platform = {};\n\n  if (is('SmartWatch')) {\n    _platform.watch = true;\n  } else if (is('SmartTV') || is('Large Screen')) {\n    _platform.tv = true;\n  } else {\n    try {\n      var legacyInfo = JSON.parse(window.PalmSystem.deviceInfo || '{}');\n\n      if (legacyInfo.platformVersionMajor && legacyInfo.platformVersionMinor) {\n        var major = parseInt(legacyInfo.platformVersionMajor);\n        var minor = parseInt(legacyInfo.platformVersionMinor);\n\n        if (major < 3 || major === 3 && minor <= 0) {\n          _platform.legacy = true;\n        } else {\n          _platform.open = true;\n        }\n      } else {\n        _platform.unknown = true;\n      }\n    } catch (e) {\n      _platform.open = true;\n    } // TODO: clean these up. They shouldn't be here\n\n\n    window.Mojo = window.Mojo || {\n      relaunch: function relaunch() {}\n    };\n    if (window.PalmSystem.stageReady) window.PalmSystem.stageReady();\n  }\n\n  return _platform;\n}\n/**\n * Provides identification of webOS variants.\n *\n * @readonly\n * @type {Object}\n * @property {Boolean} tv `true` for LG webOS SmartTV\n * @property {Boolean} watch `true` for LG webOS SmartWatch\n * @property {Boolean} open `true` for Open webOS\n * @property {Boolean} legacy `true` for legacy webOS (Palm and HP hardware)\n * @property {Boolean} unknown `true` for any unknown system\n * @memberof webos/platform\n * @public\n */\n\n\nvar platform = {};\nexports.platform = platform;\n['tv', 'watch', 'open', 'legacy', 'unknown'].forEach(function (name) {\n  Object.defineProperty(platform, name, {\n    enumerable: true,\n    get: function get() {\n      var p = detect();\n      return p[name];\n    }\n  });\n});\nvar _default = platform;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/cdi/stephen/node_modules/@enact/webos/platform/platform.js"],"names":["Object","defineProperty","exports","value","detect","platform","is","type","window","navigator","userAgent","indexOf","_platform","PalmSystem","unknown","watch","tv","legacyInfo","JSON","parse","deviceInfo","platformVersionMajor","platformVersionMinor","major","parseInt","minor","legacy","open","e","Mojo","relaunch","stageReady","forEach","name","enumerable","get","p","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBA,MAAjB;AACAF,OAAO,CAACG,QAAR,GAAmBH,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA7C;AAEA;;;;;;;;AAOA,SAASI,EAAT,CAAYC,IAAZ,EAAkB;AAChB,SAAOC,MAAM,CAACC,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmCJ,IAAnC,IAA2C,CAAC,CAAnD;AACD;;AAED,IAAIK,SAAJ;AACA;;;;;;;;;;AAUA,SAASR,MAAT,GAAkB;AAChB,MAAIQ,SAAJ,EAAe;AACb;AACA,WAAOA,SAAP;AACD,GAHD,MAGO,IAAI,OAAOJ,MAAP,KAAkB,WAAlB,IAAiC,CAACA,MAAM,CAACK,UAA7C,EAAyD;AAC9D;AACA,WAAO;AACLC,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD,GATe,CASd;;;AAGFF,EAAAA,SAAS,GAAG,EAAZ;;AAEA,MAAIN,EAAE,CAAC,YAAD,CAAN,EAAsB;AACpBM,IAAAA,SAAS,CAACG,KAAV,GAAkB,IAAlB;AACD,GAFD,MAEO,IAAIT,EAAE,CAAC,SAAD,CAAF,IAAiBA,EAAE,CAAC,cAAD,CAAvB,EAAyC;AAC9CM,IAAAA,SAAS,CAACI,EAAV,GAAe,IAAf;AACD,GAFM,MAEA;AACL,QAAI;AACF,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWX,MAAM,CAACK,UAAP,CAAkBO,UAAlB,IAAgC,IAA3C,CAAjB;;AAEA,UAAIH,UAAU,CAACI,oBAAX,IAAmCJ,UAAU,CAACK,oBAAlD,EAAwE;AACtE,YAAIC,KAAK,GAAGC,QAAQ,CAACP,UAAU,CAACI,oBAAZ,CAApB;AACA,YAAII,KAAK,GAAGD,QAAQ,CAACP,UAAU,CAACK,oBAAZ,CAApB;;AAEA,YAAIC,KAAK,GAAG,CAAR,IAAaA,KAAK,KAAK,CAAV,IAAeE,KAAK,IAAI,CAAzC,EAA4C;AAC1Cb,UAAAA,SAAS,CAACc,MAAV,GAAmB,IAAnB;AACD,SAFD,MAEO;AACLd,UAAAA,SAAS,CAACe,IAAV,GAAiB,IAAjB;AACD;AACF,OATD,MASO;AACLf,QAAAA,SAAS,CAACE,OAAV,GAAoB,IAApB;AACD;AACF,KAfD,CAeE,OAAOc,CAAP,EAAU;AACVhB,MAAAA,SAAS,CAACe,IAAV,GAAiB,IAAjB;AACD,KAlBI,CAkBH;;;AAGFnB,IAAAA,MAAM,CAACqB,IAAP,GAAcrB,MAAM,CAACqB,IAAP,IAAe;AAC3BC,MAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB,CAAE;AADL,KAA7B;AAGA,QAAItB,MAAM,CAACK,UAAP,CAAkBkB,UAAtB,EAAkCvB,MAAM,CAACK,UAAP,CAAkBkB,UAAlB;AACnC;;AAED,SAAOnB,SAAP;AACD;AACD;;;;;;;;;;;;;;;AAeA,IAAIP,QAAQ,GAAG,EAAf;AACAH,OAAO,CAACG,QAAR,GAAmBA,QAAnB;AACA,CAAC,IAAD,EAAO,OAAP,EAAgB,MAAhB,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C2B,OAA7C,CAAqD,UAAUC,IAAV,EAAgB;AACnEjC,EAAAA,MAAM,CAACC,cAAP,CAAsBI,QAAtB,EAAgC4B,IAAhC,EAAsC;AACpCC,IAAAA,UAAU,EAAE,IADwB;AAEpCC,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,UAAIC,CAAC,GAAGhC,MAAM,EAAd;AACA,aAAOgC,CAAC,CAACH,IAAD,CAAR;AACD;AALmC,GAAtC;AAOD,CARD;AASA,IAAII,QAAQ,GAAGhC,QAAf;AACAH,OAAO,CAAC,SAAD,CAAP,GAAqBmC,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detect = detect;\nexports.platform = exports[\"default\"] = void 0;\n\n/**\n * Utilities for webOS platform detection.\n *\n * @module webos/platform\n * @exports detect\n * @exports platform\n */\nfunction is(type) {\n  return window.navigator.userAgent.indexOf(type) > -1;\n}\n\nvar _platform;\n/**\n * Returns the {@link webos/platform.platform} object.\n *\n * @function\n * @returns {Object} The {@link webos/platform.platform} object\n * @memberof webos/platform\n * @public\n */\n\n\nfunction detect() {\n  if (_platform) {\n    // if we've already determined the platform, we'll use that determination\n    return _platform;\n  } else if (typeof window === 'undefined' || !window.PalmSystem) {\n    // if window isn't available (in prerendering or snapshot runs), bail out early\n    return {\n      unknown: true\n    };\n  } // build out our cached platform determination for future usage\n\n\n  _platform = {};\n\n  if (is('SmartWatch')) {\n    _platform.watch = true;\n  } else if (is('SmartTV') || is('Large Screen')) {\n    _platform.tv = true;\n  } else {\n    try {\n      var legacyInfo = JSON.parse(window.PalmSystem.deviceInfo || '{}');\n\n      if (legacyInfo.platformVersionMajor && legacyInfo.platformVersionMinor) {\n        var major = parseInt(legacyInfo.platformVersionMajor);\n        var minor = parseInt(legacyInfo.platformVersionMinor);\n\n        if (major < 3 || major === 3 && minor <= 0) {\n          _platform.legacy = true;\n        } else {\n          _platform.open = true;\n        }\n      } else {\n        _platform.unknown = true;\n      }\n    } catch (e) {\n      _platform.open = true;\n    } // TODO: clean these up. They shouldn't be here\n\n\n    window.Mojo = window.Mojo || {\n      relaunch: function relaunch() {}\n    };\n    if (window.PalmSystem.stageReady) window.PalmSystem.stageReady();\n  }\n\n  return _platform;\n}\n/**\n * Provides identification of webOS variants.\n *\n * @readonly\n * @type {Object}\n * @property {Boolean} tv `true` for LG webOS SmartTV\n * @property {Boolean} watch `true` for LG webOS SmartWatch\n * @property {Boolean} open `true` for Open webOS\n * @property {Boolean} legacy `true` for legacy webOS (Palm and HP hardware)\n * @property {Boolean} unknown `true` for any unknown system\n * @memberof webos/platform\n * @public\n */\n\n\nvar platform = {};\nexports.platform = platform;\n['tv', 'watch', 'open', 'legacy', 'unknown'].forEach(function (name) {\n  Object.defineProperty(platform, name, {\n    enumerable: true,\n    get: function get() {\n      var p = detect();\n      return p[name];\n    }\n  });\n});\nvar _default = platform;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}