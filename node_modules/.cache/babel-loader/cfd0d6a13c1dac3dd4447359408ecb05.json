{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onWindowFocus = void 0;\n\nvar _dispatcher = require(\"@enact/core/dispatcher\");\n\nvar _snapshot = require(\"@enact/core/snapshot\");\n\nvar focused = false;\nvar queue = new Set();\n\nvar invoke = function invoke(fn) {\n  try {\n    fn();\n  } catch (e) {// failing silently\n  }\n};\n\nvar flush = function flush() {\n  return queue.forEach(invoke);\n};\n\nvar onWindowFocus = function onWindowFocus(handler) {\n  if (focused) {\n    handler();\n  } else {\n    queue.add(handler);\n  }\n};\n\nexports.onWindowFocus = onWindowFocus;\n(0, _snapshot.onWindowReady)(function () {\n  focused = true; // Treat window as initially focused once ready\n\n  flush();\n  (0, _dispatcher.on)('focus', function () {\n    focused = true;\n    flush();\n  }, window);\n  (0, _dispatcher.on)('blur', function () {\n    focused = false;\n  }, window);\n});","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteAPp\\node_modules\\@enact\\i18n\\I18nDecorator\\windowFocus.js"],"names":["Object","defineProperty","exports","value","onWindowFocus","_dispatcher","require","_snapshot","focused","queue","Set","invoke","fn","e","flush","forEach","handler","add","onWindowReady","on","window"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,wBAAD,CAAzB;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,sBAAD,CAAvB;;AAEA,IAAIE,OAAO,GAAG,KAAd;AACA,IAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ;;AAEA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,EAAhB,EAAoB;AAC/B,MAAI;AACFA,IAAAA,EAAE;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU,CAAC;AACZ;AACF,CALD;;AAOA,IAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,SAAOL,KAAK,CAACM,OAAN,CAAcJ,MAAd,CAAP;AACD,CAFD;;AAIA,IAAIP,aAAa,GAAG,SAASA,aAAT,CAAuBY,OAAvB,EAAgC;AAClD,MAAIR,OAAJ,EAAa;AACXQ,IAAAA,OAAO;AACR,GAFD,MAEO;AACLP,IAAAA,KAAK,CAACQ,GAAN,CAAUD,OAAV;AACD;AACF,CAND;;AAQAd,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACA,CAAC,GAAGG,SAAS,CAACW,aAAd,EAA6B,YAAY;AACvCV,EAAAA,OAAO,GAAG,IAAV,CADuC,CACvB;;AAEhBM,EAAAA,KAAK;AACL,GAAC,GAAGT,WAAW,CAACc,EAAhB,EAAoB,OAApB,EAA6B,YAAY;AACvCX,IAAAA,OAAO,GAAG,IAAV;AACAM,IAAAA,KAAK;AACN,GAHD,EAGGM,MAHH;AAIA,GAAC,GAAGf,WAAW,CAACc,EAAhB,EAAoB,MAApB,EAA4B,YAAY;AACtCX,IAAAA,OAAO,GAAG,KAAV;AACD,GAFD,EAEGY,MAFH;AAGD,CAXD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onWindowFocus = void 0;\n\nvar _dispatcher = require(\"@enact/core/dispatcher\");\n\nvar _snapshot = require(\"@enact/core/snapshot\");\n\nvar focused = false;\nvar queue = new Set();\n\nvar invoke = function invoke(fn) {\n  try {\n    fn();\n  } catch (e) {// failing silently\n  }\n};\n\nvar flush = function flush() {\n  return queue.forEach(invoke);\n};\n\nvar onWindowFocus = function onWindowFocus(handler) {\n  if (focused) {\n    handler();\n  } else {\n    queue.add(handler);\n  }\n};\n\nexports.onWindowFocus = onWindowFocus;\n(0, _snapshot.onWindowReady)(function () {\n  focused = true; // Treat window as initially focused once ready\n\n  flush();\n  (0, _dispatcher.on)('focus', function () {\n    focused = true;\n    flush();\n  }, window);\n  (0, _dispatcher.on)('blur', function () {\n    focused = false;\n  }, window);\n});"]},"metadata":{},"sourceType":"module"}