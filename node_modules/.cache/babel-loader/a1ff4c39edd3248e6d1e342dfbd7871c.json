{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexedBreadcrumbs = exports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Breadcrumb = _interopRequireDefault(require(\"./Breadcrumb\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Generates an array of at most `max` breadcrumbs with zero-padded labels prefixed by <\n *\n * @param {Number} index      Index of active breadcrumb\n * @param {Number} max        Maximum number of breadcrumbs to dispaly\n * @param {Function} onSelect Handler for selecting a breadcrumb\n * @returns {React.element[]} Array of breadcrumbs\n * @private\n */\n\n\nvar IndexedBreadcrumbs = function IndexedBreadcrumbs(id, index, max, onSelect) {\n  var breadcrumbs = new Array(index < max ? index : max);\n  var start = Math.max(index - max, 0);\n\n  for (var i = start; i < index; i++) {\n    var label = (i < 9 ? '0' : '') + (i + 1);\n    breadcrumbs[index - i - 1] = _react[\"default\"].createElement(_Breadcrumb[\"default\"], {\n      onSelect: onSelect,\n      id: \"\".concat(id, \"_bc_\").concat(i),\n      index: i,\n      key: i\n    }, \"< \", label);\n  }\n\n  return breadcrumbs;\n};\n\nexports.IndexedBreadcrumbs = IndexedBreadcrumbs;\nvar _default = IndexedBreadcrumbs;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteApp\\node_modules\\@enact\\moonstone\\Panels\\IndexedBreadcrumbs.js"],"names":["Object","defineProperty","exports","value","IndexedBreadcrumbs","_react","_interopRequireDefault","require","_Breadcrumb","obj","__esModule","id","index","max","onSelect","breadcrumbs","Array","start","Math","i","label","createElement","concat","key","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAAvD;;AAEA,IAAIG,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIC,WAAW,GAAGF,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;;;;;;;;;;;AASA,IAAIL,kBAAkB,GAAG,SAASA,kBAAT,CAA4BO,EAA5B,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4CC,QAA5C,EAAsD;AAC7E,MAAIC,WAAW,GAAG,IAAIC,KAAJ,CAAUJ,KAAK,GAAGC,GAAR,GAAcD,KAAd,GAAsBC,GAAhC,CAAlB;AACA,MAAII,KAAK,GAAGC,IAAI,CAACL,GAAL,CAASD,KAAK,GAAGC,GAAjB,EAAsB,CAAtB,CAAZ;;AAEA,OAAK,IAAIM,CAAC,GAAGF,KAAb,EAAoBE,CAAC,GAAGP,KAAxB,EAA+BO,CAAC,EAAhC,EAAoC;AAClC,QAAIC,KAAK,GAAG,CAACD,CAAC,GAAG,CAAJ,GAAQ,GAAR,GAAc,EAAf,KAAsBA,CAAC,GAAG,CAA1B,CAAZ;AACAJ,IAAAA,WAAW,CAACH,KAAK,GAAGO,CAAR,GAAY,CAAb,CAAX,GAA6Bd,MAAM,CAAC,SAAD,CAAN,CAAkBgB,aAAlB,CAAgCb,WAAW,CAAC,SAAD,CAA3C,EAAwD;AACnFM,MAAAA,QAAQ,EAAEA,QADyE;AAEnFH,MAAAA,EAAE,EAAE,GAAGW,MAAH,CAAUX,EAAV,EAAc,MAAd,EAAsBW,MAAtB,CAA6BH,CAA7B,CAF+E;AAGnFP,MAAAA,KAAK,EAAEO,CAH4E;AAInFI,MAAAA,GAAG,EAAEJ;AAJ8E,KAAxD,EAK1B,IAL0B,EAKpBC,KALoB,CAA7B;AAMD;;AAED,SAAOL,WAAP;AACD,CAfD;;AAiBAb,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;AACA,IAAIoB,QAAQ,GAAGpB,kBAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBsB,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IndexedBreadcrumbs = exports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Breadcrumb = _interopRequireDefault(require(\"./Breadcrumb\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Generates an array of at most `max` breadcrumbs with zero-padded labels prefixed by <\n *\n * @param {Number} index      Index of active breadcrumb\n * @param {Number} max        Maximum number of breadcrumbs to dispaly\n * @param {Function} onSelect Handler for selecting a breadcrumb\n * @returns {React.element[]} Array of breadcrumbs\n * @private\n */\nvar IndexedBreadcrumbs = function IndexedBreadcrumbs(id, index, max, onSelect) {\n  var breadcrumbs = new Array(index < max ? index : max);\n  var start = Math.max(index - max, 0);\n\n  for (var i = start; i < index; i++) {\n    var label = (i < 9 ? '0' : '') + (i + 1);\n    breadcrumbs[index - i - 1] = _react[\"default\"].createElement(_Breadcrumb[\"default\"], {\n      onSelect: onSelect,\n      id: \"\".concat(id, \"_bc_\").concat(i),\n      index: i,\n      key: i\n    }, \"< \", label);\n  }\n\n  return breadcrumbs;\n};\n\nexports.IndexedBreadcrumbs = IndexedBreadcrumbs;\nvar _default = IndexedBreadcrumbs;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}