{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonDecorator = exports.ButtonBase = exports.Button = exports[\"default\"] = void 0;\n\nvar _kind = _interopRequireDefault(require(\"@enact/core/kind\"));\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ButtonModule = _interopRequireDefault(require(\"./Button.module.css\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * A basic button component structure without any behaviors applied to it.\n *\n * @class ButtonBase\n * @memberof ui/Button\n * @ui\n * @public\n */\n\n\nvar ButtonBase = (0, _kind[\"default\"])({\n  name: 'ui:Button',\n  propTypes:\n  /** @lends ui/Button.ButtonBase.prototype */\n  {\n    children: _propTypes2[\"default\"].node.isRequired,\n\n    /**\n     * Customizes the component by mapping the supplied collection of CSS class names to the\n     * corresponding internal Elements and states of this component.\n     *\n     * The following classes are supported:\n     *\n     * * `button` - The root component class\n     * * `bg` - The background node of the button\n     * * `client` - The content node of the button\n     * * `icon` - The icon node, when `icon` is set\n     * * `minWidth` - Applied when `minWidth` prop is `true`\n     * * `pressed` - Applied when `pressed` prop is `true`\n     * * `selected` - Applied when `selected` prop is `true`\n     * * `small` - Applied when `small` prop is `true`\n     *\n     * @type {Object}\n     * @public\n     */\n    css: _propTypes2[\"default\"].object,\n\n    /**\n     * Applies the `disabled` class.\n     *\n     * When `true`, the button is shown as disabled.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes2[\"default\"].bool,\n\n    /**\n     * The icon displayed within the Button.\n     *\n     * The icon will be displayed before the natural reading order of the text, regardless\n     * of locale. Any string that is valid for its {@link ui/Button.Button.iconComponent} is\n     * valid here. If `icon` is specified as a string and `iconButton` is undefined, the icon is\n     * not rendered.\n     *\n     * This also supports a custom icon, in the form of a DOM node or a Component,\n     * with the caveat that if you supply a custom icon, you are responsible for sizing and\n     * locale positioning of the custom component.\n     *\n     * @type {Node}\n     * @public\n     */\n    icon: _propTypes2[\"default\"].node,\n\n    /**\n     * The component used to render the [icon]{@link ui/Button.ButtonBase.icon}.\n     *\n     * This component will receive the `small` property set on the Button as well as the `icon`\n     * class to customize its styling. If [icon]{@link ui/Button.ButtonBase.icon} is not a\n     * string, this property is not used.\n     *\n     * @type {Component}\n     * @public\n     */\n    iconComponent: _propTypes[\"default\"].component,\n\n    /**\n     * Enforces a minimum width for the component.\n     *\n     * Applies the `minWidth` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default true\n     * @public\n     */\n    minWidth: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is depressed.\n     *\n     * Applies the `pressed` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    pressed: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is selected.\n     *\n     * Applies the `selected` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    selected: _propTypes2[\"default\"].bool,\n\n    /**\n     * Reduces the size of the component.\n     *\n     * Applies the `small` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    small: _propTypes2[\"default\"].bool\n  },\n  defaultProps: {\n    disabled: false,\n    minWidth: true,\n    pressed: false,\n    selected: false,\n    small: false\n  },\n  styles: {\n    css: _ButtonModule[\"default\"],\n    className: 'button',\n    publicClassNames: true\n  },\n  computed: {\n    className: function className(_ref) {\n      var minWidth = _ref.minWidth,\n          pressed = _ref.pressed,\n          selected = _ref.selected,\n          small = _ref.small,\n          styler = _ref.styler;\n      return styler.append({\n        pressed: pressed,\n        small: small,\n        minWidth: minWidth,\n        selected: selected\n      });\n    },\n    icon: function icon(_ref2) {\n      var css = _ref2.css,\n          _icon = _ref2.icon,\n          Icon = _ref2.iconComponent,\n          small = _ref2.small;\n      return typeof _icon === 'string' && Icon ? _react[\"default\"].createElement(Icon, {\n        small: small,\n        className: css.icon\n      }, _icon) : _icon;\n    }\n  },\n  render: function render(_ref3) {\n    var children = _ref3.children,\n        css = _ref3.css,\n        disabled = _ref3.disabled,\n        icon = _ref3.icon,\n        rest = _objectWithoutProperties(_ref3, [\"children\", \"css\", \"disabled\", \"icon\"]);\n\n    delete rest.iconComponent;\n    delete rest.minWidth;\n    delete rest.pressed;\n    delete rest.selected;\n    delete rest.small;\n    return _react[\"default\"].createElement(\"div\", Object.assign({\n      role: \"button\"\n    }, rest, {\n      \"aria-disabled\": disabled,\n      disabled: disabled\n    }), _react[\"default\"].createElement(\"div\", {\n      className: css.bg\n    }), _react[\"default\"].createElement(\"div\", {\n      className: css.client\n    }, icon, children));\n  }\n});\n/**\n * A higher-order component that adds touch support to a [ButtonBase]{@link ui/Button.ButtonBase}.\n *\n * @hoc\n * @memberof ui/Button\n * @mixes ui/Touchable.Touchable\n * @public\n */\n\nexports.ButtonBase = ButtonBase;\nvar ButtonDecorator = (0, _Touchable[\"default\"])({\n  activeProp: 'pressed'\n});\n/**\n * A minimally-styled button component with touch support.\n *\n * @class Button\n * @extends ui/Button.ButtonBase\n * @memberof ui/Button\n * @mixes ui/Button.ButtonDecorator\n * @ui\n * @public\n */\n\nexports.ButtonDecorator = ButtonDecorator;\nvar Button = ButtonDecorator(ButtonBase);\nexports.Button = Button;\nvar _default = Button;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["F:\\books\\vscode\\enact\\final\\SteAPp\\node_modules\\@enact\\ui\\Button\\Button.js"],"names":["Object","defineProperty","exports","value","ButtonDecorator","ButtonBase","Button","_kind","_interopRequireDefault","require","_propTypes","_propTypes2","_react","_Touchable","_ButtonModule","obj","__esModule","_objectWithoutProperties","source","excluded","target","_objectWithoutPropertiesLoose","key","i","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","keys","name","propTypes","children","node","isRequired","css","object","disabled","bool","icon","iconComponent","component","minWidth","pressed","selected","small","defaultProps","styles","className","publicClassNames","computed","_ref","styler","append","_ref2","_icon","Icon","createElement","render","_ref3","rest","assign","role","bg","client","activeProp","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ButtonDecorator = exports.ButtonBase = exports.Button = exports[\"default\"] = void 0;\n\nvar _kind = _interopRequireDefault(require(\"@enact/core/kind\"));\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Touchable = _interopRequireDefault(require(\"../Touchable\"));\n\nvar _ButtonModule = _interopRequireDefault(require(\"./Button.module.css\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * A basic button component structure without any behaviors applied to it.\n *\n * @class ButtonBase\n * @memberof ui/Button\n * @ui\n * @public\n */\nvar ButtonBase = (0, _kind[\"default\"])({\n  name: 'ui:Button',\n  propTypes:\n  /** @lends ui/Button.ButtonBase.prototype */\n  {\n    children: _propTypes2[\"default\"].node.isRequired,\n\n    /**\n     * Customizes the component by mapping the supplied collection of CSS class names to the\n     * corresponding internal Elements and states of this component.\n     *\n     * The following classes are supported:\n     *\n     * * `button` - The root component class\n     * * `bg` - The background node of the button\n     * * `client` - The content node of the button\n     * * `icon` - The icon node, when `icon` is set\n     * * `minWidth` - Applied when `minWidth` prop is `true`\n     * * `pressed` - Applied when `pressed` prop is `true`\n     * * `selected` - Applied when `selected` prop is `true`\n     * * `small` - Applied when `small` prop is `true`\n     *\n     * @type {Object}\n     * @public\n     */\n    css: _propTypes2[\"default\"].object,\n\n    /**\n     * Applies the `disabled` class.\n     *\n     * When `true`, the button is shown as disabled.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    disabled: _propTypes2[\"default\"].bool,\n\n    /**\n     * The icon displayed within the Button.\n     *\n     * The icon will be displayed before the natural reading order of the text, regardless\n     * of locale. Any string that is valid for its {@link ui/Button.Button.iconComponent} is\n     * valid here. If `icon` is specified as a string and `iconButton` is undefined, the icon is\n     * not rendered.\n     *\n     * This also supports a custom icon, in the form of a DOM node or a Component,\n     * with the caveat that if you supply a custom icon, you are responsible for sizing and\n     * locale positioning of the custom component.\n     *\n     * @type {Node}\n     * @public\n     */\n    icon: _propTypes2[\"default\"].node,\n\n    /**\n     * The component used to render the [icon]{@link ui/Button.ButtonBase.icon}.\n     *\n     * This component will receive the `small` property set on the Button as well as the `icon`\n     * class to customize its styling. If [icon]{@link ui/Button.ButtonBase.icon} is not a\n     * string, this property is not used.\n     *\n     * @type {Component}\n     * @public\n     */\n    iconComponent: _propTypes[\"default\"].component,\n\n    /**\n     * Enforces a minimum width for the component.\n     *\n     * Applies the `minWidth` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default true\n     * @public\n     */\n    minWidth: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is depressed.\n     *\n     * Applies the `pressed` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    pressed: _propTypes2[\"default\"].bool,\n\n    /**\n     * Indicates the component is selected.\n     *\n     * Applies the `selected` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    selected: _propTypes2[\"default\"].bool,\n\n    /**\n     * Reduces the size of the component.\n     *\n     * Applies the `small` CSS class which can be customized by\n     * [theming]{@link /docs/developer-guide/theming/}.\n     *\n     * @type {Boolean}\n     * @default false\n     * @public\n     */\n    small: _propTypes2[\"default\"].bool\n  },\n  defaultProps: {\n    disabled: false,\n    minWidth: true,\n    pressed: false,\n    selected: false,\n    small: false\n  },\n  styles: {\n    css: _ButtonModule[\"default\"],\n    className: 'button',\n    publicClassNames: true\n  },\n  computed: {\n    className: function className(_ref) {\n      var minWidth = _ref.minWidth,\n          pressed = _ref.pressed,\n          selected = _ref.selected,\n          small = _ref.small,\n          styler = _ref.styler;\n      return styler.append({\n        pressed: pressed,\n        small: small,\n        minWidth: minWidth,\n        selected: selected\n      });\n    },\n    icon: function icon(_ref2) {\n      var css = _ref2.css,\n          _icon = _ref2.icon,\n          Icon = _ref2.iconComponent,\n          small = _ref2.small;\n      return typeof _icon === 'string' && Icon ? _react[\"default\"].createElement(Icon, {\n        small: small,\n        className: css.icon\n      }, _icon) : _icon;\n    }\n  },\n  render: function render(_ref3) {\n    var children = _ref3.children,\n        css = _ref3.css,\n        disabled = _ref3.disabled,\n        icon = _ref3.icon,\n        rest = _objectWithoutProperties(_ref3, [\"children\", \"css\", \"disabled\", \"icon\"]);\n\n    delete rest.iconComponent;\n    delete rest.minWidth;\n    delete rest.pressed;\n    delete rest.selected;\n    delete rest.small;\n    return _react[\"default\"].createElement(\"div\", Object.assign({\n      role: \"button\"\n    }, rest, {\n      \"aria-disabled\": disabled,\n      disabled: disabled\n    }), _react[\"default\"].createElement(\"div\", {\n      className: css.bg\n    }), _react[\"default\"].createElement(\"div\", {\n      className: css.client\n    }, icon, children));\n  }\n});\n/**\n * A higher-order component that adds touch support to a [ButtonBase]{@link ui/Button.ButtonBase}.\n *\n * @hoc\n * @memberof ui/Button\n * @mixes ui/Touchable.Touchable\n * @public\n */\n\nexports.ButtonBase = ButtonBase;\nvar ButtonDecorator = (0, _Touchable[\"default\"])({\n  activeProp: 'pressed'\n});\n/**\n * A minimally-styled button component with touch support.\n *\n * @class Button\n * @extends ui/Button.ButtonBase\n * @memberof ui/Button\n * @mixes ui/Button.ButtonDecorator\n * @ui\n * @public\n */\n\nexports.ButtonDecorator = ButtonDecorator;\nvar Button = ButtonDecorator(ButtonBase);\nexports.Button = Button;\nvar _default = Button;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}